/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20221020 (32-bit version)
 * Copyright (c) 2000 - 2022 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of dsdt.dat, Sun Feb 12 23:37:32 2023
 *
 * Original Table Header:
 *     Signature        "DSDT"
 *     Length           0x0003C65F (247391)
 *     Revision         0x02
 *     Checksum         0x2B
 *     OEM ID           "LENOVO"
 *     OEM Table ID     "SDM8280 "
 *     OEM Revision     0x00000003 (3)
 *     Compiler ID      "MSFT"
 *     Compiler Version 0x05000000 (83886080)
 */
DefinitionBlock ("", "DSDT", 2, "LENOVO", "SDM8280 ", 0x00000003)
{
    External (_SB_.AMSS._STA, IntObj)
    External (_SB_.DMMY, UnknownObj)
    External (_SB_.MPP0, IntObj)
    External (_SB_.MPP1, IntObj)
    External (_SB_.TZ13.TPSV, UnknownObj)
    External (_SB_.TZ13.TTC1, UnknownObj)
    External (_SB_.TZ13.TTC2, UnknownObj)
    External (_SB_.TZ13.TTSP, UnknownObj)
    External (SRPC, IntObj)

    Scope (\_SB)
    {
        Name (PSUB, "QRD08280")
        Name (ESUB, "230217AA")
        Name (SOID, 0x000001C1)
        Name (STOR, 0x00000000)
        Name (SIDS, "SCP_MAKENA")
        Zero
        Zero
        Zero
        Zero
        Zero
        Name (SIDV, 0x00010001)
        Name (SVMJ, 0x0001)
        Name (SVMI, 0x0001)
        Name (SDFE, 0x0071)
        Name (SFES, "899800000000000")
        Name (SIDM, 0x0000000FFFFF0000)
        Name (SUFS, 0xFFFFFFFF)
        Name (PUS3, 0xFFFFFFFF)
        Name (SUS3, 0xFFFFFFFF)
        Name (SIDT, 0x00000003)
        Name (SOSN, 0x00000428163859EF)
        Name (PLST, 0x00000002)
        Name (EMUL, 0x00000000)
        Name (SJTG, 0x2014A0E1)
        Name (RMTB, 0xAAAAAAAA)
        Name (RMTX, 0xBBBBBBBB)
        Name (RFMB, 0xCCCCCCCC)
        Name (RFMS, 0xDDDDDDDD)
        Name (RFAB, 0xEEEEEEEE)
        Name (RFAS, 0x77777777)
        Name (TCMA, 0x8089E000)
        Name (TCML, 0x00002000)
        Name (SOSI, 0x00000000809071E0)
        Name (PRP0, 0xFFFFFFFF)
        Name (PRP1, 0xFFFFFFFF)
        Name (PRP2, 0x00000001)
        Name (PRP3, 0xFFFFFFFF)
        Name (PRP4, 0xFFFFFFFF)
        Name (PRP5, 0xFFFFFFFF)
        Name (PRP6, 0x00000001)
        OperationRegion (MNVS, SystemMemory, 0x9E40A018, 0x1000)
        Field (MNVS, DWordAcc, NoLock, Preserve)
        {
            Offset (0xD00), 
            GAPA,   32, 
            GAPL,   32, 
            DCKI,   32, 
            DCKS,   32, 
            VCDL,   1, 
            VCDC,   1, 
            VCDT,   1, 
            VCDD,   1, 
                ,   1, 
            VCSS,   1, 
            VCDB,   1, 
            VCIN,   1, 
            VVPO,   8, 
            BNTN,   8, 
            BRLV,   8, 
            CDFL,   8, 
            CDAH,   8, 
            PMOD,   2, 
            PDIR,   1, 
            PDMA,   1, 
            Offset (0xD17), 
            LFDC,   1, 
            Offset (0xD18), 
            C2NA,   1, 
            C3NA,   1, 
            C4NA,   1, 
            C6NA,   1, 
            C7NA,   1, 
            Offset (0xD19), 
            Offset (0xD1A), 
                ,   2, 
                ,   1, 
            NHPS,   1, 
            NPMS,   1, 
            Offset (0xD1B), 
            UOPT,   8, 
            BTID,   32, 
            DPP0,   1, 
            DPP1,   1, 
            DPP2,   1, 
            DPP3,   1, 
            DPP4,   1, 
            DPP5,   1, 
            Offset (0xD21), 
            Offset (0xD22), 
            TCRT,   16, 
            TPSV,   16, 
            TTC1,   16, 
            TTC2,   16, 
            TTSP,   16, 
            SRAH,   8, 
            SRHE,   8, 
            SRE1,   8, 
            SRE2,   8, 
            SRE3,   8, 
            SRE4,   8, 
            SRE5,   8, 
            SRE6,   8, 
            SRU1,   8, 
            SRU2,   8, 
            SRU3,   8, 
            SRU7,   8, 
            SRU4,   8, 
            SRU5,   8, 
            SRU8,   8, 
            SRPB,   8, 
            SRLP,   8, 
            SRSA,   8, 
            SRSM,   8, 
            CWAC,   1, 
            CWAS,   1, 
            CWUE,   1, 
            CWUS,   1, 
            Offset (0xD40), 
            CWAP,   16, 
            CWAT,   16, 
            DBGC,   1, 
            Offset (0xD45), 
            FS1L,   16, 
            FS1M,   16, 
            FS1H,   16, 
            FS2L,   16, 
            FS2M,   16, 
            FS2H,   16, 
            FS3L,   16, 
            FS3M,   16, 
            FS3H,   16, 
            TATC,   1, 
                ,   6, 
            TATL,   1, 
            TATW,   8, 
            TNFT,   4, 
            TNTT,   4, 
            TDFA,   4, 
            TDTA,   4, 
            TDFD,   4, 
            TDTD,   4, 
            TCFA,   4, 
            TCTA,   4, 
            TCFD,   4, 
            TCTD,   4, 
            TSFT,   4, 
            TSTT,   4, 
            TIT0,   8, 
            TCR0,   16, 
            TPS0,   16, 
            TIT1,   8, 
            TCR1,   16, 
            TPS1,   16, 
            TIT2,   8, 
            TCR2,   16, 
            TPS2,   16, 
            TIF0,   8, 
            TIF1,   8, 
            TIF2,   8, 
            Offset (0xD78), 
            BTHI,   1, 
            Offset (0xD79), 
            HPDD,   8, 
            TPME,   8, 
            BIDE,   4, 
            IDET,   4, 
                ,   1, 
                ,   1, 
            Offset (0xD7D), 
            DTS0,   8, 
            Offset (0xD7F), 
            DT00,   1, 
            DT01,   1, 
            DT02,   1, 
            DT03,   1, 
            Offset (0xD80), 
            LIDL,   1, 
            C4WR,   1, 
            C4AC,   1, 
            ODDX,   1, 
            CMPR,   1, 
            ILNF,   1, 
            PLUX,   1, 
            Offset (0xD81), 
            Offset (0xD8A), 
            WLAC,   8, 
            WIWK,   1, 
            Offset (0xD8C), 
                ,   4, 
                ,   1, 
            IDMM,   1, 
            Offset (0xD8D), 
                ,   3, 
                ,   1, 
                ,   1, 
                ,   1, 
            Offset (0xD8E), 
            Offset (0xD8F), 
                ,   4, 
            Offset (0xD90), 
            Offset (0xD91), 
            SWGP,   8, 
            IPMS,   8, 
            IPMB,   120, 
            IPMR,   24, 
            IPMO,   24, 
            IPMA,   8, 
            VIGD,   1, 
            VDSC,   1, 
            VMSH,   1, 
                ,   1, 
            VDSP,   1, 
            Offset (0xDAA), 
            Offset (0xDAD), 
            ASFT,   8, 
            PL1L,   8, 
            PL1M,   8, 
            CHKC,   32, 
            CHKE,   32, 
            ATRB,   32, 
            Offset (0xDBD), 
            PPCR,   8, 
            TPCR,   5, 
            Offset (0xDBF), 
            Offset (0xDCE), 
            CTPR,   8, 
            PPCA,   8, 
            TPCA,   5, 
            Offset (0xDD1), 
            BFWB,   296, 
            OSPX,   1, 
            OSC4,   1, 
            CPPX,   1, 
            Offset (0xDF7), 
            SPEN,   1, 
            SCRM,   1, 
                ,   1, 
            ETAU,   1, 
            IHBC,   1, 
            APMD,   1, 
            APMF,   1, 
            Offset (0xDF8), 
            FTPS,   8, 
            HIST,   8, 
            LPST,   8, 
            LWST,   8, 
            Offset (0xDFF), 
            PMMD,   8, 
            Offset (0xE20), 
            HPET,   32, 
            PKLI,   16, 
            VLCX,   16, 
            VNIT,   8, 
            VBD0,   8, 
            VBDT,   128, 
            VBPL,   16, 
            VBPH,   16, 
            VBML,   8, 
            VBMH,   8, 
            VEDI,   1024, 
            PDCI,   16, 
            ISCG,   32, 
            ISSP,   1, 
            ISWK,   2, 
            ISFS,   3, 
            Offset (0xEC7), 
            SHA1,   160, 
            LVMD,   8, 
            LWCP,   1, 
            LWEN,   1, 
            IOCP,   1, 
            IOEN,   1, 
            IOST,   1, 
            Offset (0xEDD), 
            USBR,   1, 
            Offset (0xEDE), 
            Offset (0xEDF), 
            Offset (0xEE1), 
            BT2T,   1, 
            Offset (0xEE2), 
            TPPP,   8, 
            TPPC,   8, 
            CTPC,   8, 
            FNWK,   8, 
            Offset (0xEE7), 
            XHCC,   8, 
            FCAP,   16, 
            VSTD,   1, 
            VCQL,   1, 
            VTIO,   1, 
            VMYH,   1, 
            VSTP,   1, 
            VLCM,   1, 
            VDGM,   1, 
            VADM,   1, 
            VRPC,   1, 
            VTMS,   1, 
            VDLS,   1, 
            VMMC,   1, 
            VMSC,   1, 
            VPSC,   1, 
            VCSC,   1, 
            VAMT,   1, 
            CICF,   4, 
            CICM,   4, 
            MYHC,   8, 
            MMCC,   8, 
            PT1D,   15, 
            Offset (0xEF1), 
            PT2D,   15, 
            Offset (0xEF3), 
            PT0D,   15, 
            Offset (0xEF5), 
            DVS0,   1, 
            DVS1,   1, 
            DVS2,   1, 
            DVS3,   1, 
            Offset (0xEF7), 
            Offset (0xF13), 
            Offset (0xF14), 
                ,   4, 
            SADM,   4, 
            SMYH,   4, 
            SMMC,   4, 
            SPSC,   4, 
            SAMT,   4, 
            STDV,   8, 
            SCRB,   8, 
            PMOF,   8, 
            MPID,   8, 
            VEDX,   1024, 
            SHDW,   8, 
            TPID,   16, 
            TPAD,   8, 
            TDVI,   16, 
            TDPI,   16, 
            TLVI,   16, 
            TLPI,   16, 
            EPAO,   8, 
            TLAS,   8, 
            FADM,   8, 
            VPID,   8
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0xB00), 
            WITM,   8, 
            WSEL,   8, 
            WLS0,   8, 
            WLS1,   8, 
            WLS2,   8, 
            WLS3,   8, 
            WLS4,   8, 
            WLS5,   8, 
            WLS6,   8, 
            WLS7,   8, 
            WLS8,   8, 
            WLS9,   8, 
            WLSA,   8, 
            WLSB,   8, 
            WLSC,   8, 
            WLSD,   8, 
            WENC,   8, 
            WKBD,   8, 
            WPTY,   8, 
            WPAS,   1032, 
            WPNW,   1032, 
            WSPM,   8, 
            WSPS,   8, 
            WSMN,   8, 
            WSMX,   8, 
            WSEN,   8, 
            WSKB,   8, 
            WASB,   8, 
            WASI,   16, 
            WASD,   8, 
            WASS,   32, 
            WDRV,   8, 
            WMTH,   8, 
            RTC0,   8, 
            RTC1,   8, 
            RTC2,   8, 
            WSHS,   8
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0xA00), 
            DBGB,   1024
        }

        OperationRegion (CNVS, SystemMemory, 0x9E408018, 0x1000)
        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SCSB,   32768
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SNMA,   32
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SSMB,   24768, 
            SSPL,   16, 
            SSPB,   2048
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SGMB,   128, 
            SGPL,   16, 
            SGPB,   2048
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SGSB,   24608
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SEDL,   768, 
            SENS,   32
        }

        OperationRegion (WNVS, SystemMemory, 0x9E407018, 0x1000)
        Field (WNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            SBID,   2048
        }

        Field (WNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            BD00,   128, 
            BD01,   128, 
            BD02,   128, 
            BD03,   128, 
            BD04,   128, 
            BD05,   128, 
            BD06,   128, 
            BD07,   128, 
            BD08,   128, 
            BD09,   128, 
            BD0A,   128, 
            BD0B,   128, 
            BD0C,   128, 
            BD0D,   128, 
            BD0E,   128, 
            BD0F,   128, 
            PWDP,   8, 
            KBBL,   1
        }

        Name (SPS, Zero)
        Name (OSIF, Zero)
        Name (WNTF, One)
        Name (WXPF, Zero)
        Name (WVIS, Zero)
        Name (WIN7, Zero)
        Name (WIN8, Zero)
        Name (WSPV, Zero)
        Name (LNUX, Zero)
        Name (H8DR, Zero)
        Name (MEMX, Zero)
        Name (ACST, Zero)
        Name (FMBL, One)
        Name (FDTP, 0x02)
        Name (FUPS, 0x03)
        Name (FNID, Zero)
        Name (RRBF, Zero)
        Name (NBCF, Zero)
        Field (MNVS, AnyAcc, NoLock, Preserve)
        {
            Offset (0xFC0), 
            CMD,    8, 
            ERR,    32, 
            PAR0,   32, 
            PAR1,   32, 
            PAR2,   32, 
            PAR3,   32
        }

        Mutex (MSMI, 0x00)
        Method (SMI, 5, Serialized)
        {
            Acquire (MSMI, 0xFFFF)
            CMD = Arg0
            ERR = One
            PAR0 = Arg1
            PAR1 = Arg2
            PAR2 = Arg3
            PAR3 = Arg4
            Notify (\_SB.TTZE, 0xC0) // Hardware-Specific
            Sleep (0x0A)
            Local1 = 0x32
            While (((ERR == One) && (Local1 > One)))
            {
                Local1 -= One
                Sleep (0x0A)
            }

            Local0 = PAR0 /* \_SB_.PAR0 */
            Release (MSMI)
            Return (Local0)
        }

        Method (RBEC, 1, NotSerialized)
        {
            Return (SMI (Zero, 0x03, Arg0, Zero, Zero))
        }

        Method (WBEC, 2, NotSerialized)
        {
            SMI (Zero, 0x04, Arg0, Arg1, Zero)
        }

        Method (MBEC, 3, NotSerialized)
        {
            Local0 = \_SB.I2C9.ECRD (Arg0)
            Local0 &= Arg1
            Local0 |= Arg2
            Local0 &= 0xFF
            \_SB.I2C9.ECWR (Arg0, Local0)
        }

        Method (SCMS, 1, NotSerialized)
        {
            While (One)
            {
                Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                _T_0 = Arg0
                If ((_T_0 == 0x20))
                {
                    Local0 = GECB (0xC0, 0x04, 0x02)
                    WECB (0x15, One, 0x02, Local0)
                }
                ElseIf ((_T_0 == 0x21))
                {
                    Local0 = GECB (0x15, One, 0x02)
                    WECB (0xC0, 0x04, 0x02, Local0)
                }
                Else
                {
                    Return (SMI (0x02, Arg0, Zero, Zero, Zero))
                }

                Break
            }
        }

        Method (BLTH, 1, NotSerialized)
        {
            Return (SMI (0x06, Arg0, Zero, Zero, Zero))
        }

        Method (PRSM, 2, NotSerialized)
        {
            Return (SMI (0x07, Zero, Arg0, Arg1, Zero))
        }

        Method (ISOC, 1, NotSerialized)
        {
            Return (\_SB.I2C9.INGO (0x03, Arg0))
        }

        Method (EZRC, 1, NotSerialized)
        {
            Return (\_SB.I2C9.INGO (0x04, Arg0))
        }

        Method (WGSV, 1, NotSerialized)
        {
            Return (SMI (0x09, Arg0, Zero, Zero, Zero))
        }

        Method (SWTT, 1, NotSerialized)
        {
            If (SMI (0x0A, 0x02, Arg0, Zero, Zero))
            {
                If (\_SB.I2C9.HKEY.DHKC)
                {
                    \_SB.I2C9.HKEY.MHKQ (0x6030)
                }
            }
        }

        Method (TSDL, 0, NotSerialized)
        {
            Return (SMI (0x0A, 0x03, Zero, Zero, Zero))
        }

        Method (FLPF, 1, NotSerialized)
        {
        }

        Method (GTST, 1, NotSerialized)
        {
            ADBG ("GTST")
            Return (SMI (0x0A, 0x05, Arg0, Zero, Zero))
        }

        Method (CSUM, 1, NotSerialized)
        {
            Return (SMI (0x0E, Arg0, Zero, Zero, Zero))
        }

        Method (NVSS, 1, NotSerialized)
        {
            Return (SMI (0x0F, Arg0, Zero, Zero, Zero))
        }

        Method (WMIS, 2, NotSerialized)
        {
            Return (SMI (0x10, Arg0, Arg1, Zero, Zero))
        }

        Method (AWON, 1, NotSerialized)
        {
            Return (SMI (0x12, Arg0, Zero, Zero, Zero))
        }

        Method (PMON, 2, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            Name (TSTR, Buffer (Local0){})
            TSTR = Arg0
            DBGB = TSTR /* \_SB_.PMON.TSTR */
            SMI (0x11, Arg1, Zero, Zero, Zero)
        }

        Method (UAWS, 1, NotSerialized)
        {
            Return (SMI (0x13, Arg0, Zero, Zero, Zero))
        }

        Method (BFWC, 1, NotSerialized)
        {
            Return (SMI (0x14, Zero, Arg0, Zero, Zero))
        }

        Method (BFWP, 0, NotSerialized)
        {
            Return (SMI (0x14, One, Zero, Zero, Zero))
        }

        Method (BFWL, 0, NotSerialized)
        {
            SMI (0x14, 0x02, Zero, Zero, Zero)
        }

        Method (BFWG, 1, NotSerialized)
        {
            SMI (0x14, 0x03, Arg0, Zero, Zero)
        }

        Method (BDMC, 1, NotSerialized)
        {
            SMI (0x14, 0x04, Arg0, Zero, Zero)
        }

        Method (PSIF, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x05, Arg0, Arg1, Zero))
        }

        Method (FNSC, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x06, Arg0, Arg1, Zero))
        }

        Method (AUDC, 2, NotSerialized)
        {
            Return (\_SB.I2C9.HKEY.AUOC (0x14, 0x07, Arg0, Arg1, Zero))
        }

        Method (SYBC, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x08, Arg0, Arg1, Zero))
        }

        Method (KBLS, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x09, Arg0, Arg1, Zero))
        }

        Method (UBIS, 1, NotSerialized)
        {
            Return (SMI (0x15, Zero, Arg0, Zero, Zero))
        }

        Method (DIEH, 1, NotSerialized)
        {
            Return (SMI (0x16, Zero, Arg0, Zero, Zero))
        }

        Method (OUTP, 2, NotSerialized)
        {
            SMI (0x17, Arg0, Arg1, Zero, Zero)
        }

        Method (SREQ, 3, NotSerialized)
        {
            SMI (0x18, (Arg0 & 0xFF), (Arg1 & 0xFF), (Arg2 & 
                0xFF), Zero)
        }

        Method (SPMS, 1, NotSerialized)
        {
            SMI (0x19, (Arg0 & 0xFF), Zero, Zero, Zero)
        }

        Method (LVSS, 2, NotSerialized)
        {
            Return (SMI (0x1A, (Arg0 & 0xFF), Arg1, Zero, Zero))
        }

        Name (MACA, "_AUXMAX_#XXXXXXXXXXXX#")
        Name (WOLD, "_S5WOL_#01EF1700000000#")
        Device (UFS0)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((STOR == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM24A5")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.EMUL, EMUL)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, One)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x01D84000,         // Address Base
                        0x0001C000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000129,
                    }
                })
                Return (RBUF) /* \_SB_.UFS0._CRS.RBUF */
            }

            Device (DEV0)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return (0x08)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }
            }
        }

        Device (SDC2)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM2466")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x08804000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000EF,
                    }
                    GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x1388,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0100
                        }
                    GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0083
                        }
                })
                Return (RBUF) /* \_SB_.SDC2._CRS.RBUF */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (ABD)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM0427")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            OperationRegion (ROP1, GenericSerialBus, Zero, 0x0100)
            Name (AVBL, Zero)
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x09))
                {
                    AVBL = Arg1
                }
            }
        }

        Name (ESNL, 0x14)
        Name (DBFL, 0x17)
        Device (PMIC)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.SPMI
            })
            Name (_HID, "QCOM062B")  // _HID: Hardware ID
            Name (_CID, "PNP0CA3")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (PMCF, 0, NotSerialized)
            {
                Name (CFG0, Package (0x0B)
                {
                    0x0A, 
                    Package (0x02)
                    {
                        Zero, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        One, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x02, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x04, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x06, 
                        0x07
                    }, 

                    Package (0x02)
                    {
                        0x08, 
                        0x09
                    }, 

                    Package (0x02)
                    {
                        0x0A, 
                        0x0B
                    }, 

                    Package (0x02)
                    {
                        0x0C, 
                        0x0D
                    }
                })
                Return (CFG0) /* \_SB_.PMIC.PMCF.CFG0 */
            }
        }

        Device (PML0)
        {
            Name (_HID, "QCOM06D3")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.IC12
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x000C, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x000D, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullNone, 0x0000, 0x00C8, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x002A
                        }
                })
                Return (RBUF) /* \_SB_.PML0._CRS.RBUF */
            }
        }

        Device (PM01)
        {
            Name (_HID, "QCOM062D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000201,
                    }
                })
                Return (RBUF) /* \_SB_.PM01._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.PM01._DSM._T_0 */
                    If ((_T_0 == ToUUID ("4f248f40-d5e2-499f-834c-27758ea1cd3f") /* GPIO Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Package (0x02)
                                {
                                    0x07, 
                                    0x06
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (PMAP)
        {
            Name (_HID, "QCOM062C")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PMIC, 
                \_SB.ABD, 
                \_SB.SCM0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (GEPT, 0, NotSerialized)
            {
                Name (BUFF, Buffer (0x04){})
                CreateByteField (BUFF, Zero, STAT)
                CreateWordField (BUFF, 0x02, DATA)
                DATA = 0x02
                Return (DATA) /* \_SB_.PMAP.GEPT.DATA */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMAP._CRS.RBUF */
            }
        }

        Device (PRTC)
        {
            Name (_HID, "ACPI000E" /* Time and Alarm Device */)  // _HID: Hardware ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                "\\_SB.PMAP"
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (_GCP, 0, NotSerialized)  // _GCP: Get Capabilities
            {
                Return (0x04)
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0002, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x18)), 
                FLD0,   192
            }

            Method (_GRT, 0, NotSerialized)  // _GRT: Get Real Time
            {
                Name (BUFF, Buffer (0x1A){})
                CreateField (BUFF, 0x10, 0x80, TME1)
                CreateField (BUFF, 0x90, 0x20, ACT1)
                CreateField (BUFF, 0xB0, 0x20, ACW1)
                BUFF = FLD0 /* \_SB_.PRTC.FLD0 */
                Return (TME1) /* \_SB_.PRTC._GRT.TME1 */
            }

            Method (_SRT, 1, NotSerialized)  // _SRT: Set Real Time
            {
                Name (BUFF, Buffer (0x32){})
                CreateByteField (BUFF, Zero, STAT)
                CreateField (BUFF, 0x10, 0x80, TME1)
                CreateField (BUFF, 0x90, 0x20, ACT1)
                CreateField (BUFF, 0xB0, 0x20, ACW1)
                ACT1 = Zero
                TME1 = Arg0
                ACW1 = Zero
                BUFF = FLD0 = BUFF /* \_SB_.PRTC._SRT.BUFF */
                If ((STAT != Zero))
                {
                    Return (One)
                }

                Return (Zero)
            }
        }

        Device (PMBM)
        {
            Name (_HID, "QCOM062A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMGK
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMBM._CRS.RBUF */
            }
        }

        Device (BCL1)
        {
            Name (_HID, "QCOM0677")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveLow, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0108
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0109
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x010A
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x010B
                        }
                    GpioInt (Edge, ActiveLow, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0210
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0211
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0212
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0213
                        }
                })
                Return (RBUF) /* \_SB_.BCL1._CRS.RBUF */
            }

            Method (BCLQ, 0, NotSerialized)
            {
                Name (CFG0, Package (0x08)
                {
                    "PM3_BCLBIG_LVL0", 
                    "PM3_BCLBIG_LVL1", 
                    "PM3_BCLBIG_LVL2", 
                    "PM3_BCLBIG_BAN", 
                    "PM7_BCLBIG_LVL0", 
                    "PM7_BCLBIG_LVL1", 
                    "PM7_BCLBIG_LVL2", 
                    "PM7_BCLBIG_BAN"
                })
                Return (CFG0) /* \_SB_.BCL1.BCLQ.CFG0 */
            }
        }

        Device (PMGK)
        {
            Name (_HID, "QCOM068E")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.ABD
            })
            Name (LKUP, Zero)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (GEPT, 0, NotSerialized)
            {
                Name (BUFF, Buffer (0x04){})
                CreateByteField (BUFF, Zero, STAT)
                CreateWordField (BUFF, 0x02, DATA)
                DATA = 0x03
                Return (DATA) /* \_SB_.PMGK.GEPT.DATA */
            }

            Name (UBUF, Buffer (0x32){})
            CreateField (UBUF, Zero, 0x08, BSTA)
            CreateField (UBUF, 0x08, 0x08, BSIZ)
            CreateField (UBUF, 0x10, 0x10, BVER)
            CreateField (UBUF, 0x30, 0x20, BCCI)
            CreateField (UBUF, 0x50, 0x40, BCTL)
            CreateField (UBUF, 0x90, 0x80, BMGI)
            CreateField (UBUF, 0x0110, 0x80, BMGO)
            Method (USBN, 1, NotSerialized)
            {
                UBUF = UCSI /* \_SB_.PMGK.UCSI */
                \_SB.UCSI.VERS = BVER /* \_SB_.PMGK.BVER */
                \_SB.UCSI.MSGI = BMGI /* \_SB_.PMGK.BMGI */
                \_SB.UCSI.CCI = BCCI /* \_SB_.PMGK.BCCI */
                Notify (\_SB.UCSI, Arg0)
                Return (Zero)
            }

            Name (PBUF, Buffer (0x10){})
            CreateField (PBUF, Zero, 0x08, BPID)
            CreateField (PBUF, 0x08, 0x08, BORI)
            CreateField (PBUF, 0x10, 0x08, BMUX)
            CreateField (PBUF, 0x20, 0x10, BVID)
            CreateField (PBUF, 0x30, 0x10, BSID)
            CreateField (PBUF, 0x40, 0x08, BSSD)
            Method (UPAN, 1, NotSerialized)
            {
                PBUF = Arg0
                \_SB.UCS0.EINF = 0x02
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = BPID /* \_SB_.PMGK.BPID */
                    If ((_T_0 == Zero))
                    {
                        \_SB.UCS0.EUPD |= One
                        \_SB.UCS0.ECC0 = BORI /* \_SB_.PMGK.BORI */
                        \_SB.UCS0.EMX0 = BMUX /* \_SB_.PMGK.BMUX */
                        \_SB.UCS0.EVI0 = BVID /* \_SB_.PMGK.BVID */
                        \_SB.UCS0.ESI0 = BSID /* \_SB_.PMGK.BSID */
                        \_SB.UCS0.ESV0 = BSSD /* \_SB_.PMGK.BSSD */
                        \_SB.UCS0.USBR ()
                        Break
                    }
                    ElseIf ((_T_0 == One))
                    {
                        \_SB.UCS0.EUPD |= 0x02
                        \_SB.UCS0.ECC1 = BORI /* \_SB_.PMGK.BORI */
                        \_SB.UCS0.EMX1 = BMUX /* \_SB_.PMGK.BMUX */
                        \_SB.UCS0.EVI1 = BVID /* \_SB_.PMGK.BVID */
                        \_SB.UCS0.ESI1 = BSID /* \_SB_.PMGK.BSID */
                        \_SB.UCS0.ESV1 = BSSD /* \_SB_.PMGK.BSSD */
                        \_SB.UCS0.USBR ()
                        Break
                    }

                    Break
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMGK._CRS.RBUF */
            }

            Method (LKST, 1, NotSerialized)
            {
                LKUP = Arg0
                Notify (\_SB.UCSI, Zero) // Bus Check
                Return (Zero)
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0003, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x30)), 
                UCSI,   384
            }
        }

        Device (PEP0)
        {
            Name (_HID, "QCOM0617")  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0D80") /* Windows-compatible System Power Management Controller */)  // _CID: Compatible ID
            Method (THTZ, 4, NotSerialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == One))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg3)
                            If ((_T_1 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TPSV = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._PSV ())
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTSP = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TSP ())
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTC1 = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TC1 ())
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTC2 = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        While (One)
                        {
                            Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_2 = ToInteger (Arg3)
                            If ((_T_2 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TPSV = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._PSV ())
                            }
                            ElseIf ((_T_2 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTSP = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TSP ())
                            }
                            ElseIf ((_T_2 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTC1 = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TC1 ())
                            }
                            ElseIf ((_T_2 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTC2 = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        While (One)
                        {
                            Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_3 = ToInteger (Arg3)
                            If ((_T_3 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TPSV = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._PSV ())
                            }
                            ElseIf ((_T_3 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTSP = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TSP ())
                            }
                            ElseIf ((_T_3 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTC1 = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TC1 ())
                            }
                            ElseIf ((_T_3 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTC2 = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0B))
                    {
                        While (One)
                        {
                            Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_4 = ToInteger (Arg3)
                            If ((_T_4 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TPSV = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._PSV ())
                            }
                            ElseIf ((_T_4 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTSP = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TSP ())
                            }
                            ElseIf ((_T_4 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTC1 = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TC1 ())
                            }
                            ElseIf ((_T_4 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTC2 = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0D))
                    {
                        While (One)
                        {
                            Name (_T_5, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_5 = ToInteger (Arg3)
                            If ((_T_5 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TPSV = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ13._PSV ())
                            }
                            ElseIf ((_T_5 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTSP = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ13._TSP)
                            }
                            ElseIf ((_T_5 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTC1 = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ13._TC1)
                            }
                            ElseIf ((_T_5 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTC2 = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ13._TC2)
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0E))
                    {
                        While (One)
                        {
                            Name (_T_6, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_6 = ToInteger (Arg3)
                            If ((_T_6 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ14.TPSV = Arg1
                                    Notify (\_SB.TZ14, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ14._PSV ())
                            }
                            ElseIf ((_T_6 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ14.TTSP = Arg1
                                    Notify (\_SB.TZ14, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ14._TFP ())
                            }
                            ElseIf ((_T_6 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ14.TTC1 = Arg1
                                    Notify (\_SB.TZ14, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ14._TC1 ())
                            }
                            ElseIf ((_T_6 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ14.TTC2 = Arg1
                                    Notify (\_SB.TZ14, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ14._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0F))
                    {
                        While (One)
                        {
                            Name (_T_7, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_7 = ToInteger (Arg3)
                            If ((_T_7 == Zero))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ15._PSV ())
                            }
                            ElseIf ((_T_7 == 0x02))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ15._TSP)
                            }
                            ElseIf ((_T_7 == 0x03))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ15._TC1 ())
                            }
                            ElseIf ((_T_7 == 0x04))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ15._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x10))
                    {
                        While (One)
                        {
                            Name (_T_8, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_8 = ToInteger (Arg3)
                            If ((_T_8 == Zero))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ16._PSV ())
                            }
                            ElseIf ((_T_8 == One))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ16._CRT ())
                            }
                            ElseIf ((_T_8 == 0x02))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ16._TSP)
                            }
                            ElseIf ((_T_8 == 0x03))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ16._TC1 ())
                            }
                            ElseIf ((_T_8 == 0x04))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ16._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x11))
                    {
                        While (One)
                        {
                            Name (_T_9, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_9 = ToInteger (Arg3)
                            If ((_T_9 == Zero))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ17._PSV ())
                            }
                            ElseIf ((_T_9 == 0x02))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ17._TSP)
                            }
                            ElseIf ((_T_9 == 0x03))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ17._TC1 ())
                            }
                            ElseIf ((_T_9 == 0x04))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ17._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x12))
                    {
                        While (One)
                        {
                            Name (_T_A, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_A = ToInteger (Arg3)
                            If ((_T_A == Zero))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ18._PSV ())
                            }
                            ElseIf ((_T_A == 0x02))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ18._TSP)
                            }
                            ElseIf ((_T_A == 0x03))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ18._TC1 ())
                            }
                            ElseIf ((_T_A == 0x04))
                            {
                                If (Arg2)
                                {
                                    Return (0xFFFF)
                                }

                                Return (\_SB.TZ18._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x1F))
                    {
                        While (One)
                        {
                            Name (_T_B, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_B = ToInteger (Arg3)
                            If ((_T_B == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TPSV = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._PSV ())
                            }
                            ElseIf ((_T_B == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTSP = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TSP ())
                            }
                            ElseIf ((_T_B == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTC1 = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TC1 ())
                            }
                            ElseIf ((_T_B == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTC2 = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x20))
                    {
                        While (One)
                        {
                            Name (_T_C, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_C = ToInteger (Arg3)
                            If ((_T_C == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TPSV = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._PSV ())
                            }
                            ElseIf ((_T_C == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTSP = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TSP ())
                            }
                            ElseIf ((_T_C == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTC1 = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TC1 ())
                            }
                            ElseIf ((_T_C == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTC2 = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x21))
                    {
                        While (One)
                        {
                            Name (_T_D, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_D = ToInteger (Arg3)
                            If ((_T_D == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TPSV = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._PSV ())
                            }
                            ElseIf ((_T_D == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTSP = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TSP ())
                            }
                            ElseIf ((_T_D == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTC1 = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TC1 ())
                            }
                            ElseIf ((_T_D == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTC2 = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x22))
                    {
                        While (One)
                        {
                            Name (_T_E, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_E = ToInteger (Arg3)
                            If ((_T_E == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TPSV = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._PSV ())
                            }
                            ElseIf ((_T_E == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTSP = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TSP ())
                            }
                            ElseIf ((_T_E == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTC1 = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TC1 ())
                            }
                            ElseIf ((_T_E == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTC2 = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x23))
                    {
                        While (One)
                        {
                            Name (_T_F, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_F = ToInteger (Arg3)
                            If ((_T_F == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TPSV = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ35._PSV ())
                            }
                            ElseIf ((_T_F == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTSP = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ35._TSP ())
                            }
                            ElseIf ((_T_F == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTC1 = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ35._TC1 ())
                            }
                            ElseIf ((_T_F == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTC2 = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ35._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x24))
                    {
                        While (One)
                        {
                            Name (_T_G, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_G = ToInteger (Arg3)
                            If ((_T_G == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TPSV = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ36._PSV ())
                            }
                            ElseIf ((_T_G == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTSP = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ36._TSP ())
                            }
                            ElseIf ((_T_G == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTC1 = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ36._TC1 ())
                            }
                            ElseIf ((_T_G == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTC2 = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ36._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x25))
                    {
                        While (One)
                        {
                            Name (_T_H, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_H = ToInteger (Arg3)
                            If ((_T_H == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TPSV = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ37._PSV ())
                            }
                            ElseIf ((_T_H == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTSP = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ37._TSP ())
                            }
                            ElseIf ((_T_H == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTC1 = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ37._TC1 ())
                            }
                            ElseIf ((_T_H == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTC2 = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ37._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x26))
                    {
                        While (One)
                        {
                            Name (_T_I, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_I = ToInteger (Arg3)
                            If ((_T_I == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TPSV = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ38._PSV ())
                            }
                            ElseIf ((_T_I == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTSP = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ38._TSP ())
                            }
                            ElseIf ((_T_I == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTC1 = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ38._TC1 ())
                            }
                            ElseIf ((_T_I == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTC2 = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ38._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x28))
                    {
                        While (One)
                        {
                            Name (_T_J, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_J = ToInteger (Arg3)
                            If ((_T_J == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TPSV = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._PSV ())
                            }
                            ElseIf ((_T_J == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTSP = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TSP ())
                            }
                            ElseIf ((_T_J == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTC1 = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TC1 ())
                            }
                            ElseIf ((_T_J == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTC2 = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x29))
                    {
                        While (One)
                        {
                            Name (_T_K, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_K = ToInteger (Arg3)
                            If ((_T_K == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TPSV = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._PSV ())
                            }
                            ElseIf ((_T_K == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTSP = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TSP ())
                            }
                            ElseIf ((_T_K == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTC1 = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TC1 ())
                            }
                            ElseIf ((_T_K == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTC2 = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x2A))
                    {
                        While (One)
                        {
                            Name (_T_L, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_L = ToInteger (Arg3)
                            If ((_T_L == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TPSV = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._PSV ())
                            }
                            ElseIf ((_T_L == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTSP = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TSP ())
                            }
                            ElseIf ((_T_L == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTC1 = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TC1 ())
                            }
                            ElseIf ((_T_L == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTC2 = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x32))
                    {
                        While (One)
                        {
                            Name (_T_M, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_M = ToInteger (Arg3)
                            If ((_T_M == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TPSV = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ50._PSV ())
                            }
                            ElseIf ((_T_M == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTSP = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ50._TSP ())
                            }
                            ElseIf ((_T_M == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTC1 = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ50._TC1 ())
                            }
                            ElseIf ((_T_M == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTC2 = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ50._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x33))
                    {
                        While (One)
                        {
                            Name (_T_N, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_N = ToInteger (Arg3)
                            If ((_T_N == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ51.TPSV = Arg1
                                    Notify (\_SB.TZ51, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ51._PSV ())
                            }
                            ElseIf ((_T_N == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ51.TTSP = Arg1
                                    Notify (\_SB.TZ51, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ51._TSP ())
                            }
                            ElseIf ((_T_N == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ51.TTC1 = Arg1
                                    Notify (\_SB.TZ51, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ51._TC1 ())
                            }
                            ElseIf ((_T_N == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ51.TTC2 = Arg1
                                    Notify (\_SB.TZ51, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ51._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x34))
                    {
                        While (One)
                        {
                            Name (_T_O, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_O = ToInteger (Arg3)
                            If ((_T_O == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TPSV = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ52._PSV ())
                            }
                            ElseIf ((_T_O == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTSP = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ52._TSP ())
                            }
                            ElseIf ((_T_O == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTC1 = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ52._TC1 ())
                            }
                            ElseIf ((_T_O == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTC2 = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ52._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3A))
                    {
                        While (One)
                        {
                            Name (_T_P, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_P = ToInteger (Arg3)
                            If ((_T_P == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TPSV = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ58._PSV ())
                            }
                            ElseIf ((_T_P == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTSP = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ58._TSP ())
                            }
                            ElseIf ((_T_P == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTC1 = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ58._TC1 ())
                            }
                            ElseIf ((_T_P == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTC2 = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ58._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3B))
                    {
                        While (One)
                        {
                            Name (_T_Q, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_Q = ToInteger (Arg3)
                            If ((_T_Q == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TPSV = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ59._PSV ())
                            }
                            ElseIf ((_T_Q == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTSP = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ59._TSP ())
                            }
                            ElseIf ((_T_Q == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTC1 = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ59._TC1 ())
                            }
                            ElseIf ((_T_Q == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTC2 = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ59._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3D))
                    {
                        While (One)
                        {
                            Name (_T_R, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_R = ToInteger (Arg3)
                            If ((_T_R == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TPSV = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ61._PSV ())
                            }
                            ElseIf ((_T_R == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTSP = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ61._TSP ())
                            }
                            ElseIf ((_T_R == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTC1 = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ61._TC1 ())
                            }
                            ElseIf ((_T_R == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTC2 = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ61._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x63))
                    {
                        While (One)
                        {
                            Name (_T_S, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_S = ToInteger (Arg3)
                            If ((_T_S == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TPSV = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._PSV ())
                            }
                            ElseIf ((_T_S == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TCRT = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._CRT ())
                            }
                            ElseIf ((_T_S == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTSP = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TSP ())
                            }
                            ElseIf ((_T_S == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTC1 = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TC1 ())
                            }
                            ElseIf ((_T_S == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTC2 = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TC2 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (0xFFFF)
                    }

                    Break
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.IPCC
            })
            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                If ((\_SB.PSUB == "MTP08280"))
                {
                    Return ("MTP08280")
                }
                ElseIf ((\_SB.PSUB == "QRD08280"))
                {
                    Return ("QRD08280")
                }
                ElseIf ((\_SB.PSUB == "CDP08280"))
                {
                    Return ("CDP08280")
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.PEP0._DSM._T_0 */
                    If ((_T_0 == ToUUID ("8d5ca34c-ae83-4a2a-9dd1-a74ffead548b") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (0x7E)
                                    }

                                    Break
                                }

                                Return (Zero)
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Name (SUBI, Package (0x05)
                                {
                                    Package (0x03)
                                    {
                                        "adsp", 
                                        One, 
                                        0x02
                                    }, 

                                    Package (0x03)
                                    {
                                        "slpi", 
                                        0x03, 
                                        0x03
                                    }, 

                                    Package (0x03)
                                    {
                                        "cdsp", 
                                        One, 
                                        0x04
                                    }, 

                                    Package (0x03)
                                    {
                                        "modem", 
                                        Zero, 
                                        0x05
                                    }, 

                                    Package (0x03)
                                    {
                                        "spss", 
                                        Zero, 
                                        0x06
                                    }
                                })
                                Return (SUBI) /* \_SB_.PEP0._DSM.SUBI */
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                If (CondRefOf (\_SB.ADSP))
                                {
                                    If (CondRefOf (\_SB.ADSP._STA))
                                    {
                                        Return (\_SB.ADSP._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                If (CondRefOf (\_SB.SCSS))
                                {
                                    If (CondRefOf (\_SB.SCSS._STA))
                                    {
                                        Return (\_SB.SCSS._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If (CondRefOf (\_SB.NSP0))
                                {
                                    If (CondRefOf (\_SB.NSP0._STA))
                                    {
                                        Return (\_SB.NSP0._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x05))
                            {
                                If (CondRefOf (\_SB.AMSS))
                                {
                                    If (CondRefOf (\_SB.AMSS._STA))
                                    {
                                        Return (\_SB.AMSS._STA) /* External reference */
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x06))
                            {
                                If (CondRefOf (\_SB.SPSS))
                                {
                                    If (CondRefOf (\_SB.SPSS._STA))
                                    {
                                        Return (\_SB.SPSS._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == ToUUID ("11e00d56-ce64-47ce-837b-1f898f9aa461") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_3 = ToInteger (Arg2)
                            If ((_T_3 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0xF9, 0x01                                       // ..
                                })
                            }
                            ElseIf ((_T_3 == 0x03))
                            {
                                \_SB.I2C9.ECNT (One)
                                Notify (\_SB.PMGK, 0xF2) // Hardware-Specific
                                Return (Zero)
                            }
                            ElseIf ((_T_3 == 0x04))
                            {
                                \_SB.I2C9.ECNT (Zero)
                                Notify (\_SB.PMGK, 0xF1) // Hardware-Specific
                                Return (Zero)
                            }
                            ElseIf ((_T_3 == 0x05))
                            {
                                \_SB.I2C9.ECNT (0x03)
                                Return (Zero)
                            }
                            ElseIf ((_T_3 == 0x06))
                            {
                                \_SB.I2C9.ECNT (0x02)
                                Return (Zero)
                            }
                            ElseIf ((_T_3 == 0x07))
                            {
                                If ((\_SB.I2C9.HKEY.MSCB == One))
                                {
                                    \_SB.I2C9.HKEY.DYTC (0x001FC001)
                                    \_SB.I2C9.ECNT (0x05)
                                }

                                Notify (\_SB.PMGK, 0xF2) // Hardware-Specific
                                Return (Zero)
                            }
                            ElseIf ((_T_3 == 0x08))
                            {
                                If ((\_SB.I2C9.HKEY.MSCB == One))
                                {
                                    \_SB.I2C9.HKEY.DYTC (0x000FC001)
                                    \_SB.I2C9.ECNT (0x04)
                                }

                                Notify (\_SB.PMGK, 0xF1) // Hardware-Specific
                                Return (Zero)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021A,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021B,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021D,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000025C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x00000281,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000025D,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x00000282,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000025,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000331,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000003F,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000040,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000265,
                    }
                })
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0001, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x15)), 
                FLD0,   168
            }

            Method (GEPT, 0, NotSerialized)
            {
                Name (BUFF, Buffer (0x04){})
                CreateByteField (BUFF, Zero, STAT)
                CreateWordField (BUFF, 0x02, DATA)
                DATA = One
                Return (DATA) /* \_SB_.PEP0.GEPT.DATA */
            }

            Name (ROST, Zero)
            Method (NPUR, 1, NotSerialized)
            {
                \_SB.AGR0._PUR [One] = Arg0
                Notify (\_SB.AGR0, 0x80) // Status Change
            }

            Method (INTR, 0, NotSerialized)
            {
                Name (RBUF, Package (0x18)
                {
                    0x02, 
                    One, 
                    0x03, 
                    One, 
                    0x06, 
                    0x17911008, 
                    One, 
                    Zero, 
                    0x86000000, 
                    0x00200000, 
                    Zero, 
                    Zero, 
                    0x0C300000, 
                    0x1000, 
                    Zero, 
                    Zero, 
                    0x01FD4000, 
                    0x08, 
                    Zero, 
                    Zero, 
                    0x17C0000C, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Return (RBUF) /* \_SB_.PEP0.INTR.RBUF */
            }

            Method (STND, 0, NotSerialized)
            {
                Return (STNX) /* \_SB_.PEP0.STNX */
            }

            Name (STNX, Package (0x07)
            {
                "DMPO", 
                "DMPA", 
                "DMPB", 
                "DMDS", 
                "DMPL", 
                "XMPL", 
                "DMEP"
            })
            Method (CTPM, 0, NotSerialized)
            {
                Name (CTPN, Package (0x02)
                {
                    "CORE_TOPOLOGY", 
                    0x08
                })
                Return (CTPN) /* \_SB_.PEP0.CTPM.CTPN */
            }

            Name (DCVS, Zero)
            Method (PGDS, 0, NotSerialized)
            {
                Return (DCVS) /* \_SB_.PEP0.DCVS */
            }

            Name (PPPP, Package (0x3B)
            {
                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS10_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS11_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS12_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS2_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS3_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS10_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS11_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS12_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS3_E"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO9_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO8_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO9_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO10_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO11_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO12_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO13_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO8_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO9_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO10_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_P"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_Q"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CXO_BUFFERS_BBCLK2_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CXO_BUFFERS_BBCLK3_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CXO_BUFFERS_RFCLK1_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CXO_BUFFERS_RFCLK2_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_BUCK_BOOST1_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_FIXED_VREG1"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_FIXED_VREG2"
                }
            })
            Method (PPPM, 0, NotSerialized)
            {
                Return (PPPP) /* \_SB_.PEP0.PPPP */
            }

            Name (PRRP, Package (0x32)
            {
                "PPP_RESOURCE_ID_LDO1_P", 
                "PPP_RESOURCE_ID_SMPS11_B", 
                0x00124F80, 
                0x00149970, 
                0x0001D4C0, 
                "PPP_RESOURCE_ID_LDO2_P", 
                "PPP_RESOURCE_ID_SMPS11_B", 
                0x00124F80, 
                0x00149970, 
                0x000157C0, 
                "PPP_RESOURCE_ID_LDO3_P", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x00023280, 
                "PPP_RESOURCE_ID_LDO4_P", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x0001F400, 
                "PPP_RESOURCE_ID_LDO5_P", 
                "PPP_RESOURCE_ID_SMPS1_C", 
                0x001B7740, 
                0x001EE240, 
                0x00021340, 
                "PPP_RESOURCE_ID_LDO6_P", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x0001F400, 
                "PPP_RESOURCE_ID_LDO7_P", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x0004C2C0, 
                "PPP_RESOURCE_ID_LDO3_Q", 
                "PPP_RESOURCE_ID_SMPS1_C", 
                0x001B7740, 
                0x001EE240, 
                0x00029040, 
                "PPP_RESOURCE_ID_LDO5_Q", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x00017700, 
                "PPP_RESOURCE_ID_LDO6_Q", 
                "PPP_RESOURCE_ID_BUCK_BOOST1_C", 
                0x002DE600, 
                0x003C6CC0, 
                0x00013880
            })
            Method (PPRR, 0, NotSerialized)
            {
                Return (PRRP) /* \_SB_.PEP0.PRRP */
            }

            Name (FPDP, Zero)
            Method (FPMD, 0, NotSerialized)
            {
                Return (FPDP) /* \_SB_.PEP0.FPDP */
            }

            Method (DPRF, 0, NotSerialized)
            {
                Return (\_SB.DPP0)
            }

            Method (DMRF, 0, NotSerialized)
            {
                Return (\_SB.DPP1)
            }

            Method (MPRF, 0, NotSerialized)
            {
                Return (\_SB.MPP0) /* External reference */
            }

            Method (MMRF, 0, NotSerialized)
            {
                Return (\_SB.MPP1) /* External reference */
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (PEPH, 0, NotSerialized)
            {
                Return (Package (0x01)
                {
                    "ACPI\\VEN_QCOM&DEV_0617"
                })
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (APMD, 0, NotSerialized)
            {
                Return (APCC) /* \_SB_.PEP0.APCC */
            }

            Name (APCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.ADSP.ADCM.AUCD.QCRT", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_xo", 
                                0x80
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_xo", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_xo", 
                                Zero
                            }
                        }
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (PREL, 0, NotSerialized)
            {
                Name (PREX, Package (0x07)
                {
                    "DM0G", 
                    "DM7G", 
                    "DM8G", 
                    "DM9G", 
                    "DMKG", 
                    "DMLG", 
                    "DMMG"
                })
                Return (PREX) /* \_SB_.PEP0.PREL.PREX */
            }

            Method (G0MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0C)
                        {
                            "COMPONENT", 
                            Zero, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x20)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp3_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_B", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "TLMMGPIO", 
                                        Package (0x06)
                                        {
                                            0x19, 
                                            One, 
                                            Zero, 
                                            One, 
                                            0x03, 
                                            0x07
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "TLMMGPIO", 
                                        Package (0x06)
                                        {
                                            0x03, 
                                            One, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x27, 
                                            One, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICGPIO", 
                                        Package (0x08)
                                        {
                                            "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                            One, 
                                            0x08, 
                                            Zero, 
                                            One, 
                                            0x0A, 
                                            One, 
                                            0x04
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICGPIO", 
                                        Package (0x08)
                                        {
                                            "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            Zero, 
                                            0x0A, 
                                            One, 
                                            0x04
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICGPIO", 
                                        Package (0x08)
                                        {
                                            "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                            0x02, 
                                            0x07, 
                                            Zero, 
                                            Zero, 
                                            0x02, 
                                            One, 
                                            0x04
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x10)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx3_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x07)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G0MD.GPCC */
            }

            Method (G7MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0B)
                        {
                            "COMPONENT", 
                            0x07, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x1C)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp2_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x27, 
                                            One, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x02, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_B", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G7MD.GPCC */
            }

            Method (G8MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0B)
                        {
                            "COMPONENT", 
                            0x08, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x1C)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp2_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x27, 
                                            One, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x02, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_B", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G8MD.GPCC */
            }

            Method (G9MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0C)
                        {
                            "COMPONENT", 
                            0x09, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x25)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb4_eud_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_prim_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp0_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_top_edp0_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO4_D", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO9_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO7_D", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x03)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G9MD.GPCC */
            }

            Method (GKMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0C)
                        {
                            "COMPONENT", 
                            0x0A, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x25)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb4_eud_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_prim_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp0_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_top_edp0_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO4_D", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO9_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO7_D", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x03)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GKMD.GPCC */
            }

            Method (GLMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0C)
                        {
                            "COMPONENT", 
                            0x0B, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x25)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp1_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_top_edp1_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb4_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_sec_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO4_B", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_B", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO13_C", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x03)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GLMD.GPCC */
            }

            Method (GMMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0C)
                        {
                            "COMPONENT", 
                            0x0C, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x25)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "mdss_0_disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_ROTATOR", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_sf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb4_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_sec_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_top_edp1_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_edp1_phy_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_rot_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO4_B", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_B", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO6_B", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO13_C", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "mdss_0_disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x165A0BC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP0", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x06)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x03)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "mdss_0_disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GMMD.GPCC */
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (MPMD, 0, NotSerialized)
            {
                Return (MPCC) /* \_SB_.PEP0.MPCC */
            }

            Name (MPCC, Package (0x00){})
        }

        Scope (\_SB.PEP0)
        {
            Method (LPMD, 0, NotSerialized)
            {
                Return (LPCC) /* \_SB_.PEP0.LPCC */
            }

            Name (LPCC, Package (0x07)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.URS0", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS0.USB0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS0.UFN0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_eud_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.URS1", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS1.USB1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS1.UFN1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.USB2", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x24)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp0_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs0_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs3_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x24)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs3_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x24)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs3_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_B", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x25)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb_noc_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb2_hs3_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (BPMD, 0, NotSerialized)
            {
                If ((STOR == One))
                {
                    Return (CPCC) /* \_SB_.PEP0.CPCC */
                }
                Else
                {
                    Return (FPCC) /* \_SB_.PEP0.FPCC */
                }
            }

            Method (SDMD, 0, NotSerialized)
            {
                Return (SDCC) /* \_SB_.PEP0.SDCC */
            }

            Name (CPCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.UFS0", 
                    Package (0x07)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x05)
                        {
                            "FSTATE", 
                            Zero, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "FSTATE", 
                            One, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    One
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            One, 
                            Package (0x0E)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x03)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x09, 
                                        0x12
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x03, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_ref_clkref_en", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x0C)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_ref_clkref_en", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x02, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x8F0D1800, 
                                        0x8F0D1800
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        0x11D260C0, 
                                        Zero
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        Zero, 
                                        Zero
                                    }
                                }
                            }
                        }
                    }, 

                    Package (0x0B)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_C", 
                                One, 
                                0x00263540, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x23
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x09)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_B", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_B", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }
            })
            Name (FPCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.UFS0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "PRELOAD_DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO7_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }
                }
            })
            Name (SDCC, Package (0x01)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.SDC2", 
                    Package (0x09)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x19)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x03, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x04, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x05, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x06, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x07, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x08, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x09, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0B, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0C, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0D, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0E, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0F, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x10, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x11, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x12, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x13, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x08)
                            {
                                "PSTATE", 
                                0x14, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_C", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_C", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_C", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_C", 
                                        One, 
                                        0x002D0370, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                0x15, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_C", 
                                        One, 
                                        0x001B7740, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x05)
                            {
                                "PSTATE", 
                                0x16, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_C", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_C", 
                                        One, 
                                        0x002D0370, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x05)
                            {
                                "PSTATE", 
                                0x17, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_C", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_C", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            One, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x02
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x08, 
                                        0x05F5E100, 
                                        0x02
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x08, 
                                        0x0C0A4680, 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            0x02, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x17D78400, 
                                        0x0BEBC200
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x0BEBC200, 
                                        0x05F5E100
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        Zero, 
                                        Zero
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x03, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        One, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        0x02, 
                                        Zero
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        One, 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        0x02, 
                                        One
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x04, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_ahb_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_at_clk", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_ahb_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_at_clk", 
                                        0x02
                                    }
                                }
                            }
                        }
                    }, 

                    Package (0x07)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                0x16
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMPORT", 
                            Package (0x03)
                            {
                                0x000E8000, 
                                0x7FFF, 
                                0x1FE4
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                0x02
                            }
                        }
                    }, 

                    Package (0x07)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x04, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMPORT", 
                            Package (0x03)
                            {
                                0x000E8000, 
                                0x7FFF, 
                                0x0A00
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                0x17
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdSdCardExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (PEMD, 0, NotSerialized)
            {
                Return (PEMC) /* \_SB_.PEP0.PEMC */
            }

            Name (PEMC, Package (0x0E)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI0.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI1.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x09)
                {
                    "DEVICE", 
                    "\\_SB.PCI2", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x06)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_2a_aux_clk", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_2a_phy_bcr", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_PSTATE", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x64
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_2a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a2b_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_2a_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie2a_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2A", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2A", 
                                "ICBID_SLAVE_EBI1", 
                                0xEE6B2800, 
                                0x77359400, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2A_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x8E, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x8E, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2A_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie2a_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a2b_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_2a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_aux_clk", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_phy_bcr", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI2.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x09)
                {
                    "DEVICE", 
                    "\\_SB.PCI3", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x06)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_2b_aux_clk", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_2b_phy_bcr", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_PSTATE", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1D)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_2b_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a2b_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_2b_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie2b_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2B", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2B", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2B_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x90, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1B)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2B", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2B", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2B_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie2b_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2a2b_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_2b_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_aux_clk", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_phy_bcr", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_2b_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI3.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x09)
                {
                    "DEVICE", 
                    "\\_SB.PCI4", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x06)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_3a_aux_clk", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_3a_phy_bcr", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_PSTATE", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1D)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a3b_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_3a_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie3a_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3A", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3A", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3A_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x96, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1B)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3A_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie3a_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a3b_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_aux_clk", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_phy_bcr", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI4.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x09)
                {
                    "DEVICE", 
                    "\\_SB.PCI5", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x06)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_3b_aux_clk", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_3b_phy_bcr", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_PSTATE", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1D)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3b_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a3b_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_3b_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie3b_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3B", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3B", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3B_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x98, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1B)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3B", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3B", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3B_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie3b_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3a3b_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3b_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_aux_clk", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_phy_bcr", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3b_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x09)
                {
                    "DEVICE", 
                    "\\_SB.PCI6", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x06)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_4_aux_clk", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_pcie_4_phy_bcr", 
                                        0x0B
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_PSTATE", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x20)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x86, 
                                One, 
                                Zero, 
                                One, 
                                0x03, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICGPIO", 
                            Package (0x08)
                            {
                                "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                0x04, 
                                Zero, 
                                0x02, 
                                Zero, 
                                0x0A, 
                                0x02, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie4_qx_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_4_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_4_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie4_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x06
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_4_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x8C, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_4_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie4_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_pcie_4_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie4_qx_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_aux_clk", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_phy_bcr", 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO9_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO6_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI6.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }
            })
        }

        Device (WLDS)
        {
            Name (_HID, "QCOM06D0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Scope (\_SB.PEP0)
        {
            Method (LPMX, 0, NotSerialized)
            {
                Return (LPXC) /* \_SB_.PEP0.LPXC */
            }

            Name (LPXC, Package (0x01)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.TSC1", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x08)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x63, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            One, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x63, 
                                One, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0xC8
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0xAF, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x06)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0xAF, 
                                Zero, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            0x02, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x63, 
                                Zero, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x64
                            }
                        }
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (KPMX, 0, NotSerialized)
            {
                Return (KPXC) /* \_SB_.PEP0.KPXC */
            }

            Name (KPXC, Package (0x01)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.ECKB", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x04)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            One, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO12_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                One, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x04)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            0x02, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO12_C", 
                                One, 
                                0x00124F80, 
                                Zero, 
                                One, 
                                Zero
                            }
                        }
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (TPMX, 0, NotSerialized)
            {
                Return (TPXC) /* \_SB_.PEP0.TPXC */
            }

            Name (TPXC, Package (0x01)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.TCPD", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            One, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x03)
                        {
                            "PMICGPIO_V2", 
                            0x02, 
                            Package (0x0A)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                One, 
                                0x0A, 
                                0x02, 
                                0x03, 
                                One, 
                                One, 
                                0x04
                            }
                        }
                    }
                }
            })
        }

        Device (BAM1)
        {
            Name (_HID, "QCOM060A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x01DC4000,         // Address Base
                        0x00024000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000130,
                    }
                })
                Return (RBUF) /* \_SB_.BAM1._CRS.RBUF */
            }
        }

        Device (BAM5)
        {
            Name (_HID, "QCOM060A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x03A84000,         // Address Base
                        0x00032000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000C4,
                    }
                })
                Return (RBUF) /* \_SB_.BAM5._CRS.RBUF */
            }
        }

        Device (BAMD)
        {
            Name (_HID, "QCOM060A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0D)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0A904000,         // Address Base
                        0x00017000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000034C,
                    }
                })
                Return (RBUF) /* \_SB_.BAMD._CRS.RBUF */
            }
        }

        Device (BAME)
        {
            Name (_HID, "QCOM060A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0E)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x06064000,         // Address Base
                        0x00015000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000C7,
                    }
                })
                Return (RBUF) /* \_SB_.BAME._CRS.RBUF */
            }
        }

        Device (BAMF)
        {
            Name (_HID, "QCOM060A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0F)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0A704000,         // Address Base
                        0x00017000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000347,
                    }
                })
                Return (RBUF) /* \_SB_.BAMF._CRS.RBUF */
            }
        }

        Device (I2C2)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_1"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00984000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000027A,
                    }
                })
                Return (RBUF) /* \_SB_.I2C2._CRS.RBUF */
            }
        }

        Device (UAR3)
        {
            Name (_HID, "QCOM0616")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_2,4W,BT"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00988000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000027B,
                    }
                    GpioInt (Edge, ActiveLow, Exclusive, PullDown, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x007C
                        }
                })
                Return (RBUF) /* \_SB_.UAR3._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (I2C5)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_4"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00990000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000027D,
                    }
                })
                Return (RBUF) /* \_SB_.I2C5._CRS.RBUF */
            }
        }

        Device (I2C9)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x09)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_0"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A80000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000181,
                    }
                })
                Return (RBUF) /* \_SB_.I2C9._CRS.RBUF */
            }
        }

        Device (IC12)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0C)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_3"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A8C000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000184,
                    }
                })
                Return (RBUF) /* \_SB_.IC12._CRS.RBUF */
            }
        }

        Device (IC13)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0D)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_4"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A90000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000185,
                    }
                })
                Return (RBUF) /* \_SB_.IC13._CRS.RBUF */
            }
        }

        Device (UARD)
        {
            Name (_HID, "QCOM0616")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x12)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_2_SE_1,DBG"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00884000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000267,
                    }
                    GpioInt (Edge, ActiveLow, Exclusive, PullDown, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0040
                        }
                })
                Return (RBUF) /* \_SB_.UARD._CRS.RBUF */
            }
        }

        Device (SP20)
        {
            Name (_HID, "QCOM060E")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x14)  // _UID: Unique ID
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QGP2, 
                \_SB.MMU0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_2_SE_3"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0088C000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000269,
                    }
                })
                Return (RBUF) /* \_SB_.SP20._CRS.RBUF */
            }
        }

        Device (IC22)
        {
            Name (_HID, "QCOM0610")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_UID, 0x16)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_2_SE_5"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00894000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026B,
                    }
                })
                Return (RBUF) /* \_SB_.IC22._CRS.RBUF */
            }
        }

        Device (RPEN)
        {
            Name (_HID, "QCOM06E1")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (PILC)
        {
            Name (_HID, "QCOM06E0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (CDI)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PILC, 
                \_SB.RPEN
            })
            Name (_HID, "QCOM062F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (SCSS)
        {
            Name (_DEP, Package (0x07)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM061F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000C6,
                    }
                })
                Return (RBUF) /* \_SB_.SCSS._CRS.RBUF */
            }
        }

        Device (ADSP)
        {
            Name (_DEP, Package (0x07)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM061B")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000206,
                    }
                })
                Return (RBUF) /* \_SB_.ADSP._CRS.RBUF */
            }

            Device (SLM1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x03AC0000,         // Address Base
                            0x0002C000,         // Address Length
                            )
                        Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                        {
                            0x000000C3,
                        }
                    })
                    Return (RBUF) /* \_SB_.ADSP.SLM1._CRS.RBUF */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }
            }

            Device (ADCM)
            {
                Alias (\_SB.ESUB, _SUB)
                Name (_ADR, One)  // _ADR: Address
                Name (_DEP, Package (0x02)  // _DEP: Dependencies
                {
                    \_SB.MMU0, 
                    \_SB.IMM0
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CHLD, 0, NotSerialized)
                {
                    Return (Package (0x01)
                    {
                        "ADCM\\QCOM06C1"
                    })
                }

                Device (AUCD)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Alias (\_SB.ESUB, _SUB)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Name (RBUF, ResourceTemplate ()
                        {
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x006A
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x00B2
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x00B3
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0061
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0062
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0044
                                }
                            GpioInt (Edge, ActiveBoth, ExclusiveAndWake, PullDown, 0x0000,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0140
                                }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000003DF,
                            }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000000BB,
                            }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000000CA,
                            }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000000CB,
                            }
                        })
                        Return (RBUF) /* \_SB_.ADSP.ADCM.AUCD._CRS.RBUF */
                    }

                    Method (CHLD, 0, NotSerialized)
                    {
                        Name (CH, Package (0x01)
                        {
                            "AUCD\\QCOM0629"
                        })
                        Return (CH) /* \_SB_.ADSP.ADCM.AUCD.CHLD.CH__ */
                    }

                    Device (QCRT)
                    {
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Name (_ADR, Zero)  // _ADR: Address
                    }
                }
            }
        }

        Device (SSDD)
        {
            Name (_HID, "QCOM0620")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.PDSR, 
                \_SB.TFTP
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (PDSR)
        {
            Name (_HID, "QCOM06DF")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GLNK, 
                \_SB.IPC0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (NSP0)
        {
            Name (_DEP, Package (0x07)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM06B0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000262,
                    }
                })
                Return (RBUF) /* \_SB_.NSP0._CRS.RBUF */
            }
        }

        Device (CSW0)
        {
            Name (_HID, "QCOM06C3")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE0")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.NSP0
            })
        }

        Device (SPSS)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.RPEN, 
                \_SB.GLNK
            })
            Name (_HID, "QCOM068D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000180,
                    }
                    Memory32Fixed (ReadWrite,
                        0x01881028,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x01881024,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188101C,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188103C,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188200C,         // Address Base
                        0x00000004,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPSS._CRS.RBUF */
            }
        }

        Device (TFTP)
        {
            Name (_HID, "QCOM06DC")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.IPC0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (QCSK)
        {
            Name (_HID, "QCOM06AC")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Scope (\_SB.ADSP)
        {
        }

        Scope (\_SB.SCSS)
        {
        }

        Scope (\_SB.PILC)
        {
        }

        Scope (\_SB.CDI)
        {
        }

        Scope (\_SB.RPEN)
        {
        }

        Scope (\_SB.NSP0)
        {
            Name (_CID, "QCOMFFE7")  // _CID: Compatible ID
        }

        Device (LLC)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM0683")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x09600000,         // Address Base
                        0x00050000,         // Address Length
                        )
                    Memory32Fixed (ReadOnly,
                        0x01FC8088,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000266,
                    }
                })
            }
        }

        Device (MMU0)
        {
            Name (_HID, "QCOM0609")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x15000000,         // Address Base
                        0x00100000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000087,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000088,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000089,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000090,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000091,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000092,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000093,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000094,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000095,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000096,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D5,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D6,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D7,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D9,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000E0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000160,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000161,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000162,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000163,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000164,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000165,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000166,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000167,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000168,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000169,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000170,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000171,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000172,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000173,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000174,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000175,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000176,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000177,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000178,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000179,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001AB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001AC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001AD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001AE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001AF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001B0,
                    }
                })
            }
        }

        Device (MMU1)
        {
            Name (_HID, "QCOM0609")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x03DA0000,         // Address Base
                        0x00020000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C9,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002D0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002DF,
                    }
                })
            }
        }

        Device (IMM0)
        {
            Name (_HID, "QCOM068F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (IMM1)
        {
            Name (_HID, "QCOM068F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (GPU0)
        {
            Name (_HID, "QCOM0636")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CLS, 0x0003000000000000)  // _CLS: Class Code
            Device (MON0)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return (Zero)
                }
            }

            Name (_DEP, Package (0x0A)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.MMU1, 
                \_SB.IMM0, 
                \_SB.IMM1, 
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.PILC, 
                \_SB.RPEN, 
                \_SB.TREE, 
                \_SB.SCM0
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (ABUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AE00000,         // Address Base
                        0x00200000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x088E0000,         // Address Base
                        0x00034000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000073,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000375,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000036E,
                    }
                    Memory32Fixed (ReadWrite,
                        0x03D00000,         // Address Base
                        0x0003F010,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x03D60000,         // Address Base
                        0x0003F000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000014C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000014D,
                    }
                    Memory32Fixed (ReadWrite,
                        0x0B290000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0B490000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x03D90000,         // Address Base
                        0x00009000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x03DE0000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0C200000,         // Address Base
                        0x0000FFFF,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AA00000,         // Address Base
                        0x00200000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000CE,
                    }
                })
                Return (ABUF) /* \_SB_.GPU0._CRS.ABUF */
            }

            Method (RESI, 0, NotSerialized)
            {
                Name (AINF, Package (0x12)
                {
                    0x03, 
                    Zero, 
                    Package (0x03)
                    {
                        "RESOURCE", 
                        "MDP_REGS", 
                        "DISPLAY"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "DP_PHY_REGS", 
                        "DISPLAY"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "VSYNC_INTERRUPT", 
                        "DISPLAY"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "USB4_DP_AP_0_INTERRUPT", 
                        "DISPLAY"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "USB4_DP_AP_1_INTERRUPT", 
                        "DISPLAY"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GFX_REGS", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GFX_REG_CONT", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GFX_INTERRUPT", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GFX_LPAC_INTERRUPT", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GPU_PDC_SEQ_MEM", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GPU_PDC_REGS", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GPU_CC", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GPU_RSCC", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "GPU_RPMH_CPRF", 
                        "GRAPHICS"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "VIDEO_REGS", 
                        "VIDEO"
                    }, 

                    Package (0x03)
                    {
                        "RESOURCE", 
                        "VIDC_INTERRUPT", 
                        "VIDEO"
                    }
                })
                Return (AINF) /* \_SB_.GPU0.RESI.AINF */
            }

            Method (_ROM, 3, NotSerialized)  // _ROM: Read-Only Memory
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = VPID /* \_SB_.VPID */
                    If ((_T_0 == Zero))
                    {
                        Name (PLC1, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x46, 0x37, 0x20, 0x39, 0x35, 0x20, 0x41, 0x36,  // F7 95 A6
                            /* 16B8 */  0x20, 0x35, 0x33, 0x20, 0x34, 0x41, 0x20, 0x41,  //  53 4A A
                            /* 16C0 */  0x30, 0x20, 0x32, 0x36, 0x20, 0x30, 0x44, 0x20,  // 0 26 0D 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x46,  //  01 01 F
                            /* 1708 */  0x41, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // A 3C 80 
                            /* 1710 */  0x42, 0x38, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // B8 70 B0
                            /* 1718 */  0x20, 0x32, 0x34, 0x20, 0x34, 0x30, 0x20, 0x31,  //  24 40 1
                            /* 1720 */  0x30, 0x20, 0x31, 0x30, 0x20, 0x33, 0x45, 0x20,  // 0 10 3E 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x38, 0x20, 0x30, 0x30, 0x20,  // 0 18 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x36, 0x20,  // A 00 06 
                            /* 17A0 */  0x41, 0x46, 0x20, 0x39, 0x33, 0x20, 0x36, 0x36,  // AF 93 66
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x32, 0x20, 0x33, 0x31, 0x20, 0x33, 0x33,  // 42 31 33
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x35, 0x35, 0x20, 0x34,  //  33 55 4
                            /* 17C8 */  0x31, 0x20, 0x34, 0x45, 0x20, 0x33, 0x30, 0x20,  // 1 4E 30 
                            /* 17D0 */  0x33, 0x31, 0x20, 0x32, 0x45, 0x20, 0x33, 0x32,  // 31 2E 32
                            /* 17D8 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20, 0x30,  //  20 0A 0
                            /* 17E0 */  0x30, 0x20, 0x39, 0x39, 0x3C, 0x2F, 0x45, 0x44,  // 0 99</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC1 /* \_SB_.GPU0._ROM.PLC1 */
                        Break
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Name (PLC2, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x35, 0x43, 0x20, 0x37, 0x30, 0x20, 0x41, 0x36,  // 5C 70 A6
                            /* 16B8 */  0x20, 0x35, 0x31, 0x20, 0x34, 0x43, 0x20, 0x39,  //  51 4C 9
                            /* 16C0 */  0x43, 0x20, 0x32, 0x36, 0x20, 0x30, 0x46, 0x20,  // C 26 0F 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x37,  //  01 01 7
                            /* 1708 */  0x34, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // 4 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x38, 0x20, 0x34, 0x30, 0x20, 0x33,  //  28 40 3
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x33, 0x36, 0x20,  // 0 20 36 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20,  // 0 1A 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x39, 0x20,  // A 00 09 
                            /* 17A0 */  0x45, 0x35, 0x20, 0x36, 0x34, 0x20, 0x30, 0x39,  // E5 64 09
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x45, 0x20, 0x35, 0x36, 0x20, 0x33, 0x31,  // 4E 56 31
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x33, 0x20, 0x35,  //  33 33 5
                            /* 17C8 */  0x37, 0x20, 0x35, 0x35, 0x20, 0x34, 0x44, 0x20,  // 7 55 4D 
                            /* 17D0 */  0x32, 0x44, 0x20, 0x34, 0x45, 0x20, 0x33, 0x36,  // 2D 4E 36
                            /* 17D8 */  0x20, 0x33, 0x31, 0x20, 0x30, 0x41, 0x20, 0x30,  //  31 0A 0
                            /* 17E0 */  0x30, 0x20, 0x41, 0x36, 0x3C, 0x2F, 0x45, 0x44,  // 0 A6</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC2 /* \_SB_.GPU0._ROM.PLC2 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Name (PLC3, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x44, 0x45, 0x20, 0x35, 0x30, 0x20, 0x41, 0x33,  // DE 50 A3
                            /* 16B8 */  0x20, 0x35, 0x34, 0x20, 0x34, 0x43, 0x20, 0x39,  //  54 4C 9
                            /* 16C0 */  0x39, 0x20, 0x32, 0x36, 0x20, 0x30, 0x46, 0x20,  // 9 26 0F 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1708 */  0x46, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // F 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x30, 0x20, 0x34, 0x30, 0x20, 0x31,  //  20 40 1
                            /* 1720 */  0x38, 0x20, 0x33, 0x30, 0x20, 0x33, 0x43, 0x20,  // 8 30 3C 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x39, 0x20, 0x30, 0x30, 0x20,  // 0 19 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x32, 0x36, 0x20,  // A 00 26 
                            /* 17A0 */  0x43, 0x46, 0x20, 0x34, 0x41, 0x20, 0x38, 0x35,  // CF 4A 85
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x44, 0x20, 0x33, 0x31, 0x20, 0x33, 0x33,  // 4D 31 33
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x34, 0x45, 0x20, 0x35,  //  33 4E 5
                            /* 17C8 */  0x37, 0x20, 0x33, 0x34, 0x20, 0x34, 0x41, 0x20,  // 7 34 4A 
                            /* 17D0 */  0x32, 0x30, 0x20, 0x35, 0x32, 0x20, 0x33, 0x33,  // 20 52 33
                            /* 17D8 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20, 0x30,  //  20 0A 0
                            /* 17E0 */  0x30, 0x20, 0x39, 0x38, 0x3C, 0x2F, 0x45, 0x44,  // 0 98</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC3 /* \_SB_.GPU0._ROM.PLC3 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        Name (PLC4, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x45, 0x44, 0x20, 0x38, 0x35, 0x20, 0x41, 0x37,  // ED 85 A7
                            /* 16B8 */  0x20, 0x35, 0x34, 0x20, 0x34, 0x43, 0x20, 0x39,  //  54 4C 9
                            /* 16C0 */  0x43, 0x20, 0x32, 0x36, 0x20, 0x30, 0x45, 0x20,  // C 26 0E 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x33,  //  01 01 3
                            /* 1708 */  0x35, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // 5 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x33, 0x20, 0x34, 0x30, 0x20, 0x33,  //  23 40 3
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x33, 0x36, 0x20,  // 0 20 36 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20,  // 0 1A 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // A 00 30 
                            /* 17A0 */  0x45, 0x34, 0x20, 0x32, 0x37, 0x20, 0x30, 0x37,  // E4 27 07
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x43, 0x20, 0x35, 0x30, 0x20, 0x33, 0x31,  // 4C 50 31
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x33, 0x20, 0x35,  //  33 33 5
                            /* 17C8 */  0x37, 0x20, 0x35, 0x35, 0x20, 0x33, 0x31, 0x20,  // 7 55 31 
                            /* 17D0 */  0x32, 0x44, 0x20, 0x35, 0x33, 0x20, 0x35, 0x30,  // 2D 53 50
                            /* 17D8 */  0x20, 0x34, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30,  //  42 32 0
                            /* 17E0 */  0x30, 0x20, 0x32, 0x36, 0x3C, 0x2F, 0x45, 0x44,  // 0 26</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC4 /* \_SB_.GPU0._ROM.PLC4 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Name (PLC5, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x44, 0x45, 0x20, 0x35, 0x30, 0x20, 0x41, 0x33,  // DE 50 A3
                            /* 16B8 */  0x20, 0x35, 0x34, 0x20, 0x34, 0x43, 0x20, 0x39,  //  54 4C 9
                            /* 16C0 */  0x39, 0x20, 0x32, 0x36, 0x20, 0x30, 0x46, 0x20,  // 9 26 0F 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1708 */  0x46, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // F 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x30, 0x20, 0x34, 0x30, 0x20, 0x31,  //  20 40 1
                            /* 1720 */  0x38, 0x20, 0x33, 0x30, 0x20, 0x33, 0x43, 0x20,  // 8 30 3C 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x39, 0x20, 0x30, 0x30, 0x20,  // 0 19 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x32, 0x36, 0x20,  // A 00 26 
                            /* 17A0 */  0x43, 0x46, 0x20, 0x34, 0x42, 0x20, 0x38, 0x35,  // CF 4B 85
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x35, 0x32, 0x20, 0x33, 0x31, 0x20, 0x33, 0x33,  // 52 31 33
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x34, 0x45, 0x20, 0x35,  //  33 4E 5
                            /* 17C8 */  0x37, 0x20, 0x33, 0x34, 0x20, 0x34, 0x42, 0x20,  // 7 34 4B 
                            /* 17D0 */  0x32, 0x30, 0x20, 0x35, 0x32, 0x20, 0x33, 0x30,  // 20 52 30
                            /* 17D8 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20, 0x30,  //  20 0A 0
                            /* 17E0 */  0x30, 0x20, 0x39, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 0 94</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC5 /* \_SB_.GPU0._ROM.PLC5 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        Name (PLC6, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x30, 0x20, 0x34, 0x31,  // AE A0 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x36, 0x20,  // 2 78 E6 
                            /* 16B0 */  0x35, 0x43, 0x20, 0x37, 0x30, 0x20, 0x41, 0x36,  // 5C 70 A6
                            /* 16B8 */  0x20, 0x35, 0x31, 0x20, 0x34, 0x43, 0x20, 0x39,  //  51 4C 9
                            /* 16C0 */  0x43, 0x20, 0x32, 0x36, 0x20, 0x30, 0x45, 0x20,  // C 26 0E 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x37,  //  01 01 7
                            /* 1708 */  0x34, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // 4 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x38, 0x20, 0x34, 0x30, 0x20, 0x33,  //  28 40 3
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x33, 0x36, 0x20,  // 0 20 36 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20,  // 0 1A 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 3C D1 0A
                            /* 1790 */  0x20, 0x33, 0x43, 0x20, 0x31, 0x45, 0x20, 0x30,  //  3C 1E 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x39, 0x20,  // A 00 09 
                            /* 17A0 */  0x45, 0x35, 0x20, 0x38, 0x34, 0x20, 0x30, 0x41,  // E5 84 0A
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x45, 0x20, 0x35, 0x36, 0x20, 0x33, 0x31,  // 4E 56 31
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x33, 0x20, 0x35,  //  33 33 5
                            /* 17C8 */  0x37, 0x20, 0x35, 0x35, 0x20, 0x34, 0x44, 0x20,  // 7 55 4D 
                            /* 17D0 */  0x32, 0x44, 0x20, 0x35, 0x34, 0x20, 0x33, 0x30,  // 2D 54 30
                            /* 17D8 */  0x20, 0x33, 0x31, 0x20, 0x30, 0x41, 0x20, 0x30,  //  31 0A 0
                            /* 17E0 */  0x30, 0x20, 0x38, 0x36, 0x3C, 0x2F, 0x45, 0x44,  // 0 86</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC6 /* \_SB_.GPU0._ROM.PLC6 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x06))
                    {
                        Name (PLC7, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x36, 0x20, 0x34, 0x31,  // AE A6 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x33, 0x20,  // 2 78 E3 
                            /* 16B0 */  0x37, 0x30, 0x20, 0x46, 0x45, 0x20, 0x41, 0x36,  // 70 FE A6
                            /* 16B8 */  0x20, 0x35, 0x35, 0x20, 0x34, 0x39, 0x20, 0x39,  //  55 49 9
                            /* 16C0 */  0x45, 0x20, 0x32, 0x34, 0x20, 0x30, 0x45, 0x20,  // E 24 0E 
                            /* 16C8 */  0x34, 0x45, 0x20, 0x35, 0x36, 0x20, 0x30, 0x30,  // 4E 56 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x46,  //  01 01 F
                            /* 1708 */  0x41, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // A 3C 80 
                            /* 1710 */  0x42, 0x38, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // B8 70 B0
                            /* 1718 */  0x20, 0x32, 0x34, 0x20, 0x34, 0x30, 0x20, 0x31,  //  24 40 1
                            /* 1720 */  0x30, 0x20, 0x31, 0x30, 0x20, 0x33, 0x45, 0x20,  // 0 10 3E 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x38, 0x20, 0x30, 0x30, 0x20,  // 0 18 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x44,  // 00 00 FD
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20, 0x33,  //  00 30 3
                            /* 1750 */  0x43, 0x20, 0x34, 0x42, 0x20, 0x34, 0x42, 0x20,  // C 4B 4B 
                            /* 1758 */  0x31, 0x30, 0x20, 0x30, 0x31, 0x20, 0x30, 0x41,  // 10 01 0A
                            /* 1760 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1768 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1770 */  0x32, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 20 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x32, 0x38, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 28 D1 0A
                            /* 1790 */  0x20, 0x32, 0x38, 0x20, 0x32, 0x38, 0x20, 0x30,  //  28 28 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x36, 0x20,  // A 00 06 
                            /* 17A0 */  0x41, 0x46, 0x20, 0x39, 0x42, 0x20, 0x31, 0x45,  // AF 9B 1E
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x32, 0x20, 0x33, 0x31, 0x20, 0x33, 0x33,  // 42 31 33
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x35, 0x35, 0x20, 0x34,  //  33 55 4
                            /* 17C8 */  0x31, 0x20, 0x34, 0x45, 0x20, 0x33, 0x30, 0x20,  // 1 4E 30 
                            /* 17D0 */  0x33, 0x32, 0x20, 0x32, 0x45, 0x20, 0x33, 0x31,  // 32 2E 31
                            /* 17D8 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20, 0x30,  //  20 0A 0
                            /* 17E0 */  0x30, 0x20, 0x33, 0x41, 0x3C, 0x2F, 0x45, 0x44,  // 0 3A</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC7 /* \_SB_.GPU0._ROM.PLC7 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x07))
                    {
                        Name (PLC8, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x37, 0x20, 0x34, 0x31,  // AE A7 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x33, 0x20,  // 2 78 E3 
                            /* 16B0 */  0x30, 0x35, 0x20, 0x35, 0x35, 0x20, 0x41, 0x35,  // 05 55 A5
                            /* 16B8 */  0x20, 0x35, 0x32, 0x20, 0x34, 0x41, 0x20, 0x39,  //  52 4A 9
                            /* 16C0 */  0x43, 0x20, 0x32, 0x34, 0x20, 0x30, 0x46, 0x20,  // C 24 0F 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x37,  //  01 01 7
                            /* 1708 */  0x34, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // 4 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x32, 0x38, 0x20, 0x34, 0x30, 0x20, 0x33,  //  28 40 3
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x33, 0x36, 0x20,  // 0 20 36 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20,  // 0 1A 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x44,  // 00 00 FD
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20, 0x33,  //  00 30 3
                            /* 1750 */  0x43, 0x20, 0x34, 0x42, 0x20, 0x34, 0x42, 0x20,  // C 4B 4B 
                            /* 1758 */  0x31, 0x30, 0x20, 0x30, 0x31, 0x20, 0x30, 0x41,  // 10 01 0A
                            /* 1760 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1768 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1770 */  0x32, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 20 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x32, 0x38, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 28 D1 0A
                            /* 1790 */  0x20, 0x32, 0x38, 0x20, 0x32, 0x38, 0x20, 0x30,  //  28 28 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x39, 0x20,  // A 00 09 
                            /* 17A0 */  0x45, 0x35, 0x20, 0x31, 0x42, 0x20, 0x30, 0x41,  // E5 1B 0A
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x45, 0x20, 0x35, 0x36, 0x20, 0x33, 0x31,  // 4E 56 31
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x33, 0x20, 0x35,  //  33 33 5
                            /* 17C8 */  0x37, 0x20, 0x35, 0x35, 0x20, 0x34, 0x44, 0x20,  // 7 55 4D 
                            /* 17D0 */  0x32, 0x44, 0x20, 0x34, 0x45, 0x20, 0x33, 0x36,  // 2D 4E 36
                            /* 17D8 */  0x20, 0x33, 0x33, 0x20, 0x30, 0x41, 0x20, 0x30,  //  33 0A 0
                            /* 17E0 */  0x30, 0x20, 0x41, 0x32, 0x3C, 0x2F, 0x45, 0x44,  // 0 A2</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC8 /* \_SB_.GPU0._ROM.PLC8 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x08))
                    {
                        Name (PLC9, Buffer (0x20B9)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20,  // F 00 30 
                            /* 1680 */  0x41, 0x45, 0x20, 0x41, 0x38, 0x20, 0x34, 0x31,  // AE A8 41
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1F 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x32, 0x20, 0x37, 0x38, 0x20, 0x45, 0x33, 0x20,  // 2 78 E3 
                            /* 16B0 */  0x42, 0x45, 0x20, 0x44, 0x35, 0x20, 0x41, 0x34,  // BE D5 A4
                            /* 16B8 */  0x20, 0x35, 0x34, 0x20, 0x34, 0x43, 0x20, 0x39,  //  54 4C 9
                            /* 16C0 */  0x41, 0x20, 0x32, 0x34, 0x20, 0x30, 0x45, 0x20,  // A 24 0E 
                            /* 16C8 */  0x35, 0x32, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30,  // 52 57 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x46,  //  01 01 F
                            /* 1708 */  0x44, 0x20, 0x33, 0x43, 0x20, 0x38, 0x30, 0x20,  // D 3C 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x42, 0x30,  // A0 70 B0
                            /* 1718 */  0x20, 0x33, 0x33, 0x20, 0x34, 0x30, 0x20, 0x33,  //  33 40 3
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x33, 0x36, 0x20,  // 0 20 36 
                            /* 1728 */  0x30, 0x30, 0x20, 0x31, 0x45, 0x20, 0x42, 0x33,  // 00 1E B3
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x38, 0x20, 0x30, 0x30, 0x20,  // 0 18 00 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x44,  // 00 00 FD
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x33, 0x30, 0x20, 0x33,  //  00 30 3
                            /* 1750 */  0x43, 0x20, 0x34, 0x41, 0x20, 0x34, 0x41, 0x20,  // C 4A 4A 
                            /* 1758 */  0x30, 0x46, 0x20, 0x30, 0x31, 0x20, 0x30, 0x41,  // 0F 01 0A
                            /* 1760 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1768 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1770 */  0x32, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 20 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20, 0x30,  //  00 0F 0
                            /* 1780 */  0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41, 0x20,  // 0 D1 0A 
                            /* 1788 */  0x32, 0x38, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 28 D1 0A
                            /* 1790 */  0x20, 0x32, 0x38, 0x20, 0x32, 0x38, 0x20, 0x30,  //  28 28 0
                            /* 1798 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x45, 0x20,  // A 00 0E 
                            /* 17A0 */  0x36, 0x46, 0x20, 0x30, 0x45, 0x20, 0x31, 0x33,  // 6F 0E 13
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x44, 0x20, 0x34, 0x45, 0x20, 0x34, 0x34,  // 4D 4E 44
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x30, 0x20, 0x33,  //  33 30 3
                            /* 17C8 */  0x37, 0x20, 0x34, 0x41, 0x20, 0x34, 0x31, 0x20,  // 7 4A 41 
                            /* 17D0 */  0x33, 0x31, 0x20, 0x32, 0x44, 0x20, 0x33, 0x32,  // 31 2D 32
                            /* 17D8 */  0x20, 0x30, 0x41, 0x20, 0x32, 0x30, 0x20, 0x30,  //  0A 20 0
                            /* 17E0 */  0x30, 0x20, 0x41, 0x44, 0x3C, 0x2F, 0x45, 0x44,  // 0 AD</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x32, 0x35, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >250</Ba
                            /* 1C38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C40 */  0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46, 0x72,  // MICPWMFr
                            /* 1C48 */  0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E,  // equency>
                            /* 1C50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C78 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C80 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C88 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C90 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C98 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CA0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1CA8 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1CB0 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1CE0 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1CE8 */  0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // >100</Ba
                            /* 1CF0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CF8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // teps>.  
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1D28 */  0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C,  // htDefaul
                            /* 1D30 */  0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // t>80</Ba
                            /* 1D38 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44,  // cklightD
                            /* 1D40 */  0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A,  // efault>.
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34, 0x30, 0x3C,  // ower>40<
                            /* 1D80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1D88 */  0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77,  // htLowPow
                            /* 1D90 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 1DB8 */  0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50,  // MIPowerP
                            /* 1DC0 */  0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x32,  // micNum>2
                            /* 1DC8 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1DD0 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75,  // erPmicNu
                            /* 1DD8 */  0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // m>.     
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E00 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E08 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E10 */  0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F, 0x50, 0x4D,  // 0x2F</PM
                            /* 1E18 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1E20 */  0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x3E,  // icModel>
                            /* 1E28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50,  //    <PMIP
                            /* 1E50 */  0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66,  // owerConf
                            /* 1E58 */  0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F, 0x50, 0x4D,  // ig>0</PM
                            /* 1E60 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E68 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // nfig>.  
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1E98 */  0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75,  // essMinLu
                            /* 1EA0 */  0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E,  // minance>
                            /* 1EA8 */  0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 0</Brigh
                            /* 1EB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EB8 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EC0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1EE8 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1EF0 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1EF8 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1F00 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1F08 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1F10 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1F40 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F48 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F50 */  0x3E, 0x35, 0x30, 0x30, 0x20, 0x33, 0x37, 0x35,  // >500 375
                            /* 1F58 */  0x35, 0x30, 0x30, 0x20, 0x35, 0x30, 0x30, 0x20,  // 500 500 
                            /* 1F60 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1F68 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1F70 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1F78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1FA0 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1FA8 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1FB0 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1FB8 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1FC0 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1FC8 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1FD0 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1FF8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 2000 */  0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // le>True<
                            /* 2008 */  0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61,  // /CABLEna
                            /* 2010 */  0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ble>.   
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2038 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2040 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2048 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78,  // Level>0x
                            /* 2050 */  0x34, 0x62, 0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F,  // 4b4032</
                            /* 2058 */  0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42,  // CABLMinB
                            /* 2060 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 2068 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 2090 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x00                                             // .
                        })
                        Local2 = PLC9 /* \_SB_.GPU0._ROM.PLC9 */
                        Break
                    }
                    Else
                    {
                        Name (PCFG, Buffer (0x20BB)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41,  // e>B133HA
                            /* 0090 */  0x4E, 0x30, 0x35, 0x2E, 0x33, 0x3C, 0x2F, 0x50,  // N05.3</P
                            /* 0098 */  0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65,  // anelName
                            /* 00A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x41, 0x55, 0x4F, 0x20,  // ion>AUO 
                            /* 00D8 */  0x31, 0x30, 0x38, 0x30, 0x70, 0x20, 0x65, 0x44,  // 1080p eD
                            /* 00E0 */  0x50, 0x20, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x20,  // P Video 
                            /* 00E8 */  0x4D, 0x6F, 0x64, 0x65, 0x20, 0x50, 0x61, 0x6E,  // Mode Pan
                            /* 00F0 */  0x65, 0x6C, 0x28, 0x31, 0x39, 0x32, 0x30, 0x78,  // el(1920x
                            /* 00F8 */  0x31, 0x30, 0x38, 0x30, 0x20, 0x32, 0x34, 0x62,  // 1080 24b
                            /* 0100 */  0x70, 0x70, 0x29, 0x3C, 0x2F, 0x50, 0x61, 0x6E,  // pp)</Pan
                            /* 0108 */  0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,  // elDescri
                            /* 0110 */  0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ption>. 
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0138 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0140 */  0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20, 0x43,  // ='EDID C
                            /* 0148 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 0150 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75,  //    <Manu
                            /* 0180 */  0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,  // factureI
                            /* 0188 */  0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30, 0x36,  // D>0xAF06
                            /* 0190 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0198 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x3E,  // ctureID>
                            /* 01A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 0218 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0220 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0228 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0258 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0260 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0268 */  0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 1A</Week
                            /* 0270 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0278 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 02A8 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02B0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 02B8 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02C0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02C8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02F8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 0300 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 0308 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0338 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0340 */  0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>4</EDI
                            /* 0348 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0350 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0378 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0380 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0388 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x41,  // tion>0xA
                            /* 0390 */  0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 5</Video
                            /* 0398 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 03A0 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 03A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03D0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03D8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03E0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44, 0x3C,  // ze>0x1D<
                            /* 03E8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03F0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03F8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0428 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0430 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0438 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0440 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0448 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0450 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0478 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0480 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0488 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0490 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0498 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 04A0 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 04A8 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 04B0 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 04B8 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04E0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04E8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04F0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04F8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 0500 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0530 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0538 */  0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA4</Red
                            /* 0540 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0548 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0578 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0580 */  0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42, 0x6C,  // 0x15</Bl
                            /* 0588 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0590 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05C0 */  0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52, 0x65,  // 0x9E</Re
                            /* 05C8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05F8 */  0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 55</RedY
                            /* 0600 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0628 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0630 */  0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 4E</Gree
                            /* 0638 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0668 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0670 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42,  // >0x0F</B
                            /* 06E0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C, 0x2F,  // X>0x50</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0748 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0750 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0758 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0780 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0788 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0790 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0798 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07A0 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07A8 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07D8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07E0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07E8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07F0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07F8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 0800 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0828 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0830 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0838 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0840 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0848 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0850 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0878 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0880 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0888 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08B0 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B8 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08C0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08E8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08F0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08F8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0920 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0928 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0930 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0958 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0960 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0968 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0990 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0998 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 09A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0A00 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 0A08 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 0A10 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A68 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A70 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A78 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0AA8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0AB0 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AB8 */  0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35, 0x3C,  // M>0x125<
                            /* 0AC0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0AC8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0AD0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AD8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0B00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B08 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B10 */  0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32, 0x3C,  // MM>0XA2<
                            /* 0B18 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0B20 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B28 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // MM>0x0</
                            /* 0B78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B80 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B88 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B90 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BE8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BF0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BF8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0C30 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0C38 */  0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // ntalActi
                            /* 0C40 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C68 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C70 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C78 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C80 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C88 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C90 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // h>0</Hor
                            /* 0CD0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0CD8 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CE0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A,  // cPulse>.
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D58 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0D60 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0D68 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D70 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D78 */  0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ew>.    
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DA0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DA8 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DB0 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0DB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DC0 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0DC8 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0DF0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0DF8 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F, 0x72,  // RightBor
                            /* 0E00 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0E08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0E10 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0E18 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E40 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E48 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E50 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E58 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E88 */  0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E,  // icalFron
                            /* 0E90 */  0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30,  // tPorch>0
                            /* 0E98 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0EA0 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0EA8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0ED0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0ED8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EE0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EE8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EF0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F20 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F28 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // lse>0</V
                            /* 0F30 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F38 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0F40 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0F68 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F70 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F,  // Skew>0</
                            /* 0F78 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F80 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F88 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0FB0 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FB8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0FC0 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0FC8 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0FD0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1000 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1008 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 1010 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 1018 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 1020 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1048 */  0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,  // vertData
                            /* 1050 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1058 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1068 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1070 */  0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ty>.    
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1098 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10A0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74,  // cPolairt
                            /* 10A8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10B0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // irty>.  
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 10E8 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48, 0x73,  // InvertHs
                            /* 10F0 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // yncPolar
                            /* 10F8 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1100 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1108 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1110 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A,  // larity>.
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1140 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1148 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1150 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 1180 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 11A8 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73, 0x70,  // id='Disp
                            /* 11B0 */  0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74, 0x65,  // lay Inte
                            /* 11B8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A,  // rface'>.
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11E8 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11F0 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11F8 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 1200 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 1228 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1230 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1238 */  0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // t>3</Int
                            /* 1240 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6F,  // erfaceCo
                            /* 1248 */  0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D, 0x61,  // lorForma
                            /* 1250 */  0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // t>.     
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 1278 */  0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65,  // playPowe
                            /* 1280 */  0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F,  // rSavingO
                            /* 1288 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E,  // verride>
                            /* 1290 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 1298 */  0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x53,  // ayPowerS
                            /* 12A0 */  0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76, 0x65,  // avingOve
                            /* 12A8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // rride>. 
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12D0 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1300 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 1308 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1310 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1338 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1340 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1348 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1350 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1358 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  //  <EDPTra
                            /* 1388 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C,  // ining>0<
                            /* 1390 */  0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // /EDPTrai
                            /* 1398 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ning>.  
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // <EDPVolt
                            /* 13C8 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13D0 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 13D8 */  0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74,  // /EDPVolt
                            /* 13E0 */  0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E, 0x67,  // ageSwing
                            /* 13E8 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  //  <EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C,  // Level>0<
                            /* 1428 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65, 0x65,  // /EDPPree
                            /* 1430 */  0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x4C,  // mphasisL
                            /* 1438 */  0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20,  // evel>.  
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44,  // <EDPDPCD
                            /* 1468 */  0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C,  // Read>Fal
                            /* 1470 */  0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x44,  // se</EDPD
                            /* 1478 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1480 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x45,  //    <EDPE
                            /* 14A8 */  0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // DIDRead>
                            /* 14B0 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 14B8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14C0 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14E8 */  0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // DPNumber
                            /* 14F0 */  0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E,  // OfLanes>
                            /* 14F8 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E, 0x75,  // 2</EDPNu
                            /* 1500 */  0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61,  // mberOfLa
                            /* 1508 */  0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nes>.   
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1538 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x38,  // nkRate>8
                            /* 1540 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 100</EDP
                            /* 1548 */  0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52,  // MaxLinkR
                            /* 1550 */  0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ate>.   
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1578 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1580 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1588 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1590 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1598 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77,  //  <EDPPow
                            /* 15C8 */  0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74,  // erUpWait
                            /* 15D0 */  0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F,  // InMs>0</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72,  // EDPPower
                            /* 15E0 */  0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E,  // UpWaitIn
                            /* 15E8 */  0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Ms>.    
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1610 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75, 0x78,  // DPMaxAux
                            /* 1618 */  0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32, 0x30,  // Retry>20
                            /* 1620 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  // </EDPMax
                            /* 1628 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1630 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1658 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1660 */  0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30, 0x20,  // EDID>00 
                            /* 1668 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x30, 0x36, 0x20,  // F 00 06 
                            /* 1680 */  0x41, 0x46, 0x20, 0x32, 0x44, 0x20, 0x35, 0x38,  // AF 2D 58
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x31, 0x43, 0x20, 0x30, 0x31, 0x20, 0x30, 0x34,  // 1C 01 04
                            /* 16A0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x44, 0x20, 0x31,  //  A5 1D 1
                            /* 16A8 */  0x31, 0x20, 0x37, 0x38, 0x20, 0x30, 0x32, 0x20,  // 1 78 02 
                            /* 16B0 */  0x45, 0x45, 0x20, 0x39, 0x35, 0x20, 0x41, 0x33,  // EE 95 A3
                            /* 16B8 */  0x20, 0x35, 0x34, 0x20, 0x34, 0x43, 0x20, 0x39,  //  54 4C 9
                            /* 16C0 */  0x39, 0x20, 0x32, 0x36, 0x20, 0x30, 0x46, 0x20,  // 9 26 0F 
                            /* 16C8 */  0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30, 0x30,  // 50 54 00
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x42,  //  01 01 B
                            /* 1708 */  0x34, 0x20, 0x33, 0x37, 0x20, 0x38, 0x30, 0x20,  // 4 37 80 
                            /* 1710 */  0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x33, 0x38,  // A0 70 38
                            /* 1718 */  0x20, 0x33, 0x45, 0x20, 0x34, 0x30, 0x20, 0x33,  //  3E 40 3
                            /* 1720 */  0x41, 0x20, 0x32, 0x41, 0x20, 0x33, 0x35, 0x20,  // A 2A 35 
                            /* 1728 */  0x30, 0x30, 0x20, 0x32, 0x35, 0x20, 0x41, 0x35,  // 00 25 A5
                            /* 1730 */  0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  10 00 0
                            /* 1738 */  0x30, 0x20, 0x31, 0x38, 0x20, 0x42, 0x34, 0x20,  // 0 18 B4 
                            /* 1740 */  0x33, 0x37, 0x20, 0x38, 0x30, 0x20, 0x41, 0x30,  // 37 80 A0
                            /* 1748 */  0x20, 0x37, 0x30, 0x20, 0x33, 0x38, 0x20, 0x35,  //  70 38 5
                            /* 1750 */  0x43, 0x20, 0x34, 0x31, 0x20, 0x33, 0x41, 0x20,  // C 41 3A 
                            /* 1758 */  0x32, 0x41, 0x20, 0x33, 0x35, 0x20, 0x30, 0x30,  // 2A 35 00
                            /* 1760 */  0x20, 0x32, 0x35, 0x20, 0x41, 0x35, 0x20, 0x31,  //  25 A5 1
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x31, 0x38, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 18 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x46, 0x45, 0x20, 0x30,  //  00 FE 0
                            /* 1780 */  0x30, 0x20, 0x34, 0x31, 0x20, 0x35, 0x35, 0x20,  // 0 41 55 
                            /* 1788 */  0x34, 0x46, 0x20, 0x30, 0x41, 0x20, 0x32, 0x30,  // 4F 0A 20
                            /* 1790 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1798 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 17A0 */  0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30,  // 20 20 20
                            /* 17A8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 17B0 */  0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30, 0x20,  // 0 FE 00 
                            /* 17B8 */  0x34, 0x32, 0x20, 0x33, 0x31, 0x20, 0x33, 0x33,  // 42 31 33
                            /* 17C0 */  0x20, 0x33, 0x33, 0x20, 0x34, 0x38, 0x20, 0x34,  //  33 48 4
                            /* 17C8 */  0x31, 0x20, 0x34, 0x45, 0x20, 0x33, 0x30, 0x20,  // 1 4E 30 
                            /* 17D0 */  0x33, 0x35, 0x20, 0x32, 0x45, 0x20, 0x33, 0x38,  // 35 2E 38
                            /* 17D8 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20, 0x30,  //  20 0A 0
                            /* 17E0 */  0x30, 0x20, 0x43, 0x46, 0x3C, 0x2F, 0x45, 0x44,  // 0 CF</ED
                            /* 17E8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17F0 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A, 0x20,  // eEDID>. 
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1820 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1828 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31, 0x32,  // DCaps>12
                            /* 1830 */  0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20, 0x34,  //  0A C2 4
                            /* 1838 */  0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 1 00 00 
                            /* 1840 */  0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32,  // 01 C0 02
                            /* 1848 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42, 0x20,  // 0 00 0B 
                            /* 1858 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41, 0x34,  // 00 00 A4
                            /* 1860 */  0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20, 0x32,  //  1F 30 2
                            /* 1868 */  0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46, 0x20,  // A 76 2F 
                            /* 1870 */  0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34, 0x38,  // BC 34 48
                            /* 1878 */  0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20, 0x34,  //  3F D4 4
                            /* 1880 */  0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34, 0x20,  // 9 60 54 
                            /* 1888 */  0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F, 0x45,  // 78 69</E
                            /* 1890 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 1898 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 18A0 */  0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ps>.    
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 18C8 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18D0 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18D8 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20,  // atus>01 
                            /* 18E0 */  0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37,  // 00 77 77
                            /* 18E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34,  //  01 00 4
                            /* 18F0 */  0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // 4 44</ED
                            /* 18F8 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1900 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1908 */  0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // tus>.   
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1930 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1938 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1940 */  0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 2</EDPOv
                            /* 1948 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1950 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1978 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1980 */  0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // SSC>1</E
                            /* 1988 */  0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // DPEnable
                            /* 1990 */  0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // SSC>.   
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 19C0 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 19C8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 19D0 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 19D8 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // <EDPPsrT
                            /* 1A08 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A10 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A18 */  0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 2500</ED
                            /* 1A20 */  0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69,  // PPsrTrai
                            /* 1A28 */  0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61,  // ningDura
                            /* 1A30 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // tion>.  
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A58 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A80 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1A88 */  0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // ='Backli
                            /* 1A90 */  0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // ght Conf
                            /* 1A98 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 1AA0 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1AC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1AD0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // Type>1</
                            /* 1AD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AE0 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1B10 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43,  // ghtPmicC
                            /* 1B18 */  0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79,  // ontrolTy
                            /* 1B20 */  0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // pe>3</Ba
                            /* 1B28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B30 */  0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72,  // micContr
                            /* 1B38 */  0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // olType>.
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1B70 */  0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65,  // BankSele
                            /* 1B78 */  0x63, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x42, 0x61,  // ct>3</Ba
                            /* 1B80 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B88 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B90 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A, 0x20,  // elect>. 
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1BC0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BC8 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD0 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x39, 0x3C, 0x2F,  // Bits>9</
                            /* 1BD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BE0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1BE8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 1BF0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1C18 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1C20 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1C28 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1C30 */  0x3E, 0x31, 0x39, 0x32, 0x30, 0x30, 0x3C, 0x2F,  // >19200</
                            /* 1C38 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1C40 */  0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D,  // tPMICPWM
                            /* 1C48 */  0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63,  // Frequenc
                            /* 1C50 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1C78 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C80 */  0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C,  // micPWMGl
                            /* 1C88 */  0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F,  // itchRemo
                            /* 1C90 */  0x76, 0x61, 0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65,  // val>True
                            /* 1C98 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1CA0 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1CA8 */  0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74, 0x63, 0x68,  // WMGlitch
                            /* 1CB0 */  0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E,  // Removal>
                            /* 1CB8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1CE0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65,  // lightSte
                            /* 1CE8 */  0x70, 0x73, 0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F,  // ps>100</
                            /* 1CF0 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CF8 */  0x74, 0x53, 0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A,  // tSteps>.
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D28 */  0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x61,  // ightDefa
                            /* 1D30 */  0x75, 0x6C, 0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F,  // ult>80</
                            /* 1D38 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1D40 */  0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C, 0x74,  // tDefault
                            /* 1D48 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1D70 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F,  // klightLo
                            /* 1D78 */  0x77, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34,  // wPower>4
                            /* 1D80 */  0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // 0</Backl
                            /* 1D88 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D90 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // ower>.  
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB8 */  0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65,  // <PMIPowe
                            /* 1DC0 */  0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D,  // rPmicNum
                            /* 1DC8 */  0x3E, 0x32, 0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50,  // >2</PMIP
                            /* 1DD0 */  0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D, 0x69, 0x63,  // owerPmic
                            /* 1DD8 */  0x4E, 0x75, 0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // Num>.   
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1E00 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E08 */  0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65,  // PmicMode
                            /* 1E10 */  0x6C, 0x3E, 0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F,  // l>0x2F</
                            /* 1E18 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E20 */  0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65,  // PmicMode
                            /* 1E28 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E50 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E58 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F,  // nfig>0</
                            /* 1E60 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E68 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A,  // Config>.
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1E98 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1EA0 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1EA8 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69,  // e>0</Bri
                            /* 1EB0 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D,  // ghtnessM
                            /* 1EB8 */  0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61,  // inLumina
                            /* 1EC0 */  0x6E, 0x63, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nce>.   
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1EE8 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1EF0 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1EF8 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30,  // inance>0
                            /* 1F00 */  0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // </Bright
                            /* 1F08 */  0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C,  // nessMaxL
                            /* 1F10 */  0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65,  // uminance
                            /* 1F18 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72, 0x69,  //     <Bri
                            /* 1F40 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x52,  // ghtnessR
                            /* 1F48 */  0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65,  // angeLeve
                            /* 1F50 */  0x6C, 0x30, 0x3E, 0x35, 0x30, 0x30, 0x20, 0x33,  // l0>500 3
                            /* 1F58 */  0x37, 0x35, 0x35, 0x30, 0x30, 0x20, 0x35, 0x30,  // 75500 50
                            /* 1F60 */  0x30, 0x20, 0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69,  // 0 2</Bri
                            /* 1F68 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x52,  // ghtnessR
                            /* 1F70 */  0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65,  // angeLeve
                            /* 1F78 */  0x6C, 0x30, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // l0>.    
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x41,  //       <A
                            /* 1FA0 */  0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x42,  // daptiveB
                            /* 1FA8 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1FB0 */  0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,  // sFeature
                            /* 1FB8 */  0x3E, 0x31, 0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70,  // >1</Adap
                            /* 1FC0 */  0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x67,  // tiveBrig
                            /* 1FC8 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46, 0x65,  // htnessFe
                            /* 1FD0 */  0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // ature>. 
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF8 */  0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E,  //  <CABLEn
                            /* 2000 */  0x61, 0x62, 0x6C, 0x65, 0x3E, 0x54, 0x72, 0x75,  // able>Tru
                            /* 2008 */  0x65, 0x3C, 0x2F, 0x43, 0x41, 0x42, 0x4C, 0x45,  // e</CABLE
                            /* 2010 */  0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x20,  // nable>. 
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2038 */  0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69,  //  <CABLMi
                            /* 2040 */  0x6E, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // nBacklig
                            /* 2048 */  0x68, 0x74, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E,  // htLevel>
                            /* 2050 */  0x30, 0x78, 0x34, 0x62, 0x34, 0x30, 0x33, 0x32,  // 0x4b4032
                            /* 2058 */  0x3C, 0x2F, 0x43, 0x41, 0x42, 0x4C, 0x4D, 0x69,  // </CABLMi
                            /* 2060 */  0x6E, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // nBacklig
                            /* 2068 */  0x68, 0x74, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E,  // htLevel>
                            /* 2070 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2090 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 2098 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x20, 0x20, 0x00                                 //   .
                        })
                        Local2 = PCFG /* \_SB_.GPU0._ROM.PCFG */
                    }

                    Break
                }

                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0._ROM.RBUF */
            }

            Method (PGRT, 2, NotSerialized)
            {
                Name (RBUF, Buffer (One)
                {
                     0x00                                             // .
                })
                Return (RBUF) /* \_SB_.GPU0.PGRT.RBUF */
            }

            Method (BLCP, 2, NotSerialized)
            {
                Name (RBUF, Buffer (0x0100){})
                Return (RBUF) /* \_SB_.GPU0.BLCP.RBUF */
            }

            Method (PBRT, 2, NotSerialized)
            {
                Name (RBUF, Buffer (0x0200)
                {
                    /* 0000 */  0x26, 0x02, 0x24, 0x03, 0x23, 0x04, 0x22, 0x05,  // &.$.#.".
                    /* 0008 */  0x21, 0x06, 0x20, 0x07, 0x1F, 0x08, 0x1D, 0x09,  // !. .....
                    /* 0010 */  0x1C, 0x0A, 0x1B, 0x0B, 0x1A, 0x0C, 0x19, 0x0D,  // ........
                    /* 0018 */  0x18, 0x0E, 0x16, 0x0F, 0x15, 0x10, 0x14, 0x11,  // ........
                    /* 0020 */  0x13, 0x12, 0x12, 0x13, 0x11, 0x14, 0x10, 0x15,  // ........
                    /* 0028 */  0x0E, 0x16, 0x0D, 0x17, 0x0C, 0x18, 0x0B, 0x19,  // ........
                    /* 0030 */  0x0A, 0x1A, 0x09, 0x1B, 0x07, 0x1C, 0x06, 0x1D,  // ........
                    /* 0038 */  0x05, 0x1E, 0x04, 0x1F, 0x03, 0x20, 0x02, 0x21,  // ..... .!
                    /* 0040 */  0x00, 0x22, 0xFF, 0x22, 0xFE, 0x23, 0xFD, 0x24,  // .".".#.$
                    /* 0048 */  0xFC, 0x25, 0xFB, 0x26, 0xFA, 0x27, 0xF8, 0x28,  // .%.&.'.(
                    /* 0050 */  0xF7, 0x29, 0xF6, 0x2A, 0xF5, 0x2B, 0xF4, 0x2C,  // .).*.+.,
                    /* 0058 */  0xF3, 0x2D, 0xF1, 0x2E, 0xF0, 0x2F, 0xEF, 0x30,  // .-.../.0
                    /* 0060 */  0xEE, 0x31, 0xED, 0x32, 0xEC, 0x33, 0xEB, 0x34,  // .1.2.3.4
                    /* 0068 */  0xE9, 0x35, 0xE8, 0x36, 0xE7, 0x37, 0xE6, 0x38,  // .5.6.7.8
                    /* 0070 */  0xE5, 0x39, 0xE4, 0x3A, 0xE2, 0x3B, 0xE1, 0x3C,  // .9.:.;.<
                    /* 0078 */  0xE0, 0x3D, 0xDF, 0x3E, 0xDE, 0x3F, 0xDD, 0x40,  // .=.>.?.@
                    /* 0080 */  0xDB, 0x41, 0xDA, 0x42, 0xD9, 0x43, 0xD8, 0x44,  // .A.B.C.D
                    /* 0088 */  0xD7, 0x45, 0xD6, 0x46, 0xD5, 0x47, 0xD3, 0x48,  // .E.F.G.H
                    /* 0090 */  0xD2, 0x49, 0xD1, 0x4A, 0xD0, 0x4B, 0xCF, 0x4C,  // .I.J.K.L
                    /* 0098 */  0xCE, 0x4D, 0xCC, 0x4E, 0xCB, 0x4F, 0xCA, 0x50,  // .M.N.O.P
                    /* 00A0 */  0xC9, 0x51, 0xC8, 0x52, 0xC7, 0x53, 0xC5, 0x54,  // .Q.R.S.T
                    /* 00A8 */  0xC4, 0x55, 0xC3, 0x56, 0xC2, 0x57, 0xC1, 0x58,  // .U.V.W.X
                    /* 00B0 */  0xC0, 0x59, 0xBF, 0x5A, 0xBD, 0x5B, 0xBC, 0x5C,  // .Y.Z.[.\
                    /* 00B8 */  0xBB, 0x5D, 0xBA, 0x5E, 0xB9, 0x5F, 0xB8, 0x60,  // .].^._.`
                    /* 00C0 */  0xB6, 0x61, 0xB5, 0x62, 0xB4, 0x63, 0xB3, 0x64,  // .a.b.c.d
                    /* 00C8 */  0xB2, 0x65, 0xB1, 0x66, 0xB0, 0x67, 0xAE, 0x68,  // .e.f.g.h
                    /* 00D0 */  0xAD, 0x69, 0xAC, 0x6A, 0xAB, 0x6B, 0xAA, 0x6C,  // .i.j.k.l
                    /* 00D8 */  0xA9, 0x6D, 0xA7, 0x6E, 0xA6, 0x6F, 0xA5, 0x70,  // .m.n.o.p
                    /* 00E0 */  0xA4, 0x71, 0xA3, 0x72, 0xA2, 0x73, 0xA0, 0x74,  // .q.r.s.t
                    /* 00E8 */  0x9F, 0x75, 0x9E, 0x76, 0x9D, 0x77, 0x9C, 0x78,  // .u.v.w.x
                    /* 00F0 */  0x9B, 0x79, 0x9A, 0x7A, 0x98, 0x7B, 0x97, 0x7C,  // .y.z.{.|
                    /* 00F8 */  0x96, 0x7D, 0x95, 0x7E, 0x94, 0x7F, 0x93, 0x80,  // .}.~....
                    /* 0100 */  0x91, 0x81, 0x90, 0x82, 0x8F, 0x83, 0x8E, 0x84,  // ........
                    /* 0108 */  0x8D, 0x85, 0x8C, 0x86, 0x8A, 0x87, 0x89, 0x88,  // ........
                    /* 0110 */  0x88, 0x89, 0x87, 0x8A, 0x86, 0x8B, 0x85, 0x8C,  // ........
                    /* 0118 */  0x84, 0x8D, 0x82, 0x8E, 0x81, 0x8F, 0x80, 0x90,  // ........
                    /* 0120 */  0x7F, 0x91, 0x7E, 0x92, 0x7D, 0x93, 0x7B, 0x94,  // ..~.}.{.
                    /* 0128 */  0x7A, 0x95, 0x79, 0x96, 0x78, 0x97, 0x77, 0x98,  // z.y.x.w.
                    /* 0130 */  0x76, 0x99, 0x75, 0x9A, 0x73, 0x9B, 0x72, 0x9C,  // v.u.s.r.
                    /* 0138 */  0x71, 0x9D, 0x70, 0x9E, 0x6F, 0x9F, 0x6E, 0xA0,  // q.p.o.n.
                    /* 0140 */  0x6C, 0xA1, 0x6B, 0xA2, 0x6A, 0xA3, 0x69, 0xA4,  // l.k.j.i.
                    /* 0148 */  0x68, 0xA5, 0x67, 0xA6, 0x65, 0xA7, 0x64, 0xA8,  // h.g.e.d.
                    /* 0150 */  0x63, 0xA9, 0x62, 0xAA, 0x61, 0xAB, 0x60, 0xAC,  // c.b.a.`.
                    /* 0158 */  0x5F, 0xAD, 0x5D, 0xAE, 0x5C, 0xAF, 0x5B, 0xB0,  // _.].\.[.
                    /* 0160 */  0x5A, 0xB1, 0x59, 0xB2, 0x58, 0xB3, 0x56, 0xB4,  // Z.Y.X.V.
                    /* 0168 */  0x55, 0xB5, 0x54, 0xB6, 0x53, 0xB7, 0x52, 0xB8,  // U.T.S.R.
                    /* 0170 */  0x51, 0xB9, 0x4F, 0xBA, 0x4E, 0xBB, 0x4D, 0xBC,  // Q.O.N.M.
                    /* 0178 */  0x4C, 0xBD, 0x4B, 0xBE, 0x4A, 0xBF, 0x49, 0xC0,  // L.K.J.I.
                    /* 0180 */  0x47, 0xC1, 0x46, 0xC2, 0x45, 0xC3, 0x44, 0xC4,  // G.F.E.D.
                    /* 0188 */  0x43, 0xC5, 0x42, 0xC6, 0x40, 0xC7, 0x3F, 0xC8,  // C.B.@.?.
                    /* 0190 */  0x3E, 0xC9, 0x3D, 0xCA, 0x3C, 0xCB, 0x3B, 0xCC,  // >.=.<.;.
                    /* 0198 */  0x3A, 0xCD, 0x38, 0xCE, 0x37, 0xCF, 0x36, 0xD0,  // :.8.7.6.
                    /* 01A0 */  0x35, 0xD1, 0x34, 0xD2, 0x33, 0xD3, 0x31, 0xD4,  // 5.4.3.1.
                    /* 01A8 */  0x30, 0xD5, 0x2F, 0xD6, 0x2E, 0xD7, 0x2D, 0xD8,  // 0./...-.
                    /* 01B0 */  0x2C, 0xD9, 0x2A, 0xDA, 0x29, 0xDB, 0x28, 0xDC,  // ,.*.).(.
                    /* 01B8 */  0x27, 0xDD, 0x26, 0xDE, 0x25, 0xDF, 0x24, 0xE0,  // '.&.%.$.
                    /* 01C0 */  0x22, 0xE1, 0x21, 0xE2, 0x20, 0xE3, 0x1F, 0xE4,  // ".!. ...
                    /* 01C8 */  0x1E, 0xE5, 0x1D, 0xE6, 0x1B, 0xE7, 0x1A, 0xE8,  // ........
                    /* 01D0 */  0x19, 0xE9, 0x18, 0xEA, 0x17, 0xEB, 0x16, 0xEC,  // ........
                    /* 01D8 */  0x14, 0xED, 0x13, 0xEE, 0x12, 0xEF, 0x11, 0xF0,  // ........
                    /* 01E0 */  0x10, 0xF1, 0x0F, 0xF2, 0x0E, 0xF3, 0x0C, 0xF4,  // ........
                    /* 01E8 */  0x0B, 0xF5, 0x0A, 0xF6, 0x09, 0xF7, 0x08, 0xF8,  // ........
                    /* 01F0 */  0x07, 0xF9, 0x05, 0xFA, 0x04, 0xFB, 0x03, 0xFC,  // ........
                    /* 01F8 */  0x02, 0xFD, 0x01, 0xFE, 0x00, 0xFF, 0xFF, 0xFF   // ........
                })
                Return (RBUF) /* \_SB_.GPU0.PBRT.RBUF */
            }

            Method (ROE1, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE1.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE1.RBUF */
            }

            Method (ROE2, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE2.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE2.RBUF */
            }

            Method (ROE3, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xAB)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C, 0x61,  // PAUXPola
                    /* 0048 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x30, 0x3C, 0x2F,  // rity>0</
                    /* 0050 */  0x44, 0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C,  // DPAUXPol
                    /* 0058 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0078 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0080 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0088 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0090 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A8 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE3.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE3.RBUF */
            }

            Method (ROE4, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xAB)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C, 0x61,  // PAUXPola
                    /* 0048 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x30, 0x3C, 0x2F,  // rity>0</
                    /* 0050 */  0x44, 0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C,  // DPAUXPol
                    /* 0058 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0078 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0080 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0088 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0090 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A8 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE4.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE4.RBUF */
            }

            Method (ROE5, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xAB)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C, 0x61,  // PAUXPola
                    /* 0048 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x30, 0x3C, 0x2F,  // rity>0</
                    /* 0050 */  0x44, 0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C,  // DPAUXPol
                    /* 0058 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0078 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0080 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0088 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0090 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A8 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE5.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE5.RBUF */
            }

            Method (ROE6, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xAB)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C, 0x61,  // PAUXPola
                    /* 0048 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x30, 0x3C, 0x2F,  // rity>0</
                    /* 0050 */  0x44, 0x50, 0x41, 0x55, 0x58, 0x50, 0x6F, 0x6C,  // DPAUXPol
                    /* 0058 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0078 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0080 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0088 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0090 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00A8 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE6.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE6.RBUF */
            }

            Name (_DOD, Package (0x01)  // _DOD: Display Output Devices
            {
                0x00024321
            })
            Device (AVS0)
            {
                Name (_ADR, 0x00024321)  // _ADR: Address
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.GPU0.AVS0._CRS.RBUF */
                }

                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.MMU0, 
                    \_SB.IMM0, 
                    \_SB.VFE0
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {
                Name (RESU, Zero)
                Name (TIER, Zero)
                Name (DREV, Zero)
                Name (FAMI, Zero)
                TIER = (\_SB.SIDT & 0x0F)
                DREV = ((\_SB.SJTG >> 0x1C) & 0x0F)
                DREV <<= 0x04
                If ((\_SB.SDFE == 0x71))
                {
                    FAMI = (0x03 << 0x0B)
                }

                RESU |= TIER /* \_SB_.GPU0._HRV.RESU */
                RESU |= DREV /* \_SB_.GPU0._HRV.RESU */
                RESU |= FAMI /* \_SB_.GPU0._HRV.RESU */
                Return (RESU) /* \_SB_.GPU0._HRV.RESU */
            }

            Method (CHDV, 0, NotSerialized)
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Name (CHIF, Package (0x02)
                {
                    One, 
                    Package (0x07)
                    {
                        "CHILDDEV", 
                        Zero, 
                        0x00024321, 
                        "QCOM_AVStream_8280_LENV", 
                        Zero, 
                        "Qualcomm Camera AVStream Mini Driver", 
                        Package (0x04)
                        {
                            "COMPATIBLEIDS", 
                            0x02, 
                            "VEN_QCOM&DEV__AVSTREAM", 
                            "QCOM_AVSTREAM"
                        }
                    }
                })
                Return (CHIF) /* \_SB_.GPU0.CHDV.CHIF */
            }

            Name (LIDB, One)
            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Return (LIDB) /* \_SB_.GPU0.LIDB */
            }
        }

        Device (SCM0)
        {
            Name (_HID, "QCOM04DD")  // _HID: Hardware ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (TLOG)
        {
            Name (_HID, "QCOM06E4")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (TREE)
        {
            Name (_HID, "QCOM04DE")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0088
                        }
                    Memory32Fixed (ReadWrite,
                        0xDEADBEEF,         // Address Base
                        0xBEEFDEAD,         // Address Length
                        _Y00)
                })
                CreateDWordField (RBUF, \_SB.TREE._CRS._Y00._BAS, TGCA)  // _BAS: Base Address
                CreateDWordField (RBUF, \_SB.TREE._CRS._Y00._LEN, TGCL)  // _LEN: Length
                TGCA = \_SB.TCMA
                TGCL = \_SB.TCML
                Return (RBUF) /* \_SB_.TREE._CRS.RBUF */
            }
        }

        Device (SPMI)
        {
            Name (_HID, "QCOM060B")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "PNP0CA2")  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0C400000,         // Address Base
                        0x02800000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPMI._CRS.RBUF */
            }

            Method (CONF, 0, NotSerialized)
            {
                Name (XBUF, Buffer (0x1A)
                {
                    /* 0000 */  0x00, 0x01, 0x01, 0x01, 0xFF, 0x00, 0x02, 0x00,  // ........
                    /* 0008 */  0x0A, 0x07, 0x04, 0x07, 0x01, 0xFF, 0x10, 0x01,  // ........
                    /* 0010 */  0x00, 0x01, 0x0C, 0x40, 0x00, 0x00, 0x02, 0x80,  // ...@....
                    /* 0018 */  0x00, 0x00                                       // ..
                })
                Return (XBUF) /* \_SB_.SPMI.CONF.XBUF */
            }
        }

        Device (GIO0)
        {
            Name (_HID, "QCOM060C")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE3")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            OperationRegion (GPOR, GeneralPurposeIo, Zero, One)
            Field (\_SB.GIO0.GPOR, ByteAcc, NoLock, Preserve)
            {
                Connection (
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x006B
                        }
                ), 
                LIDR,   1
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0F100000,         // Address Base
                        0x00300000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000002FC,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000228,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000111,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000112,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000012D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000199,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002DC,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002A7,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002A4,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002A6,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000018E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002AD,
                    }
                })
                Return (RBUF) /* \_SB_.GIO0._CRS.RBUF */
            }

            Method (OFNI, 0, NotSerialized)
            {
                Name (RBUF, Buffer (0x02)
                {
                     0xE4, 0x00                                       // ..
                })
                Return (RBUF) /* \_SB_.GIO0.OFNI.RBUF */
            }

            Name (GABL, Zero)
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x08))
                {
                    GABL = Arg1
                }
            }

            Method (_AEI, 0, NotSerialized)  // _AEI: ACPI Event Interrupts
            {
                If ((\_SB.PLST == One))
                {
                    Name (RBFC, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveBoth, SharedAndWake, PullNone, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x02C0
                            }
                    })
                    Return (RBFC) /* \_SB_.GIO0._AEI.RBFC */
                }
                Else
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveHigh, Exclusive, PullNone, 0x01F4,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0002
                            }
                        GpioInt (Edge, ActiveBoth, SharedAndWake, PullNone, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x02C0
                            }
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0300
                            }
                    })
                    Return (RBUF) /* \_SB_.GIO0._AEI.RBUF */
                }
            }

            Method (_E02, 0, NotSerialized)  // _Exx: Edge-Triggered GPE, xx=0x00-0xFF
            {
                If ((\_SB.PLST != One))
                {
                    Notify (\_SB.GPU0, 0x92) // Device-Specific
                }
            }

            Method (_EVT, 1, NotSerialized)  // _EVT: Event
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = Arg0
                    If ((_T_0 == 0x02C0))
                    {
                        \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                        \_SB.GPU0.LIDB = \_SB.GIO0.LIDR
                        LIDL = \_SB.GIO0.LIDR
                        Notify (\_SB.LID0, 0x80) // Status Change
                    }
                    ElseIf ((_T_0 == 0x0300))
                    {
                        \_SB.I2C9.QEXC ()
                    }

                    Break
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("4f248f40-d5e2-499f-834c-27758ea1cd3f") /* GPIO Controller */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = Arg2
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x01)
                            {
                                0x0140
                            })
                        }
                        Else
                        {
                            BreakPoint
                        }

                        Break
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (IPCC)
        {
            Name (_HID, "QCOM06C2")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE2")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000105,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000106,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000107,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000384,
                    }
                })
                Return (RBUF) /* \_SB_.IPCC._CRS.RBUF */
            }
        }

        Device (WWAN)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PM01
            })
            Name (_HID, "QCOM06DA")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Name (GMDM, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x014D
                    }
            })
            Name (GMDR, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0150
                    }
            })
            Name (GMDS, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0148
                    }
            })
            Scope (\_SB.PM01)
            {
                OperationRegion (MPON, GeneralPurposeIo, Zero, One)
                OperationRegion (PMDR, GeneralPurposeIo, Zero, One)
                OperationRegion (PMON, GeneralPurposeIo, Zero, One)
            }

            Field (\_SB.PM01.MPON, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDM), 
                MPON,   1
            }

            Field (\_SB.PM01.PMDR, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDR), 
                PMDR,   1
            }

            Field (\_SB.PM01.PMON, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDS), 
                PMON,   1
            }

            Method (_MFF, 0, NotSerialized)
            {
                Debug = "Start SDX55 Power OFF Sequence"
                If (((\_SB.PSUB == "MTP08280") || (\_SB.PSUB == "QRD08280")))
                {
                    Sleep (0x0190)
                    Debug = "Set GPIO 6D to Low"
                    \_SB.WWAN.MPON = Zero
                    Debug = "Set GPIO 9D to Low"
                    \_SB.WWAN.PMDR = Zero
                    Sleep (0xD7)
                    Debug = "Set GPIO 1D to Low"
                    \_SB.WWAN.PMON = Zero
                    Sleep (One)
                }
                Else
                {
                    Debug = "SDX55 Power OFF not supported for this form factor"
                }

                Debug = "End SDX55 Power OFF Sequence"
            }

            Method (_MNF, 0, NotSerialized)
            {
                Debug = "Start SDX55 Power OFF Sequence with 3000 ms delay."
                If (((\_SB.PSUB == "MTP08280") || (\_SB.PSUB == "QRD08280")))
                {
                    Sleep (0x0190)
                    Debug = "Set GPIO 6D to Low"
                    \_SB.WWAN.MPON = Zero
                    Debug = "Set GPIO 9D to Low"
                    \_SB.WWAN.PMDR = Zero
                    Sleep (0x0BB8)
                    Debug = "Set GPIO 1D to Low"
                    \_SB.WWAN.PMON = Zero
                    Sleep (One)
                }
                Else
                {
                    Debug = "SDX55 Power OFF not supported for this form factor"
                }

                Debug = "End SDX55 Power OFF Sequence"
            }
        }

        Scope (\_SB.WWAN)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP4 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (PCI0)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_SEG, Zero)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x55
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x56
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x57
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x58
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP0 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x60300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI0._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P0RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P0RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R0RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R0RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R0RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBF0, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBF0) /* \_SB_.PCI0.RP1_._CRS.RBF0 */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P0RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R0RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (QPPX)
        {
            Name (_HID, "QCOM0696")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE4")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x01FCA044,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x01FCF024,         // Address Base
                        0x00000004,         // Address Length
                        )
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x01, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x008F
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x01, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0093
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x02, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0097
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x03, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0099
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x03, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x008D
                        }
                })
                Return (RBUF) /* \_SB_.QPPX._CRS.RBUF */
            }

            Method (_QPG, 0, Serialized)
            {
                Return (Package (0x07)
                {
                    Zero, 
                    Zero, 
                    One, 
                    One, 
                    One, 
                    One, 
                    One
                })
            }

            Name (GWLE, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0086
                    }
            })
            Scope (\_SB.GIO0)
            {
                OperationRegion (WLEN, GeneralPurposeIo, Zero, One)
            }

            Field (\_SB.GIO0.WLEN, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.QPPX.GWLE), 
                WLEN,   1
            }

            Method (_RST, 1, Serialized)  // _RST: Device Reset
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == 0x04))
                    {
                        Debug = "SDX not supported yet"
                    }
                    ElseIf ((_T_0 == 0x06))
                    {
                        \_SB.QPPX.WLEN = Zero
                        Sleep (0x05)
                        \_SB.QPPX.WLEN = One
                    }
                    Else
                    {
                        Debug = "Invalid PCIe port number passed to QPPX reset helper"
                    }

                    Break
                }
            }
        }

        Device (PCI1)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_SEG, One)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x64
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x65
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x66
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x67
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP1 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x40300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI1._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI1._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI1._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI1.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x02
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P1RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P1RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R1RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R1RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R1RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.PCI1.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P1RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R1RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI2)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_SEG, 0x02)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x0232
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x0233
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x0234
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x0235
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP2 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x3C300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI2._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI2._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI2._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI2.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x03
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P2RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P2RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R2RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R2RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R2RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0180
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI2.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P2RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R2RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI3)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_SEG, 0x03)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x0197
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x01D2
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x01D3
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x01D6
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP3 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x38300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI3._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI3._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI3._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI3.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x04
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P3RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P3RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R3RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R3RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R3RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x01C0
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI3.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P3RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R3RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI4)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX, 
                \_SB.WWAN
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_SEG, 0x04)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x023D
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x023E
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x023F
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x0240
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP4 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x34300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI4._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI4._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI4._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI4.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x05
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P4RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P4RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R4RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R4RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R4RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0200
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI4.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P4RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R4RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI5)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_SEG, 0x05)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x022E
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x022F
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x0230
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x0231
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP5 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x32300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI5._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI5._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI5._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI5.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x06
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P5RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P5RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R5RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R5RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R5RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0240
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI5.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (P5RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R5RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI6)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX, 
                \_SB.IPC0
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Name (_SEG, 0x06)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0xB5
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0xB6
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0xB7
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0xB8
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP6 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x30300000,         // Address Base
                        0x01D00000,         // Address Length
                        )
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI6._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI6._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI6._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI6.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x07
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
            {
                \_SB.P6RR
            })
            Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
            {
                \_SB.P6RR
            })
            Device (RP1)
            {
                Method (_ADR, 0, Serialized)  // _ADR: Address
                {
                    Return (Zero)
                }

                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                {
                    \_SB.R6RR
                })
                Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                {
                    \_SB.R6RR
                })
                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R6RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0280
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI6.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }

                Device (WLN)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (SGB, Buffer (0x20)
                    {
                        /* 0000 */  0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,  // ........
                        /* 0008 */  0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                        /* 0010 */  0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF,  // ........
                        /* 0018 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF   // ........
                    })
                    Method (QSGB, 0, Serialized)
                    {
                        Return (SGB) /* \_SB_.PCI6.RP1_.WLN_.SGB_ */
                    }
                }
            }
        }

        PowerResource (P6RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }
        }

        PowerResource (R6RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (IPC0)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM060D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (GLNK)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.IPCC, 
                \_SB.RPEN
            })
            Name (_HID, "QCOM0684")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (ARPC)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.GLNK, 
                \_SB.SCM0, 
                \_SB.IMM0
            })
            Name (_HID, "QCOM065C")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (ARPD)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.ADSP, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0682")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (QDIG)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM0613")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (SSM)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.TREE
            })
            Name (_HID, "QCOM0614")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (SYSM)
        {
            Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
            Name (_UID, 0x00100000)  // _UID: Unique ID
            Name (_LPI, Package (0x04)  // _LPI: Low Power Idle States
            {
                Zero, 
                0x01000000, 
                One, 
                Package (0x0A)
                {
                    0x251C, 
                    0x1770, 
                    One, 
                    0x20, 
                    Zero, 
                    Zero, 
                    0xC300, 
                    ResourceTemplate ()
                    {
                        Register (SystemMemory, 
                            0x00,               // Bit Width
                            0x00,               // Bit Offset
                            0x0000000000000000, // Address
                            ,)
                    }, 

                    ResourceTemplate ()
                    {
                        Register (SystemMemory, 
                            0x00,               // Bit Width
                            0x00,               // Bit Offset
                            0x0000000000000000, // Address
                            ,)
                    }, 

                    "platform.DRIPS"
                }
            })
            Device (CLUS)
            {
                Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
                Name (_UID, 0x10)  // _UID: Unique ID
                Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                {
                    Zero, 
                    0x01000000, 
                    0x02, 
                    Package (0x0A)
                    {
                        0x170C, 
                        0x0BB8, 
                        Zero, 
                        Zero, 
                        Zero, 
                        Zero, 
                        0x20, 
                        ResourceTemplate ()
                        {
                            Register (SystemMemory, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        ResourceTemplate ()
                        {
                            Register (SystemMemory, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        "L3Cluster.D2"
                    }, 

                    Package (0x0A)
                    {
                        0x1770, 
                        0x0CE4, 
                        One, 
                        Zero, 
                        Zero, 
                        One, 
                        0x40, 
                        ResourceTemplate ()
                        {
                            Register (SystemMemory, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        ResourceTemplate ()
                        {
                            Register (SystemMemory, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        "L3Cluster.D4"
                    }
                })
                Device (CPU0)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold0.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold0.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F0A, 
                            0x035C, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold0.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x0F6E, 
                            0x038E, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold0.C4"
                        }
                    })
                }

                Device (CPU1)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold1.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold1.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F0A, 
                            0x035C, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold1.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x0F6E, 
                            0x038E, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold1.C4"
                        }
                    })
                }

                Device (CPU2)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold2.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold2.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F0A, 
                            0x035C, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold2.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x0F6E, 
                            0x038E, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold2.C4"
                        }
                    })
                }

                Device (CPU3)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold3.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold3.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F0A, 
                            0x035C, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold3.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x0F6E, 
                            0x038E, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoGold3.C4"
                        }
                    })
                }

                Device (CPU4)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x04)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime0.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime0.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F96, 
                            0x03E8, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime0.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x118A, 
                            0x05DC, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime0.C4"
                        }
                    })
                }

                Device (CPU5)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x05)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime1.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime1.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F96, 
                            0x03E8, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime1.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x118A, 
                            0x05DC, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime1.C4"
                        }
                    })
                }

                Device (CPU6)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x06)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime2.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime2.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F96, 
                            0x03E8, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime2.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x118A, 
                            0x05DC, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime2.C4"
                        }
                    })
                }

                Device (CPU7)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x07)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x07)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x04, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime3.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0190, 
                            0x64, 
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000002, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime3.C2"
                        }, 

                        Package (0x0A)
                        {
                            0x0F96, 
                            0x03E8, 
                            One, 
                            One, 
                            Zero, 
                            One, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000003, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime3.C3"
                        }, 

                        Package (0x0A)
                        {
                            0x118A, 
                            0x05DC, 
                            One, 
                            One, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000040000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "KryoPrime3.C4"
                        }
                    })
                }
            }
        }

        Device (QGP0)
        {
            Name (_HID, "QCOM0688")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00904000,         // Address Base
                        0x00050000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000114,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000115,
                    }
                })
                Return (RBUF) /* \_SB_.QGP0._CRS.RBUF */
            }
        }

        Device (QGP1)
        {
            Name (_HID, "QCOM0688")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A04000,         // Address Base
                        0x00050000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000137,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000138,
                    }
                })
                Return (RBUF) /* \_SB_.QGP1._CRS.RBUF */
            }
        }

        Device (QGP2)
        {
            Name (_HID, "QCOM0688")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00804000,         // Address Base
                        0x00050000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026D,
                    }
                })
                Return (RBUF) /* \_SB_.QGP2._CRS.RBUF */
            }
        }

        Device (CSEC)
        {
            Name (_HID, "QCOM06A8")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (SOCP)
        {
            Name (_HID, "QCOM06DD")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.STOR, STOR)
        }

        Device (QCSP)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.SOCP, 
                \_SB.SPSS
            })
            Name (_HID, "QCOM0687")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.STOR, STOR)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (QCDB)
        {
            Name (_HID, "QCOM06DE")  // _HID: Hardware ID
            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                Return ("AGN00000")
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (SERB)
        {
            Name (_HID, "QCOM04B2")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (RMNT)
        {
            Name (_HID, "QCOM0695")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (MBRG)
        {
            Name (_HID, "QCOM0607")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (RMAT)
        {
            Name (_HID, "QCOM0608")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (DPLB)
        {
            Name (_HID, "QCOM0670")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (DSBY)
        {
            Name (_HID, "QCOM06CD")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Scope (\_SB.SERB)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x20) == 0x20))
                {
                    Return (Zero)
                }

                If ((((\_SB.PLST == Zero) || (\_SB.PLST == 0x02)) || (\_SB.PLST == 0x03)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Scope (\_SB.RMNT)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.MBRG)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.RMAT)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.DPLB)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.DSBY)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (SSVC)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.QDIG
            })
            Name (_HID, "QCOM06DB")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "ACPIQCOM06DB")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Name (HWNL, One)
        Device (HWN0)
        {
            Name (_HID, "QCOM0668")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.HWNL == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (HWNL, 0, NotSerialized)
            {
                Name (CFG0, Package (0x10)
                {
                    0x02, 
                    0x03, 
                    0x019B, 
                    0x14, 
                    Zero, 
                    Zero, 
                    One, 
                    One, 
                    0x02, 
                    0x02, 
                    One, 
                    One, 
                    One, 
                    0x03, 
                    0x06, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN0.HWNL.CFG0 */
            }
        }

        Scope (\_SB)
        {
            Device (WLTM)
            {
                Name (_HID, "QCOM06D5")  // _HID: Hardware ID
                Name (_CID, "QCOMFFE0")  // _CID: Compatible ID
                Alias (\_SB.PSUB, _SUB)
                Name (_DEP, Package (One)  // _DEP: Dependencies
                {
                    \_SB.PCI6
                })
            }
        }

        Device (SSGS)
        {
            Name (_HID, "QCOM06D8")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
        }

        Device (CAMP)
        {
            Name (_DEP, Package (0x06)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.PML0, 
                \_SB.ARPC, 
                \_SB.NSP0, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM0632")  // _HID: Hardware ID
            Name (_UID, 0x1B)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AC40000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC22000,         // Address Base
                        0x0000B400,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC4A000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC4B000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC4C000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC4D000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000012F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002AB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002AA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EB,
                    }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x001F
                        }
                    GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x001C
                        }
                })
                Return (RBUF) /* \_SB_.CAMP._CRS.RBUF */
            }
        }

        Device (CAMS)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0626")  // _HID: Hardware ID
            Name (_UID, 0x15)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (CAMF)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0606")  // _HID: Hardware ID
            Name (_UID, 0x1A)  // _UID: Unique ID
            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                If ((BDID () == Zero))
                {
                    Return ("230217AA_AZW")
                }
                Else
                {
                    Return ("230217AA_LVI")
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (CAMI)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0699")  // _HID: Hardware ID
            Name (_UID, 0x1C)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                If ((BCID () == One))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (CAMT)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM06CE")  // _HID: Hardware ID
            Name (_UID, 0x1D)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (CAMU)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM06CF")  // _HID: Hardware ID
            Name (_UID, 0x1E)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (FLSH)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.CAMP
            })
            Name (_HID, "QCOM0627")  // _HID: Hardware ID
            Name (_UID, 0x19)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.FLSH._CRS.RBUF */
            }
        }

        Device (MPCS)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.CAMP
            })
            Name (_HID, "QCOM0698")  // _HID: Hardware ID
            Name (_UID, 0x18)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AC65000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC67000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC5A000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC5C000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF5000,         // Address Base
                        0x00000200,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF5200,         // Address Base
                        0x00000200,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF5400,         // Address Base
                        0x00000200,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF5600,         // Address Base
                        0x00000200,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001E0,
                    }
                })
                Return (RBUF) /* \_SB_.MPCS._CRS.RBUF */
            }
        }

        Device (JPGE)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.CAMP, 
                \_SB.MMU0
            })
            Name (_HID, "QCOM0633")  // _HID: Hardware ID
            Name (_UID, 0x17)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AC4E000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC52000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FB,
                    }
                })
                Return (RBUF) /* \_SB_.JPGE._CRS.RBUF */
            }
        }

        Device (VFE0)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.PEP0, 
                \_SB.CAMP, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM0625")  // _HID: Hardware ID
            Name (_UID, 0x16)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001ED,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000013F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000360,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F5,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000188,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000319,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000318,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F4,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000187,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000317,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000316,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F1,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F3,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F2,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002A1,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002A0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031A,
                    }
                    GpioInt (Edge, ActiveBoth, Shared, PullNone, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x001F
                        }
                })
                Return (RBUF) /* \_SB_.VFE0._CRS.RBUF */
            }
        }

        Device (SEN2)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.SCSS, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0693")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "QCOM0667")  // _CID: Compatible ID
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x0,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x1,
                    PLD_Panel              = "TOP",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "LEFT",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }

        Device (SEN3)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.SCSS, 
                \_SB.ARPC, 
                \_SB.SEN2
            })
            Name (_HID, "QCOM0694")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "QCOM0667")  // _CID: Compatible ID
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x0,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x0,
                    PLD_Panel              = "TOP",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "LEFT",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }

        Device (LID0)
        {
            Name (_HID, "PNP0C0D" /* Lid Device */)  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.SCM0
            })
            Name (LIDB, One)
            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Return (LIDB) /* \_SB_.LID0.LIDB */
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If (\_SB.GIO0.GABL)
                {
                    \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                    Notify (\_SB.LID0, 0x80) // Status Change
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If (\_SB.GIO0.GABL)
                {
                    \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                    Notify (\_SB.LID0, 0x80) // Status Change
                }
            }
        }

        Device (SAR1)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.IC12, 
                \_SB.PEP0
            })
            Name (_HID, "QCOM06A5")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (\_SB.WWAN._STA ())
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0028, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0021
                        }
                })
                Return (RBUF) /* \_SB_.SAR1._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("7681541e-8827-4239-8d9d-36be7fe12542") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (Buffer (0x68)
                        {
                            /* 0000 */  0x10, 0x0A, 0x11, 0x21, 0x14, 0x00, 0x15, 0x00,  // ...!....
                            /* 0008 */  0x20, 0x20, 0x23, 0x01, 0x24, 0x44, 0x26, 0x00,  //   #.$D&.
                            /* 0010 */  0x27, 0x44, 0x28, 0x3D, 0x29, 0x04, 0x2A, 0x00,  // 'D(=).*.
                            /* 0018 */  0x2B, 0x00, 0x2C, 0x12, 0x2D, 0x0B, 0x30, 0x09,  // +.,.-.0.
                            /* 0020 */  0x31, 0x09, 0x32, 0x20, 0x33, 0x20, 0x34, 0x0C,  // 1.2 3 4.
                            /* 0028 */  0x35, 0x00, 0x36, 0x54, 0x37, 0x08, 0x40, 0x00,  // 5.6T7.@.
                            /* 0030 */  0x41, 0x00, 0x42, 0x00, 0x43, 0x00, 0x44, 0x00,  // A.B.C.D.
                            /* 0038 */  0x45, 0x05, 0x46, 0x00, 0x47, 0x00, 0x48, 0x00,  // E.F.G.H.
                            /* 0040 */  0x49, 0x00, 0x4A, 0x00, 0x4B, 0x00, 0x4C, 0x00,  // I.J.K.L.
                            /* 0048 */  0x4D, 0x00, 0x4E, 0x80, 0x4F, 0x0C, 0x50, 0x15,  // M.N.O.P.
                            /* 0050 */  0x51, 0x80, 0x52, 0x64, 0x53, 0x00, 0x54, 0x00,  // Q.RdS.T.
                            /* 0058 */  0x03, 0x0F, 0x05, 0x60, 0x06, 0x00, 0x07, 0x80,  // ...`....
                            /* 0060 */  0x08, 0x00, 0xFF, 0xFF, 0xFF, 0xFF               // ......
                        })
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (Buffer (One)
                        {
                             0x01                                             // .
                        })
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (SAR2)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.IC12, 
                \_SB.PEP0
            })
            Name (_HID, "QCOM06A6")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (\_SB.WWAN._STA ())
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00A1
                        }
                })
                Return (RBUF) /* \_SB_.SAR2._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("7681541e-8827-4239-8d9d-36be7fe12542") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (Buffer (0x68)
                        {
                            /* 0000 */  0x10, 0x0A, 0x11, 0x21, 0x14, 0x00, 0x15, 0x00,  // ...!....
                            /* 0008 */  0x20, 0x20, 0x23, 0x00, 0x24, 0x44, 0x26, 0x00,  //   #.$D&.
                            /* 0010 */  0x27, 0x44, 0x28, 0x3D, 0x29, 0x04, 0x2A, 0x00,  // 'D(=).*.
                            /* 0018 */  0x2B, 0x00, 0x2C, 0x12, 0x2D, 0x08, 0x30, 0x09,  // +.,.-.0.
                            /* 0020 */  0x31, 0x09, 0x32, 0x20, 0x33, 0x20, 0x34, 0x0C,  // 1.2 3 4.
                            /* 0028 */  0x35, 0x00, 0x36, 0x32, 0x37, 0x08, 0x40, 0x00,  // 5.627.@.
                            /* 0030 */  0x41, 0x00, 0x42, 0x00, 0x43, 0x00, 0x44, 0x00,  // A.B.C.D.
                            /* 0038 */  0x45, 0x05, 0x46, 0x00, 0x47, 0x00, 0x48, 0x00,  // E.F.G.H.
                            /* 0040 */  0x49, 0x00, 0x4A, 0x00, 0x4B, 0x00, 0x4C, 0x00,  // I.J.K.L.
                            /* 0048 */  0x4D, 0x00, 0x4E, 0x80, 0x4F, 0x0C, 0x50, 0x15,  // M.N.O.P.
                            /* 0050 */  0x51, 0x80, 0x52, 0x64, 0x53, 0x00, 0x54, 0x00,  // Q.RdS.T.
                            /* 0058 */  0x03, 0x0F, 0x05, 0x60, 0x06, 0x00, 0x07, 0x80,  // ...`....
                            /* 0060 */  0x08, 0x00, 0xFF, 0xFF, 0xFF, 0xFF               // ......
                        })
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (Buffer (One)
                        {
                             0x02                                             // .
                        })
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (SARM)
        {
            Name (_HID, "QCOM06E2")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
        }

        Device (AOCV)
        {
            Name (_HID, "QCOM06E3")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GIO0, 
                \_SB.QGP0
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0048
                        }
                    GpioIo (Shared, PullDown, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x003B
                        }
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0041
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x003C
                        }
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0045
                        }
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0042
                        }
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x003D
                        }
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x003E
                        }
                    GpioInt (Edge, ActiveHigh, SharedAndWake, PullDown, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x03C0
                        }
                    SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                        ControllerInitiated, 0x007A1200, ClockPolarityLow,
                        ClockPhaseFirst, "\\_SB.SP20",
                        0x00, ResourceConsumer, , Exclusive,
                        RawDataBuffer (0x07)  // Vendor Data
                        {
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                        })
                    SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                        ControllerInitiated, 0x00B71B00, ClockPolarityLow,
                        ClockPhaseFirst, "\\_SB.SP20",
                        0x00, ResourceConsumer, , Exclusive,
                        RawDataBuffer (0x07)  // Vendor Data
                        {
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                        })
                })
                Return (RBUF) /* \_SB_.AOCV._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((GGIV (0x48) == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (HPS0)
        {
            Name (_HID, "QCOM06D9")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((GGIV (0x48) == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Scope (\_SB.I2C9)
        {
            Name (ECI9, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0028, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2C9",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x09))
                {
                    H8DR = Arg1
                }
            }

            Mutex (CFMX, 0x00)
            OperationRegion (ECRW, GenericSerialBus, Zero, 0x0100)
            Field (ECRW, BufferAcc, NoLock, Preserve)
            {
                Connection (ECI9), 
                AccessAs (BufferAcc, AttribRawBytes (0x01)), 
                IC9R,   8, 
                AccessAs (BufferAcc, AttribRawBytes (0x04)), 
                IC9W,   8, 
                AccessAs (BufferAcc, AttribRawBytes (0x05)), 
                I9WW,   8
            }

            Name (ECRB, Buffer (0x0A)
            {
                /* 0000 */  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00                                       // ..
            })
            CreateByteField (ECRB, Zero, RSTA)
            CreateByteField (ECRB, One, RLEN)
            CreateByteField (ECRB, 0x02, ECR0)
            Name (ECWB, Buffer (0x0A)
            {
                /* 0000 */  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00                                       // ..
            })
            CreateByteField (ECWB, Zero, WSTA)
            CreateByteField (ECWB, One, WLEN)
            CreateByteField (ECWB, 0x02, ECW0)
            CreateByteField (ECWB, 0x03, ECW1)
            CreateByteField (ECWB, 0x04, ECW2)
            CreateByteField (ECWB, 0x05, ECW3)
            CreateByteField (ECWB, 0x06, ECW4)
            Method (ECMR, 1, NotSerialized)
            {
                If ((H8DR == Zero))
                {
                    Return (Zero)
                }

                Acquire (CFMX, 0xFFFF)
                WLEN = 0x04
                ECW0 = Zero
                ECW1 = (Arg0 & 0xFF)
                ECW2 = ((Arg0 >> 0x08) & 0xFF)
                ECW3 = One
                ECWB = IC9W = ECWB /* \_SB_.I2C9.ECWB */
                If ((WSTA == Zero))
                {
                    ECRB = IC9R /* \_SB_.I2C9.IC9R */
                }

                Release (CFMX)
                Return (ECR0) /* \_SB_.I2C9.ECR0 */
            }

            Method (ECMW, 2, NotSerialized)
            {
                If (H8DR)
                {
                    Acquire (CFMX, 0xFFFF)
                    WLEN = 0x05
                    ECW0 = One
                    ECW1 = (Arg0 & 0xFF)
                    ECW2 = ((Arg0 >> 0x08) & 0xFF)
                    ECW3 = One
                    ECW4 = Arg1
                    I9WW = ECWB /* \_SB_.I2C9.ECWB */
                    Release (CFMX)
                }
            }

            Method (ECRD, 1, NotSerialized)
            {
                If ((H8DR == Zero))
                {
                    Return (Zero)
                }

                Acquire (CFMX, 0xFFFF)
                WLEN = 0x04
                ECW0 = 0x02
                ECW1 = Arg0
                ECW2 = Zero
                ECW3 = One
                ECWB = IC9W = ECWB /* \_SB_.I2C9.ECWB */
                If ((WSTA == Zero))
                {
                    ECRB = IC9R /* \_SB_.I2C9.IC9R */
                }

                Release (CFMX)
                Return (ECR0) /* \_SB_.I2C9.ECR0 */
            }

            Method (ECWR, 2, NotSerialized)
            {
                If (H8DR)
                {
                    Acquire (CFMX, 0xFFFF)
                    WLEN = 0x05
                    ECW0 = 0x03
                    ECW1 = Arg0
                    ECW2 = Zero
                    ECW3 = One
                    ECW4 = Arg1
                    I9WW = ECWB /* \_SB_.I2C9.ECWB */
                    Release (CFMX)
                }
            }

            Method (ECWS, 3, NotSerialized)
            {
                If (H8DR)
                {
                    Acquire (CFMX, 0xFFFF)
                    Local1 = Arg2
                    While ((Local1 > One))
                    {
                        Local1 -= One
                        WLEN = 0x05
                        ECW0 = 0x03
                        ECW1 = Arg0
                        ECW2 = Zero
                        ECW3 = One
                        ECW4 = Arg1
                        ECWB = I9WW = ECWB /* \_SB_.I2C9.ECWB */
                        If ((WSTA == Zero))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    Release (CFMX)
                }
            }

            Method (QEVT, 0, NotSerialized)
            {
                If ((H8DR == Zero))
                {
                    Return (Zero)
                }

                Acquire (CFMX, 0xFFFF)
                ECW0 = 0xF0
                ECW1 = Zero
                ECW2 = Zero
                ECW3 = One
                ECWB = IC9W = ECWB /* \_SB_.I2C9.ECWB */
                If ((WSTA == Zero))
                {
                    ECRB = IC9R /* \_SB_.I2C9.IC9R */
                }

                Release (CFMX)
                Return (ECR0) /* \_SB_.I2C9.ECR0 */
            }

            Method (ECNT, 1, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == Zero))
                    {
                        If ((\_SB.I2C9.HKEY.MSCB == Zero))
                        {
                            \_SB.I2C9.ECWS (0x80, 0xBB, 0x03)
                            SCMS (0x21)
                            If (\_SB.I2C9.HKEY.MHKK (One, 0x00020000))
                            {
                                If (((\_SB.I2C9.ECRD (0xCA) & 0x40) == 0x40))
                                {
                                    \_SB.I2C9.HKEY.MHKQ (0x1012)
                                }
                            }
                        }

                        Return (Zero)
                    }
                    ElseIf ((_T_0 == One))
                    {
                        If ((\_SB.I2C9.HKEY.MSCB == Zero))
                        {
                            \_SB.I2C9.ECWS (0x80, 0x66, 0x03)
                        }

                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        SGOV (0xB0, One)
                        Sleep (0x0A)
                        \_SB.I2C9.ECWS (0x80, 0xAA, 0x03)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        \_SB.I2C9.ECWS (0x80, 0x55, 0x03)
                        SGOV (0xB0, Zero)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        \_SB.I2C9.ECWS (0x80, 0xBB, 0x03)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        \_SB.I2C9.ECWS (0x80, 0x66, 0x03)
                        Return (Zero)
                    }
                    Else
                    {
                        Return (0xFF)
                    }

                    Break
                }
            }

            Device (HKEY)
            {
                Name (_HID, EisaId ("LEN0268"))  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    ADBG ("HKEY _INI")
                    ADBG ("_INI0")
                    ADBG ("_INI1")
                }

                Method (MHKV, 0, NotSerialized)
                {
                    Return (0x0200)
                }

                Name (DHKC, Zero)
                Name (DHKB, One)
                Name (DHKH, Zero)
                Name (DHKW, Zero)
                Name (DHKS, Zero)
                Name (DHKD, Zero)
                Name (DHKN, 0x0808)
                Name (DHKE, Zero)
                Name (DHKF, 0x07FF0000)
                Name (DHKT, Zero)
                Name (DHWW, Zero)
                Name (DHDF, Zero)
                Mutex (XDHK, 0x00)
                Method (MHKA, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf ((Arg0 == One))
                    {
                        Return (0xFFFFFFFB)
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        Return (Zero)
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        Return (0x01FF0000)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKN, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf ((Arg0 == One))
                    {
                        Return (DHKN) /* \_SB_.I2C9.HKEY.DHKN */
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        Return (DHKE) /* \_SB_.I2C9.HKEY.DHKE */
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        Return (DHKF) /* \_SB_.I2C9.HKEY.DHKF */
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKK, 2, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf (DHKC)
                    {
                        If ((Arg0 == One))
                        {
                            Return ((DHKN & Arg1))
                        }
                        ElseIf ((Arg0 == 0x02))
                        {
                            Return ((DHKE & Arg1))
                        }
                        ElseIf ((Arg0 == 0x03))
                        {
                            Return ((DHKF & Arg1))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKM, 2, NotSerialized)
                {
                    Acquire (XDHK, 0xFFFF)
                    If ((Arg0 > 0x60))
                    {
                        Noop
                    }
                    ElseIf ((Arg0 <= 0x20))
                    {
                        Local0 = (One << Arg0--)
                        If ((Local0 & 0xFFFFFFFB))
                        {
                            If (Arg1)
                            {
                                DHKN |= Local0 /* \_SB_.I2C9.HKEY.DHKN */
                            }
                            Else
                            {
                                DHKN &= (Local0 ^ 0xFFFFFFFF)
                            }
                        }
                        Else
                        {
                            Noop
                        }
                    }
                    ElseIf ((Arg0 <= 0x40))
                    {
                        Noop
                    }
                    ElseIf ((Arg0 <= 0x60))
                    {
                        Arg0 -= 0x40
                        Local0 = (One << Arg0--)
                        If ((Local0 & 0x01FF0000))
                        {
                            If (Arg1)
                            {
                                DHKF |= Local0 /* \_SB_.I2C9.HKEY.DHKF */
                            }
                            Else
                            {
                                DHKF &= (Local0 ^ 0xFFFFFFFF)
                            }
                        }
                        Else
                        {
                            Noop
                        }
                    }

                    Release (XDHK)
                }

                Method (MHKS, 0, NotSerialized)
                {
                    Notify (\_SB.SLPB, 0x80) // Status Change
                }

                Method (MHKC, 1, NotSerialized)
                {
                    DHKC = Arg0
                }

                Method (MHKP, 0, NotSerialized)
                {
                    Acquire (XDHK, 0xFFFF)
                    If (DHWW)
                    {
                        Local1 = DHWW /* \_SB_.I2C9.HKEY.DHWW */
                        DHWW = Zero
                    }
                    ElseIf (DHDF)
                    {
                        Local1 = DHDF /* \_SB_.I2C9.HKEY.DHDF */
                        DHDF = Zero
                    }
                    ElseIf (DHKW)
                    {
                        Local1 = DHKW /* \_SB_.I2C9.HKEY.DHKW */
                        DHKW = Zero
                    }
                    ElseIf (DHKD)
                    {
                        Local1 = DHKD /* \_SB_.I2C9.HKEY.DHKD */
                        DHKD = Zero
                    }
                    ElseIf (DHKS)
                    {
                        Local1 = DHKS /* \_SB_.I2C9.HKEY.DHKS */
                        DHKS = Zero
                    }
                    ElseIf (DHKT)
                    {
                        Local1 = DHKT /* \_SB_.I2C9.HKEY.DHKT */
                        DHKT = Zero
                    }
                    Else
                    {
                        Local1 = DHKH /* \_SB_.I2C9.HKEY.DHKH */
                        DHKH = Zero
                    }

                    Release (XDHK)
                    Return (Local1)
                }

                Method (MHKE, 1, Serialized)
                {
                    DHKB = Arg0
                    Acquire (XDHK, 0xFFFF)
                    DHKH = Zero
                    DHKW = Zero
                    DHKS = Zero
                    DHKD = Zero
                    DHKT = Zero
                    DHWW = Zero
                    DHDF = Zero
                    Release (XDHK)
                }

                Method (MHKQ, 1, Serialized)
                {
                    If (DHKB)
                    {
                        If (DHKC)
                        {
                            Acquire (XDHK, 0xFFFF)
                            If ((Arg0 < 0x1000)){}
                            ElseIf ((Arg0 < 0x2000))
                            {
                                DHKH = Arg0
                            }
                            ElseIf ((Arg0 < 0x3000))
                            {
                                DHKW = Arg0
                            }
                            ElseIf ((Arg0 < 0x4000))
                            {
                                DHKS = Arg0
                            }
                            ElseIf ((Arg0 < 0x5000))
                            {
                                DHKD = Arg0
                            }
                            ElseIf ((Arg0 < 0x6000))
                            {
                                DHKH = Arg0
                            }
                            ElseIf ((Arg0 < 0x7000))
                            {
                                DHKT = Arg0
                            }
                            ElseIf ((Arg0 < 0x8000))
                            {
                                DHWW = Arg0
                            }
                            ElseIf ((Arg0 < 0x9000))
                            {
                                DHDF = Arg0
                            }
                            Else
                            {
                            }

                            Release (XDHK)
                            Notify (\_SB.I2C9.HKEY, 0x80) // Status Change
                        }
                        ElseIf ((Arg0 == 0x1004)){}
                    }
                }

                Method (MHKD, 0, NotSerialized)
                {
                }

                Method (MHQC, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (MHGC, 0, NotSerialized)
                {
                    Return (Zero)
                }

                Method (MHSC, 1, NotSerialized)
                {
                }

                Method (CKC4, 1, NotSerialized)
                {
                    Return (One)
                }

                Method (MHQE, 0, NotSerialized)
                {
                    Return (0xFF)
                }

                Method (MHGE, 0, NotSerialized)
                {
                    Return (0xFF)
                }

                Method (MHSE, 1, NotSerialized)
                {
                }

                Method (UAWO, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (MLCG, 1, NotSerialized)
                {
                    Local1 = GECB (0xC0, 0x04, 0x02)
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = Local1
                        If ((_T_0 == Zero))
                        {
                            Local0 = 0x00050200
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Local0 = 0x00050201
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Local0 = 0x00050202
                        }
                        Else
                        {
                            Local0 = 0x00050200
                        }

                        Break
                    }

                    Local1 = \_SB.I2C9.ECRD (0xCA)
                    If (KBBL){}
                    Else
                    {
                        Local0 &= ~(One << 0x12)
                    }

                    Local0 &= 0xFF9FFFFF
                    If (((Local1 & 0x08) == 0x08))
                    {
                        Local0 |= 0x00200000
                        If (((Local1 & 0x04) == 0x04))
                        {
                            Local0 |= 0x00400000
                        }
                        Else
                        {
                            Local0 &= 0xFFBFFFFF
                        }
                    }
                    Else
                    {
                        Local0 &= 0xFFDFFFFF
                    }

                    Return (Local0)
                }

                Method (MLCS, 1, NotSerialized)
                {
                    Local0 = Arg0
                    If (!(Local0 & 0x80000000))
                    {
                        If ((Arg0 & 0x00010000))
                        {
                            \_SB.I2C9.HKEY.MHKQ (0x6001)
                        }
                        Else
                        {
                            If (((Arg0 & 0x0F) == Zero))
                            {
                                WECB (0xC0, 0x04, 0x02, Zero)
                            }
                            ElseIf (((Arg0 & 0x0F) == One))
                            {
                                WECB (0xC0, 0x04, 0x02, One)
                            }
                            ElseIf (((Arg0 & 0x0F) == 0x02))
                            {
                                WECB (0xC0, 0x04, 0x02, 0x02)
                            }

                            If ((Local0 & 0x0100))
                            {
                                WECB (0xCA, 0x02, One, One)
                                If ((Local0 & 0x0200))
                                {
                                    WECB (0xCA, 0x03, One, One)
                                }
                                Else
                                {
                                    WECB (0xCA, 0x03, One, Zero)
                                }
                            }
                            Else
                            {
                                WECB (0xCA, 0x02, One, Zero)
                            }

                            If (\_SB.I2C9.HKEY.MHKK (One, 0x00020000))
                            {
                                \_SB.I2C9.HKEY.MHKQ (0x1012)
                            }
                        }
                    }

                    Return (Local0)
                }

                Method (DSSG, 1, NotSerialized)
                {
                    Local0 = (0x0400 | PDCI) /* \_SB_.PDCI */
                    Return (Local0)
                }

                Method (DSSS, 1, NotSerialized)
                {
                    PDCI |= Arg0
                }

                Method (SBSG, 1, NotSerialized)
                {
                }

                Method (SBSS, 1, NotSerialized)
                {
                }

                Method (PBLG, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (PBLS, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (PMSG, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (PMSS, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (ISSG, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (ISSS, 1, NotSerialized)
                {
                    ISCG = Arg0
                    Return (Zero)
                }

                Method (FFSG, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (FFSS, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (GMKS, 0, NotSerialized)
                {
                    Return (FNSC (0x02, Zero))
                }

                Method (SMKS, 1, NotSerialized)
                {
                    Return (FNSC (0x03, (Arg0 & 0x00010001)))
                }

                Method (GSKL, 1, NotSerialized)
                {
                    Return (FNSC (0x04, (Arg0 & 0x0F000000)))
                }

                Method (SSKL, 1, NotSerialized)
                {
                    Return (FNSC (0x05, (Arg0 & 0x0F00FFFF)))
                }

                Method (INSG, 1, NotSerialized)
                {
                    Local0 = IOEN /* \_SB_.IOEN */
                    Local0 |= (IOST << 0x07)
                    Local0 |= (IOCP << 0x08)
                    Local0 |= 0x10000000
                    Return (Local0)
                }

                Method (INSS, 1, NotSerialized)
                {
                    If ((Arg0 & 0x10000000))
                    {
                        If (IOCP)
                        {
                            Local0 = ((Arg0 & 0x80) >> 0x07)
                            If (!EZRC (Local0))
                            {
                                IOST = Local0
                            }
                        }

                        Return (Zero)
                    }

                    If ((IOCP && (Arg0 & One)))
                    {
                        IOEN = One
                    }
                    Else
                    {
                        IOEN = Zero
                        If (IOST)
                        {
                            If (!ISOC (Zero))
                            {
                                IOST = Zero
                            }
                        }
                    }

                    Return (Zero)
                }

                Method (GMMS, 1, NotSerialized)
                {
                    Local0 = 0x00040000
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (PMMD)
                        If ((_T_0 == Zero))
                        {
                            Local0 |= One
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Local0 |= 0x04
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Local0 |= 0x05
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Local0 |= 0x03
                        }
                        Else
                        {
                            Local0 |= One
                        }

                        Break
                    }

                    Return (Local0)
                }

                Method (GTMS, 1, NotSerialized)
                {
                    Local0 = 0x00010000
                    Local0 |= LVMD /* \_SB_.LVMD */
                    Return (Local0)
                }

                Method (GTCS, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Return (One)
                    }
                }

                Method (STCS, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Return (One)
                    }
                    ElseIf ((Arg0 == 0x0101))
                    {
                        Return (One)
                    }
                }

                Method (SSPI, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Local0 = One
                        Return (Local0)
                    }
                }

                Method (GCES, 1, NotSerialized)
                {
                    If ((GGIV (0xAE) == Zero))
                    {
                        Return (Zero)
                    }
                    Else
                    {
                        Return (One)
                    }
                }

                Method (FPSW, 1, NotSerialized)
                {
                    Return (Zero)
                }
            }

            Scope (\_SB.I2C9)
            {
                Device (LHKF)
                {
                    Name (_HID, EisaId ("LEN0131"))  // _HID: Hardware ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }
            }

            Method (INGO, 2, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == 0x03))
                    {
                        Local0 = \_SB.I2C9.ECRD (0xC5)
                        Local1 = \_SB.I2C9.ECRD (0xCF)
                        If ((Arg1 == One))
                        {
                            If (((Local0 & 0x80) != 0x80))
                            {
                                Local0 |= 0x80
                                \_SB.I2C9.ECWR (0xC5, Local0)
                            }

                            If (((Local1 & One) != One))
                            {
                                Local1 |= One
                                \_SB.I2C9.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                        Else
                        {
                            If (((Local0 & 0x80) != Zero))
                            {
                                Local0 &= ~0x80
                                \_SB.I2C9.ECWR (0xC5, Local0)
                            }

                            If (((Local1 & One) != Zero))
                            {
                                Local1 &= ~One
                                \_SB.I2C9.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Local1 = \_SB.I2C9.ECRD (0xCF)
                        If ((Arg1 == One))
                        {
                            If (((Local1 & One) != One))
                            {
                                Local1 |= One
                                \_SB.I2C9.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                        Else
                        {
                            If (((Local1 & One) != Zero))
                            {
                                Local1 &= ~One
                                \_SB.I2C9.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (0xFFFF)
                    }

                    Break
                }

                Return (Zero)
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (SBIG, 1, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    Return (SBID) /* \_SB_.SBID */
                }
                Else
                {
                    Return (Buffer (0x0100)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (ECKB)
        {
            Name (_HID, "ELAN06F0")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.IC22, 
                \_SB.PEP0
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0068, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC22",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0340
                        }
                })
                Return (RBUF) /* \_SB_.ECKB._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.ECKB._DSM._T_0 */
                    If ((_T_0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == One))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }
                                    Else
                                    {
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (One)
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Scope (\_SB.IC22)
        {
            Device (TPD0)
            {
                Name (_HID, "ELAN0674")  // _HID: Hardware ID
                Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
                Name (HID2, One)
                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.GIO0, 
                    \_SB.IC22, 
                    \_SB.PEP0
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If (((TDVI == 0x04F3) && (TDPI == 0x3193)))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.IC22",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0380
                            }
                    })
                    Return (RBUF) /* \_SB_.IC22.TPD0._CRS.RBUF */
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }
            }

            Device (TPD1)
            {
                Name (_HID, "SYNA8021")  // _HID: Hardware ID
                Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
                Name (HID2, 0x20)
                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.GIO0, 
                    \_SB.IC22, 
                    \_SB.PEP0
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If (((TDVI == 0x06CB) && (TDPI == 0xCE5C)))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.IC22",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0380
                            }
                    })
                    Return (RBUF) /* \_SB_.IC22.TPD1._CRS.RBUF */
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }
            }
        }

        OperationRegion (CP35, SystemMemory, 0x03D23000, 0x20)
        Field (CP35, DWordAcc, NoLock, Preserve)
        {
            PI1C,   32, 
            PIN1,   32, 
            PI1N,   32, 
            PI1S,   32
        }

        OperationRegion (CP36, SystemMemory, 0x03D24000, 0x20)
        Field (CP36, DWordAcc, NoLock, Preserve)
        {
            PI2C,   32, 
            PIN2,   32, 
            PI2N,   32, 
            PI2S,   32
        }

        OperationRegion (CP41, SystemMemory, 0x03529000, 0x20)
        Field (CP41, DWordAcc, NoLock, Preserve)
        {
            PI3C,   32, 
            PIN3,   32, 
            PI3N,   32, 
            PI3S,   32
        }

        OperationRegion (CP42, SystemMemory, 0x0352A000, 0x20)
        Field (CP42, DWordAcc, NoLock, Preserve)
        {
            PI4C,   32, 
            PIN4,   32, 
            PI4N,   32, 
            PI4S,   32
        }

        OperationRegion (CP87, SystemMemory, 0x0F157000, 0x20)
        Field (CP87, DWordAcc, NoLock, Preserve)
        {
            PI5C,   32, 
            PIN5,   32, 
            PI5N,   32, 
            PI5S,   32
        }

        OperationRegion (CP88, SystemMemory, 0x0F158000, 0x20)
        Field (CP88, DWordAcc, NoLock, Preserve)
        {
            PI6C,   32, 
            PIN6,   32, 
            PI6N,   32, 
            PI6S,   32
        }

        OperationRegion (CP89, SystemMemory, 0x0F159000, 0x20)
        Field (CP89, DWordAcc, NoLock, Preserve)
        {
            PI7C,   32, 
            PIN7,   32, 
            PI7N,   32, 
            PI7S,   32
        }

        OperationRegion (CP90, SystemMemory, 0x0F15A000, 0x20)
        Field (CP90, DWordAcc, NoLock, Preserve)
        {
            PI8C,   32, 
            PIN8,   32, 
            PI8N,   32, 
            PI8S,   32
        }

        Method (_BID, 0, Serialized)
        {
            Name (NBID, Zero)
            Name (GPI1, Zero)
            Name (GPI2, Zero)
            Name (GPI3, Zero)
            Name (GPI4, Zero)
            GPI1 = PIN1 /* \_SB_.PIN1 */
            GPI2 = PIN2 /* \_SB_.PIN2 */
            GPI3 = PIN3 /* \_SB_.PIN3 */
            GPI4 = PIN4 /* \_SB_.PIN4 */
            NBID = (GPI1 | GPI2 <<= One)
            NBID |= GPI3 <<= 0x02
            NBID |= GPI4 <<= 0x03
            Return (NBID) /* \_SB_._BID.NBID */
        }

        Method (BSID, 0, Serialized)
        {
            Name (NBID, Zero)
            Name (GPI1, Zero)
            Name (GPI2, Zero)
            GPI1 = PIN1 /* \_SB_.PIN1 */
            GPI2 = PIN2 /* \_SB_.PIN2 */
            NBID = (GPI1 | GPI2 <<= One)
            Return (NBID) /* \_SB_.BSID.NBID */
        }

        Method (BREV, 0, Serialized)
        {
            Name (NBID, Zero)
            Name (GPI3, Zero)
            Name (GPI4, Zero)
            GPI3 = PIN3 /* \_SB_.PIN3 */
            GPI4 = PIN4 /* \_SB_.PIN4 */
            NBID = (GPI3 | GPI4 <<= One)
            Return (NBID) /* \_SB_.BREV.NBID */
        }

        Method (BCID, 0, Serialized)
        {
            Name (NBID, Zero)
            Name (GPI7, Zero)
            Name (GPI8, Zero)
            GPI7 = PIN7 /* \_SB_.PIN7 */
            GPI8 = PIN8 /* \_SB_.PIN8 */
            NBID = (GPI8 | GPI7 <<= One)
            Return (NBID) /* \_SB_.BCID.NBID */
        }

        Method (BDID, 0, Serialized)
        {
            Name (NBID, Zero)
            Name (GPI5, Zero)
            Name (GPI6, Zero)
            GPI5 = PIN5 /* \_SB_.PIN5 */
            GPI6 = PIN6 /* \_SB_.PIN6 */
            NBID = (GPI6 | GPI5) /* \_SB_.BDID.GPI5 */
            Return (NBID) /* \_SB_.BDID.NBID */
        }

        Name (HPDB, Zero)
        Name (HPDS, Buffer (One)
        {
             0x00                                             // .
        })
        Name (PINA, Zero)
        Name (DPPN, 0x0D)
        Name (CCST, Buffer (One)
        {
             0x02                                             // .
        })
        Name (PORT, Buffer (One)
        {
             0x02                                             // .
        })
        Name (HIRQ, Buffer (One)
        {
             0x00                                             // .
        })
        Name (USBC, Buffer (One)
        {
             0x0B                                             // .
        })
        Name (MUXC, Buffer (One)
        {
             0x00                                             // .
        })
        Name (UPCI, Package (0x04)
        {
            Zero, 
            0xFF, 
            Zero, 
            Zero
        })
        Name (PLDI, Buffer (0x10)
        {
            /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
        })
        Device (URS0)
        {
            Name (_HID, "QCOM068B")  // _HID: Hardware ID
            Name (_CID, Package (0x02)  // _CID: Compatible ID
            {
                "PNP0CA1", 
                "QCOMFFE1"
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A600000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Device (USB0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000343,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000344,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000028F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020E,
                    }
                })
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x0,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }

                    Device (PRT2)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x0,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC0)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS0.USB0._DSM._T_0 */
                        If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x1D                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == 0x02))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x03))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x04))
                                {
                                    Return (0x02)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS0.USB0.PHYC.CFG0 */
                }
            }

            Device (UFN0)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x0,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000343,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000344,
                    }
                })
                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC0)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS0.UFN0._DSM._T_0 */
                        If ((_T_0 == ToUUID ("fe56cfeb-49d5-4378-a8a2-2978dbe54ad2") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == One))
                                {
                                    Return (0x20)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        ElseIf ((_T_0 == ToUUID ("18de299f-9476-4fc9-b43b-8aeb713ed751") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_3 = ToInteger (Arg2)
                                If ((_T_3 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_4 = ToInteger (Arg1)
                                        If ((_T_4 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_3 == One))
                                {
                                    Return (0x39)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS0.UFN0.PHYC.CFG0 */
                }
            }
        }

        Device (URS1)
        {
            Name (_HID, "QCOM068C")  // _HID: Hardware ID
            Name (_CID, Package (0x02)  // _CID: Compatible ID
            {
                "PNP0CA1", 
                "QCOMFFE1"
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A800000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Device (USB1)
            {
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x0000034A,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000034B,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000028D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020C,
                    }
                })
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x1,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }

                    Device (PRT2)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x1,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }
                }

                Name (STVL, 0x0F)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (STVL) /* \_SB_.URS1.USB1.STVL */
                }

                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC1)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS1.USB1._DSM._T_0 */
                        If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x1D                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == 0x02))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x03))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x04))
                                {
                                    Return (0x02)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {
                }

                Method (REMD, 0, NotSerialized)
                {
                    STVL = Zero
                    Notify (\_SB.URS1.USB1, One) // Device Check
                }

                Method (ADDD, 0, NotSerialized)
                {
                    STVL = 0x0F
                    Notify (\_SB.URS1.USB1, One) // Device Check
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS1.USB1.PHYC.CFG0 */
                }
            }

            Device (UFN1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT1)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            One, 
                            0x09, 
                            Zero, 
                            Zero
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "BACK",
                                PLD_VerticalPosition   = "CENTER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "VERTICALRECTANGLE",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x1,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0,
                                PLD_VerticalOffset     = 0xFFFF,
                                PLD_HorizontalOffset   = 0xFFFF)

                        })
                    }
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x0000034A,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000034B,
                    }
                })
                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC1)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS1.UFN1._DSM._T_0 */
                        If ((_T_0 == ToUUID ("fe56cfeb-49d5-4378-a8a2-2978dbe54ad2") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == One))
                                {
                                    Return (0x20)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        ElseIf ((_T_0 == ToUUID ("18de299f-9476-4fc9-b43b-8aeb713ed751") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_3 = ToInteger (Arg2)
                                If ((_T_3 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_4 = ToInteger (Arg1)
                                        If ((_T_4 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_3 == One))
                                {
                                    Return (0x39)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS1.UFN1.PHYC.CFG0 */
                }
            }
        }

        Device (USB2)
        {
            Name (_HID, "QCOM06A1")  // _HID: Hardware ID
            Name (_CID, "PNP0D15" /* XHCI USB Controller without debug */)  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A400000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x000000A5,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x000000A2,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000210,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x000000A6,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x000000A7,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000211,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000283,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000284,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000285,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000286,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000287,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000288,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000289,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x0000028A,
                }
            })
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.USB2._DSM._T_0 */
                    If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x1D                                             // .
                                        })
                                        Break
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x01                                             // .
                                        })
                                        Break
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                Return (0x02)
                                Break
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                        Break
                    }

                    Break
                }
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Device (MP0)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }

                Device (MP1)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }

                Device (MP2)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }

                Device (MP3)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }

                Device (MP0S)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }

                Device (MP1S)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UPCI)
                    }

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.PLDI)
                    }
                }
            }

            Name (STVL, 0x0F)
            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
            }

            Method (REMD, 0, NotSerialized)
            {
                STVL = Zero
                Notify (\_SB.USB2, One) // Device Check
            }

            Method (ADDD, 0, NotSerialized)
            {
                STVL = 0x0F
                Notify (\_SB.USB2, One) // Device Check
            }

            Method (PHYC, 0, NotSerialized)
            {
                Name (CFG0, Package (0x00){})
                Return (CFG0) /* \_SB_.USB2.PHYC.CFG0 */
            }
        }

        Name (SUPP, Zero)
        Name (CTRL, Zero)
        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            If ((Arg0 == ToUUID ("23a0d13a-26ab-486c-9c5f-0ffa525a575a") /* USB4 Capabilities */))
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                SUPP = CDW2 /* \_SB_._OSC.CDW2 */
                CTRL = CDW3 /* \_SB_._OSC.CDW3 */
                CTRL &= 0x0F
                If ((Arg1 != One))
                {
                    CDW1 |= 0x08
                }

                If ((CDW3 != CTRL))
                {
                    CDW1 |= 0x10
                }

                CDW3 = CTRL /* \_SB_.CTRL */
                Return (Arg3)
            }
            Else
            {
                CDW1 |= 0x04
                Return (Arg3)
            }
        }

        Device (UBF0)
        {
            Name (_HID, "QCOM06D1")  // _HID: Hardware ID
            Name (_CID, "ACPI0015" /* USB4 host interface device */)  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_S0W, Zero)  // _S0W: S0 Device Wake State
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x15640000,         // Address Base
                    0x000BFFFF,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x00000373,
                }
            })
        }

        Device (UBF1)
        {
            Name (_HID, "QCOM06D2")  // _HID: Hardware ID
            Name (_CID, "ACPI0015" /* USB4 host interface device */)  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_S0W, Zero)  // _S0W: S0 Device Wake State
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x15740000,         // Address Base
                    0x000BFFFF,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x0000036C,
                }
            })
        }

        Device (UCSI)
        {
            Name (_HID, EisaId ("USBC000"))  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0CA0"))  // _CID: Compatible ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_DDN, "USB Type-C")  // _DDN: DOS Device Name
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.ABD, 
                \_SB.PMGK, 
                \_SB.UCS0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                VERS = 0x0100
                CCI = Zero
                MSGI = Zero
                If ((\_SB.PMGK.LKUP > Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Device (UCN0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x0,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x0,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    One, 
                    0x09, 
                    Zero, 
                    Zero
                })
            }

            Device (UCN1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "BACK",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "LEFT",
                        PLD_Shape              = "VERTICALRECTANGLE",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x0,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0,
                        PLD_VerticalOffset     = 0xFFFF,
                        PLD_HorizontalOffset   = 0xFFFF)

                })
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    One, 
                    0x09, 
                    Zero, 
                    Zero
                })
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x808A0000,         // Address Base
                    0x00000030,         // Address Length
                    )
            })
            OperationRegion (USBC, SystemMemory, 0x808A0000, 0x30)
            Field (USBC, ByteAcc, Lock, Preserve)
            {
                VERS,   16, 
                RESV,   16, 
                CCI,    32, 
                CTRL,   64, 
                MSGI,   128, 
                MSGO,   128
            }

            Name (BUFF, Buffer (0x32){})
            CreateField (BUFF, Zero, 0x08, BSTA)
            CreateField (BUFF, 0x08, 0x08, BSIZ)
            CreateField (BUFF, 0x10, 0x10, BVER)
            CreateField (BUFF, 0x30, 0x20, BCCI)
            CreateField (BUFF, 0x50, 0x40, BCTL)
            CreateField (BUFF, 0x90, 0x80, BMGI)
            CreateField (BUFF, 0x0110, 0x80, BMGO)
            Method (OPMW, 0, NotSerialized)
            {
                BCTL = CTRL /* \_SB_.UCSI.CTRL */
                BMGO = MSGO /* \_SB_.UCSI.MSGO */
                \_SB.PMGK.UCSI = BUFF /* \_SB_.UCSI.BUFF */
                Return (Zero)
            }

            Method (OPMR, 0, NotSerialized)
            {
                BUFF = \_SB.PMGK.UCSI
                VERS = BVER /* \_SB_.UCSI.BVER */
                CCI = BCCI /* \_SB_.UCSI.BCCI */
                MSGI = BMGI /* \_SB_.UCSI.BMGI */
                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("6f8398c2-7ca4-11e4-ad36-631042b5008f") /* Unknown UUID */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (OPMW ())
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (OPMR ())
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Zero)
                        }

                        Break
                    }
                }
            }
        }

        Device (UCS0)
        {
            Name (_HID, "QCOM06A4")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE5")  // _CID: Compatible ID
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x03)))
                {
                    Return ("QRDR8280")
                }
                Else
                {
                    Return (\_SB.PSUB)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (CRS0, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x808A0040,         // Address Base
                        0x00000020,         // Address Length
                        )
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A6
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A5
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A4
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A7
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0031
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0030
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x002F
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0032
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0065
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x001A
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x001B
                        }
                    I2cSerialBusV2 (0x0008, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC22",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x000C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC22",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                Name (CRS1, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x808A0040,         // Address Base
                        0x00000020,         // Address Length
                        )
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A6
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A5
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A4
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x00A7
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0031
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0030
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x002F
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0032
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0065
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x001A
                        }
                    GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x001B
                        }
                })
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x03)))
                {
                    Return (CRS0) /* \_SB_.UCS0._CRS.CRS0 */
                }
                Else
                {
                    Return (CRS1) /* \_SB_.UCS0._CRS.CRS1 */
                }
            }

            OperationRegion (USBC, SystemMemory, 0x808A0040, 0x20)
            Field (USBC, ByteAcc, Lock, Preserve)
            {
                INFO,   8, 
                UPDT,   8, 
                CCX0,   8, 
                MUX0,   8, 
                RES0,   8, 
                VID0,   16, 
                SID0,   16, 
                SVS0,   64, 
                CCX1,   8, 
                MUX1,   8, 
                RES1,   8, 
                VID1,   16, 
                SID1,   16, 
                SVS1,   64
            }

            Name (PORT, Buffer (0x20)
            {
                /* 0000 */  0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            CreateByteField (PORT, Zero, EINF)
            CreateByteField (PORT, One, EUPD)
            CreateByteField (PORT, 0x02, ECC0)
            CreateByteField (PORT, 0x03, EMX0)
            CreateWordField (PORT, 0x05, EVI0)
            CreateWordField (PORT, 0x07, ESI0)
            CreateQWordField (PORT, 0x09, ESV0)
            CreateByteField (PORT, 0x11, ECC1)
            CreateByteField (PORT, 0x12, EMX1)
            CreateWordField (PORT, 0x14, EVI1)
            CreateWordField (PORT, 0x16, ESI1)
            CreateQWordField (PORT, 0x18, ESV1)
            Method (USBW, 0, NotSerialized)
            {
                EUPD = UPDT /* \_SB_.UCS0.UPDT */
                Notify (\_SB.PMGK, 0xF0) // Hardware-Specific
                Return (Zero)
            }

            Method (USBR, 0, NotSerialized)
            {
                INFO = EINF /* \_SB_.UCS0.EINF */
                UPDT = EUPD /* \_SB_.UCS0.EUPD */
                CCX0 = ECC0 /* \_SB_.UCS0.ECC0 */
                MUX0 = EMX0 /* \_SB_.UCS0.EMX0 */
                RES0 = Zero
                VID0 = EVI0 /* \_SB_.UCS0.EVI0 */
                SID0 = ESI0 /* \_SB_.UCS0.ESI0 */
                SVS0 = ESV0 /* \_SB_.UCS0.ESV0 */
                CCX1 = ECC1 /* \_SB_.UCS0.ECC1 */
                MUX1 = EMX1 /* \_SB_.UCS0.EMX1 */
                RES1 = Zero
                VID1 = EVI1 /* \_SB_.UCS0.EVI1 */
                SID1 = ESI1 /* \_SB_.UCS0.ESI1 */
                SVS1 = ESV1 /* \_SB_.UCS0.ESV1 */
                Notify (UCS0, 0xA0) // Device-Specific
                Return (Zero)
            }
        }

        Device (MPA)
        {
            Name (_HID, "QCOM04B4")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MPA1)
        {
            Name (_HID, "QCOM04B5")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBJ0)
        {
            Name (_HID, "QCOM04B6")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBJ1)
        {
            Name (_HID, "QCOM04B7")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBJ2)
        {
            Name (_HID, "QCOM04B8")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBJ3)
        {
            Name (_HID, "QCOM04B9")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBS0)
        {
            Name (_HID, "QCOM04BA")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBS1)
        {
            Name (_HID, "QCOM04BB")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBS2)
        {
            Name (_HID, "QCOM04BC")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBS3)
        {
            Name (_HID, "QCOM04BD")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MSKN)
        {
            Name (_HID, "QCOM04BE")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MJCT)
        {
            Name (_HID, "QCOM04BF")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Device (MBCL)
        {
            Name (_HID, "QCOM06D4")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((((\_SB.PSUB == "MTP08280") && (\_SB.PLST == One)) || ((
                    \_SB.PSUB == "QRD08280") && (\_SB.PLST == One))) || ((\_SB.PSUB == "CDP08280") && (\_SB.PLST == Zero))))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        ThermalZone (TZ51)
        {
            Name (_HID, "QCOM04C0")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MPA
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ51.TPSV)
            }

            Name (TCRT, 0x0F5A)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ51.TCRT)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ51.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ51.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ51.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MPA
                })
            }
        }

        ThermalZone (TZ52)
        {
            Name (_HID, "QCOM04C1")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MPA1
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ52.TPSV)
            }

            Name (TCRT, 0x0F5A)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ52.TCRT)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ52.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ52.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ52.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MPA1
                })
            }
        }

        ThermalZone (TZ53)
        {
            Name (_HID, "QCOM04C2")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBJ0
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MBJ0
                })
            }
        }

        ThermalZone (TZ54)
        {
            Name (_HID, "QCOM04C3")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBJ1
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MBJ1
                })
            }
        }

        ThermalZone (TZ55)
        {
            Name (_HID, "QCOM04C4")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBJ2
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MBJ2
                })
            }
        }

        ThermalZone (TZ56)
        {
            Name (_HID, "QCOM04C5")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBJ3
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MBJ3
                })
            }
        }

        ThermalZone (TZ58)
        {
            Name (_HID, "QCOM0663")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBS1
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ58.TPSV)
            }

            Name (TCRT, 0x0F5A)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ58.TCRT)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ58.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ58.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ58.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.MBS1, 
                    \_SB.ADC1
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        ThermalZone (TZ59)
        {
            Name (_HID, "QCOM0664")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBS2
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ59.TPSV)
            }

            Name (TCRT, 0x0F5A)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ59.TCRT)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ59.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ59.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ59.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.MBS2, 
                    \_SB.ADC1
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        ThermalZone (TZ60)
        {
            Name (_HID, "QCOM04CC")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MJCT
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MJCT
                })
            }
        }

        ThermalZone (TZ61)
        {
            Name (_HID, "QCOM0661")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.MSKN, 
                \_SB.MJCT
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ61.TPSV)
            }

            Name (TCRT, 0x0F5A)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ61.TCRT)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ61.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ61.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ61.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.MSKN, 
                    \_SB.ADC1
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        ThermalZone (TZ62)
        {
            Name (_HID, "QCOM04CB")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MJCT
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.MJCT
                })
            }
        }

        Device (AGR0)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Name (_PUR, Package (0x02)  // _PUR: Processor Utilization Request
            {
                One, 
                Zero
            })
            Method (_OST, 3, NotSerialized)  // _OST: OSPM Status Indication
            {
                \_SB.PEP0.ROST = Arg2
            }
        }

        ThermalZone (TZ0)
        {
            Name (_HID, "QCOM0658")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ0.TTSP)
            }
        }

        ThermalZone (TZ1)
        {
            Name (_HID, "QCOM0658")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ1.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ1.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ1.TTC2)
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ1.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ2)
        {
            Name (_HID, "QCOM0659")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ2.TTSP)
            }
        }

        ThermalZone (TZ3)
        {
            Name (_HID, "QCOM0659")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ3.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ3.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ3.TTC2)
            }

            Name (TTSP, One)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ3.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ5)
        {
            Name (_HID, "QCOM0691")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.GPU0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ5.TPSV)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ5.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ5.TTC2)
            }

            Name (TTSP, 0x02)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ5.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ6)
        {
            Name (_HID, "QCOM06B7")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ6.TTSP)
            }
        }

        ThermalZone (TZ7)
        {
            Name (_HID, "QCOM06C4")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ7.TTSP)
            }
        }

        ThermalZone (TZ8)
        {
            Name (_HID, "QCOM06C5")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ8.TTSP)
            }
        }

        ThermalZone (TZ9)
        {
            Name (_HID, "QCOM06C6")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ9.TTSP)
            }
        }

        ThermalZone (TZ10)
        {
            Name (_HID, "QCOM06B6")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ10.TTSP)
            }
        }

        ThermalZone (TZ11)
        {
            Name (_HID, "QCOM06BF")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.CSW0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ11.TPSV)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ11.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ11.TTC2)
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ11.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ12)
        {
            Name (_HID, "QCOM06C0")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ12.TTSP)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ13)
        {
            Name (_HID, "QCOM0657")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x04)  // _TZD: Thermal Zone Devices
            {
                \_SB.GPU0, 
                \_SB.WLTM, 
                \_SB.CSW0, 
                \_SB.MBCL
            })
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (0x0DCA)
            }

            Name (_TC1, One)  // _TC1: Thermal Constant 1
            Name (_TC2, 0x05)  // _TC2: Thermal Constant 2
            Name (_TSP, 0x14)  // _TSP: Thermal Sampling Period
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.BCL1
                })
            }
        }

        ThermalZone (TZ14)
        {
            Name (_HID, "QCOM06D6")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.DMMY
            })
            Name (TPSV, 0x0DCA)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ14.TPSV)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ14.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ14.TTC2)
            }

            Name (TTSP, 0x0F)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ14.TTSP)
            }

            Method (_TFP, 0, NotSerialized)  // _TFP: Thermal Fast Sampling Period
            {
                Return (\_SB.TZ14.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ15)
        {
            Name (_HID, "QCOM06C8")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00C0
                        }
                })
                Return (RBUF) /* \_SB_.TZ15._CRS.RBUF */
            }

            Name (_TZD, Package (0x04)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLUS.CPU0, 
                \_SB.SYSM.CLUS.CPU1, 
                \_SB.SYSM.CLUS.CPU2, 
                \_SB.SYSM.CLUS.CPU3
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ15.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ15.TCRT)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ15.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ15.TTC2)
            }

            Name (_TSP, One)  // _TSP: Thermal Sampling Period
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ15._DSM._T_0 */
                    If ((_T_0 == ToUUID ("c2d42c4b-e25e-471c-8a4e-290aac3a29a3") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = Arg2
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = Arg1
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                \_SB.TZ15.TPSV = DerefOf (Arg3 [Zero])
                                \_SB.TZ15.TCRT = DerefOf (Arg3 [One])
                                \_SB.TZ15.TTC2 = DerefOf (Arg3 [0x02])
                                \_SB.TZ15.TTC1 = Zero
                                Notify (\_SB.TZ15, 0x81) // Thermal Trip Point Change
                                Return (\_SB.TZ15.TPSV)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ16)
        {
            Name (_HID, "QCOM06C9")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0100
                        }
                })
                Return (RBUF) /* \_SB_.TZ16._CRS.RBUF */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ16.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ16.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ16.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ16.TTC2)
            }

            Name (_TSP, One)  // _TSP: Thermal Sampling Period
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ16._DSM._T_0 */
                    If ((_T_0 == ToUUID ("c2d42c4b-e25e-471c-8a4e-290aac3a29a3") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = Arg2
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = Arg1
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                \_SB.TZ16.TPSV = DerefOf (Arg3 [Zero])
                                \_SB.TZ16.TCRT = DerefOf (Arg3 [One])
                                \_SB.TZ16.TTC2 = DerefOf (Arg3 [0x02])
                                \_SB.TZ16.TTC1 = Zero
                                Notify (\_SB.TZ16, 0x81) // Thermal Trip Point Change
                                Return (\_SB.TZ16.TPSV)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ17)
        {
            Name (_HID, "QCOM06CA")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0140
                        }
                })
                Return (RBUF) /* \_SB_.TZ17._CRS.RBUF */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.GPU0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ17.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ17.TCRT)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ17.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ17.TTC2)
            }

            Name (_TSP, One)  // _TSP: Thermal Sampling Period
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ17._DSM._T_0 */
                    If ((_T_0 == ToUUID ("c2d42c4b-e25e-471c-8a4e-290aac3a29a3") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = Arg2
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = Arg1
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                \_SB.TZ17.TPSV = DerefOf (Arg3 [Zero])
                                \_SB.TZ17.TCRT = DerefOf (Arg3 [One])
                                \_SB.TZ17.TTC2 = DerefOf (Arg3 [0x02])
                                \_SB.TZ17.TTC1 = Zero
                                Notify (\_SB.TZ17, 0x81) // Thermal Trip Point Change
                                Return (\_SB.TZ17.TPSV)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ18)
        {
            Name (_HID, "QCOM06CB")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0180
                        }
                })
                Return (RBUF) /* \_SB_.TZ18._CRS.RBUF */
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.WLTM, 
                \_SB.CSW0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ18.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ18.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ18.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ18.TTC2)
            }

            Name (_TSP, One)  // _TSP: Thermal Sampling Period
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ18._DSM._T_0 */
                    If ((_T_0 == ToUUID ("c2d42c4b-e25e-471c-8a4e-290aac3a29a3") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = Arg2
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = Arg1
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                \_SB.TZ18.TPSV = DerefOf (Arg3 [Zero])
                                \_SB.TZ18.TCRT = DerefOf (Arg3 [One])
                                \_SB.TZ18.TTC2 = DerefOf (Arg3 [0x02])
                                \_SB.TZ18.TTC1 = Zero
                                Notify (\_SB.TZ18, 0x81) // Thermal Trip Point Change
                                Return (\_SB.TZ18.TPSV)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ20)
        {
            Name (_HID, "QCOM06D7")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x03)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0, 
                \_SB.CSW0
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ99)
        {
            Name (_HID, "QCOM065A")  // _HID: Hardware ID
            Name (_UID, 0x64)  // _UID: Unique ID
            Name (_TZD, Package (0x0E)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLUS.CPU0, 
                \_SB.SYSM.CLUS.CPU1, 
                \_SB.SYSM.CLUS.CPU2, 
                \_SB.SYSM.CLUS.CPU3, 
                \_SB.SYSM.CLUS.CPU4, 
                \_SB.SYSM.CLUS.CPU5, 
                \_SB.SYSM.CLUS.CPU6, 
                \_SB.SYSM.CLUS.CPU7, 
                \_SB.PEP0, 
                \_SB.GPU0.MON0, 
                \_SB.GPU0, 
                \_SB.WLTM, 
                \_SB.PMBM, 
                \_SB.CSW0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ99.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ99.TCRT)
            }

            Name (TTC1, 0x04)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ99.TTC1)
            }

            Name (TTC2, 0x03)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ99.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ99.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ31)
        {
            Name (_HID, "QCOM065D")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ31.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ31.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ31.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ31.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ32)
        {
            Name (_HID, "QCOM065E")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ32.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ32.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ32.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ32.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ33)
        {
            Name (_HID, "QCOM065F")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E2E)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ33.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ33.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ33.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ33.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ34)
        {
            Name (_HID, "QCOM0660")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ34.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ34.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ34.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ34.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ35)
        {
            Name (_HID, "QCOM0661")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ35.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ35.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ35.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ35.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ40)
        {
            Name (_HID, "QCOM0662")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0CEE)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ40.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, 0x02)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ40.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ40.TTC2)
            }

            Name (TTSP, 0x64)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ40.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ41)
        {
            Name (_HID, "QCOM0663")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ41.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ41.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ41.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ41.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ42)
        {
            Name (_HID, "QCOM0664")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PMBM
            })
            Name (TPSV, 0x0C6C)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ42.TPSV)
            }

            Name (_MTL, 0x0A)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ42.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ42.TTC2)
            }

            Name (TTSP, 0x1E)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ42.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ50)
        {
            Name (_HID, "QCOM0662")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0CEE)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ50.TPSV)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, 0x02)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ50.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ50.TTC2)
            }

            Name (TTSP, 0x64)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ50.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ70)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                If (\_SB.TZ70.GCRT)
                {
                    \_SB.TZ70.GCRT = Zero
                    Return (CTOK (0x7F))
                }
                Else
                {
                    Return (CTOK (\_SB.I2C9.ECMR (0x2020)))
                }
            }

            Name (GCRT, Zero)
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ70.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ70.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ70.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ70.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ70.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ71)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (CTOK (\_SB.I2C9.ECMR (0x2021)))
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ71.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ71.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ71.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ71.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ71.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ72)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (CTOK (\_SB.I2C9.ECMR (0x2022)))
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ72.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ72.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ72.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ72.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ72.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ73)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (CTOK (\_SB.I2C9.ECMR (0x2023)))
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ73.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ73.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ73.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ73.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ73.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ74)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (CTOK (\_SB.I2C9.ECMR (0x2024)))
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ74.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ74.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ74.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ74.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ74.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ75)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C9
                })
            }

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (CTOK (\_SB.I2C9.ECMR (0x2025)))
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ75.TPSV)
            }

            Name (TCRT, 0x0E88)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ75.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ75.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ75.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ75.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        Scope (\_SB.I2C9)
        {
            Method (_Q36, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                \_SB.TZ70.GCRT = One
                Notify (\_SB.TZ70, 0x80) // Thermal Status Change
            }
        }

        ThermalZone (TZ36)
        {
            Name (_HID, "QCOM04C6")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.MBS0
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBS0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ36.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ36.TCRT)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ36.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ36.TTC2)
            }

            Name (TTSP, 0x32)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ36.TTSP)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        ThermalZone (TZ37)
        {
            Name (_HID, "QCOM04C7")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.MBS1
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBS1
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ37.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ37.TCRT)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ37.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ37.TTC2)
            }

            Name (TTSP, 0x28)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ37.TTSP)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        ThermalZone (TZ38)
        {
            Name (_HID, "QCOM04C8")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.MBS2
                })
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBS2
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ38.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ38.TCRT)
            }

            Name (_MTL, 0x14)  // _MTL: Minimum Throttle Limit
            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ38.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ38.TTC2)
            }

            Name (TTSP, 0x32)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ38.TTSP)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((\_SB.PSUB == "QRD08280") && (\_SB.PLST == 0x04)))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }

        Name (HWNH, Zero)
        Device (HWN1)
        {
            Name (_HID, "QCOM0669")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.HWNH == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveHigh, Exclusive, PullNone, 0x0000,
                        "\\_SB.PM02", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0E00
                        }
                })
                Return (RBUF) /* \_SB_.HWN1._CRS.RBUF */
            }

            Method (HAPI, 0, NotSerialized)
            {
                Name (CFG0, Package (0x03)
                {
                    One, 
                    One, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN1.HAPI.CFG0 */
            }

            Method (HAPC, 0, NotSerialized)
            {
                Name (CFG0, Package (0x16)
                {
                    Zero, 
                    0x0984, 
                    Zero, 
                    One, 
                    One, 
                    One, 
                    One, 
                    Zero, 
                    0x04, 
                    One, 
                    0x03, 
                    0x14, 
                    One, 
                    0x03, 
                    Zero, 
                    Zero, 
                    0x06, 
                    Zero, 
                    Zero, 
                    0x0535, 
                    0x03, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN1.HAPC.CFG0 */
            }
        }

        Scope (\_SB)
        {
            Device (TSC1)
            {
                Name (_HID, "ELAN901C")  // _HID: Hardware ID
                Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
                Name (HID2, One)
                Alias (\_SB.PSUB, _SUB)
                Name (_HRV, One)  // _HRV: Hardware Revision
                Name (_ADR, Zero)  // _ADR: Address
                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.GIO0, 
                    \_SB.I2C5, 
                    \_SB.PEP0
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If (((TLVI == Zero) && (TLPI == Zero)))
                    {
                        Return (Zero)
                    }

                    Return (0x0F)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0010, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.I2C5",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x00AF
                            }
                    })
                    Return (RBUF) /* \_SB_.TSC1._CRS.RBUF */
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }
            }
        }

        Device (BTNS)
        {
            Name (_HID, "ACPI0011" /* Generic Buttons Device */)  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveBoth, ExclusiveAndWake, PullDown, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0007
                        }
                    GpioInt (Edge, ActiveBoth, Exclusive, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00C6
                        }
                    GpioInt (Edge, ActiveBoth, Exclusive, PullDown, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0006
                        }
                })
                Return (RBUF) /* \_SB_.BTNS._CRS.RBUF */
            }

            Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
            {
                ToUUID ("fa6bd625-9ce8-470d-a2c7-b3ca36c4282e") /* Generic Buttons Device */, 
                Package (0x04)
                {
                    Package (0x05)
                    {
                        Zero, 
                        One, 
                        Zero, 
                        One, 
                        0x0D
                    }, 

                    Package (0x05)
                    {
                        One, 
                        Zero, 
                        One, 
                        One, 
                        0x81
                    }, 

                    Package (0x05)
                    {
                        One, 
                        One, 
                        One, 
                        0x0C, 
                        0xE9
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x02, 
                        One, 
                        0x0C, 
                        0xEA
                    }
                }
            })
        }

        Device (QDCI)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM0612")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (BTH0)
        {
            Name (_HID, "QCOM066B")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.UAR3
            })
            Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
            {
                Zero, 
                Zero
            })
            Name (_S4W, 0x02)  // _S4W: S4 Device Wake State
            Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (PBUF, ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.UAR3",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0085
                        }
                })
                Return (PBUF) /* \_SB_.BTH0._CRS.PBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (ADC1)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.SPMI, 
                \_SB.PMIC
            })
            Name (_HID, "QCOM0611")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (INTB, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x02
                        })
                        {   // Pin list
                            0x0020
                        }
                    GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x02
                        })
                        {   // Pin list
                            0x0028
                        }
                })
                Name (NAM, Buffer (0x0A)
                {
                    "\\_SB.SPMI"
                })
                Name (VUSR, Buffer (0x0C)
                {
                    /* 0000 */  0x8E, 0x13, 0x00, 0x01, 0x00, 0xC1, 0x02, 0x00,  // ........
                    /* 0008 */  0x31, 0x01, 0x00, 0x00                           // 1...
                })
                Name (VBTM, Buffer (0x0C)
                {
                    /* 0000 */  0x8E, 0x13, 0x00, 0x01, 0x00, 0xC1, 0x02, 0x00,  // ........
                    /* 0008 */  0x34, 0x01, 0x00, 0x00                           // 4...
                })
                Concatenate (VUSR, NAM, Local1)
                Concatenate (VBTM, NAM, Local2)
                Concatenate (Local1, Local2, Local3)
                Concatenate (Local3, INTB, Local0)
                Return (Local0)
            }
        }
    }

    Scope (\)
    {
        Method (ADBG, 1, Serialized)
        {
            Return (Zero)
        }
    }

    Method (SCMP, 2, NotSerialized)
    {
        Local0 = SizeOf (Arg0)
        If ((Local0 != SizeOf (Arg1)))
        {
            Return (One)
        }

        Local0++
        Name (STR1, Buffer (Local0){})
        Name (STR2, Buffer (Local0){})
        STR1 = Arg0
        STR2 = Arg1
        Local1 = Zero
        While ((Local1 < Local0))
        {
            Local2 = DerefOf (STR1 [Local1])
            Local3 = DerefOf (STR2 [Local1])
            If ((Local2 != Local3))
            {
                Return (One)
            }

            Local1++
        }

        Return (Zero)
    }

    Method (GECB, 3, NotSerialized)
    {
        Local0 = \_SB.I2C9.ECRD (Arg0)
        Local1 = Zero
        While (Arg2)
        {
            Local1 <<= One
            Local1 |= One
            Arg2 -= One
        }

        Local1 <<= Arg1
        Local0 &= Local1
        Local0 >>= Arg1
        Return (Local0)
    }

    Method (WECB, 4, NotSerialized)
    {
        Local0 = \_SB.I2C9.ECRD (Arg0)
        Local1 = Zero
        While (Arg2)
        {
            Local1 <<= One
            Local1 |= One
            Arg2 -= One
        }

        Arg3 &= Local1
        Local0 &= ~Local1 <<= Arg1
        Arg3 <<= Arg1
        Local0 |= Arg3
        \_SB.I2C9.ECWR (Arg0, Local0)
    }

    Method (I2CM, 3, Serialized)
    {
        While (One)
        {
            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
            _T_0 = ToInteger (Arg0)
            If ((_T_0 == One))
            {
                Name (IIC1, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC1, 0x2C, DAD1)
                CreateDWordField (IIC1, 0x28, DSP1)
                DAD1 = Arg1
                DSP1 = Arg2
                Return (IIC1) /* \I2CM.IIC1 */
            }
            ElseIf ((_T_0 == 0x02))
            {
                Name (IIC2, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC2, 0x2C, DAD2)
                CreateDWordField (IIC2, 0x28, DSP2)
                DAD2 = Arg1
                DSP2 = Arg2
                Return (IIC2) /* \I2CM.IIC2 */
            }
            ElseIf ((_T_0 == 0x03))
            {
                Name (IIC3, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C3",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC3, 0x2C, DAD3)
                CreateDWordField (IIC3, 0x28, DSP3)
                DAD3 = Arg1
                DSP3 = Arg2
                Return (IIC3) /* \I2CM.IIC3 */
            }
            ElseIf ((_T_0 == 0x04))
            {
                Name (IIC4, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C4",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC4, 0x2C, DAD4)
                CreateDWordField (IIC4, 0x28, DSP4)
                DAD4 = Arg1
                DSP4 = Arg2
                Return (IIC4) /* \I2CM.IIC4 */
            }
            ElseIf ((_T_0 == 0x05))
            {
                Name (IIC5, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C5",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC5, 0x2C, DAD5)
                CreateDWordField (IIC5, 0x28, DSP5)
                DAD5 = Arg1
                DSP5 = Arg2
                Return (IIC5) /* \I2CM.IIC5 */
            }
            ElseIf ((_T_0 == 0x16))
            {
                Name (IC22, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC22",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IC22, 0x2C, DA22)
                CreateDWordField (IC22, 0x28, DS22)
                DA22 = Arg1
                DS22 = Arg2
                Return (IC22) /* \I2CM.IC22 */
            }
            Else
            {
                Return (Zero)
            }

            Break
        }
    }

    Name (HIDG, ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */)
    Method (HIDD, 5, Serialized)
    {
        If ((Arg0 == HIDG))
        {
            If ((Arg2 == Zero))
            {
                If ((Arg1 == One))
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
            }

            If ((Arg2 == One))
            {
                Return (Arg4)
            }
        }

        Return (Buffer (One)
        {
             0x00                                             // .
        })
    }

    Method (CTOK, 1, Serialized)
    {
        Return (((Arg0 * 0x0A) + 0x0AAC))
    }

    Method (GGIV, 1, Serialized)
    {
        Local0 = (0x0F100000 + (Arg0 * 0x1000))
        OperationRegion (PDW0, SystemMemory, Local0, 0x20)
        Field (PDW0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            TEMP,   32
        }

        Local1 = (TEMP & One)
        Return (Local1)
    }

    Method (SGOV, 2, Serialized)
    {
        Local0 = (0x0F100000 + (Arg0 * 0x1000))
        OperationRegion (PDW0, SystemMemory, Local0, 0x20)
        Field (PDW0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            TEMP,   32
        }

        If ((Arg1 == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = One
        }

        TEMP = (Local0 << One)
    }

    Scope (\_SB)
    {
        Name (RID, Zero)
        Device (TTZE)
        {
            Name (_HID, EisaId ("WIS0A00"))  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (WMI1)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_WDG, Buffer (0xF0)
            {
                /* 0000 */  0x0E, 0x23, 0xF5, 0x51, 0x77, 0x96, 0xCD, 0x46,  // .#.Qw..F
                /* 0008 */  0xA1, 0xCF, 0xC0, 0xB2, 0x3E, 0xE3, 0x4D, 0xB7,  // ....>.M.
                /* 0010 */  0x41, 0x30, 0xFF, 0x05, 0x64, 0x9A, 0x47, 0x98,  // A0..d.G.
                /* 0018 */  0xF5, 0x33, 0x33, 0x4E, 0xA7, 0x07, 0x8E, 0x25,  // .33N...%
                /* 0020 */  0x1E, 0xBB, 0xC3, 0xA1, 0x41, 0x31, 0x01, 0x06,  // ....A1..
                /* 0028 */  0xEF, 0x54, 0x4B, 0x6A, 0xED, 0xA5, 0x33, 0x4D,  // .TKj..3M
                /* 0030 */  0x94, 0x55, 0xB0, 0xD9, 0xB4, 0x8D, 0xF4, 0xB3,  // .U......
                /* 0038 */  0x41, 0x32, 0x01, 0x06, 0xB6, 0xEB, 0xF1, 0x74,  // A2.....t
                /* 0040 */  0x7A, 0x92, 0x7D, 0x4C, 0x95, 0xDF, 0x69, 0x8E,  // z.}L..i.
                /* 0048 */  0x21, 0xE8, 0x0E, 0xB5, 0x41, 0x33, 0x01, 0x06,  // !...A3..
                /* 0050 */  0xFF, 0x04, 0xEF, 0x7E, 0x28, 0x43, 0x7C, 0x44,  // ...~(C|D
                /* 0058 */  0xB5, 0xBB, 0xD4, 0x49, 0x92, 0x5D, 0x53, 0x8D,  // ...I.]S.
                /* 0060 */  0x41, 0x34, 0x01, 0x06, 0x9E, 0x15, 0xDB, 0x8A,  // A4......
                /* 0068 */  0x32, 0x1E, 0x5C, 0x45, 0xBC, 0x93, 0x30, 0x8A,  // 2.\E..0.
                /* 0070 */  0x7E, 0xD9, 0x82, 0x46, 0x41, 0x35, 0x01, 0x01,  // ~..FA5..
                /* 0078 */  0xFD, 0xD9, 0x51, 0x26, 0x1C, 0x91, 0x69, 0x4B,  // ..Q&..iK
                /* 0080 */  0xB9, 0x4E, 0xD0, 0xDE, 0xD5, 0x96, 0x3B, 0xD7,  // .N....;.
                /* 0088 */  0x41, 0x36, 0x01, 0x06, 0x1A, 0x65, 0x64, 0x73,  // A6...eds
                /* 0090 */  0x2F, 0x13, 0xE7, 0x4F, 0xAD, 0xAA, 0x40, 0xC6,  // /..O..@.
                /* 0098 */  0xC7, 0xEE, 0x2E, 0x3B, 0x41, 0x37, 0x01, 0x06,  // ...;A7..
                /* 00A0 */  0x2C, 0xEF, 0xDD, 0xDF, 0xD4, 0x57, 0xCE, 0x48,  // ,....W.H
                /* 00A8 */  0xB1, 0x96, 0x0F, 0xB7, 0x87, 0xD9, 0x08, 0x36,  // .......6
                /* 00B0 */  0x43, 0x30, 0x01, 0x06, 0xA6, 0xEB, 0x70, 0x73,  // C0....ps
                /* 00B8 */  0x73, 0x7E, 0x9C, 0x40, 0x9A, 0x89, 0x82, 0x97,  // s~.@....
                /* 00C0 */  0x95, 0x31, 0x3D, 0x78, 0x41, 0x38, 0x20, 0x05,  // .1=xA8 .
                /* 00C8 */  0x89, 0xA5, 0x94, 0x7E, 0x65, 0x46, 0xDE, 0x47,  // ...~eF.G
                /* 00D0 */  0xBE, 0x2B, 0xDD, 0xE4, 0xA2, 0x80, 0xAD, 0x47,  // .+.....G
                /* 00D8 */  0x41, 0x39, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // A9..!...
                /* 00E0 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 00E8 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   // ..).BA..
            })
            Name (RETN, Package (0x05)
            {
                "Success", 
                "Not Supported", 
                "Invalid Parameter", 
                "Access Denied", 
                "System Busy"
            })
            Name (ITEM, Package (0x59)
            {
                Package (0x02)
                {
                    Zero, 
                    "DashEnabled"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "USBBIOSSupport"
                }, 

                Package (0x02)
                {
                    One, 
                    "TrackPoint"
                }, 

                Package (0x02)
                {
                    One, 
                    "TouchPad"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnSticky"
                }, 

                Package (0x02)
                {
                    0x06, 
                    "TpmFwSelection"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PowerControlBeep"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "LowBatteryAlarm"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PasswordBeep"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "KeyboardBeep"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ExtendedMemoryTest"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "LockBIOSSetting"
                }, 

                Package (0x02)
                {
                    0x0B, 
                    "MinimumPasswordLength"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtUnattendedBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintPredesktopAuthentication"
                }, 

                Package (0x02)
                {
                    0x03, 
                    "FingerprintSecurityMode"
                }, 

                Package (0x02)
                {
                    0x02, 
                    "SecurityChip"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSUpdateByEndUsers"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessLANAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessWANAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BluetoothAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessUSBAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ModemAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "USBPortAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IEEE1394Access"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ExpressCardAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PCIExpressSlotAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UltrabayAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntegratedCameraAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "MicrophoneAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "StartupOptionKeys"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BootDeviceListF12Option"
                }, 

                Package (0x02)
                {
                    0x64, 
                    "BootOrder"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiMAXAccess"
                }, 

                Package (0x02)
                {
                    0x0D, 
                    "GraphicsDevice"
                }, 

                Package (0x02)
                {
                    0x28, 
                    "OsOptDefault"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintPasswordAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintReaderAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "OsDetectionForSwitchableGraphics"
                }, 

                Package (0x02)
                {
                    0x0F, 
                    "AbsolutePersistenceModuleActivation"
                }, 

                Package (0x02)
                {
                    One, 
                    "PCIExpressPowerManagement"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "eSATAPortAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "HardwarePasswordManager"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnCtrlKeySwap"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtReboot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BootOrderLock"
                }, 

                Package (0x02)
                {
                    0x11, 
                    "ExpressCardSpeed"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "RapidStartTechnology"
                }, 

                Package (0x02)
                {
                    0x12, 
                    "KeyboardIllumination"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IPv4NetworkStack"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PhysicalPresenceForTpmClear"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SecureRollBackPrevention"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SecureBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BottomCoverTamperDetected"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PasswordCountExceededError"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtBootDeviceList"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnKeyAsPrimary"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiGig"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtPowerOn"
                }, 

                Package (0x02)
                {
                    0x16, 
                    "SGXControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "MACAddressPassThrough"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WindowsUEFIFirmwareUpdate"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WakeOnLANDock"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiFiNetworkBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntegratedAudioAccess"
                }, 

                Package (0x02)
                {
                    0x0F, 
                    "ComputraceModuleActivation"
                }, 

                Package (0x02)
                {
                    0x1C, 
                    "MaxPasswordAttempts"
                }, 

                Package (0x02)
                {
                    0x1D, 
                    "PasswordChangeTime"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SystemManagementPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PowerOnPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "HardDiskPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSSetupConfigurations"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ThinkShieldsecurewipe"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "StrongPassword"
                }, 

                Package (0x02)
                {
                    0x20, 
                    "KeyboardLayout"
                }, 

                Package (0x02)
                {
                    0x21, 
                    "WakeUponAlarm"
                }, 

                Package (0x02)
                {
                    0x22, 
                    "AlarmDate"
                }, 

                Package (0x02)
                {
                    0x23, 
                    "AlarmTime"
                }, 

                Package (0x02)
                {
                    0x24, 
                    "AlarmDayofWeek"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmSunday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmMonday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmTuesday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmWednesday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmThursday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmFriday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmSaturday"
                }, 

                Package (0x02)
                {
                    0x23, 
                    "UserDefinedAlarmTime"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BlockSIDAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntelligentCoolingBoost"
                }
            })
            Name (VSEL, Package (0x29)
            {
                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Disable", 
                    "Automatic"
                }, 

                Package (0x04)
                {
                    "Active", 
                    "Inactive", 
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Normal", 
                    "High"
                }, 

                Package (0x02)
                {
                    "Independent", 
                    "Synchronized"
                }, 

                Package (0x02)
                {
                    "LCD", 
                    "ExternalDisplay"
                }, 

                Package (0x02)
                {
                    "dTPM", 
                    "Pluton"
                }, 

                Package (0x02)
                {
                    "Compatibility", 
                    "AHCI"
                }, 

                Package (0x02)
                {
                    "External", 
                    "InternalOnly"
                }, 

                Package (0x02)
                {
                    "MaximizePerformance", 
                    "Balanced"
                }, 

                Package (0x02)
                {
                    "Quick", 
                    "Diagnostics"
                }, 

                Package (0x0A)
                {
                    "Disable", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12"
                }, 

                Package (0x03)
                {
                    "Auto", 
                    "On", 
                    "Off"
                }, 

                Package (0x03)
                {
                    "IntegratedGfx", 
                    "DiscreteGfx", 
                    "SwitchableGfx"
                }, 

                Package (0x04)
                {
                    "Disable", 
                    "ACOnly", 
                    "ACandBattery", 
                    "Enable"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "PermanentlyDisable"
                }, 

                Package (0x02)
                {
                    "HDMI", 
                    "USBTypeC"
                }, 

                Package (0x02)
                {
                    "Generation1", 
                    "Automatic"
                }, 

                Package (0x03)
                {
                    "ThinkLightOnly", 
                    "BacklightOnly", 
                    "Both"
                }, 

                Package (0x02)
                {
                    "IPv6First", 
                    "IPv4First"
                }, 

                Package (0x02)
                {
                    "256MB", 
                    "512MB"
                }, 

                Package (0x0B)
                {
                    "Disable", 
                    "1", 
                    "2", 
                    "3", 
                    "", 
                    "5", 
                    "", 
                    "", 
                    "", 
                    "", 
                    "10"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "SoftwareControl"
                }, 

                Package (0x04)
                {
                    "NoSecurity", 
                    "UserAuthorization", 
                    "SecureConnect", 
                    "DisplayPortandUSB"
                }, 

                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x03)
                {
                    "Enable", 
                    "Disable", 
                    ""
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "Pre-BootACL"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "Second"
                }, 

                Package (0x04)
                {
                    "Unlimited", 
                    "1", 
                    "3", 
                    "100"
                }, 

                Package (0x02)
                {
                    "Immediately", 
                    "AfterReboot"
                }, 

                Package (0x02)
                {
                    "SimpleText", 
                    "Graphical"
                }, 

                Package (0x02)
                {
                    "Linux", 
                    "Windows10"
                }, 

                Package (0x1B)
                {
                    "English_US", 
                    "CanadianFrenchMultilingual", 
                    "CanadianFrench", 
                    "Spanish_LA", 
                    "Portuguese_BR", 
                    "Belgian", 
                    "Danish", 
                    "Spanish", 
                    "French", 
                    "German", 
                    "Hungarian", 
                    "Icelandic", 
                    "Italian", 
                    "Norwegian", 
                    "Portuguese", 
                    "Slovenian", 
                    "Swedish", 
                    "Swiss", 
                    "Turkish", 
                    "English_UK", 
                    "Japanese", 
                    "Korean", 
                    "TraditionalChinese", 
                    "Turkish-F", 
                    "Estonian", 
                    "Finnish", 
                    "Czech"
                }, 

                Package (0x05)
                {
                    "Disable", 
                    "UserDefined", 
                    "WeeklyEvent", 
                    "DailyEvent", 
                    "SingleEvent"
                }, 

                Package (0x01)
                {
                    "MM/DD/YYYY"
                }, 

                Package (0x01)
                {
                    "HH/MM/SS"
                }, 

                Package (0x07)
                {
                    "Sunday", 
                    "Monday", 
                    "Tuesday", 
                    "Wednesday", 
                    "Thursday", 
                    "Friday", 
                    "Saturday"
                }, 

                Package (0x03)
                {
                    "Near", 
                    "Middle", 
                    "Far"
                }, 

                Package (0x03)
                {
                    "Fast", 
                    "Medium", 
                    "Slow"
                }, 

                Package (0x02)
                {
                    "No", 
                    "Yes"
                }, 

                Package (0x02)
                {
                    "Off", 
                    "On"
                }
            })
            Name (VLST, Package (0x13)
            {
                "HDD0", 
                "HDD1", 
                "HDD2", 
                "HDD3", 
                "HDD4", 
                "PXEBOOT", 
                "ATAPICD0", 
                "ATAPICD1", 
                "ATAPICD2", 
                "USBFDD", 
                "USBCD", 
                "USBHDD", 
                "OtherHDD", 
                "OtherCD", 
                "NVMe0", 
                "NVMe1", 
                "HTTPSBOOT", 
                "LENOVOCLOUD", 
                "NODEV"
            })
            Name (VR01, Package (0x67)
            {
                "0000", 
                "1998", 
                "1999", 
                "2000", 
                "2001", 
                "2002", 
                "2003", 
                "2004", 
                "2005", 
                "2006", 
                "2007", 
                "2008", 
                "2009", 
                "2010", 
                "2011", 
                "2012", 
                "2013", 
                "2014", 
                "2015", 
                "2016", 
                "2017", 
                "2018", 
                "2019", 
                "2020", 
                "2021", 
                "2022", 
                "2023", 
                "2024", 
                "2025", 
                "2026", 
                "2027", 
                "2028", 
                "2029", 
                "2030", 
                "2031", 
                "2032", 
                "2033", 
                "2034", 
                "2035", 
                "2036", 
                "2037", 
                "2038", 
                "2039", 
                "2040", 
                "2041", 
                "2042", 
                "2043", 
                "2044", 
                "2045", 
                "2046", 
                "2047", 
                "2048", 
                "2049", 
                "2050", 
                "2051", 
                "2052", 
                "2053", 
                "2054", 
                "2055", 
                "2056", 
                "2057", 
                "2058", 
                "2059", 
                "2060", 
                "2061", 
                "2062", 
                "2063", 
                "2064", 
                "2065", 
                "2066", 
                "2067", 
                "2068", 
                "2069", 
                "2070", 
                "2071", 
                "2072", 
                "2073", 
                "2074", 
                "2075", 
                "2076", 
                "2077", 
                "2078", 
                "2079", 
                "2080", 
                "2081", 
                "2082", 
                "2083", 
                "2084", 
                "2085", 
                "2086", 
                "2087", 
                "2088", 
                "2089", 
                "2090", 
                "2091", 
                "2092", 
                "2093", 
                "2094", 
                "2095", 
                "2096", 
                "2097", 
                "2098", 
                "2099"
            })
            Name (VR02, Package (0x0D)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12"
            })
            Name (VR03, Package (0x20)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23", 
                "24", 
                "25", 
                "26", 
                "27", 
                "28", 
                "29", 
                "30", 
                "31"
            })
            Name (VR04, Package (0x18)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23"
            })
            Name (VR05, Package (0x3C)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23", 
                "24", 
                "25", 
                "26", 
                "27", 
                "28", 
                "29", 
                "30", 
                "31", 
                "32", 
                "33", 
                "34", 
                "35", 
                "36", 
                "37", 
                "38", 
                "39", 
                "40", 
                "41", 
                "42", 
                "43", 
                "44", 
                "45", 
                "46", 
                "47", 
                "48", 
                "49", 
                "50", 
                "51", 
                "52", 
                "53", 
                "54", 
                "55", 
                "56", 
                "57", 
                "58", 
                "59"
            })
            Name (PENC, Package (0x02)
            {
                "ascii", 
                "scancode"
            })
            Name (PKBD, Package (0x03)
            {
                "us", 
                "fr", 
                "gr"
            })
            Name (PTYP, Package (0x13)
            {
                "pap", 
                "pop", 
                "uhdp1", 
                "mhdp1", 
                "uhdp2", 
                "mhdp2", 
                "uhdp3", 
                "mhdp3", 
                "uhdp4", 
                "mhdp4", 
                "udrp1", 
                "adrp1", 
                "udrp2", 
                "adrp2", 
                "udrp3", 
                "adrp3", 
                "udrp4", 
                "adrp4", 
                "smp"
            })
            Name (OPCD, Package (0x0E)
            {
                "WmiOpcodePasswordType", 
                "WmiOpcodePasswordCurrent01", 
                "WmiOpcodePasswordCurrent02", 
                "WmiOpcodePasswordCurrent03", 
                "WmiOpcodePasswordCurrent04", 
                "WmiOpcodePasswordNew01", 
                "WmiOpcodePasswordNew02", 
                "WmiOpcodePasswordNew03", 
                "WmiOpcodePasswordNew04", 
                "WmiOpcodePasswordEncode", 
                "WmiOpcodePasswordSetUpdate", 
                "WmiOpcodePasswordAdmin", 
                "WmiOpcodeTPM", 
                "WmiOpcodePasswordFree"
            })
            Name (FUNC, Package (0x06)
            {
                Package (0x02)
                {
                    0x27, 
                    "ClearSecurityChip"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResetFingerprintData"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResettoSetupMode"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "RestoreFactoryKeys"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ClearAllSecureBootKeys"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResetSystemToFactoryDefaults"
                }
            })
            Mutex (MWMI, 0x00)
            Name (PCFG, Buffer (0x18){})
            Name (IBUF, Buffer (0x0200){})
            Name (ILEN, Zero)
            Name (PSTR, Buffer (0x81){})
            Name (ALEN, Zero)
            Method (WQA0, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((WMIS (Zero, Arg0) != Zero))
                {
                    Release (MWMI)
                    Return ("")
                }

                Local0 = DerefOf (ITEM [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                If ((Local1 == 0x22))
                {
                    Concatenate (Local2, ",", Local6)
                    Concatenate (Local6, DerefOf (VR02 [RTC1]), Local7)
                    Concatenate (Local7, "/", Local6)
                    Concatenate (Local6, DerefOf (VR03 [RTC2]), Local7)
                    Concatenate (Local7, "/", Local6)
                    Concatenate (Local6, DerefOf (VR01 [RTC0]), Local7)
                }
                ElseIf ((Local1 == 0x23))
                {
                    Concatenate (Local2, ",", Local6)
                    Concatenate (Local6, DerefOf (VR04 [RTC0]), Local7)
                    Concatenate (Local7, ":", Local6)
                    Concatenate (Local6, DerefOf (VR05 [RTC1]), Local7)
                    Concatenate (Local7, ":", Local6)
                    Concatenate (Local6, DerefOf (VR05 [RTC2]), Local7)
                }
                ElseIf ((Local1 < 0x64))
                {
                    Concatenate (Local2, ",", Local6)
                    Local3 = DerefOf (VSEL [Local1])
                    Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                }
                Else
                {
                    Local3 = SizeOf (VLST)
                    If ((WLS0 <= Local3))
                    {
                        Concatenate (Local2, ",", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS0]), Local2)
                    }

                    If ((WLS1 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS1]), Local2)
                    }

                    If ((WLS2 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS2]), Local2)
                    }

                    If ((WLS3 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS3]), Local2)
                    }

                    If ((WLS4 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS4]), Local2)
                    }

                    If ((WLS5 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS5]), Local2)
                    }

                    If ((WLS6 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS6]), Local2)
                    }

                    If ((WLS7 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS7]), Local2)
                    }

                    If ((WLS8 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS8]), Local2)
                    }

                    If ((WLS9 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS9]), Local2)
                    }

                    If ((WLSA <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSA]), Local2)
                    }

                    If ((WLSB <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSB]), Local2)
                    }

                    If ((WLSC <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSC]), Local2)
                    }

                    If ((WLSD <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSD]), Local2)
                    }

                    Local7 = Local2
                }

                Release (MWMI)
                Return (Local7)
            }

            Method (WMA1, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (One, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA2, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x02, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA3, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x03, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA4, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x04, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WQA5, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = WMIS (0x05, Zero)
                PCFG [Zero] = WSPM /* \_SB_.WSPM */
                PCFG [0x04] = WSPS /* \_SB_.WSPS */
                PCFG [0x08] = WSMN /* \_SB_.WSMN */
                PCFG [0x0C] = WSMX /* \_SB_.WSMX */
                PCFG [0x10] = WSEN /* \_SB_.WSEN */
                PCFG [0x14] = WSKB /* \_SB_.WSKB */
                Release (MWMI)
                Return (PCFG) /* \_SB_.WMI1.PCFG */
            }

            Method (WMA6, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        If ((ILEN != Zero))
                        {
                            Local0 = SPAS (IBUF)
                        }

                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x06, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA7, 3, NotSerialized)
            {
                If ((SizeOf (Arg2) == Zero))
                {
                    Return ("")
                }

                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    Local1 = GITM (IBUF, ITEM)
                    If ((Local1 == Ones))
                    {
                        Return ("")
                    }

                    Local0 = DerefOf (ITEM [Local1])
                    Local1 = DerefOf (Local0 [Zero])
                    If ((Local1 < 0x64))
                    {
                        Local3 = DerefOf (VSEL [Local1])
                        Local2 = DerefOf (Local3 [Zero])
                        Local4 = SizeOf (Local3)
                        Local5 = One
                        While ((Local5 < Local4))
                        {
                            Local6 = DerefOf (Local3 [Local5])
                            If ((SizeOf (Local6) != Zero))
                            {
                                Concatenate (Local2, ",", Local7)
                                Concatenate (Local7, Local6, Local2)
                            }

                            Local5++
                        }
                    }
                    Else
                    {
                        Local2 = DerefOf (VLST [Zero])
                        Local4 = SizeOf (VLST)
                        Local5 = One
                        While ((Local5 < Local4))
                        {
                            Local6 = DerefOf (VLST [Local5])
                            Concatenate (Local2, ",", Local7)
                            Concatenate (Local7, Local6, Local2)
                            Local5++
                        }
                    }
                }

                Return (Local2)
            }

            Method (WQA8, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((WMIS (0x10, Arg0) != Zero))
                {
                    Release (MWMI)
                    Return ("")
                }

                Local0 = DerefOf (FUNC [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Local3 = DerefOf (VSEL [Local1])
                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                Release (MWMI)
                Return (Local7)
            }

            Method (WMA9, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = WSET (FUNC, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WITM /* \_SB_.WITM */
                            Local0 = WSEL /* \_SB_.WSEL */
                            Local0 = WMIS (0x11, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMC0, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local6 = GSEL (OPCD, IBUF, Zero)
                        If ((Local6 != Ones))
                        {
                            Local4 = DerefOf (OPCD [Local6])
                            Local2 = SizeOf (Local4)
                            Local3 = DerefOf (IBUF [Local2])
                            If (((Local3 == 0x2C) || (Local3 == 0x3A)))
                            {
                                Local2++
                            }

                            Local5 = (SizeOf (Arg2) - Local2)
                            Local0 = Zero
                            If ((Local6 == Zero))
                            {
                                WPTY = 0xFF
                                Local7 = GSEL (PTYP, IBUF, Local2)
                                If ((Local7 != Ones))
                                {
                                    WPTY = Local7
                                }
                                Else
                                {
                                    Local0 = 0x02
                                }
                            }
                            ElseIf ((Local6 == One))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local0 == Zero))
                                {
                                    WPAS = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            ElseIf ((Local6 == 0x05))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local1 == Zero))
                                {
                                    PSTR = Zero
                                }

                                If ((Local0 == Zero))
                                {
                                    WPNW = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            ElseIf ((Local6 == 0x0A))
                            {
                                Local0 = Zero
                            }
                            ElseIf ((Local6 == 0x0B))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local1 == Zero))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local0 == Zero))
                                {
                                    WPAS = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            Else
                            {
                                Local0 = 0x02
                            }

                            If ((Local0 == Zero))
                            {
                                Local0 = WMIS (0x0F, Local6)
                            }
                        }
                        Else
                        {
                            Local0 = 0x02
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (CARG, 1, NotSerialized)
            {
                Local0 = SizeOf (Arg0)
                If ((Local0 == Zero))
                {
                    IBUF = Zero
                    ILEN = Zero
                    Return (Zero)
                }

                If ((ObjectType (Arg0) != 0x02))
                {
                    Return (0x02)
                }

                If ((Local0 >= 0x01FF))
                {
                    Return (0x02)
                }

                IBUF = Arg0
                Local0--
                Local1 = DerefOf (IBUF [Local0])
                If (((Local1 == 0x3B) || (Local1 == 0x2A)))
                {
                    IBUF [Local0] = Zero
                    ILEN = Local0
                }
                Else
                {
                    ILEN = SizeOf (Arg0)
                }

                Return (Zero)
            }

            Method (SCMP, 3, NotSerialized)
            {
                Local0 = SizeOf (Arg0)
                If ((Local0 == Zero))
                {
                    Return (Zero)
                }

                Local0++
                Name (STR1, Buffer (Local0){})
                STR1 = Arg0
                Local0--
                If ((ALEN != Zero))
                {
                    Local0 = ALEN /* \_SB_.WMI1.ALEN */
                }

                Local1 = Zero
                Local2 = Arg2
                While ((Local1 < Local0))
                {
                    Local3 = DerefOf (STR1 [Local1])
                    Local4 = DerefOf (Arg1 [Local2])
                    If ((Local3 != Local4))
                    {
                        Return (Zero)
                    }

                    Local1++
                    Local2++
                }

                If ((ALEN != Zero))
                {
                    Return (One)
                }

                Local4 = DerefOf (Arg1 [Local2])
                If ((Local4 == Zero))
                {
                    Return (One)
                }

                If (((Local4 == 0x2C) || (Local4 == 0x3A)))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (GITM, 2, NotSerialized)
            {
                Local0 = Zero
                Local1 = SizeOf (Arg1)
                While ((Local0 < Local1))
                {
                    Local3 = DerefOf (DerefOf (Arg1 [Local0]) [One])
                    If (SCMP (Local3, Arg0, Zero))
                    {
                        Return (Local0)
                    }

                    Local0++
                }

                Return (Ones)
            }

            Method (GSEL, 3, NotSerialized)
            {
                Local0 = Zero
                Local1 = SizeOf (Arg0)
                While ((Local0 < Local1))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If (SCMP (Local2, Arg1, Arg2))
                    {
                        Return (Local0)
                    }

                    Local0++
                }

                Return (Ones)
            }

            Method (SLEN, 2, NotSerialized)
            {
                Local0 = DerefOf (Arg0 [Arg1])
                Return (SizeOf (Local0))
            }

            Method (CLRP, 0, NotSerialized)
            {
                WPAS = Zero
                WPNW = Zero
            }

            Method (GPAS, 2, NotSerialized)
            {
                Local0 = Arg1
                Local1 = Zero
                While ((Local1 <= 0x80))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If (((Local2 == 0x2C) || (Local2 == Zero)))
                    {
                        PSTR [Local1] = Zero
                        Return (Local1)
                    }

                    PSTR [Local1] = Local2
                    Local0++
                    Local1++
                }

                PSTR [Local1] = Zero
                Return (Ones)
            }

            Method (GPAO, 2, NotSerialized)
            {
                Local0 = Arg1
                Local1 = Zero
                While ((Local1 <= 0x80))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If ((Local2 == Zero))
                    {
                        PSTR [Local1] = Zero
                        Return (Local1)
                    }

                    PSTR [Local1] = Local2
                    Local0++
                    Local1++
                }

                Local1--
                PSTR [Local1] = Zero
                Return (Ones)
            }

            Method (CPAS, 2, NotSerialized)
            {
                CLRP ()
                Local0 = Arg1
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    Return (0x02)
                }

                WPAS = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                Local0++
                Local6 = GSEL (PENC, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WENC = Local6
                If ((Local6 == Zero))
                {
                    Local0 += SLEN (PENC, Zero)
                    If ((DerefOf (Arg0 [Local0]) != 0x2C))
                    {
                        Return (0x02)
                    }

                    Local0++
                    Local6 = GSEL (PKBD, Arg0, Local0)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WKBD = Local6
                }

                Return (Zero)
            }

            Method (SPAS, 1, NotSerialized)
            {
                CLRP ()
                Local6 = GSEL (PTYP, Arg0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WPTY = Local6
                Local0 = SLEN (PTYP, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                WPAS = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    PSTR = Zero
                }

                WPNW = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                Local0++
                Local6 = GSEL (PENC, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WENC = Local6
                If ((Local6 == Zero))
                {
                    Local0 += SLEN (PENC, Zero)
                    If ((DerefOf (Arg0 [Local0]) != 0x2C))
                    {
                        Return (0x02)
                    }

                    Local0++
                    Local6 = GSEL (PKBD, Arg0, Local0)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WKBD = Local6
                }

                Return (Zero)
            }

            Method (WSET, 2, NotSerialized)
            {
                Local0 = ILEN /* \_SB_.WMI1.ILEN */
                Local0++
                Local1 = GITM (IBUF, Arg0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                WITM = Local1
                Local3 = DerefOf (Arg0 [Local1])
                Local4 = DerefOf (Local3 [One])
                Local2 = SizeOf (Local4)
                Local2++
                Local4 = DerefOf (Local3 [Zero])
                If ((Local4 == 0x22))
                {
                    If ((ALMD (Local2) != Zero))
                    {
                        Return (0x02)
                    }

                    Local2 += 0x0A
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 == 0x23))
                {
                    If ((ALMT (Local2) != Zero))
                    {
                        Return (0x02)
                    }

                    Local2 += 0x08
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 < 0x64))
                {
                    Local5 = DerefOf (Arg1 [Local4])
                    Local6 = GSEL (Local5, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WSEL = Local6
                    Local2 += SLEN (Local5, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }
                Else
                {
                    WLS0 = 0x3F
                    WLS1 = 0x3F
                    WLS2 = 0x3F
                    WLS3 = 0x3F
                    WLS4 = 0x3F
                    WLS5 = 0x3F
                    WLS6 = 0x3F
                    WLS7 = 0x3F
                    WLS8 = 0x3F
                    WLS9 = 0x3F
                    WLSA = 0x3F
                    WLSB = 0x3F
                    WLSC = 0x3F
                    WLSD = 0x3F
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS0 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS1 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS2 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS3 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS4 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS5 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS6 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS7 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS8 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS9 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSA = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSB = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSC = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSD = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }
                }

                If (((Local4 == 0x2C) && (Local2 < Local0)))
                {
                    Local2++
                    Local0 = CPAS (IBUF, Local2)
                    If ((Local0 != Zero))
                    {
                        Return (Local0)
                    }
                }

                Return (Zero)
            }

            Method (ALMD, 1, NotSerialized)
            {
                Local0 = Arg0
                Local1 = VR02 /* \_SB_.WMI1.VR02 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC1 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x2F))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR03 /* \_SB_.WMI1.VR03 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC2 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x2F))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR01 /* \_SB_.WMI1.VR01 */
                Local2 = GSEL (Local1, IBUF, Local0)
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC0 = Local2
                Return (Zero)
            }

            Method (ALMT, 1, NotSerialized)
            {
                Local0 = Arg0
                Local1 = VR04 /* \_SB_.WMI1.VR04 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC0 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x3A))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR05 /* \_SB_.WMI1.VR05 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC1 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x3A))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR05 /* \_SB_.WMI1.VR05 */
                Local2 = GSEL (Local1, IBUF, Local0)
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC2 = Local2
                Return (Zero)
            }

            Name (WQBA, Buffer (0x0AA7)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x97, 0x0A, 0x00, 0x00, 0x56, 0x49, 0x00, 0x00,  // ....VI..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0x5E, 0xA3, 0x00, 0x01, 0x06, 0x18, 0x42,  // .^.....B
                /* 0020 */  0x10, 0x19, 0x10, 0x0A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x4C, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PL...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x0E, 0x88, 0x14, 0x40, 0x48, 0x26, 0x84,  // 1...@H&.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0xA2, 0xC9, 0xA0, 0x00, 0xA7,  // ........
                /* 0060 */  0x08, 0x82, 0xB4, 0x65, 0x01, 0xBA, 0x05, 0xF8,  // ...e....
                /* 0068 */  0x16, 0xA0, 0x1D, 0x42, 0x68, 0x15, 0x0A, 0x30,  // ...Bh..0
                /* 0070 */  0x29, 0xC0, 0x27, 0x98, 0x2C, 0x0A, 0x90, 0x0D,  // ).'.,...
                /* 0078 */  0x26, 0xDB, 0x70, 0x64, 0x18, 0x4C, 0xE4, 0x18,  // &.pd.L..
                /* 0080 */  0x50, 0x62, 0xC6, 0x80, 0xD2, 0x39, 0x05, 0xD9,  // Pb...9..
                /* 0088 */  0x04, 0x16, 0x74, 0xA1, 0x28, 0x9A, 0x46, 0x94,  // ..t.(.F.
                /* 0090 */  0x04, 0x07, 0x75, 0x0C, 0x11, 0x82, 0x97, 0x2B,  // ..u....+
                /* 0098 */  0x40, 0xF2, 0x04, 0xA4, 0x79, 0x5E, 0xB2, 0x3E,  // @...y^.>
                /* 00A0 */  0x08, 0x0D, 0x81, 0x8D, 0x80, 0x47, 0x91, 0x00,  // .....G..
                /* 00A8 */  0xC2, 0x62, 0x2C, 0x53, 0xE2, 0x61, 0x50, 0x1E,  // .b,S.aP.
                /* 00B0 */  0x40, 0x24, 0x67, 0xA8, 0x28, 0x60, 0x7B, 0x9D,  // @$g.(`{.
                /* 00B8 */  0x88, 0x86, 0x75, 0x9C, 0x4C, 0x12, 0x1C, 0x6A,  // ..u.L..j
                /* 00C0 */  0x94, 0x96, 0x28, 0xC0, 0xFC, 0xC8, 0x34, 0x91,  // ..(...4.
                /* 00C8 */  0x63, 0x6B, 0x7A, 0xC4, 0x82, 0x64, 0xD2, 0x86,  // ckz..d..
                /* 00D0 */  0x82, 0x1A, 0xBA, 0xA7, 0x75, 0x52, 0x9E, 0x68,  // ....uR.h
                /* 00D8 */  0xC4, 0x83, 0x32, 0x4C, 0x02, 0x8F, 0x82, 0xA1,  // ..2L....
                /* 00E0 */  0x71, 0x82, 0xB2, 0x20, 0xE4, 0x60, 0xA0, 0x28,  // q.. .`.(
                /* 00E8 */  0xC0, 0x93, 0xF0, 0x1C, 0x8B, 0x17, 0x20, 0x7C,  // ...... |
                /* 00F0 */  0xC6, 0xE4, 0x28, 0x10, 0x23, 0x81, 0x8F, 0x04,  // ..(.#...
                /* 00F8 */  0x1E, 0xCD, 0x31, 0x63, 0x81, 0xC2, 0x05, 0x3C,  // ..1c...<
                /* 0100 */  0x9F, 0x63, 0x88, 0x1C, 0xF7, 0x50, 0x63, 0x1C,  // .c...Pc.
                /* 0108 */  0x45, 0xE4, 0x04, 0xEF, 0x00, 0x51, 0x8C, 0x56,  // E....Q.V
                /* 0110 */  0xD0, 0xBC, 0x85, 0x18, 0x2C, 0x9A, 0xC1, 0x7A,  // ....,..z
                /* 0118 */  0x06, 0x27, 0x83, 0x4E, 0xF0, 0xFF, 0x3F, 0x02,  // .'.N..?.
                /* 0120 */  0x7E, 0x5C, 0xB0, 0x47, 0x01, 0x56, 0x07, 0xA5,  // ~\.G.V..
                /* 0128 */  0x69, 0x98, 0xA0, 0x7B, 0x01, 0xD6, 0x04, 0x18,  // i..{....
                /* 0130 */  0x13, 0xF0, 0x6C, 0x88, 0x51, 0x99, 0x00, 0x67,  // ..l.Q..g
                /* 0138 */  0xF7, 0x05, 0xCD, 0xA8, 0x2D, 0x01, 0xE6, 0x04,  // ....-...
                /* 0140 */  0x68, 0x13, 0xE0, 0x0D, 0x41, 0x28, 0xE7, 0x19,  // h...A(..
                /* 0148 */  0xE5, 0x58, 0x4E, 0x31, 0xCA, 0xC3, 0x40, 0xCC,  // .XN1..@.
                /* 0150 */  0x97, 0x81, 0xA0, 0x51, 0x62, 0xC4, 0x3C, 0x97,  // ...Qb.<.
                /* 0158 */  0xB8, 0x86, 0x8D, 0x10, 0x23, 0xE4, 0x29, 0x04,  // ....#.).
                /* 0160 */  0x8A, 0xDB, 0xFE, 0x20, 0xC8, 0xA0, 0x71, 0xA3,  // ... ..q.
                /* 0168 */  0xF7, 0x69, 0xE1, 0xAC, 0x4E, 0xE0, 0xE8, 0x9F,  // .i..N...
                /* 0170 */  0x14, 0x4C, 0xE0, 0x29, 0x1F, 0xD8, 0xB3, 0xC1,  // .L.)....
                /* 0178 */  0x09, 0x1C, 0x6B, 0xD4, 0x18, 0xA7, 0x92, 0xC0,  // ..k.....
                /* 0180 */  0xB1, 0x1F, 0x10, 0xD2, 0x00, 0xA2, 0x48, 0xF0,  // ......H.
                /* 0188 */  0xA8, 0xD3, 0x82, 0xCF, 0x05, 0x1E, 0xDA, 0x41,  // .......A
                /* 0190 */  0x7B, 0x8E, 0x27, 0x10, 0xE4, 0x10, 0x8E, 0xE0,  // {.'.....
                /* 0198 */  0x89, 0xE1, 0x81, 0xC0, 0x63, 0x60, 0x37, 0x05,  // ....c`7.
                /* 01A0 */  0x1F, 0x01, 0x7C, 0x42, 0xC0, 0xBB, 0x06, 0xD4,  // ..|B....
                /* 01A8 */  0xD5, 0xE0, 0xC1, 0x80, 0x0D, 0x3A, 0x1C, 0x66,  // .....:.f
                /* 01B0 */  0xBC, 0x1E, 0x7E, 0xB8, 0x13, 0x38, 0xC9, 0x07,  // ..~..8..
                /* 01B8 */  0x0C, 0x7E, 0xD8, 0xF0, 0xE0, 0x70, 0xF3, 0x3C,  // .~...p.<
                /* 01C0 */  0x99, 0x23, 0x2B, 0x55, 0x80, 0xD9, 0xC3, 0x81,  // .#+U....
                /* 01C8 */  0x0E, 0x12, 0x3E, 0x6D, 0xB0, 0x33, 0x00, 0x46,  // ..>m.3.F
                /* 01D0 */  0xFE, 0x20, 0x50, 0x23, 0x33, 0xB4, 0xC7, 0xFD,  // . P#3...
                /* 01D8 */  0xD2, 0x61, 0xC8, 0xE7, 0x84, 0xC3, 0x62, 0x62,  // .a....bb
                /* 01E0 */  0x4F, 0x1D, 0x74, 0x3C, 0xE0, 0xBF, 0x8C, 0x3C,  // O.t<...<
                /* 01E8 */  0x67, 0x78, 0xFA, 0x9E, 0xAF, 0x09, 0x86, 0x1D,  // gx......
                /* 01F0 */  0x38, 0x7A, 0x20, 0x86, 0x7E, 0xD8, 0x38, 0x8C,  // 8z .~.8.
                /* 01F8 */  0xD3, 0xF0, 0xFD, 0xC3, 0xE7, 0x05, 0x18, 0xA7,  // ........
                /* 0200 */  0x00, 0x8F, 0xDC, 0xFF, 0xFF, 0x43, 0x8A, 0x4F,  // .....C.O
                /* 0208 */  0x13, 0xFC, 0x68, 0xE1, 0xD3, 0x04, 0xBB, 0x1E,  // ..h.....
                /* 0210 */  0x9C, 0xC6, 0x73, 0x80, 0x87, 0x73, 0x56, 0x3E,  // ..s..sV>
                /* 0218 */  0x4C, 0x80, 0xED, 0x7E, 0xC2, 0x46, 0xF4, 0x6E,  // L..~.F.n
                /* 0220 */  0xE1, 0xD1, 0x60, 0x4F, 0x01, 0xE0, 0x3B, 0xBF,  // ..`O..;.
                /* 0228 */  0x80, 0xF3, 0xAE, 0xC1, 0x06, 0x0B, 0xE3, 0xFC,  // ........
                /* 0230 */  0x02, 0x3C, 0x4E, 0x08, 0x1E, 0x02, 0x3F, 0x48,  // .<N...?H
                /* 0238 */  0x78, 0x08, 0x7C, 0x00, 0xCF, 0x1F, 0x67, 0x68,  // x.|...gh
                /* 0240 */  0xA5, 0xF3, 0x42, 0x0E, 0x0C, 0xDE, 0x39, 0x07,  // ..B...9.
                /* 0248 */  0xC6, 0x28, 0x78, 0x9E, 0xC7, 0x86, 0x09, 0x14,  // .(x.....
                /* 0250 */  0xE4, 0x35, 0xA0, 0x50, 0xCF, 0x02, 0x0A, 0xE3,  // .5.P....
                /* 0258 */  0x53, 0x0D, 0xF0, 0xFA, 0xFF, 0x9F, 0x6A, 0x80,  // S.....j.
                /* 0260 */  0xCB, 0xE1, 0x00, 0x77, 0x72, 0x80, 0x7B, 0x2F,  // ...wr.{/
                /* 0268 */  0x60, 0x17, 0x87, 0xE7, 0x1A, 0xB8, 0xA2, 0xCF,  // `.......
                /* 0270 */  0x35, 0x50, 0xEF, 0x2D, 0xC5, 0x8D, 0x51, 0xD7,  // 5P.-..Q.
                /* 0278 */  0x98, 0x20, 0x8F, 0x02, 0x8F, 0x34, 0x51, 0x9E,  // . ...4Q.
                /* 0280 */  0x67, 0xDE, 0x65, 0x22, 0x3C, 0xDB, 0xF8, 0x5A,  // g.e"<..Z
                /* 0288 */  0xE3, 0x29, 0xC4, 0xF1, 0xB5, 0xC6, 0x88, 0x2F,  // .)...../
                /* 0290 */  0x13, 0xEF, 0x36, 0xC6, 0x3D, 0xB8, 0xC7, 0x9A,  // ..6.=...
                /* 0298 */  0x87, 0x1C, 0x83, 0x1C, 0x4D, 0x84, 0x17, 0x83,  // ....M...
                /* 02A0 */  0x80, 0x8F, 0x37, 0x3E, 0xD6, 0x80, 0x57, 0xCC,  // ..7>..W.
                /* 02A8 */  0x0B, 0x45, 0x16, 0x8E, 0x35, 0x80, 0xC6, 0xFF,  // .E..5...
                /* 02B0 */  0xFF, 0xB1, 0x06, 0xB8, 0x61, 0x3D, 0xA0, 0x80,  // ....a=..
                /* 02B8 */  0xEF, 0xC8, 0xC0, 0x6E, 0x28, 0xF0, 0x4E, 0x28,  // ...n(.N(
                /* 02C0 */  0x80, 0x9F, 0xC4, 0x2F, 0x00, 0x1D, 0x39, 0x9C,  // .../..9.
                /* 02C8 */  0x16, 0x44, 0x36, 0xDE, 0x00, 0x3E, 0x05, 0x50,  // .D6..>.P
                /* 02D0 */  0x35, 0x40, 0x9A, 0x26, 0x6C, 0x82, 0xE9, 0xC9,  // 5@.&l...
                /* 02D8 */  0x05, 0xEF, 0x23, 0x81, 0x73, 0x93, 0x28, 0xF9,  // ..#.s.(.
                /* 02E0 */  0xB0, 0x28, 0x9C, 0xB3, 0x1E, 0x44, 0x28, 0x88,  // .(...D(.
                /* 02E8 */  0x01, 0x1D, 0xE4, 0x38, 0x81, 0x3E, 0xA3, 0xF8,  // ...8.>..
                /* 02F0 */  0x20, 0x72, 0xA2, 0x4F, 0x84, 0x1E, 0x94, 0x87,  //  r.O....
                /* 02F8 */  0xF1, 0x8E, 0xC2, 0x4E, 0x20, 0x3E, 0x4C, 0x78,  // ...N >Lx
                /* 0300 */  0xEC, 0x3E, 0x26, 0xF0, 0x7F, 0x8C, 0x67, 0x63,  // .>&...gc
                /* 0308 */  0x74, 0xAB, 0xC1, 0xD0, 0xFF, 0xFF, 0x9C, 0xC2,  // t.......
                /* 0310 */  0xC1, 0x7C, 0x10, 0xE1, 0x04, 0x75, 0xDD, 0x24,  // .|...u.$
                /* 0318 */  0x40, 0xA6, 0xEF, 0xA8, 0x00, 0x0A, 0x20, 0xDF,  // @..... .
                /* 0320 */  0x0B, 0x7C, 0x0E, 0x78, 0x36, 0x60, 0x63, 0x78,  // .|.x6`cx
                /* 0328 */  0x14, 0x30, 0x9A, 0xD1, 0x79, 0xF8, 0xC9, 0xA2,  // .0..y...
                /* 0330 */  0xE2, 0x4E, 0x96, 0x82, 0x78, 0xB2, 0x8E, 0x32,  // .N..x..2
                /* 0338 */  0x59, 0xF4, 0x4C, 0x7C, 0xAF, 0xF0, 0x8C, 0xDE,  // Y.L|....
                /* 0340 */  0xB4, 0x3C, 0x47, 0x4F, 0xD8, 0xF7, 0x10, 0x58,  // .<GO...X
                /* 0348 */  0x87, 0x81, 0x90, 0x0F, 0x06, 0x9E, 0x86, 0xE1,  // ........
                /* 0350 */  0x3C, 0x59, 0x0E, 0xE7, 0xC9, 0xF2, 0xB1, 0xF8,  // <Y......
                /* 0358 */  0x1A, 0x02, 0x3E, 0x81, 0xB3, 0x05, 0x39, 0x3C,  // ..>...9<
                /* 0360 */  0x26, 0xD6, 0xA8, 0xE8, 0x55, 0xC8, 0xC3, 0xE3,  // &...U...
                /* 0368 */  0x97, 0x03, 0xCF, 0xE7, 0x19, 0xE1, 0x28, 0x9F,  // ......(.
                /* 0370 */  0x24, 0x70, 0x18, 0xCF, 0x24, 0x1E, 0xA2, 0x6F,  // $p..$..o
                /* 0378 */  0x45, 0xB0, 0x26, 0x72, 0xD2, 0xBE, 0x2D, 0x9C,  // E.&r..-.
                /* 0380 */  0x6C, 0xD0, 0xD7, 0x33, 0xCC, 0xAD, 0x08, 0xF6,  // l..3....
                /* 0388 */  0xFF, 0xFF, 0x56, 0x04, 0xE7, 0x82, 0x06, 0x33,  // ..V....3
                /* 0390 */  0xD3, 0xBD, 0x0A, 0x15, 0xEB, 0x5E, 0x05, 0x88,  // .....^..
                /* 0398 */  0x1D, 0xD6, 0x6B, 0x8F, 0x0F, 0x56, 0x70, 0xEF,  // ..k..Vp.
                /* 03A0 */  0x55, 0x70, 0x2F, 0x55, 0xCF, 0x0A, 0xC7, 0x18,  // Up/U....
                /* 03A8 */  0xFE, 0x61, 0x2A, 0xC6, 0x29, 0xBD, 0x76, 0x1A,  // .a*.).v.
                /* 03B0 */  0x28, 0x4C, 0x94, 0x78, 0xEF, 0x55, 0x1E, 0xE3,  // (L.x.U..
                /* 03B8 */  0x7B, 0x15, 0xBB, 0x42, 0x85, 0x89, 0xF5, 0x72,  // {..B...r
                /* 03C0 */  0x65, 0xD4, 0xD7, 0x89, 0x70, 0x81, 0x82, 0x44,  // e...p..D
                /* 03C8 */  0x7A, 0xB5, 0x8A, 0x12, 0x39, 0xBE, 0x21, 0xDF,  // z...9.!.
                /* 03D0 */  0xAB, 0xC0, 0x2B, 0xE7, 0x5E, 0x05, 0xB2, 0xFF,  // ..+.^...
                /* 03D8 */  0xFF, 0xBD, 0x0A, 0x30, 0x8F, 0xF6, 0x5E, 0x05,  // ...0..^.
                /* 03E0 */  0xC6, 0x6B, 0x03, 0xBB, 0x21, 0xC1, 0x02, 0x7A,  // .k..!..z
                /* 03E8 */  0xB1, 0x02, 0x0C, 0x65, 0xBE, 0x58, 0xD1, 0xBC,  // ...e.X..
                /* 03F0 */  0x17, 0x2B, 0xC4, 0xFF, 0xFF, 0x5C, 0xC2, 0xF4,  // .+...\..
                /* 03F8 */  0x5C, 0xAC, 0xC8, 0x3C, 0xE1, 0xDF, 0xAC, 0x00,  // \..<....
                /* 0400 */  0x4E, 0xFF, 0xFF, 0x6F, 0x56, 0x80, 0xB1, 0x7B,  // N..oV..{
                /* 0408 */  0x11, 0xE6, 0x68, 0x05, 0x2F, 0xE5, 0xCD, 0x8A,  // ..h./...
                /* 0410 */  0xC6, 0x59, 0x86, 0x02, 0x2E, 0x88, 0xC2, 0xF8,  // .Y......
                /* 0418 */  0x66, 0x05, 0x38, 0xBA, 0xAE, 0xE0, 0x86, 0x0C,  // f.8.....
                /* 0420 */  0x17, 0x2C, 0x4A, 0x30, 0x1F, 0x42, 0x3C, 0x9D,  // .,J0.B<.
                /* 0428 */  0x23, 0x7E, 0x48, 0x78, 0x09, 0x78, 0xCC, 0xF1,  // #~Hx.x..
                /* 0430 */  0x80, 0x1F, 0x08, 0x7C, 0xB9, 0x02, 0xD3, 0xFF,  // ...|....
                /* 0438 */  0x9F, 0xC0, 0x27, 0xDF, 0xB3, 0x7C, 0x9B, 0x7A,  // ..'..|.z
                /* 0440 */  0xEF, 0xE5, 0x07, 0xAC, 0xF7, 0x2A, 0x1F, 0x7E,  // .....*.~
                /* 0448 */  0x63, 0xBD, 0x33, 0xBC, 0x5C, 0x79, 0x24, 0x51,  // c.3.\y$Q
                /* 0450 */  0x4E, 0x22, 0x94, 0xEF, 0x56, 0xEF, 0x55, 0x46,  // N"..V.UF
                /* 0458 */  0x89, 0xF8, 0x42, 0xEC, 0x53, 0xB0, 0xA1, 0x8D,  // ..B.S...
                /* 0460 */  0xF2, 0x54, 0x11, 0xDD, 0x78, 0x2F, 0x57, 0xE0,  // .T..x/W.
                /* 0468 */  0x95, 0x74, 0xB9, 0x02, 0x68, 0x32, 0xFC, 0x97,  // .t..h2..
                /* 0470 */  0x2B, 0xF0, 0xDD, 0x1C, 0xB0, 0xD7, 0x24, 0x38,  // +.....$8
                /* 0478 */  0xFF, 0xFF, 0x6B, 0x12, 0xBF, 0x5E, 0x01, 0x7E,  // ..k..^.~
                /* 0480 */  0xB2, 0x5F, 0xAF, 0x68, 0xEE, 0xEB, 0x15, 0x4A,  // ._.h...J
                /* 0488 */  0x14, 0x84, 0x14, 0x01, 0x69, 0xA6, 0xE0, 0xB9,  // ....i...
                /* 0490 */  0x5F, 0x01, 0x9C, 0xF8, 0xFF, 0xDF, 0xAF, 0x00,  // _.......
                /* 0498 */  0xCB, 0xE1, 0xEE, 0x57, 0x40, 0xEF, 0x76, 0x04,  // ...W@.v.
                /* 04A0 */  0x5E, 0x94, 0xB7, 0x23, 0xEC, 0x15, 0x0B, 0x9F,  // ^..#....
                /* 04A8 */  0xF1, 0x8A, 0x45, 0xC3, 0xAC, 0x44, 0xF1, 0xD6,  // ..E..D..
                /* 04B0 */  0x44, 0x61, 0x7C, 0xC5, 0x02, 0x26, 0xFF, 0xFF,  // Da|..&..
                /* 04B8 */  0x2B, 0x16, 0x30, 0x3B, 0x88, 0xE2, 0x46, 0x0D,  // +.0;..F.
                /* 04C0 */  0xF7, 0xE2, 0xE4, 0x5B, 0x8F, 0xE7, 0x1B, 0xD1,  // ...[....
                /* 04C8 */  0x77, 0x18, 0xCC, 0x09, 0x0B, 0xC6, 0x0D, 0x0B,  // w.......
                /* 04D0 */  0xFE, 0x90, 0x1E, 0x86, 0x7D, 0x92, 0x78, 0xC7,  // ....}.x.
                /* 04D8 */  0xF2, 0xD1, 0xCA, 0x20, 0x6F, 0xC0, 0x4F, 0x56,  // ... o.OV
                /* 04E0 */  0x0F, 0x56, 0x51, 0x8C, 0x10, 0xF0, 0x78, 0xDE,  // .VQ...x.
                /* 04E8 */  0x85, 0x7D, 0xB4, 0x7A, 0xD3, 0x32, 0x4A, 0xEC,  // .}.z.2J.
                /* 04F0 */  0x58, 0xBE, 0x50, 0x3D, 0x6B, 0xF9, 0x9A, 0x65,  // X.P=k..e
                /* 04F8 */  0x88, 0xB8, 0x0F, 0xC4, 0xBE, 0x61, 0x01, 0xB6,  // .....a..
                /* 0500 */  0xFF, 0xFF, 0x37, 0x2C, 0xC0, 0xD1, 0xC5, 0x81,  // ..7,....
                /* 0508 */  0x1F, 0x1C, 0xB0, 0x37, 0x2C, 0xC0, 0xE7, 0x4C,  // ...7,..L
                /* 0510 */  0xC1, 0x73, 0xC3, 0x02, 0x36, 0xFF, 0xFF, 0x1B,  // .s..6...
                /* 0518 */  0x16, 0xC0, 0xFF, 0xFF, 0xFF, 0x0D, 0x0B, 0x38,  // .......8
                /* 0520 */  0xDC, 0xAE, 0xB0, 0xB7, 0x2C, 0xEC, 0xED, 0x85,  // ....,...
                /* 0528 */  0xAC, 0x82, 0x86, 0x5A, 0x89, 0x82, 0x7F, 0xAF,  // ...Z....
                /* 0530 */  0x0C, 0x43, 0x6F, 0x58, 0x80, 0xA3, 0x71, 0x7B,  // .CoX..q{
                /* 0538 */  0xD4, 0xE0, 0x38, 0x1B, 0x3C, 0x49, 0x60, 0xCE,  // ..8.<I`.
                /* 0540 */  0xD5, 0xB8, 0xD9, 0x1C, 0x5C, 0xE0, 0x08, 0xBD,  // ....\...
                /* 0548 */  0x83, 0x6A, 0xEE, 0xEC, 0x92, 0x02, 0xE3, 0x96,  // .j......
                /* 0550 */  0x05, 0xF7, 0x52, 0xF5, 0xD0, 0x10, 0xE5, 0x20,  // ..R.... 
                /* 0558 */  0x5E, 0x85, 0x1F, 0xAC, 0x1E, 0xA5, 0x8E, 0xEC,  // ^.......
                /* 0560 */  0xF1, 0xEA, 0x69, 0xD8, 0xC7, 0x2C, 0xDF, 0xB2,  // ..i..,..
                /* 0568 */  0x0C, 0x15, 0xE1, 0x2D, 0x8B, 0x9D, 0x21, 0xE2,  // ...-..!.
                /* 0570 */  0xC5, 0x8A, 0x12, 0xE2, 0xBD, 0x22, 0xB4, 0xEF,  // ....."..
                /* 0578 */  0x5C, 0x06, 0x7F, 0x34, 0x36, 0x6A, 0xD0, 0x97,  // \..46j..
                /* 0580 */  0xE3, 0xB7, 0x2C, 0x78, 0xFF, 0xFF, 0x5B, 0x16,  // ..,x..[.
                /* 0588 */  0x7C, 0x91, 0x7F, 0x15, 0x9D, 0x08, 0x7C, 0xCB,  // |.....|.
                /* 0590 */  0x02, 0xF8, 0x11, 0x0C, 0x42, 0x4E, 0x06, 0x8E,  // ....BN..
                /* 0598 */  0x3E, 0x2F, 0xE0, 0x07, 0xF0, 0x30, 0xE2, 0x21,  // >/...0.!
                /* 05A0 */  0xB1, 0x00, 0x03, 0xA7, 0xF7, 0x25, 0x9F, 0x29,  // .....%.)
                /* 05A8 */  0xF8, 0x01, 0xC3, 0x67, 0x0A, 0x76, 0x3D, 0x88,  // ...g.v=.
                /* 05B0 */  0xFE, 0x18, 0xE0, 0x73, 0x09, 0x66, 0x70, 0xE0,  // ...s.fp.
                /* 05B8 */  0xBF, 0x56, 0x1C, 0xBA, 0x47, 0xF1, 0xFA, 0x60,  // .V..G..`
                /* 05C0 */  0x02, 0x0F, 0x8E, 0xFF, 0xFF, 0x07, 0x07, 0xF7,  // ........
                /* 05C8 */  0xCE, 0x70, 0x44, 0xBE, 0xC3, 0x78, 0x70, 0x60,  // .pD..xp`
                /* 05D0 */  0x3B, 0x08, 0x00, 0x87, 0xC1, 0xE1, 0x43, 0x0D,  // ;.....C.
                /* 05D8 */  0x0E, 0x3D, 0x1E, 0x03, 0x87, 0xF4, 0x79, 0x8C,  // .=....y.
                /* 05E0 */  0x5D, 0x18, 0x1E, 0x72, 0x3C, 0x34, 0xB0, 0x01,  // ]..r<4..
                /* 05E8 */  0x7A, 0x68, 0xC0, 0x72, 0x12, 0x4F, 0x21, 0x87,  // zh.r.O!.
                /* 05F0 */  0x06, 0x66, 0x09, 0x43, 0x03, 0x4A, 0xF1, 0x86,  // .f.C.J..
                /* 05F8 */  0x46, 0xFF, 0xFF, 0x43, 0xE3, 0x43, 0xF2, 0x61,  // F..C.C.a
                /* 0600 */  0x21, 0xE6, 0x53, 0x4E, 0x84, 0xF7, 0x05, 0x9F,  // !.SN....
                /* 0608 */  0xA0, 0x18, 0xFA, 0x6B, 0x8A, 0x6F, 0x17, 0xBE,  // ...k.o..
                /* 0610 */  0x09, 0xE2, 0xC6, 0x07, 0xAE, 0x4B, 0xA7, 0xC7,  // .....K..
                /* 0618 */  0x07, 0x7C, 0x8E, 0x5C, 0x1E, 0x1F, 0xEE, 0xE8,  // .|.\....
                /* 0620 */  0xE4, 0xF1, 0xC1, 0x70, 0x79, 0x95, 0x21, 0x47,  // ...py.!G
                /* 0628 */  0x13, 0x1F, 0xAD, 0xD8, 0xF0, 0xC0, 0x76, 0xD3,  // ......v.
                /* 0630 */  0xF3, 0xF0, 0x80, 0xCF, 0x75, 0x13, 0x8C, 0x57,  // ....u..W
                /* 0638 */  0x48, 0x7E, 0x2D, 0x81, 0x71, 0x82, 0xC2, 0x5F,  // H~-.q.._
                /* 0640 */  0x37, 0xC1, 0xFB, 0xFF, 0xBF, 0x6E, 0x02, 0xCF,  // 7....n..
                /* 0648 */  0x51, 0x70, 0xAD, 0x97, 0x6C, 0x1A, 0xE4, 0x95,  // Qp..l...
                /* 0650 */  0xA3, 0x58, 0x2F, 0x02, 0x0A, 0xE3, 0x33, 0x1B,  // .X/...3.
                /* 0658 */  0xE0, 0x68, 0xAC, 0xCF, 0x6C, 0x60, 0xB9, 0x17,  // .h..l`..
                /* 0660 */  0xB0, 0x1B, 0x1B, 0xDC, 0xD3, 0x1A, 0xEC, 0xBB,  // ........
                /* 0668 */  0xC3, 0xC3, 0xD9, 0x63, 0xDA, 0xA3, 0xDA, 0x03,  // ...c....
                /* 0670 */  0x9A, 0x8F, 0xD8, 0x31, 0xDE, 0xD2, 0x82, 0xC4,  // ...1....
                /* 0678 */  0x89, 0xF0, 0x3A, 0xF0, 0xB4, 0xE6, 0x4B, 0x46,  // ..:...KF
                /* 0680 */  0xBC, 0x40, 0x4F, 0x6B, 0xC6, 0x88, 0xF3, 0xD2,  // .@Ok....
                /* 0688 */  0x66, 0xC4, 0x57, 0x8A, 0x10, 0x0F, 0x6B, 0x3E,  // f.W...k>
                /* 0690 */  0xB9, 0x19, 0xEF, 0x61, 0x22, 0x5C, 0x98, 0x17,  // ...a"\..
                /* 0698 */  0xB6, 0xA7, 0x35, 0x70, 0xFC, 0xFF, 0x4F, 0x6B,  // ..5p..Ok
                /* 06A0 */  0x70, 0xE4, 0x5C, 0xB1, 0x01, 0x9A, 0x5C, 0xF4,  // p.\...\.
                /* 06A8 */  0x71, 0x87, 0x14, 0xB0, 0x5C, 0x1B, 0xD8, 0x2D,  // q...\..-
                /* 06B0 */  0x05, 0xDE, 0x05, 0x1B, 0x38, 0xFF, 0xFF, 0x8F,  // ....8...
                /* 06B8 */  0x28, 0xE0, 0xCB, 0x72, 0xC1, 0xA6, 0x39, 0x2E,  // (..r..9.
                /* 06C0 */  0xD8, 0x28, 0x0E, 0xAB, 0x01, 0xD2, 0x3C, 0xE1,  // .(....<.
                /* 06C8 */  0x5F, 0xAF, 0xC1, 0x3F, 0x09, 0x5F, 0xAF, 0x01,  // _..?._..
                /* 06D0 */  0xDB, 0xB7, 0x58, 0xDC, 0xF5, 0x1A, 0x58, 0xFD,  // ..X...X.
                /* 06D8 */  0xFF, 0xAF, 0xD7, 0xC0, 0x52, 0xF0, 0x48, 0xE9,  // ....R.H.
                /* 06E0 */  0x9D, 0x1A, 0x5C, 0x37, 0x6D, 0x3C, 0xE8, 0x9B,  // ..\7m<..
                /* 06E8 */  0x36, 0x4C, 0xC1, 0xB7, 0x28, 0x1A, 0x85, 0x5C,  // 6L..(..\
                /* 06F0 */  0xD1, 0x16, 0x42, 0x61, 0x7C, 0x8B, 0x02, 0x1C,  // ..Ba|...
                /* 06F8 */  0x61, 0xBF, 0x45, 0x81, 0xE5, 0xE2, 0xF4, 0x16,  // a.E.....
                /* 0700 */  0x85, 0x9F, 0x81, 0x07, 0xED, 0xBB, 0x0E, 0xC3,  // ........
                /* 0708 */  0xF4, 0x1D, 0x1A, 0xFE, 0xA9, 0xE9, 0xB9, 0xE9,  // ........
                /* 0710 */  0xC1, 0xE9, 0xA1, 0xD9, 0x07, 0x29, 0x1F, 0x0E,  // .....)..
                /* 0718 */  0x9E, 0x9F, 0xFE, 0xFF, 0x31, 0xDE, 0xEB, 0x7C,  // ....1..|
                /* 0720 */  0x93, 0x7A, 0x8D, 0xF2, 0x05, 0xE6, 0x18, 0x22,  // .z....."
                /* 0728 */  0x46, 0x79, 0x99, 0x36, 0x44, 0x3C, 0x9F, 0x9A,  // Fy.6D<..
                /* 0730 */  0x7C, 0x56, 0x88, 0x1B, 0xE2, 0x21, 0xDA, 0x08,  // |V...!..
                /* 0738 */  0x51, 0x9F, 0xA7, 0x3D, 0xA1, 0xD7, 0x28, 0xF0,  // Q..=..(.
                /* 0740 */  0x0A, 0xBA, 0x46, 0x01, 0x34, 0xB9, 0x1F, 0xE1,  // ..F.4...
                /* 0748 */  0xAE, 0x51, 0x60, 0xB9, 0x37, 0xB0, 0xF3, 0x10,  // .Q`.7...
                /* 0750 */  0xBF, 0x12, 0xF9, 0xDA, 0x00, 0xE3, 0x1E, 0x05,  // ........
                /* 0758 */  0xE7, 0xFF, 0x7F, 0x8F, 0x02, 0x6C, 0x84, 0xB9,  // .....l..
                /* 0760 */  0x47, 0xD1, 0x20, 0xF7, 0x28, 0xD4, 0xC9, 0xC4,  // G. .(...
                /* 0768 */  0x97, 0x3A, 0x4F, 0x14, 0x1C, 0xE1, 0x2F, 0x52,  // .:O.../R
                /* 0770 */  0xA8, 0xD8, 0x24, 0x0A, 0x7D, 0x18, 0x42, 0xC5,  // ..$.}.B.
                /* 0778 */  0x3C, 0x8C, 0x50, 0x10, 0x03, 0x3A, 0xC3, 0x89,  // <.P..:..
                /* 0780 */  0x02, 0xAD, 0xE2, 0x44, 0x41, 0x6E, 0x31, 0x9E,  // ...DAn1.
                /* 0788 */  0xD4, 0x63, 0x14, 0xE0, 0x6B, 0x99, 0x1E, 0x2A,  // .c..k..*
                /* 0790 */  0x8F, 0x3C, 0x54, 0x0A, 0xE2, 0xA1, 0x3A, 0xCE,  // .<T...:.
                /* 0798 */  0x50, 0xD1, 0x93, 0xF4, 0xFC, 0x31, 0xFF, 0xFF,  // P....1..
                /* 07A0 */  0x83, 0x03, 0xF6, 0x20, 0x05, 0xF0, 0x42, 0xF5,  // ... ..B.
                /* 07A8 */  0x41, 0x8A, 0x86, 0x21, 0x57, 0xB8, 0x85, 0x50,  // A..!W..P
                /* 07B0 */  0x18, 0x1F, 0xA4, 0x00, 0x47, 0x37, 0x4B, 0xDC,  // ....G7K.
                /* 07B8 */  0x41, 0x0A, 0xC6, 0xFF, 0xFF, 0x20, 0x85, 0x19,  // A.... ..
                /* 07C0 */  0x01, 0x7B, 0x8D, 0x3C, 0x47, 0xC5, 0x7A, 0x5A,  // .{.<G.zZ
                /* 07C8 */  0x67, 0xA0, 0x71, 0xDE, 0x8A, 0x7C, 0x16, 0x64,  // g.q..|.d
                /* 07D0 */  0x17, 0x16, 0x1F, 0x8B, 0x4C, 0xE0, 0x93, 0x14,  // ....L...
                /* 07D8 */  0x5C, 0x8C, 0xA7, 0x5B, 0x1F, 0x6A, 0x0D, 0xF2,  // \..[.j..
                /* 07E0 */  0xF0, 0xF4, 0x74, 0xEB, 0xB3, 0xD4, 0xFB, 0x53,  // ..t....S
                /* 07E8 */  0xA0, 0x43, 0x7D, 0x88, 0xB2, 0xB8, 0x11, 0x90,  // .C}.....
                /* 07F0 */  0xFB, 0xAD, 0xAF, 0x53, 0xCF, 0xB6, 0x46, 0x79,  // ...S..Fy
                /* 07F8 */  0x7A, 0x08, 0x1A, 0x27, 0x62, 0xB4, 0x98, 0x86,  // z..'b...
                /* 0800 */  0x0A, 0x14, 0xE5, 0xCD, 0xCA, 0x27, 0x29, 0x80,  // .....').
                /* 0808 */  0x65, 0xFF, 0xFF, 0x93, 0x14, 0xB8, 0x2E, 0x0E,  // e.......
                /* 0810 */  0xEC, 0xE0, 0x80, 0xBB, 0x37, 0xC0, 0x39, 0x49,  // ....7.9I
                /* 0818 */  0x01, 0x7E, 0xF2, 0x9C, 0xA4, 0xE8, 0x15, 0xD7,  // .~......
                /* 0820 */  0x27, 0x29, 0x2E, 0x0A, 0x42, 0x8A, 0x80, 0x34,  // ')..B..4
                /* 0828 */  0x51, 0xB0, 0x5C, 0x71, 0x01, 0x97, 0xFF, 0xFF,  // Q.\q....
                /* 0830 */  0x2B, 0x2E, 0xC0, 0xC7, 0x58, 0x12, 0xEE, 0xB7,  // +...X...
                /* 0838 */  0x98, 0x20, 0x30, 0xA8, 0xAB, 0x14, 0xF0, 0xFA,  // . 0.....
                /* 0840 */  0xFF, 0x5F, 0xA5, 0x80, 0xCB, 0x15, 0xE0, 0x55,  // ._.....U
                /* 0848 */  0x0A, 0x2C, 0x87, 0xA5, 0x27, 0x85, 0x07, 0x22,  // .,..'.."
                /* 0850 */  0x23, 0xF1, 0x17, 0xC9, 0x7B, 0x83, 0x8D, 0x63,  // #...{..c
                /* 0858 */  0x09, 0xD8, 0x37, 0x13, 0x36, 0xEF, 0x17, 0x29,  // ..7.6..)
                /* 0860 */  0x98, 0xEE, 0x8F, 0xB8, 0x04, 0xE2, 0x89, 0x21,  // .......!
                /* 0868 */  0xF0, 0x5B, 0xCE, 0x91, 0xBE, 0x41, 0x19, 0xE7,  // .[...A..
                /* 0870 */  0xF9, 0xD6, 0x58, 0x4F, 0xB7, 0xEC, 0xCA, 0x74,  // ..XO...t
                /* 0878 */  0x1E, 0x51, 0x62, 0x84, 0x7B, 0x86, 0x8A, 0x11,  // .Qb.{...
                /* 0880 */  0x25, 0xC6, 0x2B, 0x55, 0x90, 0x80, 0x21, 0x9E,  // %.+U..!.
                /* 0888 */  0xA9, 0x42, 0x3E, 0xED, 0x7A, 0xB2, 0x2F, 0x53,  // .B>.z./S
                /* 0890 */  0xB6, 0x7F, 0x93, 0x02, 0x71, 0xFC, 0x17, 0x83,  // ....q...
                /* 0898 */  0x6E, 0x24, 0xBE, 0x49, 0x01, 0xFE, 0xFE, 0xFF,  // n$.I....
                /* 08A0 */  0x37, 0x29, 0xE0, 0x17, 0x78, 0xE0, 0xE8, 0x81,  // 7)..x...
                /* 08A8 */  0x18, 0xFA, 0x91, 0xC5, 0xD3, 0xF0, 0x79, 0xC3,  // ......y.
                /* 08B0 */  0x67, 0x4A, 0x63, 0x1C, 0x93, 0x07, 0xC7, 0x63,  // gJc....c
                /* 08B8 */  0x8D, 0x9C, 0xDE, 0x8A, 0x7C, 0x9E, 0xE0, 0x87,  // ....|...
                /* 08C0 */  0x0B, 0x9F, 0x27, 0xD8, 0x89, 0xE1, 0x34, 0x9E,  // ..'...4.
                /* 08C8 */  0x03, 0x7C, 0x10, 0xC1, 0x1C, 0x27, 0x80, 0xCB,  // .|...'..
                /* 08D0 */  0x39, 0x00, 0x7C, 0xF7, 0x40, 0xDC, 0x0D, 0x0C,  // 9.|.@...
                /* 08D8 */  0x2C, 0x33, 0xC2, 0x8F, 0x08, 0xC6, 0x05, 0x0C,  // ,3......
                /* 08E0 */  0xB8, 0xFE, 0xFF, 0x2F, 0x60, 0xE0, 0x1C, 0x05,  // .../`...
                /* 08E8 */  0xCF, 0x77, 0xEB, 0x04, 0x14, 0xDF, 0x2B, 0xD8,  // .w....+.
                /* 08F0 */  0xD5, 0xE1, 0xF9, 0x01, 0x1C, 0xB7, 0x4E, 0xB8,  // ......N.
                /* 08F8 */  0x07, 0x1B, 0x5F, 0x5F, 0xCE, 0xF2, 0x4C, 0x5F,  // ..__..L_
                /* 0900 */  0x68, 0x9E, 0x6A, 0x18, 0xCC, 0xE3, 0x4D, 0x84,  // h.j...M.
                /* 0908 */  0x38, 0x51, 0x8C, 0x77, 0x96, 0x46, 0x79, 0xFF,  // 8Q.w.Fy.
                /* 0910 */  0x88, 0xF1, 0x6A, 0x13, 0x23, 0x4A, 0xA0, 0x48,  // ..j.#J.H
                /* 0918 */  0x06, 0x36, 0x50, 0xE0, 0xB7, 0x8A, 0x27, 0x12,  // .6P...'.
                /* 0920 */  0x83, 0xFA, 0xD6, 0x09, 0x7C, 0xFE, 0xFF, 0xB7,  // ....|...
                /* 0928 */  0x4E, 0x80, 0x41, 0x17, 0x07, 0x76, 0x4B, 0x81,  // N.A..vK.
                /* 0930 */  0x7F, 0x4A, 0x01, 0xBC, 0xFC, 0xFF, 0x4F, 0x29,  // .J....O)
                /* 0938 */  0x3C, 0xF9, 0xAD, 0x93, 0xA6, 0xBE, 0x75, 0x42,  // <.....uB
                /* 0940 */  0x99, 0x28, 0x58, 0x6E, 0x9D, 0xC0, 0xE0, 0x38,  // .(Xn...8
                /* 0948 */  0xF2, 0xD6, 0x09, 0xF8, 0xBE, 0x5B, 0xF8, 0xD6,  // .....[..
                /* 0950 */  0x09, 0xEC, 0xFF, 0xFF, 0xB7, 0x4E, 0x60, 0x11,  // .....N`.
                /* 0958 */  0x6D, 0x54, 0xF4, 0xAA, 0x89, 0x9F, 0xCF, 0xAB,  // mT......
                /* 0960 */  0x26, 0xCC, 0x0B, 0x28, 0xB8, 0xEE, 0x46, 0xC0,  // &..(..F.
                /* 0968 */  0x49, 0xA1, 0x4D, 0x9F, 0x1A, 0x8D, 0x5A, 0x35,  // I.M...Z5
                /* 0970 */  0x28, 0x53, 0xA3, 0x4C, 0x83, 0x5A, 0x7D, 0x2A,  // (S.L.Z}*
                /* 0978 */  0x35, 0x66, 0xEC, 0x5E, 0x65, 0x69, 0x17, 0x0C,  // 5f.^ei..
                /* 0980 */  0x2A, 0x66, 0x59, 0x1A, 0x97, 0xA3, 0x80, 0x50,  // *fY....P
                /* 0988 */  0xD9, 0x57, 0x52, 0x81, 0x38, 0xE4, 0x07, 0x48,  // .WR.8..H
                /* 0990 */  0x80, 0x0E, 0xF6, 0xD1, 0xD2, 0x60, 0xC9, 0xAA,  // .....`..
                /* 0998 */  0x04, 0xE2, 0xF8, 0x26, 0x20, 0x1A, 0x01, 0x91,  // ...& ...
                /* 09A0 */  0x16, 0x15, 0x40, 0x2C, 0x37, 0x88, 0x80, 0xAC,  // ..@,7...
                /* 09A8 */  0x62, 0xCD, 0x02, 0xB2, 0xE6, 0x6F, 0x8D, 0xC0,  // b....o..
                /* 09B0 */  0xAD, 0x53, 0x07, 0x10, 0x4B, 0x09, 0x42, 0x13,  // .S..K.B.
                /* 09B8 */  0xBD, 0x06, 0x04, 0xEA, 0x78, 0x20, 0x1A, 0x0C,  // ....x ..
                /* 09C0 */  0xA1, 0x11, 0x90, 0x83, 0x51, 0x08, 0xC8, 0x32,  // ....Q..2
                /* 09C8 */  0x9C, 0x80, 0x33, 0x01, 0x56, 0x80, 0x98, 0x7C,  // ..3.V..|
                /* 09D0 */  0x10, 0x2A, 0xD8, 0x0B, 0x28, 0x53, 0x0F, 0x22,  // .*..(S."
                /* 09D8 */  0x20, 0x2B, 0x5D, 0xB5, 0x80, 0xAC, 0x1B, 0x44,  //  +]....D
                /* 09E0 */  0x40, 0xCE, 0x6A, 0x06, 0x9C, 0x65, 0x74, 0x03,  // @.j..et.
                /* 09E8 */  0xC4, 0x14, 0xBE, 0x1E, 0x04, 0x62, 0x4D, 0x7A,  // .....bMz
                /* 09F0 */  0x40, 0x99, 0x40, 0x10, 0xDD, 0x42, 0x88, 0x9F,  // @.@..B..
                /* 09F8 */  0xFF, 0x3F, 0x10, 0x93, 0x06, 0x22, 0x20, 0xC7,  // .?..." .
                /* 0A00 */  0xB9, 0xAE, 0x08, 0xDC, 0x71, 0x14, 0x01, 0x52,  // ....q..R
                /* 0A08 */  0x47, 0xC3, 0xA5, 0x20, 0x54, 0xFC, 0xF7, 0x4C,  // G.. T..L
                /* 0A10 */  0x20, 0x16, 0x64, 0x09, 0x8C, 0x82, 0xD0, 0x08,  //  .d.....
                /* 0A18 */  0x9A, 0x40, 0x98, 0x3C, 0x4F, 0x20, 0x2C, 0xD4,  // .@.<O ,.
                /* 0A20 */  0xF7, 0x45, 0x43, 0x70, 0x10, 0x55, 0x43, 0xA4,  // .ECp.UC.
                /* 0A28 */  0xAE, 0x40, 0x58, 0xE0, 0xD7, 0x82, 0x06, 0xE3,  // .@X.....
                /* 0A30 */  0xF4, 0x20, 0x02, 0x72, 0xD2, 0xA7, 0x56, 0x20,  // . .r..V 
                /* 0A38 */  0x92, 0x1B, 0x44, 0x40, 0xCE, 0xFF, 0x3A, 0xD1,  // ..D@..:.
                /* 0A40 */  0x8D, 0x86, 0x3C, 0x31, 0x34, 0x7C, 0xF2, 0x35,  // ..<14|.5
                /* 0A48 */  0x0D, 0x42, 0xC4, 0x3D, 0x4E, 0x83, 0x12, 0xA5,  // .B.=N...
                /* 0A50 */  0x20, 0x02, 0xB2, 0xB2, 0x0F, 0x97, 0x80, 0xAC,  //  .......
                /* 0A58 */  0x13, 0x44, 0x40, 0xD6, 0xFB, 0x03, 0x7B, 0x10,  // .D@...{.
                /* 0A60 */  0x60, 0x0F, 0x2F, 0x1D, 0x04, 0x08, 0x08, 0x4D,  // `./....M
                /* 0A68 */  0xF5, 0xDE, 0x12, 0xA8, 0x23, 0x82, 0x68, 0xA0,  // ....#.h.
                /* 0A70 */  0x44, 0x1D, 0x10, 0x0B, 0x07, 0xA2, 0x01, 0x12,  // D.......
                /* 0A78 */  0x77, 0xE0, 0x2C, 0x9A, 0x3D, 0x20, 0x26, 0xEC,  // w.,.= &.
                /* 0A80 */  0xC7, 0x22, 0x10, 0x0B, 0xF1, 0x07, 0xC2, 0xA4,  // ."......
                /* 0A88 */  0x3F, 0x3C, 0x04, 0x68, 0xC9, 0xCF, 0x9F, 0x03,  // ?<.h....
                /* 0A90 */  0x64, 0x20, 0x34, 0xE0, 0x67, 0x44, 0x43, 0x70,  // d 4.gDCp
                /* 0A98 */  0x5A, 0x10, 0x01, 0x39, 0xD9, 0x3B, 0x44, 0x40,  // Z..9.;D@
                /* 0AA0 */  0xCE, 0x09, 0x22, 0x20, 0xFF, 0xFF, 0x01         // .." ...
            })
        }

        Device (WMI2)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_WDG, Buffer (0x64)
            {
                /* 0000 */  0xF1, 0x24, 0xB4, 0xFC, 0x5A, 0x07, 0x0E, 0x4E,  // .$..Z..N
                /* 0008 */  0xBF, 0xC4, 0x62, 0xF3, 0xE7, 0x17, 0x71, 0xFA,  // ..b...q.
                /* 0010 */  0x41, 0x37, 0x01, 0x01, 0xE3, 0x5E, 0xBE, 0xE2,  // A7...^..
                /* 0018 */  0xDA, 0x42, 0xDB, 0x49, 0x83, 0x78, 0x1F, 0x52,  // .B.I.x.R
                /* 0020 */  0x47, 0x38, 0x82, 0x02, 0x41, 0x38, 0x01, 0x02,  // G8..A8..
                /* 0028 */  0x9A, 0x01, 0x30, 0x74, 0xE9, 0xDC, 0x48, 0x45,  // ..0t..HE
                /* 0030 */  0xBA, 0xB0, 0x9F, 0xDE, 0x09, 0x35, 0xCA, 0xFF,  // .....5..
                /* 0038 */  0x41, 0x39, 0x14, 0x05, 0x03, 0x70, 0xF4, 0x7F,  // A9...p..
                /* 0040 */  0x6C, 0x3B, 0x5E, 0x4E, 0xA2, 0x27, 0xE9, 0x79,  // l;^N.'.y
                /* 0048 */  0x82, 0x4A, 0x85, 0xD1, 0x41, 0x41, 0x01, 0x06,  // .J..AA..
                /* 0050 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
                /* 0058 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
                /* 0060 */  0x42, 0x42, 0x01, 0x00                           // BB..
            })
            Name (PREL, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Method (WQA7, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WMIS (0x07, Zero)
                PREL [Zero] = WLS0 /* \_SB_.WLS0 */
                PREL [One] = WLS1 /* \_SB_.WLS1 */
                PREL [0x02] = WLS2 /* \_SB_.WLS2 */
                PREL [0x03] = WLS3 /* \_SB_.WLS3 */
                PREL [0x04] = WLS4 /* \_SB_.WLS4 */
                PREL [0x05] = WLS5 /* \_SB_.WLS5 */
                PREL [0x06] = WLS6 /* \_SB_.WLS6 */
                PREL [0x07] = WLS7 /* \_SB_.WLS7 */
                Release (\_SB.WMI1.MWMI)
                Return (PREL) /* \_SB_.WMI2.PREL */
            }

            Method (WMA8, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, PRE0)
                CreateByteField (Arg2, One, PRE1)
                CreateByteField (Arg2, 0x02, PRE2)
                CreateByteField (Arg2, 0x03, PRE3)
                CreateByteField (Arg2, 0x04, PRE4)
                CreateByteField (Arg2, 0x05, PRE5)
                CreateByteField (Arg2, 0x06, PRE6)
                CreateByteField (Arg2, 0x07, PRE7)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WLS0 = PRE0 /* \_SB_.WMI2.WMA8.PRE0 */
                WLS1 = PRE1 /* \_SB_.WMI2.WMA8.PRE1 */
                WLS2 = PRE2 /* \_SB_.WMI2.WMA8.PRE2 */
                WLS3 = PRE3 /* \_SB_.WMI2.WMA8.PRE3 */
                WLS4 = PRE4 /* \_SB_.WMI2.WMA8.PRE4 */
                WLS5 = PRE5 /* \_SB_.WMI2.WMA8.PRE5 */
                WLS6 = PRE6 /* \_SB_.WMI2.WMA8.PRE6 */
                WLS7 = PRE7 /* \_SB_.WMI2.WMA8.PRE7 */
                WMIS (0x08, Zero)
                Release (\_SB.WMI1.MWMI)
            }

            Name (ITEM, Package (0x0D)
            {
                Package (0x02)
                {
                    Zero, 
                    "InhibitEnteringThinkPadSetup"
                }, 

                Package (0x02)
                {
                    0x03, 
                    "MTMSerialConcatenation"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SwapProductName"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ComputraceMsgDisable"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "CpuDebugEnable"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PasswordAfterBootDeviceList"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "Reserved"
                }, 

                Package (0x02)
                {
                    0x02, 
                    "SpecialCharForPassword"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "Reserved"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "CustomPasswordMode"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "AbsoluteFree"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ShutdownByBottomCoverTamper"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "TpmClearByBottomCoverTamper"
                }
            })
            Name (VSEL, Package (0x04)
            {
                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Off", 
                    "On"
                }, 

                Package (0x25)
                {
                    "409", 
                    "c0c", 
                    "1009", 
                    "80a", 
                    "416", 
                    "813", 
                    "406", 
                    "40a", 
                    "40c", 
                    "407", 
                    "40e", 
                    "40f", 
                    "410", 
                    "414", 
                    "816", 
                    "424", 
                    "40b", 
                    "807", 
                    "41f", 
                    "809", 
                    "411", 
                    "412", 
                    "404", 
                    "841f", 
                    "425", 
                    "8406", 
                    "405", 
                    "401", 
                    "402", 
                    "408", 
                    "40d", 
                    "419", 
                    "8409", 
                    "41e", 
                    "4009", 
                    "9009", 
                    "422"
                }, 

                Package (0x06)
                {
                    "Disable", 
                    "Enable", 
                    "Default", 
                    "MTMSN", 
                    "1SMTMSN", 
                    "MTSN"
                }
            })
            Method (WQA9, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((WMIS (0x09, Arg0) != Zero))
                {
                    Release (\_SB.WMI1.MWMI)
                    Return ("")
                }

                Local0 = DerefOf (ITEM [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Local3 = DerefOf (VSEL [Local1])
                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                Release (\_SB.WMI1.MWMI)
                Return (Local7)
            }

            Method (WMAA, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = \_SB.WMI1.CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = \_SB.WMI1.WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x0A, Zero)
                        }
                    }
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Name (WQBB, Buffer (0x0538)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x28, 0x05, 0x00, 0x00, 0xAE, 0x18, 0x00, 0x00,  // (.......
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xDE, 0x8B, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0D, 0x10, 0x8A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x50, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PP...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x10, 0x88, 0x14, 0x40, 0x48, 0x28, 0x84,  // 1...@H(.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0xC8, 0x95, 0x0A, 0xB0, 0x08, 0x25, 0x9F, 0x80,  // .....%..
                /* 0078 */  0x92, 0x88, 0x22, 0xD9, 0x78, 0xB2, 0x8D, 0x48,  // ..".x..H
                /* 0080 */  0xE6, 0x61, 0x91, 0x83, 0x40, 0x89, 0x19, 0x04,  // .a..@...
                /* 0088 */  0x4A, 0x27, 0xAE, 0x6C, 0xE2, 0x6A, 0x10, 0x07,  // J'.l.j..
                /* 0090 */  0x10, 0xE5, 0x3C, 0xA2, 0x24, 0x38, 0xAA, 0x83,  // ..<.$8..
                /* 0098 */  0x88, 0x10, 0xBB, 0x5C, 0x01, 0x92, 0x07, 0x20,  // ...\... 
                /* 00A0 */  0xCD, 0x13, 0x93, 0xF5, 0x39, 0x68, 0x64, 0x6C,  // ....9hdl
                /* 00A8 */  0x04, 0x3C, 0x98, 0x04, 0x10, 0x16, 0x65, 0x9D,  // .<....e.
                /* 00B0 */  0x8A, 0x02, 0x83, 0xF2, 0x00, 0x22, 0x39, 0x63,  // ....."9c
                /* 00B8 */  0x45, 0x01, 0xDB, 0xEB, 0x44, 0x64, 0x72, 0xA0,  // E...Ddr.
                /* 00C0 */  0x54, 0x12, 0x1C, 0x6A, 0x98, 0x9E, 0x5A, 0xF3,  // T..j..Z.
                /* 00C8 */  0x13, 0xD3, 0x44, 0x4E, 0xAD, 0xE9, 0x21, 0x0B,  // ..DN..!.
                /* 00D0 */  0x92, 0x49, 0x1B, 0x0A, 0x6A, 0xEC, 0x9E, 0xD6,  // .I..j...
                /* 00D8 */  0x49, 0x79, 0xA6, 0x11, 0x0F, 0xCA, 0x30, 0x09,  // Iy....0.
                /* 00E0 */  0x3C, 0x0A, 0x86, 0xC6, 0x09, 0xCA, 0x82, 0x90,  // <.......
                /* 00E8 */  0x83, 0x81, 0xA2, 0x00, 0x4F, 0xC2, 0x73, 0x2C,  // ....O.s,
                /* 00F0 */  0x5E, 0x80, 0xF0, 0x11, 0x93, 0xB3, 0x40, 0x8C,  // ^.....@.
                /* 00F8 */  0x04, 0x3E, 0x13, 0x78, 0xE4, 0xC7, 0x8C, 0x1D,  // .>.x....
                /* 0100 */  0x51, 0xB8, 0x80, 0xE7, 0x73, 0x0C, 0x91, 0xE3,  // Q...s...
                /* 0108 */  0x1E, 0x6A, 0x8C, 0xA3, 0x88, 0x7C, 0x38, 0x0C,  // .j...|8.
                /* 0110 */  0xED, 0x74, 0xE3, 0x1C, 0xD8, 0xE9, 0x14, 0x04,  // .t......
                /* 0118 */  0x2E, 0x90, 0x60, 0x3D, 0xCF, 0x59, 0x20, 0xFF,  // ..`=.Y .
                /* 0120 */  0xFF, 0x18, 0x07, 0xC1, 0xF0, 0x8E, 0x01, 0x23,  // .......#
                /* 0128 */  0x03, 0x42, 0x1E, 0x05, 0x58, 0x1D, 0x96, 0x26,  // .B..X..&
                /* 0130 */  0x91, 0xC0, 0xEE, 0x05, 0x68, 0xBC, 0x04, 0x48,  // ....h..H
                /* 0138 */  0xE1, 0x20, 0xA5, 0x0C, 0x42, 0x30, 0x8D, 0x09,  // . ..B0..
                /* 0140 */  0xB0, 0x75, 0x68, 0x90, 0x37, 0x01, 0xD6, 0xAE,  // .uh.7...
                /* 0148 */  0x02, 0x42, 0x89, 0x74, 0x02, 0x71, 0x42, 0x44,  // .B.t.qBD
                /* 0150 */  0x89, 0x18, 0xD4, 0x40, 0x51, 0x6A, 0x43, 0x15,  // ...@QjC.
                /* 0158 */  0x4C, 0x67, 0xC3, 0x13, 0x66, 0xDC, 0x10, 0x31,  // Lg..f..1
                /* 0160 */  0x0C, 0x14, 0xB7, 0xFD, 0x41, 0x90, 0x61, 0xE3,  // ....A.a.
                /* 0168 */  0xC6, 0xEF, 0x41, 0x9D, 0xD6, 0xD9, 0x1D, 0xD3,  // ..A.....
                /* 0170 */  0xAB, 0x82, 0x09, 0x3C, 0xE9, 0x37, 0x84, 0xA7,  // ...<.7..
                /* 0178 */  0x83, 0xA3, 0x38, 0xDA, 0xA8, 0x31, 0x9A, 0x23,  // ..8..1.#
                /* 0180 */  0x65, 0xAB, 0xD6, 0xB9, 0xC2, 0x91, 0xE0, 0x51,  // e......Q
                /* 0188 */  0xE7, 0x05, 0x9F, 0x0C, 0x3C, 0xB4, 0xC3, 0xF6,  // ....<...
                /* 0190 */  0x60, 0xCF, 0xD2, 0x43, 0x38, 0x82, 0x67, 0x86,  // `..C8.g.
                /* 0198 */  0x47, 0x02, 0x8F, 0x81, 0xDD, 0x15, 0x7C, 0x08,  // G.....|.
                /* 01A0 */  0xF0, 0x19, 0x01, 0xEF, 0x1A, 0x50, 0x97, 0x83,  // .....P..
                /* 01A8 */  0x47, 0x03, 0x36, 0xE9, 0x70, 0x98, 0xF1, 0x7A,  // G.6.p..z
                /* 01B0 */  0xEE, 0x9E, 0xBA, 0xCF, 0x18, 0xFC, 0xBC, 0xE1,  // ........
                /* 01B8 */  0xC1, 0xE1, 0x46, 0x7A, 0x32, 0x47, 0x56, 0xAA,  // ..Fz2GV.
                /* 01C0 */  0x00, 0xB3, 0xD7, 0x00, 0x1D, 0x25, 0x7C, 0xE0,  // .....%|.
                /* 01C8 */  0x60, 0x77, 0x81, 0xA7, 0x00, 0x13, 0x58, 0xFE,  // `w....X.
                /* 01D0 */  0x20, 0x50, 0x23, 0x33, 0xB4, 0xC7, 0xFB, 0xDE,  //  P#3....
                /* 01D8 */  0x61, 0xC8, 0x27, 0x85, 0xC3, 0x62, 0x62, 0x0F,  // a.'..bb.
                /* 01E0 */  0x1E, 0x74, 0x3C, 0xE0, 0xBF, 0x8F, 0x3C, 0x69,  // .t<...<i
                /* 01E8 */  0x78, 0xFA, 0x9E, 0xAF, 0x09, 0x06, 0x86, 0x90,  // x.......
                /* 01F0 */  0x95, 0xF1, 0xA0, 0x06, 0x62, 0xE8, 0x57, 0x85,  // ....b.W.
                /* 01F8 */  0xC3, 0x38, 0x0D, 0x9F, 0x40, 0x7C, 0x0E, 0x08,  // .8..@|..
                /* 0200 */  0x12, 0xE3, 0x98, 0x3C, 0x38, 0xFF, 0xFF, 0x09,  // ...<8...
                /* 0208 */  0x1C, 0x6B, 0xE4, 0xF4, 0x9C, 0xE2, 0xF3, 0x04,  // .k......
                /* 0210 */  0x3F, 0x5C, 0xF8, 0x3C, 0xC1, 0x4E, 0x0C, 0xA7,  // ?\.<.N..
                /* 0218 */  0xF1, 0x1C, 0xE0, 0xE1, 0x9C, 0x95, 0x8F, 0x13,  // ........
                /* 0220 */  0xC0, 0x02, 0xE2, 0x75, 0x82, 0x0F, 0x14, 0x3E,  // ...u...>
                /* 0228 */  0xEC, 0xA1, 0x79, 0x14, 0x2F, 0x11, 0x6F, 0x0F,  // ..y./.o.
                /* 0230 */  0x26, 0x88, 0xF6, 0x10, 0x03, 0xC6, 0x19, 0xE1,  // &.......
                /* 0238 */  0xCE, 0x1B, 0x70, 0x4E, 0x31, 0xC0, 0x03, 0xEA,  // ..pN1...
                /* 0240 */  0x10, 0x30, 0x87, 0x09, 0x0F, 0x81, 0x0F, 0xE0,  // .0......
                /* 0248 */  0x19, 0xE4, 0x1C, 0x7D, 0xCC, 0x39, 0x33, 0xDC,  // ...}.93.
                /* 0250 */  0x71, 0x07, 0x6C, 0xC3, 0xE0, 0x91, 0x2D, 0x80,  // q.l...-.
                /* 0258 */  0xB0, 0x38, 0x4F, 0x02, 0x05, 0x7C, 0x1B, 0x50,  // .8O..|.P
                /* 0260 */  0x18, 0x1F, 0x6E, 0xC0, 0xFB, 0xFF, 0x3F, 0xDC,  // ..n...?.
                /* 0268 */  0x00, 0xD7, 0xF3, 0x01, 0xEE, 0xF8, 0x00, 0xF7,  // ........
                /* 0270 */  0x62, 0xC1, 0x0E, 0x0F, 0x8F, 0x37, 0xC0, 0x60,  // b....7.`
                /* 0278 */  0x48, 0x8F, 0x34, 0x6F, 0x35, 0x31, 0x5E, 0x6D,  // H.4o51^m
                /* 0280 */  0x42, 0x44, 0x78, 0xA8, 0x79, 0xB7, 0x31, 0x52,  // BDx.y.1R
                /* 0288 */  0xBC, 0xC7, 0x1B, 0x76, 0x8D, 0x39, 0x8B, 0x07,  // ...v.9..
                /* 0290 */  0x90, 0x28, 0xC5, 0xA1, 0xE9, 0x62, 0x13, 0x23,  // .(...b.#
                /* 0298 */  0xCA, 0x9B, 0x8D, 0x61, 0xDF, 0x74, 0x0C, 0x14,  // ...a.t..
                /* 02A0 */  0x2A, 0x52, 0x84, 0x30, 0x2F, 0x16, 0x21, 0x1E,  // *R.0/.!.
                /* 02A8 */  0x6F, 0xC0, 0x2C, 0xE9, 0xA5, 0xA2, 0xCF, 0x81,  // o.,.....
                /* 02B0 */  0x8F, 0x37, 0x80, 0x97, 0xFF, 0xFF, 0xF1, 0x06,  // .7......
                /* 02B8 */  0xF0, 0x30, 0x0C, 0x1F, 0x53, 0xC0, 0x76, 0x73,  // .0..S.vs
                /* 02C0 */  0x60, 0xF7, 0x14, 0xF8, 0xE7, 0x14, 0xC0, 0x91,  // `.......
                /* 02C8 */  0x90, 0x47, 0x80, 0x0E, 0x1E, 0x16, 0x01, 0x22,  // .G....."
                /* 02D0 */  0x1B, 0xCF, 0x00, 0x9F, 0x89, 0xA8, 0x40, 0x2A,  // ......@*
                /* 02D8 */  0xCD, 0x14, 0x2C, 0xE3, 0x14, 0xAC, 0x4E, 0x88,  // ..,...N.
                /* 02E0 */  0x5C, 0x06, 0x85, 0x44, 0x40, 0x68, 0x64, 0x86,  // \..D@hd.
                /* 02E8 */  0xF3, 0x21, 0xD1, 0x60, 0x06, 0xF1, 0xF9, 0xC0,  // .!.`....
                /* 02F0 */  0x67, 0x0A, 0x9F, 0x9C, 0xF8, 0xFF, 0xFF, 0xE4,  // g.......
                /* 02F8 */  0x04, 0x9E, 0x83, 0xC9, 0x43, 0x05, 0x2C, 0x44,  // ....C.,D
                /* 0300 */  0x9F, 0x16, 0x38, 0x9C, 0xCF, 0x2C, 0x1C, 0xCE,  // ..8..,..
                /* 0308 */  0x47, 0x12, 0x7E, 0x80, 0xE4, 0x47, 0x25, 0x70,  // G.~..G%p
                /* 0310 */  0x09, 0x3C, 0x34, 0x80, 0x02, 0xC8, 0xF7, 0x03,  // .<4.....
                /* 0318 */  0x9F, 0x03, 0x9E, 0x11, 0xD8, 0x1C, 0x1E, 0x09,  // ........
                /* 0320 */  0x7C, 0x20, 0x60, 0xF0, 0x3C, 0xDA, 0xA8, 0xE8,  // | `.<...
                /* 0328 */  0xD1, 0xC6, 0xC3, 0xE3, 0x47, 0x06, 0xCF, 0xE7,  // ....G...
                /* 0330 */  0x81, 0xE0, 0x28, 0x1F, 0x09, 0x70, 0x18, 0xEF,  // ..(..p..
                /* 0338 */  0x17, 0x1E, 0xA2, 0x4F, 0x39, 0xB0, 0x26, 0x72,  // ...O9.&r
                /* 0340 */  0xD4, 0x16, 0x7D, 0x22, 0x10, 0xE8, 0x33, 0x17,  // ..}"..3.
                /* 0348 */  0xE6, 0x94, 0x03, 0x9C, 0x82, 0x8F, 0x1E, 0x15,  // ........
                /* 0350 */  0xF5, 0x40, 0x0A, 0xDA, 0x93, 0x82, 0xCF, 0x0A,  // .@......
                /* 0358 */  0x3E, 0x7C, 0xC1, 0xFF, 0xFF, 0x1F, 0xBE, 0xE0,  // >|......
                /* 0360 */  0xCC, 0xEB, 0x65, 0xCD, 0x07, 0x8E, 0x38, 0x67,  // ..e...8g
                /* 0368 */  0x71, 0xBA, 0xEF, 0x16, 0xF8, 0x13, 0x29, 0x30,  // q.....)0
                /* 0370 */  0x0B, 0x72, 0x22, 0x45, 0xC1, 0xF8, 0x44, 0x0A,  // .r"E..D.
                /* 0378 */  0xD8, 0xBC, 0x05, 0x60, 0xAF, 0x0B, 0x4F, 0x22,  // ...`..O"
                /* 0380 */  0x30, 0xCE, 0x11, 0xCF, 0x58, 0x30, 0x0F, 0x55,  // 0...X0.U
                /* 0388 */  0xA7, 0xF8, 0x52, 0xF5, 0xC6, 0x10, 0xE1, 0xC9,  // ..R.....
                /* 0390 */  0xEA, 0x35, 0xEA, 0x01, 0xCB, 0x60, 0x2F, 0x02,  // .5...`/.
                /* 0398 */  0x86, 0x79, 0xC5, 0xF2, 0xE9, 0x2A, 0xC4, 0x03,  // .y...*..
                /* 03A0 */  0x96, 0xCF, 0x5A, 0xD1, 0x42, 0x84, 0x8C, 0x12,  // ..Z.B...
                /* 03A8 */  0xEC, 0x15, 0xEB, 0x55, 0xC6, 0x47, 0x2A, 0x83,  // ...U.G*.
                /* 03B0 */  0x07, 0x0C, 0x1B, 0x2D, 0x52, 0x84, 0x47, 0x2C,  // ...-R.G,
                /* 03B8 */  0xFC, 0xFF, 0xFF, 0x88, 0x05, 0x1E, 0x09, 0x07,  // ........
                /* 03C0 */  0x52, 0x80, 0x2A, 0x03, 0xC7, 0x1D, 0x48, 0x81,  // R.*...H.
                /* 03C8 */  0xFD, 0x69, 0x02, 0x7F, 0xBD, 0xF0, 0x78, 0xB0,  // .i....x.
                /* 03D0 */  0xFF, 0xFF, 0x73, 0x00, 0xF8, 0x0E, 0x31, 0xC0,  // ..s...1.
                /* 03D8 */  0x60, 0xC0, 0x30, 0x0E, 0x31, 0xC0, 0x43, 0xF0,  // `.0.1.C.
                /* 03E0 */  0xC9, 0x0C, 0xF4, 0xC7, 0x1D, 0xF8, 0xE3, 0xE0,  // ........
                /* 03E8 */  0x19, 0x9F, 0x1C, 0x26, 0x50, 0x98, 0x13, 0x29,  // ...&P..)
                /* 03F0 */  0x0A, 0xC6, 0x27, 0x52, 0xC0, 0xD9, 0xFF, 0xFF,  // ..'R....
                /* 03F8 */  0x70, 0x05, 0x86, 0xE3, 0x0D, 0xF8, 0x6F, 0x33,  // p.....o3
                /* 0400 */  0x3E, 0x84, 0xFA, 0x7C, 0xE3, 0x0B, 0xA9, 0x21,  // >..|...!
                /* 0408 */  0x5E, 0x6C, 0xDE, 0xD4, 0x5E, 0x09, 0x5E, 0xDF,  // ^l..^.^.
                /* 0410 */  0xD9, 0xB5, 0xE6, 0xF5, 0xDD, 0xA7, 0x82, 0x27,  // .......'
                /* 0418 */  0xD1, 0x08, 0x21, 0xA3, 0xBC, 0xE4, 0x18, 0x24,  // ..!....$
                /* 0420 */  0xC4, 0xEB, 0xA8, 0x01, 0x83, 0x05, 0x89, 0x78,  // .......x
                /* 0428 */  0x0A, 0x4F, 0x3B, 0x8F, 0x37, 0xE0, 0x15, 0x75,  // .O;.7..u
                /* 0430 */  0x20, 0x05, 0xE8, 0xF1, 0xFF, 0x3F, 0x90, 0x02,  //  ....?..
                /* 0438 */  0x83, 0x7B, 0x0A, 0xEC, 0x73, 0x0A, 0xE0, 0x29,  // .{..s..)
                /* 0440 */  0xF9, 0x89, 0x94, 0xA6, 0x3E, 0x91, 0xA2, 0x15,  // ....>...
                /* 0448 */  0x01, 0x69, 0xAA, 0x60, 0x21, 0x98, 0xFE, 0x44,  // .i.`!..D
                /* 0450 */  0x4A, 0x0F, 0x06, 0xCE, 0x4D, 0xA2, 0xE4, 0x43,  // J...M..C
                /* 0458 */  0xA3, 0x70, 0xCE, 0x7A, 0x20, 0xA1, 0x20, 0x06,  // .p.z . .
                /* 0460 */  0x74, 0x90, 0x43, 0x05, 0xFA, 0xAC, 0xE2, 0x03,  // t.C.....
                /* 0468 */  0xC9, 0x81, 0x3C, 0x22, 0x7A, 0x58, 0x3E, 0x54,  // ..<"zX>T
                /* 0470 */  0xFA, 0xAE, 0xE2, 0x73, 0x88, 0x8F, 0x14, 0x1E,  // ...s....
                /* 0478 */  0xBF, 0x0F, 0x0B, 0xFC, 0x3F, 0xE3, 0xE3, 0x28,  // ....?..(
                /* 0480 */  0x03, 0xAF, 0xE6, 0xBC, 0x82, 0x02, 0xF3, 0x69,  // .......i
                /* 0488 */  0x14, 0xA3, 0xEB, 0x3E, 0x01, 0x92, 0xFF, 0xFF,  // ...>....
                /* 0490 */  0xFC, 0xB8, 0xBE, 0xC3, 0x28, 0xC8, 0xD1, 0x79,  // ....(..y
                /* 0498 */  0xF8, 0xC9, 0xA2, 0xE2, 0x4E, 0x96, 0x82, 0x78,  // ....N..x
                /* 04A0 */  0xB2, 0x8E, 0x32, 0x59, 0xF4, 0x4C, 0x7C, 0xBB,  // ..2Y.L|.
                /* 04A8 */  0xF0, 0x8C, 0xDE, 0xBB, 0x7C, 0x83, 0x65, 0x37,  // ....|.e7
                /* 04B0 */  0x59, 0x78, 0x97, 0x81, 0x90, 0x8F, 0x06, 0xBE,  // Yx......
                /* 04B8 */  0xC9, 0xC2, 0x1D, 0x8B, 0x2F, 0x23, 0xE0, 0xBB,  // ..../#..
                /* 04C0 */  0xC9, 0x02, 0x5E, 0x47, 0xE3, 0xB3, 0x05, 0x3B,  // ..^G...;
                /* 04C8 */  0x85, 0xF8, 0xBA, 0x06, 0x4B, 0xA1, 0x4D, 0x9F,  // ....K.M.
                /* 04D0 */  0x1A, 0x8D, 0x5A, 0xFD, 0xFF, 0x1B, 0x94, 0xA9,  // ..Z.....
                /* 04D8 */  0x51, 0xA6, 0x41, 0xAD, 0x3E, 0x95, 0x1A, 0x33,  // Q.A.>..3
                /* 04E0 */  0x76, 0xA1, 0xB0, 0xB8, 0x0B, 0x06, 0x95, 0xB4,  // v.......
                /* 04E8 */  0x2C, 0x8D, 0xCB, 0x81, 0x40, 0x68, 0x80, 0x5B,  // ,...@h.[
                /* 04F0 */  0xA9, 0x40, 0x1C, 0xFA, 0x0B, 0xA4, 0x53, 0x02,  // .@....S.
                /* 04F8 */  0xF9, 0x6A, 0x09, 0xC8, 0x62, 0x57, 0x25, 0x10,  // .j..bW%.
                /* 0500 */  0xCB, 0x54, 0x01, 0xD1, 0xC8, 0xDD, 0xC2, 0x20,  // .T..... 
                /* 0508 */  0x02, 0x72, 0xBC, 0x4F, 0x8D, 0x40, 0x1D, 0x49,  // .r.O.@.I
                /* 0510 */  0x07, 0x10, 0x13, 0xE4, 0x63, 0xAC, 0xF4, 0x25,  // ....c..%
                /* 0518 */  0x20, 0x10, 0xCB, 0xA6, 0x15, 0xA0, 0xE5, 0x3A,  //  ......:
                /* 0520 */  0x01, 0x62, 0x61, 0x41, 0x68, 0xC0, 0x5F, 0xB5,  // .baAh._.
                /* 0528 */  0x86, 0xE0, 0xB4, 0x20, 0x02, 0x72, 0x32, 0x2D,  // ... .r2-
                /* 0530 */  0x40, 0x2C, 0x27, 0x88, 0x80, 0xFC, 0xFF, 0x07   // @,'.....
            })
        }

        Device (WMI3)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_WDG, /**** Is ResourceTemplate, but EndTag not at buffer end ****/ Buffer (0x3C)
            {
                /* 0000 */  0x79, 0x36, 0x4D, 0x8F, 0x9E, 0x74, 0x79, 0x44,  // y6M..tyD
                /* 0008 */  0x9B, 0x16, 0xC6, 0x26, 0x01, 0xFD, 0x25, 0xF0,  // ...&..%.
                /* 0010 */  0x41, 0x42, 0x01, 0x02, 0x69, 0xE8, 0xD2, 0x85,  // AB..i...
                /* 0018 */  0x5A, 0x36, 0xCE, 0x4A, 0xA4, 0xD3, 0xCD, 0x69,  // Z6.J...i
                /* 0020 */  0x2B, 0x16, 0x98, 0xA0, 0x41, 0x43, 0x01, 0x02,  // +...AC..
                /* 0028 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
                /* 0030 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
                /* 0038 */  0x42, 0x43, 0x01, 0x00                           // BC..
            })
            Method (WMAB, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, ASS0)
                CreateWordField (Arg2, One, ASS1)
                CreateByteField (Arg2, 0x03, ASS2)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WASB = ASS0 /* \_SB_.WMI3.WMAB.ASS0 */
                WASI = ASS1 /* \_SB_.WMI3.WMAB.ASS1 */
                WASD = ASS2 /* \_SB_.WMI3.WMAB.ASS2 */
                WMIS (0x0B, Zero)
                Local0 = WASS /* \_SB_.WASS */
                Release (\_SB.WMI1.MWMI)
                Return (Local0)
            }

            Method (WMAC, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, ASS0)
                CreateWordField (Arg2, One, ASS1)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WASB = ASS0 /* \_SB_.WMI3.WMAC.ASS0 */
                WASI = ASS1 /* \_SB_.WMI3.WMAC.ASS1 */
                WMIS (0x0C, Arg1)
                Local0 = WASS /* \_SB_.WASS */
                Release (\_SB.WMI1.MWMI)
                Return (Local0)
            }

            Name (WQBC, Buffer (0x040A)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xFA, 0x03, 0x00, 0x00, 0x32, 0x12, 0x00, 0x00,  // ....2...
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xC3, 0x88, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x07, 0x10, 0x8A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x50, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PP...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x10, 0x88, 0x14, 0x40, 0x48, 0x28, 0x84,  // 1...@H(.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0x58, 0x07, 0x11, 0x21, 0xD2, 0x31, 0x34, 0x29,  // X..!.14)
                /* 0078 */  0x40, 0xA2, 0x00, 0x8B, 0x02, 0x64, 0xC3, 0xC8,  // @....d..
                /* 0080 */  0x36, 0x22, 0x99, 0x87, 0x45, 0x0E, 0x02, 0x25,  // 6"..E..%
                /* 0088 */  0x66, 0x10, 0x28, 0x9D, 0xE0, 0xB2, 0x89, 0xAB,  // f.(.....
                /* 0090 */  0x41, 0x9C, 0x4C, 0x94, 0xF3, 0x88, 0x92, 0xE0,  // A.L.....
                /* 0098 */  0xA8, 0x0E, 0x22, 0x42, 0xEC, 0x72, 0x05, 0x48,  // .."B.r.H
                /* 00A0 */  0x1E, 0x80, 0x34, 0x4F, 0x4C, 0xD6, 0xE7, 0xA0,  // ..4OL...
                /* 00A8 */  0x91, 0xB1, 0x11, 0xF0, 0x94, 0x1A, 0x40, 0x58,  // ......@X
                /* 00B0 */  0xA0, 0x75, 0x2A, 0xE0, 0x7A, 0x0D, 0x43, 0x3D,  // .u*.z.C=
                /* 00B8 */  0x80, 0x48, 0xCE, 0x58, 0x51, 0xC0, 0xF6, 0x3A,  // .H.XQ..:
                /* 00C0 */  0x11, 0x8D, 0xEA, 0x40, 0x99, 0x24, 0x38, 0xD4,  // ...@.$8.
                /* 00C8 */  0x30, 0x3D, 0xB5, 0xE6, 0x27, 0xA6, 0x89, 0x9C,  // 0=..'...
                /* 00D0 */  0x5A, 0xD3, 0x43, 0x16, 0x24, 0x93, 0x36, 0x14,  // Z.C.$.6.
                /* 00D8 */  0xD4, 0xD8, 0x3D, 0xAD, 0x93, 0xF2, 0x4C, 0x23,  // ..=...L#
                /* 00E0 */  0x1E, 0x94, 0x61, 0x12, 0x78, 0x14, 0x0C, 0x8D,  // ..a.x...
                /* 00E8 */  0x13, 0x94, 0x75, 0x22, 0xA0, 0x03, 0xE5, 0x80,  // ..u"....
                /* 00F0 */  0x27, 0xE1, 0x39, 0x16, 0x2F, 0x40, 0xF8, 0x88,  // '.9./@..
                /* 00F8 */  0xC9, 0xB4, 0x4D, 0xE0, 0x33, 0x81, 0x87, 0x79,  // ..M.3..y
                /* 0100 */  0xCC, 0xD8, 0x11, 0x85, 0x0B, 0x78, 0x3E, 0xC7,  // .....x>.
                /* 0108 */  0x10, 0x39, 0xEE, 0xA1, 0xC6, 0x38, 0x8A, 0xC8,  // .9...8..
                /* 0110 */  0x47, 0x60, 0x24, 0x03, 0xC5, 0x2B, 0x08, 0x89,  // G`$..+..
                /* 0118 */  0x80, 0xF8, 0x76, 0x70, 0x70, 0x91, 0xFC, 0xFF,  // ..vpp...
                /* 0120 */  0x47, 0x89, 0x11, 0x2A, 0xC6, 0xDB, 0x00, 0x6E,  // G..*...n
                /* 0128 */  0x5E, 0x09, 0x8A, 0x1E, 0x07, 0x4A, 0x06, 0x84,  // ^....J..
                /* 0130 */  0x3C, 0x0A, 0xB0, 0x7A, 0x28, 0x20, 0x04, 0x16,  // <..z( ..
                /* 0138 */  0x27, 0x40, 0xE3, 0x38, 0x05, 0xD3, 0x99, 0x00,  // '@.8....
                /* 0140 */  0x6D, 0x02, 0xBC, 0x09, 0x30, 0x27, 0xC0, 0x16,  // m...0'..
                /* 0148 */  0x86, 0x80, 0x82, 0x9C, 0x59, 0x94, 0x20, 0x11,  // ....Y. .
                /* 0150 */  0x42, 0x31, 0x88, 0x0A, 0x05, 0x18, 0x43, 0x14,  // B1....C.
                /* 0158 */  0xCA, 0x3B, 0x41, 0x8C, 0xCA, 0x20, 0x74, 0x82,  // .;A.. t.
                /* 0160 */  0x08, 0x14, 0x3D, 0x78, 0x98, 0xD6, 0x40, 0x74,  // ..=x..@t
                /* 0168 */  0x89, 0xF0, 0xC8, 0xB1, 0x47, 0x00, 0x9F, 0x19,  // ....G...
                /* 0170 */  0xCE, 0xE9, 0x04, 0x1F, 0x01, 0xDE, 0x16, 0x4C,  // .......L
                /* 0178 */  0xE0, 0x79, 0xBF, 0x24, 0x1C, 0x6A, 0xD8, 0x03,  // .y.$.j..
                /* 0180 */  0x8E, 0x1A, 0xE3, 0x28, 0x12, 0x58, 0xD0, 0x33,  // ...(.X.3
                /* 0188 */  0x42, 0x16, 0x40, 0x14, 0x09, 0x1E, 0x75, 0x64,  // B.@...ud
                /* 0190 */  0xF0, 0xE1, 0xC0, 0x23, 0x3B, 0x72, 0xCF, 0xF0,  // ...#;r..
                /* 0198 */  0x04, 0x82, 0x1C, 0xC2, 0x11, 0x3C, 0x36, 0x3C,  // .....<6<
                /* 01A0 */  0x15, 0x78, 0x0C, 0xEC, 0xBA, 0xE0, 0x73, 0x80,  // .x....s.
                /* 01A8 */  0x8F, 0x09, 0x78, 0xD7, 0x80, 0x9A, 0xF3, 0xD3,  // ..x.....
                /* 01B0 */  0x01, 0x9B, 0x72, 0x38, 0xCC, 0x70, 0x3D, 0xFD,  // ..r8.p=.
                /* 01B8 */  0x70, 0x27, 0x70, 0xD2, 0x06, 0x64, 0xB3, 0xF3,  // p'p..d..
                /* 01C0 */  0xE0, 0x70, 0xE3, 0x3C, 0x99, 0x23, 0x2B, 0x55,  // .p.<.#+U
                /* 01C8 */  0x80, 0xD9, 0x13, 0x82, 0x4E, 0x13, 0x3E, 0x73,  // ....N.>s
                /* 01D0 */  0xB0, 0xBB, 0xC0, 0xF9, 0xF4, 0x0C, 0x49, 0xE4,  // ......I.
                /* 01D8 */  0x0F, 0x02, 0x35, 0x32, 0x43, 0xFB, 0x2C, 0xF0,  // ..52C.,.
                /* 01E0 */  0xEA, 0x61, 0xC8, 0x87, 0x85, 0xC3, 0x62, 0x62,  // .a....bb
                /* 01E8 */  0xCF, 0x1E, 0x74, 0x3C, 0xE0, 0x3F, 0x25, 0x3C,  // ..t<.?%<
                /* 01F0 */  0x6C, 0x78, 0xFA, 0x9E, 0xAF, 0x09, 0xA2, 0x3D,  // lx.....=
                /* 01F8 */  0x8F, 0x80, 0xE1, 0xFF, 0x7F, 0x1E, 0x81, 0x39,  // .......9
                /* 0200 */  0x9C, 0x07, 0x84, 0x27, 0x07, 0x76, 0x80, 0xC0,  // ...'.v..
                /* 0208 */  0x1C, 0x48, 0x80, 0xC9, 0xF9, 0x02, 0x77, 0x28,  // .H....w(
                /* 0210 */  0xF0, 0x10, 0xF8, 0x00, 0x1E, 0x25, 0xCE, 0xD1,  // .....%..
                /* 0218 */  0x4A, 0x67, 0x86, 0x3C, 0xB9, 0x80, 0x2D, 0xFB,  // Jg.<..-.
                /* 0220 */  0x1B, 0x40, 0x07, 0x0F, 0xE7, 0x06, 0x91, 0x8D,  // .@......
                /* 0228 */  0x57, 0x80, 0x09, 0x74, 0x38, 0xB1, 0x1E, 0x20,  // W..t8.. 
                /* 0230 */  0x4D, 0x14, 0x0C, 0x04, 0xD3, 0xD3, 0x6B, 0x00,  // M.....k.
                /* 0238 */  0x3E, 0x15, 0x38, 0x37, 0x89, 0x92, 0x0F, 0x8C,  // >.87....
                /* 0240 */  0xC2, 0x39, 0xEB, 0x79, 0x84, 0x82, 0x18, 0xD0,  // .9.y....
                /* 0248 */  0x41, 0x20, 0xE4, 0xE4, 0xA0, 0x80, 0x3A, 0xAA,  // A ....:.
                /* 0250 */  0xF8, 0x3C, 0x72, 0xAA, 0x0F, 0x3D, 0x9E, 0x94,  // .<r..=..
                /* 0258 */  0x47, 0xE1, 0xAB, 0x8A, 0x0F, 0x21, 0x3E, 0x4F,  // G....!>O
                /* 0260 */  0x78, 0xF4, 0x3E, 0x29, 0xF0, 0xEF, 0x8C, 0xAF,  // x.>)....
                /* 0268 */  0x0E, 0x46, 0xB7, 0x9A, 0xE3, 0x0A, 0x0A, 0xCC,  // .F......
                /* 0270 */  0x67, 0x11, 0x4E, 0x50, 0xD7, 0x6D, 0x01, 0xFA,  // g.NP.m..
                /* 0278 */  0x29, 0xE0, 0x08, 0x3C, 0x94, 0x77, 0x92, 0xC7,  // )..<.w..
                /* 0280 */  0x90, 0x04, 0xF5, 0x9D, 0x16, 0x40, 0x01, 0xE4,  // .....@..
                /* 0288 */  0x9B, 0x81, 0x4F, 0x02, 0x21, 0xFE, 0xFF, 0x4F,  // ..O.!..O
                /* 0290 */  0x07, 0x1E, 0xC3, 0xC3, 0x80, 0xD1, 0x8C, 0xCE,  // ........
                /* 0298 */  0xC3, 0x4F, 0x16, 0x15, 0x77, 0xB2, 0x14, 0xC4,  // .O..w...
                /* 02A0 */  0x93, 0x75, 0x94, 0xC9, 0xA2, 0x67, 0xE2, 0xAB,  // .u...g..
                /* 02A8 */  0x85, 0x27, 0x74, 0x4A, 0x41, 0xCE, 0xD1, 0x13,  // .'tJA...
                /* 02B0 */  0xF6, 0x55, 0x04, 0xD6, 0xF9, 0x20, 0xE4, 0x8B,  // .U... ..
                /* 02B8 */  0x81, 0xA7, 0x61, 0x38, 0x4F, 0x96, 0xC3, 0x79,  // ..a8O..y
                /* 02C0 */  0xB2, 0x7C, 0x2C, 0xBE, 0x6A, 0xC0, 0x1F, 0x2D,  // .|,.j..-
                /* 02C8 */  0x96, 0xA0, 0xC0, 0xD9, 0x82, 0x1C, 0x1E, 0x13,  // ........
                /* 02D0 */  0x6F, 0x54, 0xF4, 0x46, 0xE4, 0xE1, 0xF1, 0xCB,  // oT.F....
                /* 02D8 */  0x81, 0xE7, 0xF3, 0x8C, 0x70, 0x94, 0x6F, 0x12,  // ....p.o.
                /* 02E0 */  0x38, 0x8C, 0xC7, 0x12, 0x0F, 0xD1, 0x97, 0x23,  // 8......#
                /* 02E8 */  0x58, 0x13, 0x39, 0x69, 0xDF, 0x16, 0x4E, 0x36,  // X.9i..N6
                /* 02F0 */  0xE8, 0x4B, 0x10, 0xBB, 0x1C, 0x01, 0xBF, 0x88,  // .K......
                /* 02F8 */  0x26, 0x86, 0xC1, 0x22, 0x2D, 0x45, 0x11, 0x17,  // &.."-E..
                /* 0300 */  0x45, 0x61, 0x7C, 0xC5, 0x82, 0xFD, 0xFF, 0xBF,  // Ea|.....
                /* 0308 */  0x62, 0x01, 0x16, 0x04, 0x0F, 0x1B, 0x34, 0x87,  // b.....4.
                /* 0310 */  0x83, 0x97, 0x1E, 0x36, 0x6B, 0x38, 0x07, 0x99,  // ...6k8..
                /* 0318 */  0xD3, 0xF1, 0x48, 0x4E, 0x1B, 0xC6, 0x1D, 0x0B,  // ..HN....
                /* 0320 */  0xFE, 0x9D, 0xEA, 0xA9, 0xCA, 0xD3, 0x8A, 0xF2,  // ........
                /* 0328 */  0x64, 0xF5, 0x7A, 0xE5, 0x63, 0x96, 0xA1, 0xCE,  // d.z.c...
                /* 0330 */  0xE0, 0x1D, 0xCB, 0xB7, 0x3C, 0x4F, 0x21, 0x4A,  // ....<O!J
                /* 0338 */  0x9C, 0x97, 0x2D, 0x76, 0xC7, 0x32, 0x48, 0x50,  // ..-v.2HP
                /* 0340 */  0x23, 0x3F, 0x68, 0x31, 0x94, 0xE0, 0xF1, 0xDE,  // #?h1....
                /* 0348 */  0xB1, 0x00, 0x6F, 0xFF, 0xFF, 0x3B, 0x16, 0x60,  // ..o..;.`
                /* 0350 */  0xFC, 0x04, 0xC1, 0x09, 0x7C, 0xC7, 0x02, 0x1C,  // ....|...
                /* 0358 */  0xC5, 0x7E, 0x37, 0xE8, 0x4A, 0x45, 0xEE, 0x58,  // .~7.JE.X
                /* 0360 */  0x28, 0x0E, 0xAB, 0xB9, 0x63, 0x41, 0x9C, 0x28,  // (...cA.(
                /* 0368 */  0xE6, 0x8A, 0x05, 0x86, 0xFF, 0xFF, 0x15, 0x0B,  // ........
                /* 0370 */  0xE0, 0x75, 0xC0, 0x2B, 0x16, 0x68, 0xFE, 0xFF,  // .u.+.h..
                /* 0378 */  0x57, 0x2C, 0xF0, 0x5E, 0x8E, 0x80, 0xDF, 0x09,  // W,.^....
                /* 0380 */  0xD1, 0x77, 0x0D, 0x7E, 0x9A, 0xB6, 0xA2, 0xBB,  // .w.~....
                /* 0388 */  0x06, 0x94, 0x19, 0xBE, 0x07, 0xF9, 0xB0, 0x13,  // ........
                /* 0390 */  0x2C, 0xD2, 0xA3, 0x8D, 0x6F, 0x49, 0xE1, 0x7C,  // ,...oI.|
                /* 0398 */  0xDB, 0x00, 0xD8, 0xF2, 0xFF, 0xBF, 0x6D, 0x00,  // ......m.
                /* 03A0 */  0x4C, 0x19, 0xBF, 0x6F, 0x1B, 0xC0, 0x4F, 0xA1,  // L..o..O.
                /* 03A8 */  0x4D, 0x9F, 0x1A, 0x8D, 0x5A, 0x35, 0x28, 0x53,  // M...Z5(S
                /* 03B0 */  0xA3, 0x4C, 0x83, 0x5A, 0x7D, 0x2A, 0x35, 0x66,  // .L.Z}*5f
                /* 03B8 */  0x4C, 0xC9, 0xC1, 0xCE, 0x77, 0x0C, 0x2A, 0x6C,  // L...w.*l
                /* 03C0 */  0x65, 0x1A, 0x9A, 0x63, 0x81, 0xD0, 0x10, 0xC7,  // e..c....
                /* 03C8 */  0x26, 0x19, 0x01, 0x51, 0x22, 0x10, 0x01, 0x59,  // &..Q"..Y
                /* 03D0 */  0xFD, 0x6F, 0x42, 0x40, 0xCE, 0x02, 0x22, 0x20,  // .oB@.." 
                /* 03D8 */  0x2B, 0x58, 0x9A, 0xC0, 0x9D, 0xFF, 0xD8, 0x28,  // +X.....(
                /* 03E0 */  0x40, 0xA2, 0x02, 0x84, 0x29, 0x7D, 0x93, 0x09,  // @...)}..
                /* 03E8 */  0xD4, 0xB2, 0x41, 0x04, 0xF4, 0xFF, 0x3F, 0x42,  // ..A...?B
                /* 03F0 */  0xD9, 0x00, 0x62, 0x82, 0x41, 0x04, 0x64, 0x91,  // ..b.A.d.
                /* 03F8 */  0x3E, 0x80, 0x98, 0x62, 0x10, 0x01, 0x59, 0xDD,  // >..b..Y.
                /* 0400 */  0xA3, 0x40, 0x40, 0xD6, 0x0A, 0x22, 0x20, 0xFF,  // .@@.." .
                /* 0408 */  0xFF, 0x01                                       // ..
            })
        }

        Device (WMI4)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x57, 0xBB, 0x84, 0x85, 0x31, 0x5E, 0xC4, 0x46,  // W...1^.F
                /* 0008 */  0xBC, 0x8E, 0x5E, 0x94, 0x56, 0x3A, 0xE4, 0x15,  // ..^.V:..
                /* 0010 */  0x41, 0x44, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // AD..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x44, 0x01, 0x00   // ..).BD..
            })
            Name (TDRV, Package (0x08)
            {
                "Drv1", 
                "Drv2", 
                "Drv3", 
                "Drv4", 
                "Drv5", 
                "Drv6", 
                "Drv7", 
                "Drv8"
            })
            Name (PTYP, Package (0x07)
            {
                "POP", 
                "SVP", 
                "SMP", 
                "UHDP", 
                "MHDP", 
                "UDRP", 
                "ADRP"
            })
            Name (EMTH, Package (0x0C)
            {
                "ATAN", 
                "ATAC", 
                "OPALPASS", 
                "DOD", 
                "SPZ", 
                "USNAF", 
                "CCI6", 
                "BHI5", 
                "GV", 
                "RGP1", 
                "RGP4", 
                "RTOII"
            })
            Method (WMAD, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = \_SB.WMI1.CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        If ((\_SB.WMI1.ILEN != Zero))
                        {
                            \_SB.WMI1.CLRP ()
                            Local0 = SWIP (\_SB.WMI1.IBUF)
                            If ((Local0 == Zero))
                            {
                                Local0 = WMIS (0x0D, Zero)
                            }

                            \_SB.WMI1.CLRP ()
                        }
                    }
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (SWIP, 1, NotSerialized)
            {
                Local6 = \_SB.WMI1.GSEL (TDRV, Arg0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WDRV = Local6
                Local0 = \_SB.WMI1.SLEN (TDRV, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = \_SB.WMI1.GSEL (EMTH, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WMTH = Local6
                Local0 += \_SB.WMI1.SLEN (EMTH, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = \_SB.WMI1.GSEL (PTYP, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WPTY = Local6
                Local0 += \_SB.WMI1.SLEN (PTYP, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = \_SB.WMI1.GPAS (Arg0, Local0)
                If (((Local1 == Ones) || (Local1 == Zero)))
                {
                    Return (0x02)
                }

                WPAS = \_SB.WMI1.PSTR
                Return (Zero)
            }

            Name (WQBD, Buffer (0x0322)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x12, 0x03, 0x00, 0x00, 0x36, 0x08, 0x00, 0x00,  // ....6...
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xDA, 0x83, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x05, 0x10, 0x8A, 0x0E, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x58, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PX...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0xD4, 0x18, 0xA8, 0x58, 0x08, 0x89, 0x00,  // 1...X...
                /* 0050 */  0xA6, 0x42, 0xE0, 0x08, 0x41, 0xBF, 0x02, 0x10,  // .B..A...
                /* 0058 */  0x3A, 0x14, 0x20, 0x53, 0x80, 0x41, 0x01, 0x4E,  // :. S.A.N
                /* 0060 */  0x11, 0x44, 0x10, 0xA5, 0x65, 0x01, 0xBA, 0x05,  // .D..e...
                /* 0068 */  0xF8, 0x16, 0xA0, 0x1D, 0x42, 0x68, 0x91, 0xE2,  // ....Bh..
                /* 0070 */  0x9C, 0x42, 0xEB, 0x93, 0x10, 0x48, 0xAF, 0x02,  // .B...H..
                /* 0078 */  0x4C, 0x0B, 0x10, 0x0E, 0x22, 0x8B, 0x02, 0x64,  // L..."..d
                /* 0080 */  0x63, 0xC8, 0x36, 0x28, 0x19, 0x09, 0x13, 0x39,  // c.6(...9
                /* 0088 */  0x0C, 0x94, 0x98, 0x61, 0xA0, 0x74, 0xCE, 0x42,  // ...a.t.B
                /* 0090 */  0x36, 0x81, 0x35, 0x83, 0x42, 0x51, 0x34, 0x93,  // 6.5.BQ4.
                /* 0098 */  0x28, 0x09, 0x4E, 0xE1, 0x30, 0x22, 0x04, 0x2F,  // (.N.0"./
                /* 00A0 */  0x57, 0x80, 0xE4, 0x09, 0x48, 0xF3, 0xD4, 0x34,  // W...H..4
                /* 00A8 */  0x8F, 0x83, 0x38, 0x04, 0x36, 0x02, 0x9E, 0x58,  // ..8.6..X
                /* 00B0 */  0x03, 0x08, 0x8B, 0xB5, 0x52, 0x05, 0x75, 0x00,  // ....R.u.
                /* 00B8 */  0x83, 0xD9, 0xB6, 0x04, 0xC8, 0x19, 0x2D, 0x0A,  // ......-.
                /* 00C0 */  0xD8, 0xB3, 0x3A, 0x91, 0x26, 0x87, 0x4A, 0x25,  // ..:.&.J%
                /* 00C8 */  0xC1, 0xA1, 0x06, 0x6A, 0x89, 0x02, 0xCC, 0x8F,  // ...j....
                /* 00D0 */  0x4C, 0x13, 0x39, 0xB6, 0xD3, 0x3B, 0xC3, 0x90,  // L.9..;..
                /* 00D8 */  0x4C, 0xDA, 0x50, 0x50, 0xA3, 0xF7, 0xB4, 0x4E,  // L.PP...N
                /* 00E0 */  0xCA, 0x73, 0x8D, 0x78, 0x50, 0x86, 0x49, 0xE0,  // .s.xP.I.
                /* 00E8 */  0x51, 0x30, 0x34, 0x4E, 0x50, 0x16, 0x84, 0x76,  // Q04NP..v
                /* 00F0 */  0x44, 0x07, 0x4A, 0x00, 0x4F, 0xC2, 0x73, 0x2C,  // D.J.O.s,
                /* 00F8 */  0x7E, 0xD0, 0x64, 0x22, 0x4F, 0x03, 0x31, 0x12,  // ~.d"O.1.
                /* 0100 */  0xF8, 0x54, 0x60, 0xD1, 0x63, 0x46, 0x8F, 0x28,  // .T`.cF.(
                /* 0108 */  0x5C, 0xC0, 0xF3, 0x39, 0x86, 0xF3, 0xF7, 0x50,  // \..9...P
                /* 0110 */  0x63, 0x1C, 0x45, 0xE4, 0x04, 0xF1, 0x7D, 0x0E,  // c.E...}.
                /* 0118 */  0x60, 0x50, 0x41, 0x0A, 0x12, 0x20, 0x15, 0x5D,  // `PA.. .]
                /* 0120 */  0xFF, 0x7F, 0xB8, 0x68, 0x5D, 0xCF, 0x5D, 0x28,  // ...h].](
                /* 0128 */  0x86, 0x3A, 0xEB, 0x93, 0x0A, 0x76, 0x1C, 0xBE,  // .:...v..
                /* 0130 */  0x10, 0x70, 0x9C, 0xDE, 0x4F, 0x04, 0x74, 0x28,  // .p..O.t(
                /* 0138 */  0x58, 0x19, 0x10, 0xF2, 0x28, 0xC0, 0xEA, 0xE8,  // X...(...
                /* 0140 */  0x34, 0x97, 0x04, 0x16, 0x27, 0xC0, 0x1A, 0x84,  // 4...'...
                /* 0148 */  0xA6, 0x5A, 0x21, 0x82, 0x50, 0x7A, 0x13, 0x60,  // .Z!.Pz.`
                /* 0150 */  0x0B, 0x43, 0x83, 0xE9, 0x4C, 0x80, 0x31, 0x14,  // .C..L.1.
                /* 0158 */  0x61, 0xD5, 0x76, 0x25, 0x10, 0x46, 0x94, 0x70,  // a.v%.F.p
                /* 0160 */  0x41, 0x62, 0x06, 0x8B, 0xC7, 0xCC, 0x41, 0x09,  // Ab....A.
                /* 0168 */  0x24, 0x5C, 0xCC, 0x57, 0x83, 0x38, 0x61, 0xC2,  // $\.W.8a.
                /* 0170 */  0xC6, 0x49, 0xE0, 0xC1, 0xE3, 0x4E, 0x01, 0x3E,  // .I...N.>
                /* 0178 */  0x38, 0x1C, 0xE0, 0x41, 0x3D, 0x05, 0x3C, 0x31,  // 8..A=.<1
                /* 0180 */  0x98, 0xC0, 0x53, 0x3F, 0xB8, 0x67, 0x84, 0x97,  // ..S?.g..
                /* 0188 */  0x8A, 0x73, 0x8C, 0x1A, 0xE3, 0x0C, 0x12, 0x58,  // .s.....X
                /* 0190 */  0xD2, 0x5B, 0x42, 0x16, 0x40, 0x14, 0x09, 0x1E,  // .[B.@...
                /* 0198 */  0x75, 0x6A, 0xF0, 0xF9, 0xC0, 0x23, 0x3B, 0x78,  // uj...#;x
                /* 01A0 */  0x8F, 0xF6, 0x04, 0x82, 0x1C, 0xC2, 0x11, 0x3C,  // .......<
                /* 01A8 */  0x39, 0x3C, 0x18, 0x78, 0x0C, 0xEC, 0xC6, 0xE0,  // 9<.x....
                /* 01B0 */  0xA3, 0x80, 0x4F, 0x0A, 0xF8, 0x51, 0x07, 0x7C,  // ..O..Q.|
                /* 01B8 */  0x45, 0x78, 0x40, 0x60, 0x23, 0x0E, 0x87, 0x19,  // Ex@`#...
                /* 01C0 */  0xAE, 0x87, 0xED, 0x09, 0x9C, 0xFA, 0xB3, 0x06,  // ........
                /* 01C8 */  0x3F, 0x77, 0x78, 0x70, 0xB8, 0x91, 0x9E, 0xCC,  // ?wxp....
                /* 01D0 */  0x91, 0xBD, 0x07, 0x34, 0x7B, 0x48, 0xD0, 0x81,  // ...4{H..
                /* 01D8 */  0xC2, 0x07, 0x0F, 0x76, 0x15, 0xB0, 0x67, 0x48,  // ...v..gH
                /* 01E0 */  0x22, 0x7F, 0x10, 0xA8, 0x91, 0x19, 0xDA, 0x13,  // ".......
                /* 01E8 */  0x7E, 0xFF, 0x30, 0xE4, 0xF3, 0xC2, 0x61, 0xB1,  // ~.0...a.
                /* 01F0 */  0xE3, 0x87, 0x0F, 0x20, 0x1E, 0x0F, 0xF8, 0xEF,  // ... ....
                /* 01F8 */  0x25, 0xCF, 0x1B, 0x9E, 0xBE, 0xE7, 0xEB, 0xF3,  // %.......
                /* 0200 */  0x84, 0x81, 0xB1, 0xFF, 0xFF, 0x43, 0x09, 0x18,  // .....C..
                /* 0208 */  0x6E, 0x0F, 0xFC, 0x58, 0x02, 0xE7, 0x48, 0x02,  // n..X..H.
                /* 0210 */  0x4C, 0x26, 0xE9, 0x21, 0xF0, 0x33, 0x81, 0x87,  // L&.!.3..
                /* 0218 */  0xC0, 0x07, 0xF0, 0x24, 0x71, 0x8A, 0x56, 0x3A,  // ...$q.V:
                /* 0220 */  0x31, 0xE4, 0xE9, 0x05, 0xAC, 0xF9, 0x1F, 0x01,  // 1.......
                /* 0228 */  0x3A, 0x7C, 0x38, 0x3B, 0x88, 0x6C, 0x3C, 0x03,  // :|8;.l<.
                /* 0230 */  0x7C, 0x10, 0xA0, 0x6A, 0x80, 0x34, 0x53, 0xD8,  // |..j.4S.
                /* 0238 */  0x04, 0xD3, 0x93, 0xEB, 0xE0, 0xC3, 0x73, 0x93,  // ......s.
                /* 0240 */  0x28, 0xF9, 0xC8, 0x28, 0x9C, 0xB3, 0x1E, 0x49,  // (..(...I
                /* 0248 */  0x28, 0x88, 0x01, 0x1D, 0xE4, 0x44, 0x81, 0x3E,  // (....D.>
                /* 0250 */  0xAD, 0x78, 0x08, 0xE7, 0xFA, 0xE4, 0xE3, 0x41,  // .x.....A
                /* 0258 */  0xF9, 0x3E, 0xE2, 0xDB, 0x8A, 0x0F, 0x21, 0x3E,  // .>....!>
                /* 0260 */  0x4F, 0x78, 0xF8, 0x3E, 0x29, 0xF0, 0x1F, 0x8D,  // Ox.>)...
                /* 0268 */  0xAF, 0x0E, 0x46, 0xB7, 0x9A, 0x13, 0x0B, 0x0A,  // ..F.....
                /* 0270 */  0xCC, 0x67, 0x11, 0x4E, 0x50, 0xD7, 0x65, 0x02,  // .g.NP.e.
                /* 0278 */  0x64, 0xFA, 0x4E, 0x0B, 0x50, 0xFF, 0xFF, 0x97,  // d.N.P...
                /* 0280 */  0x00, 0x0E, 0xE4, 0xAB, 0x81, 0x8F, 0x02, 0x8F,  // ........
                /* 0288 */  0x07, 0x6C, 0x0C, 0x4F, 0x03, 0x46, 0x33, 0x3A,  // .l.O.F3:
                /* 0290 */  0x0F, 0x3F, 0x59, 0x54, 0xDC, 0xC9, 0x52, 0x10,  // .?YT..R.
                /* 0298 */  0x4F, 0xD6, 0x51, 0x26, 0x8B, 0x9E, 0x89, 0x2F,  // O.Q&.../
                /* 02A0 */  0x00, 0x9E, 0xD1, 0x2B, 0x80, 0xE7, 0xE8, 0x09,  // ...+....
                /* 02A8 */  0xFB, 0x2A, 0x02, 0xEB, 0x80, 0xF0, 0x50, 0xE3,  // .*....P.
                /* 02B0 */  0x3B, 0x06, 0x83, 0xF3, 0x64, 0x39, 0x9C, 0x27,  // ;...d9.'
                /* 02B8 */  0xCB, 0xC7, 0xE2, 0x9B, 0x08, 0xF8, 0x04, 0xCE,  // ........
                /* 02C0 */  0x16, 0xE4, 0xF0, 0x98, 0x90, 0xA3, 0xA2, 0x97,  // ........
                /* 02C8 */  0x22, 0x0F, 0x8F, 0x5F, 0x0E, 0x3C, 0x9F, 0x67,  // ".._.<.g
                /* 02D0 */  0x84, 0xA3, 0x7C, 0x92, 0xC0, 0x61, 0xBC, 0x61,  // ..|..a.a
                /* 02D8 */  0x78, 0x88, 0xBE, 0x1F, 0xC1, 0x9A, 0xC8, 0x49,  // x......I
                /* 02E0 */  0xFB, 0xB6, 0x70, 0xB2, 0x41, 0xE3, 0x87, 0xF5,  // ..p.A...
                /* 02E8 */  0xFD, 0x08, 0xB8, 0x2A, 0xB4, 0xE9, 0x53, 0xA3,  // ...*..S.
                /* 02F0 */  0x51, 0xAB, 0x06, 0x65, 0x6A, 0x94, 0x69, 0x50,  // Q..ej.iP
                /* 02F8 */  0xAB, 0x4F, 0xA5, 0xC6, 0x8C, 0x5D, 0xB3, 0x2C,  // .O...].,
                /* 0300 */  0xD0, 0xC0, 0xFF, 0x7F, 0x44, 0x4C, 0xE2, 0xDA,  // ....DL..
                /* 0308 */  0x34, 0x38, 0x07, 0x04, 0xA1, 0x71, 0xBE, 0x40,  // 48...q.@
                /* 0310 */  0x32, 0x02, 0xA2, 0x6C, 0x20, 0x02, 0x72, 0x8E,  // 2..l .r.
                /* 0318 */  0xFF, 0x84, 0x80, 0x9C, 0x0A, 0x44, 0x40, 0xFE,  // .....D@.
                /* 0320 */  0xFF, 0x03                                       // ..
            })
        }
    }

    Scope (\_SB.I2C9)
    {
        Mutex (MCPU, 0x00)
        Method (_Q1F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (One, 0x00020000))
            {
                If (((\_SB.I2C9.ECRD (0xCA) & 0x40) == 0x40))
                {
                    \_SB.I2C9.HKEY.MHKQ (0x1012)
                }
            }

            SCMS (0x0E)
            SCMS (0x20)
        }

        Method (_Q19, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (One, 0x40))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1007)
            }
        }

        Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.DHKC)
            {
                \_SB.I2C9.HKEY.MHKQ (0x1004)
            }
            Else
            {
                Notify (\_SB.SLPB, 0x80) // Status Change
            }
        }

        Method (_Q2A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (One, 0x10))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1005)
            }
        }

        Method (_Q6E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (0x03, 0x00010000))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1311)
            }
        }

        Method (_Q62, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (0x03, 0x00020000))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1312)
            }
        }

        Method (_Q6C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (0x03, 0x00800000))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1318)
            }
        }

        Method (_Q6D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (0x03, 0x01000000))
            {
                \_SB.I2C9.HKEY.MHKQ (0x1319)
            }
        }

        Method (_Q3C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If ((GECB (0xCA, One, One) == One))
            {
                \_SB.I2C9.HKEY.DYTC (0x001F1001)
            }
            Else
            {
                \_SB.I2C9.HKEY.DYTC (0x000F1001)
            }
        }

        Method (_Q50, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C9.HKEY.MHKQ (0x6040)
            ATMC ()
        }

        Method (_Q51, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C9.HKEY.MHKQ (0x6040)
            ATMC ()
        }

        Method (_Q52, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("LIDO")
            SCMS (0x21)
            \_SB.I2C9.HKEY.MHKQ (0x5002)
        }

        Method (_Q53, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("LIDC")
            \_SB.I2C9.HKEY.MHKQ (0x5001)
        }

        Method (_Q77, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("Convertible Button")
            Local0 = GECB (0xC6, Zero, 0x04)
            If (((Local0 != Zero) && (Local0 <= 0x06)))
            {
                If ((Local0 != PMMD))
                {
                    PMMD = Local0
                    \_SB.I2C9.HKEY.MHKQ (0x60C0)
                }
            }

            If (((Local0 == Zero) || (Local0 >= 0x07)))
            {
                Local1 = One
            }
            ElseIf (((Local0 == 0x02) || (Local0 == 0x03)))
            {
                Local1 = 0x02
            }
            Else
            {
                Local1 = 0x03
            }

            If ((Local1 != LVMD))
            {
                LVMD = Local1
                Sleep (0x0A)
                \_SB.I2C9.HKEY.MHKQ (0x60F0)
            }
        }

        Method (_Q88, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C9.HKEY.MHKK (0x03, 0x04000000))
            {
                \_SB.I2C9.HKEY.MHKQ (0x131B)
            }
        }

        Method (QEXC, 0, Serialized)
        {
            Local0 = \_SB.I2C9.QEVT ()
            While (One)
            {
                Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                _T_0 = ToInteger (Local0)
                If ((_T_0 == Zero))
                {
                    Break
                }
                ElseIf ((_T_0 == 0x28))
                {
                    \_SB.I2C9._Q28 ()
                }
                ElseIf ((_T_0 == 0x1F))
                {
                    \_SB.I2C9._Q1F ()
                }
                ElseIf ((_T_0 == 0x19))
                {
                    \_SB.I2C9._Q19 ()
                }
                ElseIf ((_T_0 == 0x13))
                {
                    \_SB.I2C9._Q13 ()
                }
                ElseIf ((_T_0 == 0x2A))
                {
                    \_SB.I2C9._Q2A ()
                }
                ElseIf ((_T_0 == 0x6E))
                {
                    \_SB.I2C9._Q6E ()
                }
                ElseIf ((_T_0 == 0x62))
                {
                    \_SB.I2C9._Q62 ()
                }
                ElseIf ((_T_0 == 0x6C))
                {
                    \_SB.I2C9._Q6C ()
                }
                ElseIf ((_T_0 == 0x6D))
                {
                    \_SB.I2C9._Q6D ()
                }
                ElseIf ((_T_0 == 0x3C))
                {
                    \_SB.I2C9._Q3C ()
                }
                ElseIf ((_T_0 == 0x50))
                {
                    \_SB.I2C9._Q50 ()
                }
                ElseIf ((_T_0 == 0x51))
                {
                    \_SB.I2C9._Q51 ()
                }
                ElseIf ((_T_0 == 0x52))
                {
                    \_SB.I2C9._Q52 ()
                }
                ElseIf ((_T_0 == 0x53))
                {
                    \_SB.I2C9._Q53 ()
                }
                ElseIf ((_T_0 == 0x77))
                {
                    \_SB.I2C9._Q77 ()
                }
                ElseIf ((_T_0 == 0x36))
                {
                    \_SB.I2C9._Q36 ()
                }
                ElseIf ((_T_0 == 0x70))
                {
                    \_SB.I2C9._Q70 ()
                }
                ElseIf ((_T_0 == 0x72))
                {
                    \_SB.I2C9._Q72 ()
                }
                ElseIf ((_T_0 == 0x73))
                {
                    \_SB.I2C9._Q73 ()
                }
                ElseIf ((_T_0 == 0x75))
                {
                    \_SB.I2C9._Q75 ()
                }
                ElseIf ((_T_0 == 0x88))
                {
                    \_SB.I2C9._Q88 ()
                }
                ElseIf ((_T_0 == 0x81))
                {
                    \_SB.I2C9._Q81 ()
                }
                Else
                {
                }

                Break
            }
        }

        Scope (\_SB.I2C9)
        {
            Method (_Q28, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If (((HPDD & 0x08) == 0x08))
                {
                    Noop
                }
                ElseIf (\_SB.I2C9.HKEY.MHKK (One, 0x04000000))
                {
                    \_SB.I2C9.HKEY.MHKQ (0x101B)
                }
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (MMTG, 0, NotSerialized)
            {
                Local0 = 0x0101
                If (((HPDD & 0x08) == 0x08))
                {
                    Local0 |= 0x00010000
                }

                Return (Local0)
            }

            Method (MMTS, 1, NotSerialized)
            {
                If (((HPDD & 0x08) == 0x08))
                {
                    Noop
                }
                ElseIf ((Arg0 == 0x02))
                {
                    WECB (0xC0, Zero, One, One)
                }
                ElseIf ((Arg0 == 0x03)){}
                Else
                {
                    WECB (0xC0, Zero, One, Zero)
                }
            }
        }

        Scope (\_SB.I2C9)
        {
            Method (_Q75, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                \_SB.I2C9.HKEY.MHKQ (0x6060)
                Local0 = GECB (0x51, 0x04, One)
                WECB (0x15, Zero, One, Local0)
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
        }

        Scope (\_SB.I2C9)
        {
        }

        Scope (\_SB.I2C9)
        {
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (GSMS, 1, NotSerialized)
            {
                Return (AUDC (Zero, Zero))
            }

            Method (SSMS, 1, NotSerialized)
            {
                Return (AUDC (One, (Arg0 & One)))
            }

            Method (SHDA, 1, NotSerialized)
            {
                Local0 = Arg0
                If ((Local0 == One))
                {
                    Local0 = 0x02
                }

                Return (AUDC (0x02, (Local0 & 0x03)))
            }

            Method (AUOC, 5, Serialized)
            {
                Local0 = Zero
                Local1 = \_SB.I2C9.ECRD (0x53)
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg2)
                    If ((_T_0 == Zero))
                    {
                        If ((Local1 & 0x10))
                        {
                            Local0 |= One
                        }

                        Local0 |= 0x0100
                        Return (Local0)
                    }
                    ElseIf ((_T_0 == One))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg3)
                            If ((_T_1 == Zero))
                            {
                                Local1 &= ~0x10
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Local1 |= 0x10
                            }
                            Else
                            {
                                Return (0x80000000)
                            }

                            Break
                        }

                        \_SB.I2C9.ECWR (0x53, Local1)
                        Break
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Local1 &= ~0x0C
                        While (One)
                        {
                            Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_2 = ToInteger (Arg3)
                            If ((_T_2 == Zero))
                            {
                                Local1 |= 0x0C
                            }
                            ElseIf ((_T_2 == One))
                            {
                                Local1 |= 0x04
                            }
                            ElseIf ((_T_2 == 0x02))
                            {
                                Local1 |= 0x08
                            }
                            Else
                            {
                                Return (0x80000000)
                            }

                            Break
                        }

                        \_SB.I2C9.ECWR (0x53, Local1)
                        Break
                    }
                    Else
                    {
                        Return (0x80000000)
                    }

                    Break
                }

                Return (Local0)
            }
        }

        Scope (\_SB.I2C9)
        {
            Method (_Q70, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (_Q72, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (_Q73, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (FNST, 0, NotSerialized)
            {
                If (H8DR)
                {
                    Local1 = GECB (0x51, Zero, One)
                }
                Else
                {
                    Local1 = (RBEC (0x51) & One)
                }

                If (Local1)
                {
                    \_SB.I2C9.HKEY.MHKQ (0x6005)
                }
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (GHSL, 1, NotSerialized)
            {
                Return (FNSC (Zero, Zero))
            }

            Method (SHSL, 1, NotSerialized)
            {
                Return (FNSC (One, (Arg0 & 0x00010001)))
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Mutex (BFWM, 0x00)
            Method (MHIF, 1, NotSerialized)
            {
                Name (RETB, Buffer (0x0A)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00                                       // ..
                })
                Field (WNVS, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x90), 
                    Offset (0x98), 
                    B8_8,   8, 
                    B8_9,   8, 
                    B8_A,   8, 
                    B8_B,   8, 
                    B8_C,   8, 
                    B8_D,   8, 
                    B8_E,   8, 
                    B8_F,   8
                }

                RETB [0x02] = B8_8 /* \_SB_.I2C9.HKEY.MHIF.B8_8 */
                RETB [0x03] = B8_9 /* \_SB_.I2C9.HKEY.MHIF.B8_9 */
                RETB [0x04] = B8_A /* \_SB_.I2C9.HKEY.MHIF.B8_A */
                RETB [0x05] = B8_B /* \_SB_.I2C9.HKEY.MHIF.B8_B */
                RETB [0x06] = B8_C /* \_SB_.I2C9.HKEY.MHIF.B8_C */
                RETB [0x07] = B8_D /* \_SB_.I2C9.HKEY.MHIF.B8_D */
                RETB [0x08] = B8_E /* \_SB_.I2C9.HKEY.MHIF.B8_E */
                RETB [0x09] = B8_F /* \_SB_.I2C9.HKEY.MHIF.B8_F */
                Return (RETB) /* \_SB_.I2C9.HKEY.MHIF.RETB */
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (GLSI, 0, NotSerialized)
            {
                If ((\_SB.GIO0.LIDR == Zero))
                {
                    Return (0x02)
                }
                Else
                {
                    Return (0x03)
                }
            }
        }

        Scope (\_SB.I2C9)
        {
            Method (_Q81, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If (\_SB.I2C9.HKEY.MHKK (One, 0x00080000))
                {
                    \_SB.I2C9.HKEY.MHKQ (0x1014)
                }

                SCMS (0x0B)
            }
        }

        Scope (\_SB.I2C9.HKEY)
        {
            Method (GSSS, 1, NotSerialized)
            {
                Local0 = Zero
                CreateByteField (VEDI, 0x66, EFB1)
                If ((((SHDW & 0x80) == Zero) && ((EFB1 & 0x80
                    ) == 0x80)))
                {
                    Local0 |= 0x00010000
                }

                If ((SHDW & One))
                {
                    Local0 |= One
                }

                Local0 |= 0x3C000000
                Return (Local0)
            }

            Method (SSSS, 1, NotSerialized)
            {
                CreateByteField (VEDI, 0x66, EFB1)
                If ((((SHDW & 0x80) == Zero) && ((EFB1 & 0x80
                    ) == 0x80)))
                {
                    If ((Arg0 == Zero))
                    {
                        If (((SHDW & One) != Zero))
                        {
                            SCMS (0x1E)
                            SHDW = (SHDW & ~One)
                            \_SB.I2C9.HKEY.MHKQ (0x130F)
                            Return (Zero)
                        }
                    }

                    If ((Arg0 == One))
                    {
                        If (((SHDW & One) == Zero))
                        {
                            SCMS (0x1F)
                            SHDW = (SHDW | One)
                            \_SB.I2C9.HKEY.MHKQ (0x130F)
                            Return (Zero)
                        }
                    }
                }

                Return (0x80000000)
            }

            Method (TSSS, 0, NotSerialized)
            {
                CreateByteField (VEDI, 0x66, EFB1)
                If ((((SHDW & 0x80) == Zero) && ((EFB1 & 0x80
                    ) == 0x80)))
                {
                    If (((SHDW & One) != Zero))
                    {
                        SSSS (Zero)
                        Return (Zero)
                    }

                    If (((SHDW & One) == Zero))
                    {
                        SSSS (One)
                        Return (Zero)
                    }
                }

                Return (0x80000000)
            }

            Method (CSSS, 0, NotSerialized)
            {
                If ((((SHDW & 0x80) == Zero) && ((SHDW & 
                    One) != Zero)))
                {
                    Return (SSSS (One))
                }
                Else
                {
                    Return (SSSS (Zero))
                }
            }
        }
    }

    Scope (\_SB.I2C9.HKEY)
    {
        Name (MSCB, Zero)
        Method (DYTC, 1, NotSerialized)
        {
            Local0 = Arg0
            Local1 = Zero
            ADBG (Concatenate ("DYTC STT=", ToHexString (Local0)))
            If ((WNTF && TATC))
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger ((Local0 & 0x01FF))
                    If ((_T_0 == Zero))
                    {
                        Local1 = (One << 0x08)
                        Local1 |= (0x08 << 0x1C)
                        Local1 |= (Zero << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Local2 = ((Local0 >> 0x0C) & 0x0F)
                        Local3 = ((Local0 >> 0x10) & 0x0F)
                        Local4 = ((Local0 >> 0x14) & One)
                        ADBG ("DYTC_CMD_SET")
                        ADBG (Concatenate ("ICFunc=", ToHexString (Local2)))
                        ADBG (Concatenate ("ICMode=", ToHexString (Local3)))
                        ADBG (Concatenate ("ValidF=", ToHexString (Local4)))
                        If (((Local0 == 0x800F0001) || ((Local2 == One) || ((Local2 == 
                            0x0B) || ((Local2 == 0x0E) || ((Local2 == 0x0A) || (Local2 == 0x04))))))){}
                        Else
                        {
                            Local1 = (0x03 << One)
                            ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                            Return (Local1)
                        }

                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Local2)
                            If ((_T_1 == One))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VCQL = Zero
                                }
                                Else
                                {
                                    VCQL = One
                                }
                            }
                            ElseIf ((_T_1 == 0x07))
                            {
                                If (((Local3 <= 0x07) && (Local3 >= One)))
                                {
                                    If ((Local4 != One))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                ElseIf ((Local3 == 0x0F))
                                {
                                    If ((Local4 != Zero))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                Else
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VADM = Zero
                                    SADM = Zero
                                }
                                Else
                                {
                                    VADM = One
                                    SADM = Local3
                                }
                            }
                            ElseIf ((_T_1 == 0x0C))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VMSC = Zero
                                }
                                Else
                                {
                                    VMSC = One
                                }
                            }
                            ElseIf ((_T_1 == 0x0D))
                            {
                                If (((Local3 <= 0x08) && (Local3 >= One)))
                                {
                                    If ((Local4 != One))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                ElseIf ((Local3 == 0x0F))
                                {
                                    If ((Local4 != Zero))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                Else
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VPSC = Zero
                                    SPSC = Zero
                                }
                                Else
                                {
                                    VPSC = One
                                    SPSC = Local3
                                }
                            }
                            ElseIf ((_T_1 == Zero))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }
                            }
                            Else
                            {
                                Local1 = (One << One)
                                ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                Return (Local1)
                            }

                            Break
                        }

                        If ((VMSC == One))
                        {
                            CICF = 0x0C
                            \_SB.TZ40.TPSV = 0x0CB2
                        }
                        ElseIf ((VCQL == One))
                        {
                            CICF = One
                            \_SB.TZ40.TPSV = 0x0CC6
                        }
                        Else
                        {
                            CICF = Zero
                            \_SB.TZ40.TPSV = 0x0CEE
                        }

                        Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                        Local5 = One
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        If ((CICF == 0x03))
                        {
                            CICM = SMYH /* \_SB_.SMYH */
                        }
                        ElseIf ((CICF == 0x0B))
                        {
                            CICM = SMMC /* \_SB_.SMMC */
                        }
                        ElseIf ((CICF == 0x0D))
                        {
                            CICM = SPSC /* \_SB_.SPSC */
                        }
                        ElseIf ((CICF == 0x0F))
                        {
                            CICM = SAMT /* \_SB_.SAMT */
                        }
                        ElseIf ((CICF == 0x07))
                        {
                            CICM = SADM /* \_SB_.SADM */
                        }
                        ElseIf ((CICF == 0x08))
                        {
                            CICM = SRPC /* External reference */
                        }
                        Else
                        {
                            CICM = 0x0F
                        }

                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                        If (\_SB.I2C9.HKEY.DHKC)
                        {
                            \_SB.I2C9.HKEY.MHKQ (0x6032)
                        }
                    }
                    ElseIf ((_T_0 == 0x07))
                    {
                        Local1 = ((Local0 >> 0x10) & 0xFF)
                        Local2 = ((Local0 >> 0x18) & 0xFF)
                        If ((CICF == 0x0F))
                        {
                            FLPF (Local1)
                            If ((Local2 == One))
                            {
                                \_SB.I2C9.HKEY.MHKQ (0x8034)
                            }
                            Else
                            {
                                \_SB.I2C9.HKEY.MHKQ (0x8035)
                            }
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Local1 = (Local1 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x08))
                    {
                        Local1 = (VMMC << 0x08)
                        Local1 |= (SMMC << 0x0C)
                        Local1 |= (Zero << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Local5 = One
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        If ((CICF == 0x03))
                        {
                            CICM = SMYH /* \_SB_.SMYH */
                        }
                        ElseIf ((CICF == 0x0B))
                        {
                            CICM = SMMC /* \_SB_.SMMC */
                        }
                        ElseIf ((CICF == 0x0D))
                        {
                            CICM = SPSC /* \_SB_.SPSC */
                        }
                        ElseIf ((CICF == 0x0F))
                        {
                            CICM = SAMT /* \_SB_.SAMT */
                        }
                        ElseIf ((CICF == 0x07))
                        {
                            CICM = SADM /* \_SB_.SADM */
                        }
                        Else
                        {
                            CICM = 0x0F
                        }

                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        Local1 = (FCAP << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Local1 = (MYHC << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x06))
                    {
                        Local2 = ((Local0 >> 0x09) & 0x0F)
                        If ((Local2 != One))
                        {
                            Local1 = (MMCC << 0x10)
                        }
                        Else
                        {
                            Local1 = (Zero << 0x08)
                        }

                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        If ((Zero != One))
                        {
                            Local1 = (0x05 << 0x08)
                            Local1 |= (0x010E << 0x14)
                        }

                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0100))
                    {
                        Local1 = (0x1001 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x09))
                    {
                        MSCB = One
                        Local1 = Zero
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0A))
                    {
                        Local1 = Zero
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0B))
                    {
                        Local1 = (FADM << 0x08)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x01FF))
                    {
                        ADBG (" DYTC_CMD_RESET")
                        VCQL = Zero
                        VTIO = Zero
                        VMYH = Zero
                        VSTP = Zero
                        VLCM = Zero
                        VDGM = Zero
                        VADM = Zero
                        VRPC = Zero
                        VTMS = Zero
                        VDLS = Zero
                        VMMC = Zero
                        VMSC = Zero
                        VPSC = Zero
                        VCSC = Zero
                        VAMT = Zero
                        SMYH = Zero
                        SMMC = Zero
                        SPSC = Zero
                        SAMT = Zero
                        SADM = Zero
                        CICF = Zero
                        FLPF (Zero)
                        CICM = 0x0F
                        Local5 = VSTD /* \_SB_.VSTD */
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                    }
                    Else
                    {
                        Local1 = (0x02 << One)
                    }

                    Break
                }
            }
            Else
            {
                Local1 = (0x04 << One)
            }

            ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
            Return (Local1)
        }
    }

    Scope (\_SB.I2C9)
    {
        Method (ATMC, 0, NotSerialized)
        {
        }
    }

    Scope (\_SB.I2C9)
    {
        Device (ITSD)
        {
            Name (_HID, EisaId ("LEN0100"))  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }
    }

    Scope (\_SI)
    {
        Method (_SST, 1, NotSerialized)  // _SST: System Status
        {
            If ((Arg0 == Zero)){}
            If ((Arg0 == One)){}
            If ((Arg0 == 0x02)){}
            If ((Arg0 == 0x03)){}
            If ((Arg0 == 0x04))
            {
                SGOV (0x2E, Zero)
            }
        }
    }

    Scope (\_SB)
    {
        Device (AMW0)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (WLMP, Zero)
            Name (WMID, Zero)
            Name (B0ED, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            CreateDWordField (B0ED, Zero, WLID)
            Name (B1ED, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (_WDG, Buffer (0x50)
            {
                /* 0000 */  0x81, 0x17, 0xF4, 0xD9, 0x33, 0xF6, 0x00, 0x44,  // ....3..D
                /* 0008 */  0x93, 0x55, 0x60, 0x17, 0x70, 0xBE, 0xC5, 0x10,  // .U`.p...
                /* 0010 */  0x41, 0x41, 0x01, 0x00, 0xED, 0x16, 0x1F, 0x43,  // AA.....C
                /* 0018 */  0x2B, 0x0C, 0x4C, 0x44, 0xB2, 0x67, 0x27, 0xDE,  // +.LD.g'.
                /* 0020 */  0xB1, 0x40, 0xCF, 0x9C, 0x41, 0x43, 0x01, 0x02,  // .@..AC..
                /* 0028 */  0x71, 0xBF, 0xD1, 0x40, 0x2D, 0xA8, 0x59, 0x4E,  // q..@-.YN
                /* 0030 */  0xA1, 0x68, 0x39, 0x85, 0xE0, 0x3B, 0x2E, 0x87,  // .h9..;..
                /* 0038 */  0xB0, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,  // ....!...
                /* 0040 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0048 */  0xC9, 0x06, 0x29, 0x10, 0x44, 0x44, 0x01, 0x00   // ..).DD..
            })
            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xB0))
                {
                    Return (B0ED) /* \_SB_.AMW0.B0ED */
                }
            }

            Method (WQAA, 1, NotSerialized)
            {
                Return (B1ED) /* \_SB_.AMW0.B1ED */
            }

            Method (WSAA, 2, NotSerialized)
            {
                CreateDWordField (Arg1, Zero, DDD0)
                If ((DDD0 == One))
                {
                    DDD0 += 0x02
                    B1ED [Zero] = DDD0 /* \_SB_.AMW0.WSAA.DDD0 */
                }
            }

            Method (WMAB, 3, NotSerialized)
            {
                WLMP = One
                WMID = Zero
                Return (WH15 (Arg1, Arg2))
            }

            Method (WMAC, 3, NotSerialized)
            {
                WLMP = One
                WMID = One
                Return (WH15 (Arg1, Arg2))
            }
        }
    }

    Name (B2ED, Buffer (0x1C)
    {
        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0018 */  0x00, 0x00, 0x00, 0x00                           // ....
    })
    Mutex (WSMI, 0x00)
    Method (WH15, 2, Serialized)
    {
        ADBG ("Wistron WMI _WH15 Entry")
        Acquire (WSMI, 0xFFFF)
        CreateDWordField (Arg1, Zero, DEAX)
        CreateDWordField (Arg1, 0x04, DEBX)
        CreateDWordField (Arg1, 0x08, DECX)
        CreateDWordField (Arg1, 0x0C, DEDX)
        CreateDWordField (B2ED, Zero, OEAX)
        CreateDWordField (B2ED, 0x04, OEBX)
        CreateDWordField (B2ED, 0x08, OECX)
        CreateDWordField (B2ED, 0x0C, OEDX)
        CreateDWordField (B2ED, 0x10, OFLG)
        OEAX = DEAX /* \WH15.DEAX */
        OECX = DECX /* \WH15.DECX */
        OEDX = DEDX /* \WH15.DEDX */
        If ((\_SB.AMW0.WMID == One))
        {
            CreateDWordField (Arg1, 0x10, DESI)
            CreateDWordField (Arg1, 0x14, DEDI)
            CreateDWordField (B2ED, 0x14, OESI)
            CreateDWordField (B2ED, 0x18, OEDI)
            OESI = DESI /* \WH15.DESI */
            OEDI = DEDI /* \WH15.DEDI */
        }

        ADBG (Concatenate ("DEAX=", ToHexString (DEAX)))
        ADBG (Concatenate ("DEBX=", ToHexString (DEBX)))
        ADBG (Concatenate ("DECX=", ToHexString (DECX)))
        ADBG (Concatenate ("DEDX=", ToHexString (DEDX)))
        If (((DEAX & 0xFFFF) == 0x9610))
        {
            If (((DEBX & 0xFFFF) == 0x0300))
            {
                OECX = 0x5F57
                OEDX = 0x4851
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }
        }

        If (((DEAX & 0xFFFF) == 0x9611))
        {
            If (((DEBX & 0xFFFF) == 0xB001))
            {
                OEDX = \_SB.I2C9.ECMR ((DECX & 0xFFFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB002))
            {
                \_SB.I2C9.ECMW ((DECX & 0xFFFF), (DEDX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB003))
            {
                OEDX = \_SB.I2C9.ECRD ((DECX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB004))
            {
                \_SB.I2C9.ECWR ((DECX & 0xFF), (DEDX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB005))
            {
                OECX = (\_SB.UCS0.ECC0 & 0x03)
                OEDX = (\_SB.UCS0.ECC1 & 0x03)
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB006))
            {
                OECX = \_SB.PWDP
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }
        }

        Release (WSMI)
        Return (B2ED) /* \B2ED */
    }

    Scope (\_SB.AMW0)
    {
        Name (WQDD, Buffer (0x0560)
        {
            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
            /* 0008 */  0x50, 0x05, 0x00, 0x00, 0x70, 0x1D, 0x00, 0x00,  // P...p...
            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
            /* 0018 */  0x18, 0xCB, 0x8D, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
            /* 0020 */  0x10, 0x09, 0x10, 0x8A, 0xE7, 0x80, 0x42, 0x04,  // ......B.
            /* 0028 */  0x0A, 0x0D, 0xA1, 0x40, 0x30, 0x28, 0x38, 0x4B,  // ...@0(8K
            /* 0030 */  0x82, 0x90, 0x0B, 0x26, 0x26, 0x40, 0x08, 0x84,  // ...&&@..
            /* 0038 */  0x24, 0x0A, 0x30, 0x2F, 0x40, 0xB7, 0x00, 0xC3,  // $.0/@...
            /* 0040 */  0x02, 0x6C, 0x0B, 0x30, 0x2D, 0xC0, 0x31, 0x90,  // .l.0-.1.
            /* 0048 */  0xFA, 0xF7, 0x87, 0x28, 0x0D, 0x44, 0x22, 0x20,  // ...(.D" 
            /* 0050 */  0xA9, 0x14, 0x08, 0x09, 0x15, 0xA0, 0x5C, 0x80,  // ......\.
            /* 0058 */  0x6F, 0x01, 0xDA, 0x11, 0x25, 0x59, 0x80, 0x65,  // o...%Y.e
            /* 0060 */  0x18, 0x11, 0xD8, 0x2B, 0x32, 0x41, 0xE3, 0x04,  // ...+2A..
            /* 0068 */  0xE5, 0x0C, 0x03, 0x05, 0x6F, 0xC0, 0x36, 0x05,  // ....o.6.
            /* 0070 */  0x98, 0x1C, 0x04, 0x95, 0x3D, 0x08, 0x94, 0x0C,  // ....=...
            /* 0078 */  0x08, 0x79, 0x14, 0x60, 0x15, 0x4E, 0xD3, 0x49,  // .y.`.N.I
            /* 0080 */  0x60, 0xF7, 0x73, 0x91, 0x30, 0x18, 0x19, 0x13,  // `.s.0...
            /* 0088 */  0xA0, 0x50, 0x80, 0x46, 0x01, 0xDE, 0x40, 0x64,  // .P.F..@d
            /* 0090 */  0x4B, 0x80, 0x41, 0x01, 0xE2, 0x04, 0x28, 0x83,  // K.A...(.
            /* 0098 */  0x12, 0x4A, 0xB8, 0x83, 0x69, 0x4D, 0x80, 0x39,  // .J..iM.9
            /* 00A0 */  0x28, 0x82, 0x56, 0x1B, 0x98, 0x50, 0x3A, 0x03,  // (.V..P:.
            /* 00A8 */  0x12, 0x48, 0xAC, 0x16, 0xC1, 0x05, 0x13, 0x3B,  // .H.....;
            /* 00B0 */  0x6A, 0x94, 0x40, 0xD1, 0xDB, 0x1F, 0x04, 0x09,  // j.@.....
            /* 00B8 */  0xA7, 0x00, 0xA2, 0x06, 0x10, 0x45, 0x1A, 0x0D,  // .....E..
            /* 00C0 */  0x6A, 0x44, 0x09, 0x0E, 0xCC, 0xA3, 0x39, 0xD5,  // jD....9.
            /* 00C8 */  0xCE, 0x05, 0x48, 0x9F, 0xAB, 0x40, 0x8E, 0xF5,  // ..H..@..
            /* 00D0 */  0x34, 0xEA, 0x1C, 0x2E, 0x01, 0x49, 0x60, 0xAC,  // 4....I`.
            /* 00D8 */  0x04, 0xB7, 0xEE, 0x21, 0xE2, 0x5D, 0x03, 0x6A,  // ...!.].j
            /* 00E0 */  0xE2, 0x87, 0xC8, 0x04, 0xC1, 0xA1, 0x86, 0xE8,  // ........
            /* 00E8 */  0xF1, 0x86, 0x3B, 0x81, 0xA3, 0x3E, 0x12, 0x06,  // ..;..>..
            /* 00F0 */  0x71, 0x50, 0x47, 0x83, 0x39, 0x07, 0xD8, 0xE1,  // qPG.9...
            /* 00F8 */  0x64, 0x34, 0xE3, 0x52, 0x05, 0x98, 0x1D, 0xBA,  // d4.R....
            /* 0100 */  0x46, 0x96, 0xE0, 0x78, 0x0C, 0x7D, 0xF6, 0xE7,  // F..x.}..
            /* 0108 */  0xD3, 0x33, 0x24, 0x91, 0x3F, 0x08, 0xD4, 0xC8,  // .3$.?...
            /* 0110 */  0x0C, 0xED, 0xA1, 0x9E, 0x56, 0xCC, 0x90, 0x4F,  // ....V..O
            /* 0118 */  0x01, 0x87, 0xC5, 0xC4, 0x42, 0x68, 0x93, 0x1A,  // ....Bh..
            /* 0120 */  0x0F, 0xC4, 0xFF, 0xFF, 0x78, 0xC0, 0xA3, 0xF8,  // ....x...
            /* 0128 */  0x68, 0x20, 0x84, 0x57, 0x82, 0xD8, 0x1E, 0x50,  // h .W...P
            /* 0130 */  0x82, 0x01, 0x21, 0xE4, 0x64, 0x3C, 0xA8, 0x51,  // ..!.d<.Q
            /* 0138 */  0x18, 0x35, 0xDC, 0x61, 0x1C, 0xB5, 0x8F, 0x0F,  // .5.a....
            /* 0140 */  0x3A, 0x3C, 0x50, 0x51, 0xC3, 0xA6, 0x67, 0x06,  // :<PQ..g.
            /* 0148 */  0x7E, 0x5C, 0x60, 0xE7, 0x82, 0x98, 0x8F, 0x00,  // ~\`.....
            /* 0150 */  0x1E, 0xC9, 0x09, 0xF9, 0x38, 0xE1, 0x81, 0xC1,  // ....8...
            /* 0158 */  0x07, 0xC4, 0x7B, 0x9F, 0x32, 0x19, 0xC1, 0x99,  // ..{.2...
            /* 0160 */  0x7A, 0x80, 0xE0, 0xB0, 0x3E, 0x7C, 0x02, 0xFC,  // z...>|..
            /* 0168 */  0xB2, 0xF0, 0xB0, 0x90, 0xC0, 0xF7, 0x07, 0x03,  // ........
            /* 0170 */  0xE3, 0x46, 0x68, 0xBF, 0x02, 0x10, 0x82, 0x97,  // .Fh.....
            /* 0178 */  0x79, 0x02, 0x90, 0x53, 0x04, 0x8D, 0xCD, 0xD0,  // y..S....
            /* 0180 */  0x4F, 0x03, 0x2F, 0x0E, 0xE1, 0x83, 0x47, 0x38,  // O./...G8
            /* 0188 */  0xDF, 0x03, 0x38, 0x85, 0xC7, 0x00, 0x0F, 0xC1,  // ..8.....
            /* 0190 */  0x04, 0x16, 0x39, 0x02, 0x94, 0x98, 0x11, 0xA0,  // ..9.....
            /* 0198 */  0x8E, 0x0D, 0x27, 0x70, 0x3C, 0x61, 0x8F, 0xE0,  // ..'p<a..
            /* 01A0 */  0x78, 0xA2, 0x9C, 0xC4, 0x01, 0xF9, 0xA8, 0x61,  // x......a
            /* 01A8 */  0x84, 0xE0, 0xE5, 0x9E, 0x38, 0x88, 0xE6, 0x71,  // ....8..q
            /* 01B0 */  0x6A, 0x16, 0xEF, 0x00, 0x87, 0xC0, 0xC6, 0x84,  // j.......
            /* 01B8 */  0x3B, 0x40, 0x78, 0x08, 0x7C, 0x00, 0x8F, 0x1A,  // ;@x.|...
            /* 01C0 */  0xE7, 0x67, 0xA5, 0xB3, 0x42, 0x9E, 0x3B, 0xF8,  // .g..B.;.
            /* 01C8 */  0x98, 0xB0, 0x03, 0xE0, 0xD2, 0x0F, 0x27, 0x28,  // ......'(
            /* 01D0 */  0xB1, 0xE7, 0x13, 0x50, 0xFC, 0xFF, 0xCF, 0x27,  // ...P...'
            /* 01D8 */  0xC0, 0x1E, 0xE4, 0x99, 0xE4, 0xED, 0xE4, 0x68,  // .......h
            /* 01E0 */  0x9E, 0x4B, 0x1E, 0x48, 0x9E, 0x48, 0x9E, 0x4F,  // .K.H.H.O
            /* 01E8 */  0x8C, 0xF3, 0x66, 0xF2, 0x64, 0x10, 0xE1, 0xF9,  // ..f.d...
            /* 01F0 */  0xC4, 0xD7, 0x14, 0x23, 0x44, 0x09, 0x19, 0xE8,  // ...#D...
            /* 01F8 */  0xE1, 0x24, 0x42, 0x94, 0x70, 0x81, 0xC2, 0x1A,  // .$B.p...
            /* 0200 */  0x21, 0xC8, 0x63, 0xC1, 0x09, 0x1F, 0x76, 0xAC,  // !.c...v.
            /* 0208 */  0x40, 0x61, 0x9E, 0x4F, 0x98, 0xF0, 0xA7, 0x86,  // @a.O....
            /* 0210 */  0x2C, 0x9C, 0x4F, 0x00, 0xBA, 0xFC, 0xFF, 0xCF,  // ,.O.....
            /* 0218 */  0x27, 0x80, 0x33, 0x81, 0xE7, 0x13, 0x90, 0x0E,  // '.3.....
            /* 0220 */  0x8F, 0x1F, 0x4F, 0x80, 0xC9, 0x08, 0xB8, 0x16,  // ..O.....
            /* 0228 */  0x13, 0x87, 0x2F, 0xD4, 0xE3, 0xC0, 0xA7, 0x11,  // ../.....
            /* 0230 */  0x40, 0xCE, 0x09, 0xE4, 0xFD, 0xE3, 0x38, 0x9F,  // @.....8.
            /* 0238 */  0x44, 0x7C, 0xF7, 0xF2, 0xFF, 0xFF, 0xE6, 0xE5,  // D|......
            /* 0240 */  0x83, 0xC8, 0x1B, 0xC8, 0xC1, 0x3E, 0x8D, 0xB0,  // .....>..
            /* 0248 */  0x51, 0x05, 0x33, 0xCA, 0xE9, 0x47, 0x88, 0xFA,  // Q.3..G..
            /* 0250 */  0x52, 0x62, 0xC4, 0x08, 0xC1, 0x42, 0x05, 0x8A,  // Rb...B..
            /* 0258 */  0x11, 0x35, 0xB2, 0x61, 0x23, 0xC4, 0x79, 0xF8,  // .5.a#.y.
            /* 0260 */  0xA2, 0x0F, 0x06, 0x0D, 0xD5, 0xA7, 0x11, 0x80,  // ........
            /* 0268 */  0x1F, 0xA7, 0x09, 0xDC, 0xE9, 0x02, 0x4C, 0x93,  // ......L.
            /* 0270 */  0x38, 0x80, 0x28, 0x45, 0xC3, 0x68, 0x3A, 0x8F,  // 8.(E.h:.
            /* 0278 */  0x03, 0x01, 0x9F, 0x2F, 0x80, 0x89, 0xE2, 0x97,  // .../....
            /* 0280 */  0x9E, 0xCE, 0x27, 0xFE, 0xFF, 0xAB, 0x05, 0x91,  // ..'.....
            /* 0288 */  0x8D, 0xB5, 0x7A, 0x58, 0x34, 0xF3, 0x03, 0x48,  // ..zX4..H
            /* 0290 */  0xF0, 0xC5, 0x03, 0x6B, 0xD8, 0x27, 0x79, 0x16,  // ...k.'y.
            /* 0298 */  0x27, 0x99, 0x60, 0x56, 0x28, 0xC1, 0x7A, 0xD8,  // '.`V(.z.
            /* 02A0 */  0x4E, 0x09, 0xA3, 0x04, 0x24, 0x1A, 0x8E, 0xA1,  // N...$...
            /* 02A8 */  0xAD, 0x19, 0x46, 0x70, 0x06, 0xF1, 0x79, 0xC8,  // ..Fp..y.
            /* 02B0 */  0x21, 0xCE, 0x31, 0x50, 0x8E, 0x0C, 0x1E, 0xC5,  // !.1P....
            /* 02B8 */  0x59, 0x3D, 0x07, 0x78, 0x8C, 0x8F, 0x0B, 0x6C,  // Y=.x...l
            /* 02C0 */  0x7C, 0x3E, 0x08, 0xF0, 0xC3, 0xA0, 0x6F, 0x06,  // |>....o.
            /* 02C8 */  0x46, 0xB6, 0x9A, 0xD3, 0x0C, 0x0A, 0xCC, 0xC7,  // F.......
            /* 02D0 */  0x0B, 0x4E, 0x50, 0xD7, 0xCD, 0x05, 0x64, 0x43,  // .NP...dC
            /* 02D8 */  0x82, 0x79, 0x10, 0x38, 0x24, 0x30, 0x4F, 0xD5,  // .y.8$0O.
            /* 02E0 */  0x43, 0x02, 0x1E, 0xE0, 0x87, 0x04, 0xE6, 0x2B,  // C......+
            /* 02E8 */  0x81, 0x87, 0x04, 0x2C, 0xFE, 0xFF, 0xA8, 0x07,  // ...,....
            /* 02F0 */  0x71, 0x48, 0x60, 0x46, 0xF2, 0x90, 0xC0, 0xA6,  // qH`F....
            /* 02F8 */  0xEF, 0xC8, 0x01, 0x0A, 0x20, 0xDF, 0x30, 0x7C,  // .... .0|
            /* 0300 */  0xDC, 0x7B, 0xCA, 0x60, 0x63, 0x78, 0xE2, 0x33,  // .{.`cx.3
            /* 0308 */  0x9A, 0xD1, 0xB9, 0xC4, 0xE5, 0xE8, 0x42, 0xC1,  // ......B.
            /* 0310 */  0x45, 0xC1, 0xE8, 0x58, 0x60, 0x10, 0x4F, 0xCB,  // E..X`.O.
            /* 0318 */  0x51, 0xA6, 0x8A, 0x9E, 0x89, 0x7D, 0x9E, 0x42,  // Q....}.B
            /* 0320 */  0xC8, 0x89, 0x82, 0x5F, 0xDD, 0x74, 0x9F, 0x81,  // ..._.t..
            /* 0328 */  0x76, 0xF7, 0x08, 0xEA, 0x8B, 0x0A, 0x83, 0xF3,  // v.......
            /* 0330 */  0x64, 0x39, 0x9C, 0xAF, 0x14, 0xFC, 0xAE, 0xE3,  // d9......
            /* 0338 */  0xCB, 0x15, 0xF8, 0x46, 0x05, 0xF7, 0x50, 0xC1,  // ...F..P.
            /* 0340 */  0x46, 0x05, 0xF6, 0xEB, 0x88, 0x47, 0x05, 0xD6,  // F....G..
            /* 0348 */  0xFF, 0xFF, 0xA8, 0x60, 0x9D, 0x2B, 0xD8, 0xA8,  // ...`.+..
            /* 0350 */  0xC0, 0x7E, 0x26, 0xF0, 0xA8, 0x80, 0xCB, 0xD1,  // .~&.....
            /* 0358 */  0x82, 0x8D, 0x0A, 0xEC, 0x1E, 0x46, 0x05, 0xCA,  // .....F..
            /* 0360 */  0x20, 0xD7, 0x0F, 0x28, 0xD0, 0x8F, 0x96, 0xAF,  //  ..(....
            /* 0368 */  0x40, 0x0F, 0x41, 0x8F, 0x51, 0x1E, 0x14, 0xB8,  // @.A.Q...
            /* 0370 */  0x61, 0x7C, 0xDF, 0x03, 0x4E, 0x17, 0x10, 0x98,  // a|..N...
            /* 0378 */  0xF0, 0x18, 0xC1, 0x47, 0x18, 0xF2, 0xFF, 0x27,  // ...G...'
            /* 0380 */  0x28, 0x6B, 0x5C, 0xA8, 0xFB, 0x8A, 0xAF, 0x72,  // (k\....r
            /* 0388 */  0xEC, 0x3A, 0x85, 0xBB, 0x2A, 0x62, 0x60, 0x3D,  // .:..*b`=
            /* 0390 */  0x52, 0x0E, 0x6B, 0xB4, 0xB0, 0x07, 0xFC, 0xA6,  // R.k.....
            /* 0398 */  0xE5, 0x63, 0x9A, 0x67, 0x66, 0x8C, 0xB0, 0x1E,  // .c.gf...
            /* 03A0 */  0xAD, 0x95, 0x92, 0xD2, 0x2B, 0x9F, 0x23, 0xDD,  // ....+.#.
            /* 03A8 */  0xFA, 0x00, 0x41, 0x73, 0x79, 0x10, 0x78, 0xCE,  // ..Asy.x.
            /* 03B0 */  0x7B, 0x4B, 0x78, 0x73, 0xF7, 0x59, 0xC2, 0xC7,  // {Kxs.Y..
            /* 03B8 */  0xBD, 0xC7, 0x82, 0x97, 0x80, 0x97, 0x81, 0xF7,  // ........
            /* 03C0 */  0x92, 0x57, 0x5A, 0x76, 0xED, 0xF3, 0xAD, 0xCF,  // .WZv....
            /* 03C8 */  0x48, 0x0F, 0x80, 0x46, 0x09, 0x12, 0x23, 0xE6,  // H..F..#.
            /* 03D0 */  0xFB, 0x89, 0x91, 0x1F, 0x6D, 0x7D, 0x69, 0xF0,  // ....m}i.
            /* 03D8 */  0xBD, 0x2F, 0xC6, 0x5B, 0x1F, 0x8B, 0x77, 0xEB,  // ./.[..w.
            /* 03E0 */  0x03, 0x44, 0xFD, 0xFF, 0x6F, 0x7D, 0xC0, 0xFE,  // .D..o}..
            /* 03E8 */  0x72, 0xF1, 0xD6, 0x07, 0x1C, 0x30, 0x23, 0xBE,  // r....0#.
            /* 03F0 */  0xF6, 0x01, 0x93, 0x34, 0x2B, 0xD0, 0x59, 0xC3,  // ...4+.Y.
            /* 03F8 */  0x49, 0x40, 0x74, 0xED, 0xC3, 0xE9, 0x01, 0xD2,  // I@t.....
            /* 0400 */  0xB5, 0x0F, 0xAF, 0x03, 0x96, 0x8E, 0xDB, 0x0A,  // ........
            /* 0408 */  0x60, 0x94, 0xE4, 0x58, 0x85, 0xD2, 0x7E, 0xAC,  // `..X..~.
            /* 0410 */  0xA2, 0x20, 0x3E, 0xCE, 0xF8, 0xDA, 0x07, 0x58,  // . >....X
            /* 0418 */  0xF9, 0xFF, 0x5F, 0xFB, 0x00, 0x26, 0x0E, 0x09,  // .._..&..
            /* 0420 */  0xE6, 0xF5, 0xE2, 0x09, 0xC7, 0x43, 0x02, 0xEB,  // .....C..
            /* 0428 */  0x8D, 0xC6, 0x43, 0x82, 0xFB, 0xFF, 0x1F, 0x34,  // ..C....4
            /* 0430 */  0xD8, 0x86, 0x04, 0xE6, 0x8B, 0x9D, 0xAF, 0x8E,  // ........
            /* 0438 */  0xC0, 0x59, 0xF6, 0x82, 0x75, 0x29, 0xE1, 0x42,  // .Y..u).B
            /* 0440 */  0x61, 0x74, 0xB4, 0x30, 0x88, 0x01, 0x7D, 0x75,  // at.0..}u
            /* 0448 */  0x04, 0x7E, 0x17, 0x3E, 0xE0, 0x73, 0x75, 0x04,  // .~.>.su.
            /* 0450 */  0x0E, 0x17, 0x3E, 0xFC, 0xFF, 0xFF, 0xEA, 0x08,  // ..>.....
            /* 0458 */  0x38, 0xB8, 0xF1, 0x81, 0xF3, 0xEA, 0x08, 0xFC,  // 8.......
            /* 0460 */  0x4C, 0x5C, 0x1D, 0x01, 0x1D, 0x2A, 0x46, 0x0E,  // L\...*F.
            /* 0468 */  0x74, 0x4E, 0x31, 0x8C, 0xE0, 0xFF, 0x7F, 0x54,  // tN1....T
            /* 0470 */  0xE0, 0x06, 0xF6, 0xF1, 0x00, 0xD8, 0x8C, 0x0A,  // ........
            /* 0478 */  0x18, 0x9C, 0x06, 0x7C, 0x09, 0x05, 0xBC, 0x2A,  // ...|...*
            /* 0480 */  0xB4, 0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65,  // ..S.Q..e
            /* 0488 */  0x6A, 0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6,  // j.iP.O..
            /* 0490 */  0x8C, 0x5D, 0x29, 0x13, 0x8C, 0xB1, 0x02, 0x8D,  // .]).....
            /* 0498 */  0xC5, 0x22, 0x96, 0x23, 0x10, 0x87, 0x04, 0xA1,  // .".#....
            /* 04A0 */  0x22, 0x1F, 0x43, 0x02, 0x71, 0x44, 0x10, 0x1A,  // ".C.qD..
            /* 04A8 */  0xE1, 0x4D, 0x23, 0x10, 0xC7, 0x5B, 0x9B, 0x40,  // .M#..[.@
            /* 04B0 */  0x2C, 0xEE, 0xA1, 0x21, 0x10, 0xFF, 0xFF, 0x83,  // ,..!....
            /* 04B8 */  0x3C, 0x23, 0x64, 0x04, 0x44, 0xA9, 0x40, 0x74,  // <#d.D.@t
            /* 04C0 */  0x4B, 0x22, 0x6B, 0x12, 0x90, 0x95, 0x81, 0x08,  // K"k.....
            /* 04C8 */  0xC8, 0x81, 0x80, 0x68, 0x3A, 0x20, 0x2A, 0xEA,  // ...h: *.
            /* 04D0 */  0x21, 0x20, 0x20, 0x2B, 0x04, 0x11, 0x90, 0xD5,  // !  +....
            /* 04D8 */  0xD8, 0x00, 0x62, 0xDA, 0x40, 0x04, 0xE4, 0x5C,  // ..b.@..\
            /* 04E0 */  0x40, 0x34, 0x25, 0x10, 0x55, 0xA8, 0x03, 0x88,  // @4%.U...
            /* 04E8 */  0xE9, 0x05, 0x11, 0x90, 0xB3, 0x02, 0xD1, 0xE4,  // ........
            /* 04F0 */  0x40, 0x54, 0xB3, 0x0F, 0x20, 0x96, 0x00, 0x44,  // @T.. ..D
            /* 04F8 */  0x40, 0x4E, 0x4A, 0x23, 0x10, 0xEB, 0x54, 0x02,  // @NJ#..T.
            /* 0500 */  0xC2, 0x52, 0xBD, 0x1D, 0x04, 0xE8, 0x88, 0x20,  // .R..... 
            /* 0508 */  0x02, 0xB2, 0xB2, 0x2F, 0xAB, 0x80, 0x2C, 0x13,  // .../..,.
            /* 0510 */  0x44, 0x40, 0x4E, 0x07, 0x44, 0xA3, 0x02, 0x51,  // D@N.D..Q
            /* 0518 */  0x85, 0x56, 0x80, 0x98, 0x5C, 0x10, 0x01, 0x39,  // .V..\..9
            /* 0520 */  0x25, 0x10, 0x8D, 0x0C, 0x44, 0x95, 0x6A, 0x01,  // %...D.j.
            /* 0528 */  0x62, 0xB2, 0x41, 0x04, 0x64, 0x89, 0x5E, 0x80,  // b.A.d.^.
            /* 0530 */  0x98, 0x60, 0x10, 0x01, 0x39, 0x2C, 0x10, 0x8D,  // .`..9,..
            /* 0538 */  0x0E, 0x44, 0x65, 0xBF, 0x0A, 0x04, 0xE4, 0x10,  // .De.....
            /* 0540 */  0x20, 0x3A, 0x25, 0x10, 0x33, 0x40, 0x4C, 0x0E,  //  :%.3@L.
            /* 0548 */  0x88, 0x0E, 0x00, 0x04, 0x88, 0xC6, 0x02, 0xA2,  // ........
            /* 0550 */  0x92, 0xFE, 0x5B, 0x02, 0xB2, 0x40, 0x10, 0x01,  // ..[..@..
            /* 0558 */  0x39, 0x1C, 0x10, 0x8D, 0x0A, 0x44, 0xFF, 0xFF   // 9....D..
        })
    }
}

