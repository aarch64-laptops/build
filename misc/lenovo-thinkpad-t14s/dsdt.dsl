/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20230628 (32-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of ./dsdt.dat
 *
 * Original Table Header:
 *     Signature        "DSDT"
 *     Length           0x00051344 (332612)
 *     Revision         0x02
 *     Checksum         0x37
 *     OEM ID           "LENOVO"
 *     OEM Table ID     "SDM8380 "
 *     OEM Revision     0x00000003 (3)
 *     Compiler ID      "MSFT"
 *     Compiler Version 0x05000000 (83886080)
 */
DefinitionBlock ("", "DSDT", 2, "LENOVO", "SDM8380 ", 0x00000003)
{
    /*
     * iASL Warning: There was 1 external control method found during
     * disassembly, but only 0 were resolved (1 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.I2C7.ECMR, IntObj)
    External (_SB_.I2C7.ECMW, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.MBCL, UnknownObj)
    External (_SB_.MPP0, IntObj)
    External (_SB_.MPP1, IntObj)
    External (_SB_.MSKN, UnknownObj)
    External (_SB_.PRS0, IntObj)
    External (_SB_.PRS2, IntObj)
    External (_SB_.TZ11._CRT, IntObj)
    External (_SB_.TZ11._MTL, IntObj)
    External (_SB_.TZ11.TCRT, UnknownObj)
    External (_SB_.TZ11.TMTL, UnknownObj)
    External (_SB_.TZ13, UnknownObj)
    External (_SB_.TZ13._CRT, IntObj)
    External (_SB_.TZ13._MTL, IntObj)
    External (_SB_.TZ13._PSV, IntObj)
    External (_SB_.TZ13._TC1, IntObj)
    External (_SB_.TZ13._TC2, IntObj)
    External (_SB_.TZ13._TSP, IntObj)
    External (_SB_.TZ13.TCRT, UnknownObj)
    External (_SB_.TZ13.TMTL, UnknownObj)
    External (_SB_.TZ13.TPSV, UnknownObj)
    External (_SB_.TZ13.TTC1, UnknownObj)
    External (_SB_.TZ13.TTC2, UnknownObj)
    External (_SB_.TZ13.TTSP, UnknownObj)
    External (_SB_.TZ1_._CRT, IntObj)
    External (_SB_.TZ1_.TCRT, UnknownObj)
    External (_SB_.TZ35, UnknownObj)
    External (_SB_.TZ35._CRT, IntObj)
    External (_SB_.TZ35._MTL, IntObj)
    External (_SB_.TZ35._PSV, IntObj)
    External (_SB_.TZ35._TC1, IntObj)
    External (_SB_.TZ35._TC2, IntObj)
    External (_SB_.TZ35._TSP, IntObj)
    External (_SB_.TZ35.TCRT, UnknownObj)
    External (_SB_.TZ35.TMTL, UnknownObj)
    External (_SB_.TZ35.TPSV, UnknownObj)
    External (_SB_.TZ35.TTC1, UnknownObj)
    External (_SB_.TZ35.TTC2, UnknownObj)
    External (_SB_.TZ35.TTSP, UnknownObj)
    External (_SB_.TZ36, UnknownObj)
    External (_SB_.TZ36._CRT, IntObj)
    External (_SB_.TZ36._MTL, IntObj)
    External (_SB_.TZ36._PSV, IntObj)
    External (_SB_.TZ36._TC1, IntObj)
    External (_SB_.TZ36._TC2, IntObj)
    External (_SB_.TZ36._TSP, IntObj)
    External (_SB_.TZ36.TCRT, UnknownObj)
    External (_SB_.TZ36.TMTL, UnknownObj)
    External (_SB_.TZ36.TPSV, UnknownObj)
    External (_SB_.TZ36.TTC1, UnknownObj)
    External (_SB_.TZ36.TTC2, UnknownObj)
    External (_SB_.TZ36.TTSP, UnknownObj)
    External (_SB_.TZ37, UnknownObj)
    External (_SB_.TZ37._CRT, IntObj)
    External (_SB_.TZ37._MTL, IntObj)
    External (_SB_.TZ37._PSV, IntObj)
    External (_SB_.TZ37._TC1, IntObj)
    External (_SB_.TZ37._TC2, IntObj)
    External (_SB_.TZ37._TSP, IntObj)
    External (_SB_.TZ37.TCRT, UnknownObj)
    External (_SB_.TZ37.TMTL, UnknownObj)
    External (_SB_.TZ37.TPSV, UnknownObj)
    External (_SB_.TZ37.TTC1, UnknownObj)
    External (_SB_.TZ37.TTC2, UnknownObj)
    External (_SB_.TZ37.TTSP, UnknownObj)
    External (_SB_.TZ38, UnknownObj)
    External (_SB_.TZ38._CRT, IntObj)
    External (_SB_.TZ38._MTL, IntObj)
    External (_SB_.TZ38._PSV, IntObj)
    External (_SB_.TZ38._TC1, IntObj)
    External (_SB_.TZ38._TC2, IntObj)
    External (_SB_.TZ38._TSP, IntObj)
    External (_SB_.TZ38.TCRT, UnknownObj)
    External (_SB_.TZ38.TMTL, UnknownObj)
    External (_SB_.TZ38.TPSV, UnknownObj)
    External (_SB_.TZ38.TTC1, UnknownObj)
    External (_SB_.TZ38.TTC2, UnknownObj)
    External (_SB_.TZ38.TTSP, UnknownObj)
    External (_SB_.TZ39._CR3, IntObj)
    External (_SB_.TZ39._HOT, IntObj)
    External (_SB_.TZ39._MTL, IntObj)
    External (_SB_.TZ39.TCR3, UnknownObj)
    External (_SB_.TZ39.THOT, UnknownObj)
    External (_SB_.TZ39.THSF, UnknownObj)
    External (_SB_.TZ39.TMTL, UnknownObj)
    External (_SB_.TZ3_._CRT, IntObj)
    External (_SB_.TZ3_.TCRT, UnknownObj)
    External (_SB_.TZ40._CR3, IntObj)
    External (_SB_.TZ40._HOT, IntObj)
    External (_SB_.TZ41._CR3, IntObj)
    External (_SB_.TZ41._HOT, IntObj)
    External (_SB_.TZ41._MTL, IntObj)
    External (_SB_.TZ41.TCR3, UnknownObj)
    External (_SB_.TZ41.THOT, UnknownObj)
    External (_SB_.TZ41.THSF, UnknownObj)
    External (_SB_.TZ41.TMTL, UnknownObj)
    External (_SB_.TZ42._CR3, IntObj)
    External (_SB_.TZ42._HOT, IntObj)
    External (_SB_.TZ43._CR3, IntObj)
    External (_SB_.TZ43._HOT, IntObj)
    External (_SB_.TZ43._MTL, IntObj)
    External (_SB_.TZ43.TCR3, UnknownObj)
    External (_SB_.TZ43.THOT, UnknownObj)
    External (_SB_.TZ43.THSF, UnknownObj)
    External (_SB_.TZ43.TMTL, UnknownObj)
    External (_SB_.TZ44._CR3, IntObj)
    External (_SB_.TZ44._HOT, IntObj)
    External (_SB_.TZ44._MTL, IntObj)
    External (_SB_.TZ44.TCR3, UnknownObj)
    External (_SB_.TZ44.THOT, UnknownObj)
    External (_SB_.TZ44.THSF, UnknownObj)
    External (_SB_.TZ44.TMTL, UnknownObj)
    External (_SB_.TZ45, UnknownObj)
    External (_SB_.TZ45._CR3, IntObj)
    External (_SB_.TZ45._CRT, IntObj)
    External (_SB_.TZ45._HOT, IntObj)
    External (_SB_.TZ45._MTL, IntObj)
    External (_SB_.TZ45._PSV, IntObj)
    External (_SB_.TZ45._TC1, IntObj)
    External (_SB_.TZ45._TC2, IntObj)
    External (_SB_.TZ45._TSP, IntObj)
    External (_SB_.TZ45.TCR3, UnknownObj)
    External (_SB_.TZ45.TCRT, UnknownObj)
    External (_SB_.TZ45.THOT, UnknownObj)
    External (_SB_.TZ45.THSF, UnknownObj)
    External (_SB_.TZ45.TMTL, UnknownObj)
    External (_SB_.TZ45.TPSV, UnknownObj)
    External (_SB_.TZ45.TTC1, UnknownObj)
    External (_SB_.TZ45.TTC2, UnknownObj)
    External (_SB_.TZ45.TTSP, UnknownObj)
    External (_SB_.TZ50, UnknownObj)
    External (_SB_.TZ50._MTL, IntObj)
    External (_SB_.TZ50._PSV, IntObj)
    External (_SB_.TZ50._TC1, IntObj)
    External (_SB_.TZ50._TC2, IntObj)
    External (_SB_.TZ50._TSP, IntObj)
    External (_SB_.TZ50.TMTL, UnknownObj)
    External (_SB_.TZ50.TPSV, UnknownObj)
    External (_SB_.TZ50.TTC1, UnknownObj)
    External (_SB_.TZ50.TTC2, UnknownObj)
    External (_SB_.TZ50.TTSP, UnknownObj)
    External (_SB_.TZ52, UnknownObj)
    External (_SB_.TZ52._MTL, IntObj)
    External (_SB_.TZ52._PSV, IntObj)
    External (_SB_.TZ52._TC1, IntObj)
    External (_SB_.TZ52._TC2, IntObj)
    External (_SB_.TZ52._TSP, IntObj)
    External (_SB_.TZ52.TMTL, UnknownObj)
    External (_SB_.TZ52.TPSV, UnknownObj)
    External (_SB_.TZ52.TTC1, UnknownObj)
    External (_SB_.TZ52.TTC2, UnknownObj)
    External (_SB_.TZ52.TTSP, UnknownObj)
    External (_SB_.TZ53, UnknownObj)
    External (_SB_.TZ53._MTL, IntObj)
    External (_SB_.TZ53._PSV, IntObj)
    External (_SB_.TZ53._TC1, IntObj)
    External (_SB_.TZ53._TC2, IntObj)
    External (_SB_.TZ53._TSP, IntObj)
    External (_SB_.TZ53.TMTL, UnknownObj)
    External (_SB_.TZ53.TPSV, UnknownObj)
    External (_SB_.TZ53.TTC1, UnknownObj)
    External (_SB_.TZ53.TTC2, UnknownObj)
    External (_SB_.TZ53.TTSP, UnknownObj)
    External (_SB_.TZ54, UnknownObj)
    External (_SB_.TZ54._MTL, IntObj)
    External (_SB_.TZ54._PSV, IntObj)
    External (_SB_.TZ54._TC1, IntObj)
    External (_SB_.TZ54._TC2, IntObj)
    External (_SB_.TZ54._TSP, IntObj)
    External (_SB_.TZ54.TMTL, UnknownObj)
    External (_SB_.TZ54.TPSV, UnknownObj)
    External (_SB_.TZ54.TTC1, UnknownObj)
    External (_SB_.TZ54.TTC2, UnknownObj)
    External (_SB_.TZ54.TTSP, UnknownObj)
    External (_SB_.TZ55, UnknownObj)
    External (_SB_.TZ55._MTL, IntObj)
    External (_SB_.TZ55._PSV, IntObj)
    External (_SB_.TZ55._TC1, IntObj)
    External (_SB_.TZ55._TC2, IntObj)
    External (_SB_.TZ55._TSP, IntObj)
    External (_SB_.TZ55.TMTL, UnknownObj)
    External (_SB_.TZ55.TPSV, UnknownObj)
    External (_SB_.TZ55.TTC1, UnknownObj)
    External (_SB_.TZ55.TTC2, UnknownObj)
    External (_SB_.TZ55.TTSP, UnknownObj)
    External (_SB_.TZ56, UnknownObj)
    External (_SB_.TZ56._MTL, IntObj)
    External (_SB_.TZ56._PSV, IntObj)
    External (_SB_.TZ56._TC1, IntObj)
    External (_SB_.TZ56._TC2, IntObj)
    External (_SB_.TZ56._TSP, IntObj)
    External (_SB_.TZ56.TMTL, UnknownObj)
    External (_SB_.TZ56.TPSV, UnknownObj)
    External (_SB_.TZ56.TTC1, UnknownObj)
    External (_SB_.TZ56.TTC2, UnknownObj)
    External (_SB_.TZ56.TTSP, UnknownObj)
    External (_SB_.TZ57, UnknownObj)
    External (_SB_.TZ57._MTL, IntObj)
    External (_SB_.TZ57._PSV, IntObj)
    External (_SB_.TZ57._TC1, IntObj)
    External (_SB_.TZ57._TC2, IntObj)
    External (_SB_.TZ57._TSP, IntObj)
    External (_SB_.TZ57.TMTL, UnknownObj)
    External (_SB_.TZ57.TPSV, UnknownObj)
    External (_SB_.TZ57.TTC1, UnknownObj)
    External (_SB_.TZ57.TTC2, UnknownObj)
    External (_SB_.TZ57.TTSP, UnknownObj)
    External (_SB_.TZ58, UnknownObj)
    External (_SB_.TZ58._MTL, IntObj)
    External (_SB_.TZ58._PSV, IntObj)
    External (_SB_.TZ58._TC1, IntObj)
    External (_SB_.TZ58._TC2, IntObj)
    External (_SB_.TZ58._TSP, IntObj)
    External (_SB_.TZ58.TMTL, UnknownObj)
    External (_SB_.TZ58.TPSV, UnknownObj)
    External (_SB_.TZ58.TTC1, UnknownObj)
    External (_SB_.TZ58.TTC2, UnknownObj)
    External (_SB_.TZ58.TTSP, UnknownObj)
    External (_SB_.TZ59, UnknownObj)
    External (_SB_.TZ59._MTL, IntObj)
    External (_SB_.TZ59._PSV, IntObj)
    External (_SB_.TZ59._TC1, IntObj)
    External (_SB_.TZ59._TC2, IntObj)
    External (_SB_.TZ59._TSP, IntObj)
    External (_SB_.TZ59.TMTL, UnknownObj)
    External (_SB_.TZ59.TPSV, UnknownObj)
    External (_SB_.TZ59.TTC1, UnknownObj)
    External (_SB_.TZ59.TTC2, UnknownObj)
    External (_SB_.TZ59.TTSP, UnknownObj)
    External (_SB_.TZ5_._CRT, IntObj)
    External (_SB_.TZ5_.TCRT, UnknownObj)
    External (_SB_.TZ60, UnknownObj)
    External (_SB_.TZ60._MTL, IntObj)
    External (_SB_.TZ60._PSV, IntObj)
    External (_SB_.TZ60._TC1, IntObj)
    External (_SB_.TZ60._TC2, IntObj)
    External (_SB_.TZ60._TSP, IntObj)
    External (_SB_.TZ60.TMTL, UnknownObj)
    External (_SB_.TZ60.TPSV, UnknownObj)
    External (_SB_.TZ60.TTC1, UnknownObj)
    External (_SB_.TZ60.TTC2, UnknownObj)
    External (_SB_.TZ60.TTSP, UnknownObj)
    External (_SB_.TZ61, UnknownObj)
    External (_SB_.TZ61._MTL, IntObj)
    External (_SB_.TZ61._PSV, IntObj)
    External (_SB_.TZ61._TC1, IntObj)
    External (_SB_.TZ61._TC2, IntObj)
    External (_SB_.TZ61._TSP, IntObj)
    External (_SB_.TZ61.TMTL, UnknownObj)
    External (_SB_.TZ61.TPSV, UnknownObj)
    External (_SB_.TZ61.TTC1, UnknownObj)
    External (_SB_.TZ61.TTC2, UnknownObj)
    External (_SB_.TZ61.TTSP, UnknownObj)
    External (_SB_.TZ62, UnknownObj)
    External (_SB_.TZ62._MTL, IntObj)
    External (_SB_.TZ62._PSV, IntObj)
    External (_SB_.TZ62._TC1, IntObj)
    External (_SB_.TZ62._TC2, IntObj)
    External (_SB_.TZ62._TSP, IntObj)
    External (_SB_.TZ62.TMTL, UnknownObj)
    External (_SB_.TZ62.TPSV, UnknownObj)
    External (_SB_.TZ62.TTC1, UnknownObj)
    External (_SB_.TZ62.TTC2, UnknownObj)
    External (_SB_.TZ62.TTSP, UnknownObj)
    External (_SB_.TZ6_._CRT, IntObj)
    External (_SB_.TZ6_._MTL, IntObj)
    External (_SB_.TZ6_.TCRT, UnknownObj)
    External (_SB_.TZ6_.TMTL, UnknownObj)
    External (_SB_.TZ98._MTL, IntObj)
    External (_SB_.TZ98._PSV, IntObj)
    External (_SB_.TZ98._TC1, IntObj)
    External (_SB_.TZ98._TSP, IntObj)
    External (_SB_.TZ98.TMTL, UnknownObj)
    External (_SB_.TZ98.TPSV, UnknownObj)
    External (_SB_.TZ98.TTC1, UnknownObj)
    External (_SB_.TZ98.TTSP, UnknownObj)
    External (_SB_.TZ99._MTL, IntObj)
    External (_SB_.TZ99.TMTL, UnknownObj)
    External (_SB_.UPLD.PLD2, IntObj)
    External (SRPC, IntObj)
    External (STAT, UnknownObj)

    Scope (\_SB)
    {
        Name (ESUB, "233817AA")
        Name (SOID, 0x0000022B)
        Name (STOR, 0x00000000)
        Name (SIDS, "SCP_HAMOA")
        Zero
        Zero
        Zero
        Zero
        Zero
        Zero
        Name (SIDV, 0x00020001)
        Name (SVMJ, 0x0002)
        Name (SVMI, 0x0001)
        Name (SDFE, 0x0088)
        Name (SFES, "899800000000000")
        Name (SIDM, 0x0000000FFFFF0000)
        Name (SUFS, 0xFFFFFFFF)
        Name (PUS4, 0xFFFFFFFF)
        Name (SUS4, 0xFFFFFFFF)
        Name (SIDT, 0x00000000)
        Name (SOSN, 0x00000446424ADE57)
        Name (PLST, 0x0002000100000000)
        Name (EMUL, 0x00000000)
        Name (SJTG, 0x3021E0E1)
        Name (DDRC, 0x0008)
        Name (RMTB, 0xAAAAAAAA)
        Name (RMTX, 0xBBBBBBBB)
        Name (RFMB, 0xCCCCCCCC)
        Name (RFMS, 0xDDDDDDDD)
        Name (RFAB, 0xEEEEEEEE)
        Name (RFAS, 0x77777777)
        Name (TCMA, 0x81F1E000)
        Name (TCML, 0x00002000)
        Name (SOSI, 0x00000000FFE09BA0)
        Name (PRP0, 0xFFFFFFFF)
        Name (PRP1, 0xFFFFFFFF)
        Name (PRP2, 0xFFFFFFFF)
        Name (PRP3, 0xFFFFFFFF)
        Name (PRP4, 0x00000001)
        Name (PRP5, 0xFFFFFFFF)
        Name (PRP6, 0x00000001)
        Name (PRP7, 0xFFFFFFFF)
        Name (FNTR, 0x7F05)
        Name (FNHB, Zero)
        Name (PSUB, "CRD08380")
        Name (LSUB, "233817AA")
        Name (FPID, 0x0086)
        Name (DPBM, 0x80000000)
        Method (PHRV, 0, Serialized)
        {
            Name (HWRN, Zero)
            HWRN = FPID /* \_SB_.FPID */
            Return (HWRN) /* \_SB_.PHRV.HWRN */
        }

        OperationRegion (MNVS, SystemMemory, 0xD6CF5018, 0x6000)
        Field (MNVS, DWordAcc, NoLock, Preserve)
        {
            Offset (0xD00), 
            GAPA,   32, 
            GAPL,   32, 
            DCKI,   32, 
            DCKS,   32, 
            VCDL,   1, 
            VCDC,   1, 
            VCDT,   1, 
            VCDD,   1, 
                ,   1, 
            VCSS,   1, 
            VCDB,   1, 
            VCIN,   1, 
            VVPO,   8, 
            BNTN,   8, 
            BRLV,   8, 
            CDFL,   8, 
            CDAH,   8, 
            PMOD,   2, 
            PDIR,   1, 
            PDMA,   1, 
            Offset (0xD17), 
            LFDC,   1, 
            Offset (0xD18), 
            C2NA,   1, 
            C3NA,   1, 
            C4NA,   1, 
            C6NA,   1, 
            C7NA,   1, 
            Offset (0xD19), 
            Offset (0xD1A), 
                ,   2, 
                ,   1, 
            NHPS,   1, 
            NPMS,   1, 
            Offset (0xD1B), 
            UOPT,   8, 
            BTID,   32, 
            DPP0,   1, 
            DPP1,   1, 
            DPP2,   1, 
            DPP3,   1, 
            DPP4,   1, 
            DPP5,   1, 
            Offset (0xD21), 
            Offset (0xD22), 
            TCRT,   16, 
            TPSV,   16, 
            TTC1,   16, 
            TTC2,   16, 
            TTSP,   16, 
            SRAH,   8, 
            SRHE,   8, 
            SRE1,   8, 
            SRE2,   8, 
            SRE3,   8, 
            SRE4,   8, 
            SRE5,   8, 
            SRE6,   8, 
            SRU1,   8, 
            SRU2,   8, 
            SRU3,   8, 
            SRU7,   8, 
            SRU4,   8, 
            SRU5,   8, 
            SRU8,   8, 
            SRPB,   8, 
            SRLP,   8, 
            SRSA,   8, 
            SRSM,   8, 
            CWAC,   1, 
            CWAS,   1, 
            CWUE,   1, 
            CWUS,   1, 
            Offset (0xD40), 
            CWAP,   16, 
            CWAT,   16, 
            DBGC,   1, 
            Offset (0xD45), 
            FS1L,   16, 
            FS1M,   16, 
            FS1H,   16, 
            FS2L,   16, 
            FS2M,   16, 
            FS2H,   16, 
            FS3L,   16, 
            FS3M,   16, 
            FS3H,   16, 
            TATC,   1, 
                ,   6, 
            TATL,   1, 
            TATW,   8, 
            TNFT,   4, 
            TNTT,   4, 
            TDFA,   4, 
            TDTA,   4, 
            TDFD,   4, 
            TDTD,   4, 
            TCFA,   4, 
            TCTA,   4, 
            TCFD,   4, 
            TCTD,   4, 
            TSFT,   4, 
            TSTT,   4, 
            TIT0,   8, 
            TCR0,   16, 
            TPS0,   16, 
            TIT1,   8, 
            TCR1,   16, 
            TPS1,   16, 
            TIT2,   8, 
            TCR2,   16, 
            TPS2,   16, 
            TIF0,   8, 
            TIF1,   8, 
            TIF2,   8, 
            Offset (0xD78), 
            BTHI,   1, 
            Offset (0xD79), 
            HPDD,   8, 
            TPME,   8, 
            BIDE,   4, 
            IDET,   4, 
                ,   1, 
                ,   1, 
            Offset (0xD7D), 
            DTS0,   8, 
            Offset (0xD7F), 
            DT00,   1, 
            DT01,   1, 
            DT02,   1, 
            DT03,   1, 
            Offset (0xD80), 
            LIDL,   1, 
            C4WR,   1, 
            C4AC,   1, 
            ODDX,   1, 
            CMPR,   1, 
            ILNF,   1, 
            PLUX,   1, 
            Offset (0xD81), 
            Offset (0xD8A), 
            WLAC,   8, 
            WIWK,   1, 
            Offset (0xD8C), 
                ,   4, 
                ,   1, 
            IDMM,   1, 
            Offset (0xD8D), 
                ,   3, 
                ,   1, 
                ,   1, 
                ,   1, 
            Offset (0xD8E), 
            Offset (0xD8F), 
                ,   4, 
            Offset (0xD90), 
            Offset (0xD91), 
            SWGP,   8, 
            IPMS,   8, 
            IPMB,   120, 
            IPMR,   24, 
            IPMO,   24, 
            IPMA,   8, 
            VIGD,   1, 
            VDSC,   1, 
            VMSH,   1, 
                ,   1, 
            VDSP,   1, 
            Offset (0xDAA), 
            Offset (0xDAD), 
            ASFT,   8, 
            PL1L,   8, 
            PL1M,   8, 
            CHKC,   32, 
            CHKE,   32, 
            ATRB,   32, 
            Offset (0xDBD), 
            PPCR,   8, 
            TPCR,   5, 
            Offset (0xDBF), 
            Offset (0xDCE), 
            CTPR,   8, 
            PPCA,   8, 
            TPCA,   5, 
            Offset (0xDD1), 
            BFWB,   296, 
            OSPX,   1, 
            OSC4,   1, 
            CPPX,   1, 
            Offset (0xDF7), 
            SPEN,   1, 
            SCRM,   1, 
                ,   1, 
            ETAU,   1, 
            IHBC,   1, 
            APMD,   1, 
            APMF,   1, 
            Offset (0xDF8), 
            FTPS,   8, 
            HIST,   8, 
            LPST,   8, 
            LWST,   8, 
            Offset (0xDFF), 
            PMMD,   8, 
            Offset (0xE20), 
            HPET,   32, 
            PKLI,   16, 
            VLCX,   16, 
            VNIT,   8, 
            VBD0,   8, 
            VBDT,   128, 
            VBPL,   16, 
            VBPH,   16, 
            VBML,   8, 
            VBMH,   8, 
            VEDI,   1024, 
            PDCI,   16, 
            ISCG,   32, 
            ISSP,   1, 
            ISWK,   2, 
            ISFS,   3, 
            Offset (0xEC7), 
            SHA1,   160, 
            LVMD,   8, 
            LWCP,   1, 
            LWEN,   1, 
            IOCP,   1, 
            IOEN,   1, 
            IOST,   1, 
            Offset (0xEDD), 
            USBR,   1, 
            Offset (0xEDE), 
            Offset (0xEDF), 
            Offset (0xEE1), 
            WFCC,   3, 
            Offset (0xEE2), 
            TPPP,   8, 
            TPPC,   8, 
            CTPC,   8, 
            FNWK,   8, 
            Offset (0xEE7), 
            XHCC,   8, 
            FCAP,   16, 
            VSTD,   1, 
            VCQL,   1, 
            VTIO,   1, 
            VMYH,   1, 
            VSTP,   1, 
            VLCM,   1, 
            VDGM,   1, 
            VADM,   1, 
            VRPC,   1, 
            VTMS,   1, 
            VDLS,   1, 
            VMMC,   1, 
            VMSC,   1, 
            VPSC,   1, 
            VCSC,   1, 
            VAMT,   1, 
            CICF,   4, 
            CICM,   4, 
            MYHC,   8, 
            MMCC,   8, 
            PT1D,   15, 
            Offset (0xEF1), 
            PT2D,   15, 
            Offset (0xEF3), 
            PT0D,   15, 
            Offset (0xEF5), 
            DVS0,   1, 
            DVS1,   1, 
            DVS2,   1, 
            DVS3,   1, 
            Offset (0xEF7), 
            Offset (0xF13), 
            Offset (0xF14), 
                ,   4, 
            SADM,   4, 
            SMYH,   4, 
            SMMC,   4, 
            SPSC,   4, 
            SAMT,   4, 
            STDV,   8, 
            SCRB,   8, 
            PMOF,   8, 
            MPID,   8, 
            VEDX,   1024, 
            SHDW,   8, 
            TPID,   16, 
            TPAD,   8, 
            TDVI,   16, 
            TDPI,   16, 
            TLVI,   16, 
            TLPI,   16, 
            EPAO,   8, 
            TLAS,   8, 
            FADM,   8, 
            VPID,   8
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0xB00), 
            WITM,   8, 
            WSEL,   8, 
            WLS0,   8, 
            WLS1,   8, 
            WLS2,   8, 
            WLS3,   8, 
            WLS4,   8, 
            WLS5,   8, 
            WLS6,   8, 
            WLS7,   8, 
            WLS8,   8, 
            WLS9,   8, 
            WLSA,   8, 
            WLSB,   8, 
            WLSC,   8, 
            WLSD,   8, 
            WENC,   8, 
            WKBD,   8, 
            WPTY,   8, 
            WPAS,   1032, 
            WPNW,   1032, 
            WSPM,   8, 
            WSPS,   8, 
            WSMN,   8, 
            WSMX,   8, 
            WSEN,   8, 
            WSKB,   8, 
            WASB,   8, 
            WASI,   16, 
            WASD,   8, 
            WASS,   32, 
            WDRV,   8, 
            WMTH,   8, 
            RTC0,   8, 
            RTC1,   8, 
            RTC2,   8, 
            WSHS,   8, 
            WEXF,   8, 
            SDBM,   8
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x1000), 
            CBFF,   32768
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x5000), 
            WDSC,   4088, 
            WCER,   16384
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0xA00), 
            DBGB,   1024
        }

        Field (MNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x2000), 
            RQBF,   32864, 
            RQSC,   8, 
            RPRT,   32856, 
            EQBF,   4416, 
            EQRT,   24, 
            EPIN,   8, 
            EPSN,   8, 
            EPRT,   16384
        }

        OperationRegion (CNVS, SystemMemory, 0xD6CF2018, 0x2000)
        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SCSB,   65536
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SNMA,   32
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SSMB,   24768, 
            SSPL,   16, 
            SSPB,   2048
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SGMB,   128, 
            SGPL,   16, 
            SGPB,   2048
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SGSB,   24608
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SEDL,   768, 
            SENS,   32
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SWMB,   60992, 
            SWAL,   16, 
            SWAB,   2048
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            GWMB,   60864
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            SPMA,   1104
        }

        Field (CNVS, ByteAcc, NoLock, Preserve)
        {
            GPMB,   5520
        }

        OperationRegion (WNVS, SystemMemory, 0xD6CF1018, 0x1000)
        Field (WNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            SBID,   2048
        }

        Field (WNVS, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            BD00,   128, 
            BD01,   128, 
            BD02,   128, 
            BD03,   128, 
            BD04,   128, 
            BD05,   128, 
            BD06,   128, 
            BD07,   128, 
            BD08,   128, 
            BD09,   128, 
            BD0A,   128, 
            BD0B,   128, 
            BD0C,   128, 
            BD0D,   128, 
            BD0E,   128, 
            BD0F,   128, 
            PWDP,   8, 
            TPDT,   8
        }

        Name (SPS, Zero)
        Name (OSIF, Zero)
        Name (WNTF, One)
        Name (WXPF, Zero)
        Name (WVIS, Zero)
        Name (WIN7, Zero)
        Name (WSPV, Zero)
        Name (LNUX, Zero)
        Name (H8DR, Zero)
        Name (MEMX, Zero)
        Name (ACST, Zero)
        Name (FMBL, One)
        Name (FDTP, 0x02)
        Name (FUPS, 0x03)
        Name (FNID, Zero)
        Name (RRBF, Zero)
        Name (NBCF, Zero)
        Field (MNVS, AnyAcc, NoLock, Preserve)
        {
            Offset (0xFC0), 
            CMD,    8, 
            ERR,    32, 
            PAR0,   32, 
            PAR1,   32, 
            PAR2,   32, 
            PAR3,   32
        }

        Mutex (MSMI, 0x00)
        Method (SMI, 5, Serialized)
        {
            Acquire (MSMI, 0xFFFF)
            CMD = Arg0
            ERR = One
            PAR0 = Arg1
            PAR1 = Arg2
            PAR2 = Arg3
            PAR3 = Arg4
            Notify (\_SB.TTZE, 0xC0) // Hardware-Specific
            Sleep (0x0A)
            Local1 = 0x32
            While (((ERR == One) && (Local1 > One)))
            {
                Local1 -= One
                Sleep (0x0A)
            }

            Local0 = PAR0 /* \_SB_.PAR0 */
            Release (MSMI)
            Return (Local0)
        }

        Method (RBEC, 1, NotSerialized)
        {
            Return (SMI (Zero, 0x03, Arg0, Zero, Zero))
        }

        Method (WBEC, 2, NotSerialized)
        {
            SMI (Zero, 0x04, Arg0, Arg1, Zero)
        }

        Method (MBEC, 3, NotSerialized)
        {
            Local0 = \_SB.I2C7.ECRD (Arg0)
            Local0 &= Arg1
            Local0 |= Arg2
            Local0 &= 0xFF
            \_SB.I2C7.ECWR (Arg0, Local0)
        }

        Method (SCMS, 1, NotSerialized)
        {
            While (One)
            {
                Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                _T_0 = Arg0
                If ((_T_0 == 0x20))
                {
                    Local0 = GECB (0x0D, 0x06, 0x02)
                    WECB (0xE1, 0x02, 0x02, Local0)
                }
                ElseIf ((_T_0 == 0x21))
                {
                    Local0 = GECB (0xE1, 0x02, 0x02)
                    WECB (0x0D, 0x06, 0x02, Local0)
                }
                Else
                {
                    Return (SMI (0x02, Arg0, Zero, Zero, Zero))
                }

                Break
            }
        }

        Method (BLTH, 1, NotSerialized)
        {
            Return (SMI (0x06, Arg0, Zero, Zero, Zero))
        }

        Method (PRSM, 2, NotSerialized)
        {
            Return (SMI (0x07, Zero, Arg0, Arg1, Zero))
        }

        Method (ISOC, 1, NotSerialized)
        {
            Return (\_SB.I2C7.INGO (0x03, Arg0))
        }

        Method (EZRC, 1, NotSerialized)
        {
            Return (\_SB.I2C7.INGO (0x04, Arg0))
        }

        Method (WGSV, 1, NotSerialized)
        {
            Return (SMI (0x09, Arg0, Zero, Zero, Zero))
        }

        Method (SWTT, 1, NotSerialized)
        {
            If (SMI (0x0A, 0x02, Arg0, Zero, Zero))
            {
                If (\_SB.I2C7.HKEY.DHKC)
                {
                    \_SB.I2C7.HKEY.MHKQ (0x6030)
                }
            }
        }

        Method (TSDL, 0, NotSerialized)
        {
            Return (SMI (0x0A, 0x03, Zero, Zero, Zero))
        }

        Method (FLPF, 1, NotSerialized)
        {
        }

        Method (GTST, 1, NotSerialized)
        {
            ADBG ("GTST")
            Return (SMI (0x0A, 0x05, Arg0, Zero, Zero))
        }

        Method (CSUM, 1, NotSerialized)
        {
            Return (SMI (0x0E, Arg0, Zero, Zero, Zero))
        }

        Method (NVSS, 1, NotSerialized)
        {
            Return (SMI (0x0F, Arg0, Zero, Zero, Zero))
        }

        Method (WMIS, 2, NotSerialized)
        {
            Return (SMI (0x10, Arg0, Arg1, Zero, Zero))
        }

        Method (AWON, 1, NotSerialized)
        {
            Return (SMI (0x12, Arg0, Zero, Zero, Zero))
        }

        Method (PMON, 2, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            Name (TSTR, Buffer (Local0){})
            TSTR = Arg0
            DBGB = TSTR /* \_SB_.PMON.TSTR */
            SMI (0x11, Arg1, Zero, Zero, Zero)
        }

        Method (UAWS, 1, NotSerialized)
        {
            Return (SMI (0x13, Arg0, Zero, Zero, Zero))
        }

        Method (BFWC, 1, NotSerialized)
        {
            Return (SMI (0x14, Zero, Arg0, Zero, Zero))
        }

        Method (BFWP, 0, NotSerialized)
        {
            Return (SMI (0x14, One, Zero, Zero, Zero))
        }

        Method (BFWL, 0, NotSerialized)
        {
            SMI (0x14, 0x02, Zero, Zero, Zero)
        }

        Method (BFWG, 1, NotSerialized)
        {
            SMI (0x14, 0x03, Arg0, Zero, Zero)
        }

        Method (BDMC, 1, NotSerialized)
        {
            SMI (0x14, 0x04, Arg0, Zero, Zero)
        }

        Method (PSIF, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x05, Arg0, Arg1, Zero))
        }

        Method (FNSC, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x06, Arg0, Arg1, Zero))
        }

        Method (AUDC, 2, NotSerialized)
        {
            Return (\_SB.I2C7.HKEY.AUOC (0x14, 0x07, Arg0, Arg1, Zero))
        }

        Method (SYBC, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x08, Arg0, Arg1, Zero))
        }

        Method (KBLS, 2, NotSerialized)
        {
            Return (SMI (0x14, 0x09, Arg0, Arg1, Zero))
        }

        Method (UBIS, 1, NotSerialized)
        {
            Return (SMI (0x15, Zero, Arg0, Zero, Zero))
        }

        Method (DIEH, 1, NotSerialized)
        {
            Return (SMI (0x16, Zero, Arg0, Zero, Zero))
        }

        Method (OUTP, 2, NotSerialized)
        {
            SMI (0x17, Arg0, Arg1, Zero, Zero)
        }

        Method (SREQ, 3, NotSerialized)
        {
            SMI (0x18, (Arg0 & 0xFF), (Arg1 & 0xFF), (Arg2 & 
                0xFF), Zero)
        }

        Method (SPMS, 1, NotSerialized)
        {
            SMI (0x19, (Arg0 & 0xFF), Zero, Zero, Zero)
        }

        Method (LVSS, 2, NotSerialized)
        {
            Return (SMI (0x1A, (Arg0 & 0xFF), Arg1, Zero, Zero))
        }

        Name (MACA, "_AUXMAX_#XXXXXXXXXXXX#")
        Name (WOLD, "_S5WOL_#01EF1700000000#")
        Device (UFS0)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((STOR == One) || (STOR == 0x03)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM24A5")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.EMUL, EMUL)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, One)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x01D84000,         // Address Base
                        0x0001C000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000129,
                    }
                })
                Return (RBUF) /* \_SB_.UFS0._CRS.RBUF */
            }

            Device (DEV0)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return (0x08)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }
            }
        }

        Device (SDC2)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM2466")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x08804000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000EF,
                    }
                    GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x1388,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0100
                        }
                    GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0047
                        }
                })
                Return (RBUF) /* \_SB_.SDC2._CRS.RBUF */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (ABD)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM0427")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            OperationRegion (ROP1, GenericSerialBus, Zero, 0x0100)
            Name (AVBL, Zero)
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x09))
                {
                    AVBL = Arg1
                }
            }
        }

        Name (ESNL, 0x14)
        Name (DBFL, 0x1E)
        Device (PMIC)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.SPMI
            })
            Name (_HID, "QCOM0C2B")  // _HID: Hardware ID
            Name (_CID, "PNP0CA3")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Method (PMCF, 0, NotSerialized)
            {
                Name (CFG0, Package (0x1D)
                {
                    0x1C, 
                    Package (0x02)
                    {
                        Zero, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        One, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x02, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x03, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x04, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x05, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x06, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x08, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x09, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x0C, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x15, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x18, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x19, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x1A, 
                        0x10
                    }, 

                    Package (0x02)
                    {
                        0x10, 
                        0x10
                    }
                })
                Return (CFG0) /* \_SB_.PMIC.PMCF.CFG0 */
            }
        }

        Device (PML0)
        {
            Name (_HID, "QCOM0CD3")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0008, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x0009, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x000C, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    I2cSerialBusV2 (0x000D, ControllerInitiated, 0x000186A0,
                        AddressingMode7Bit, "\\_SB.IC12",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullNone, 0x0000, 0x00C8, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00A1
                        }
                    GpioIo (Exclusive, PullNone, 0x0000, 0x00C8, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x002A
                        }
                })
                Return (RBUF) /* \_SB_.PML0._CRS.RBUF */
            }
        }

        Device (PM01)
        {
            Name (_HID, "QCOM0C2D")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE3")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000201,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000203,
                    }
                })
                Return (RBUF) /* \_SB_.PM01._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.PM01._DSM._T_0 */
                    If ((_T_0 == ToUUID ("4f248f40-d5e2-499f-834c-27758ea1cd3f") /* GPIO Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Package (0x02)
                                {
                                    0x07, 
                                    0x06
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (PMAP)
        {
            Name (_HID, "QCOM0C2C")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PMIC, 
                \_SB.ABD, 
                \_SB.SCM0
            })
            Method (GEPT, 0, NotSerialized)
            {
                Name (BUFF, Buffer (0x04){})
                CreateByteField (BUFF, Zero, STAT)
                CreateWordField (BUFF, 0x02, DATA)
                DATA = 0x02
                Return (DATA) /* \_SB_.PMAP.GEPT.DATA */
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMAP._CRS.RBUF */
            }

            Method (ICWR, 0, NotSerialized)
            {
                Name (ICOP, Buffer (0x06)
                {
                     0x01, 0x56, 0x34, 0x12, 0x02, 0x06               // .V4...
                })
                Name (ICBF, Buffer (0x06)
                {
                     0xA5, 0x5A, 0x34, 0x56, 0x43, 0x65               // .Z4VCe
                })
                Local0 = \_SB.PMGK.CI2C (ICOP, ICBF)
                Debug = "Printing ICWR.Local0"
                Debug = Local0
                If ((Local0 != Zero))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (ICRD, 0, NotSerialized)
            {
                Name (ICOP, Buffer (0x06)
                {
                     0x01, 0xD6, 0x34, 0x12, 0x02, 0x04               // ..4...
                })
                Name (ICBF, Buffer (0x06)
                {
                     0x00                                             // .
                })
                CreateField (ICBF, Zero, 0x10, RDT1)
                CreateField (ICBF, 0x10, 0x20, RDT2)
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing ICRD.ICBF/RDTx"
                Debug = ICBF /* \_SB_.PMAP.ICRD.ICBF */
                Debug = RDT1 /* \_SB_.PMAP.ICRD.RDT1 */
                Debug = RDT2 /* \_SB_.PMAP.ICRD.RDT2 */
                ICOP [0x05] = 0x03
                Local0 = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing ICRD.Local0"
                Debug = Local0
                If ((Local0 == 0xFF))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (BCTG, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x11
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BCTG.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BCTG.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BCTG.Local0"
                Debug = Local0
                OBUF = \_SB.PMGK.GBOP (One, Zero)
                Debug = "Printing BCTG.OBUF"
                Debug = OBUF /* \_SB_.PMAP.BCTG.OBUF */
                Return (OBUF) /* \_SB_.PMAP.BCTG.OBUF */
            }

            Method (BCCS, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x12
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BCCS.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BCCS.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BCCS.Local0"
                Debug = Local0
                If ((Local0 == 0xFF))
                {
                    OBUF [0x03] = 0x80
                }

                Return (OBUF) /* \_SB_.PMAP.BCCS.OBUF */
            }

            Method (BCSG, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x13
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BCSG.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BCSG.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BCSG.Local0"
                Debug = Local0
                OBUF = \_SB.PMGK.GBOP (One, Zero)
                Debug = "Printing BCSG.OBUF"
                Debug = OBUF /* \_SB_.PMAP.BCSG.OBUF */
                Return (OBUF) /* \_SB_.PMAP.BCSG.OBUF */
            }

            Method (BCSS, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x14
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BCSS.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BCSS.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BCSS.Local0"
                Debug = Local0
                If ((Local0 == 0xFF))
                {
                    OBUF [0x03] = 0x80
                }

                Return (OBUF) /* \_SB_.PMAP.BCSS.OBUF */
            }

            Method (BDSG, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x15
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BDSG.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BDSG.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BDSG.Local0"
                Debug = Local0
                OBUF = \_SB.PMGK.GBOP (One, Zero)
                Debug = "Printing BDSG.OBUF"
                Debug = OBUF /* \_SB_.PMAP.BDSG.OBUF */
                Return (OBUF) /* \_SB_.PMAP.BDSG.OBUF */
            }

            Method (BDSS, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x16
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BDSS.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BDSS.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BDSS.Local0"
                Debug = Local0
                If ((Local0 == 0xFF))
                {
                    OBUF [0x03] = 0x80
                }

                Return (OBUF) /* \_SB_.PMAP.BDSS.OBUF */
            }

            Method (BICG, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x17
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BICG.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BICG.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BICG.Local0"
                Debug = Local0
                OBUF = \_SB.PMGK.GBOP (One, Zero)
                Debug = "Printing BICG.OBUF"
                Debug = OBUF /* \_SB_.PMAP.BICG.OBUF */
                Return (OBUF) /* \_SB_.PMAP.BICG.OBUF */
            }

            Method (BICS, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x18
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing BICS.IBUF"
                Debug = IBUF /* \_SB_.PMAP.BICS.IBUF */
                Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                Debug = "Printing BICS.Local0"
                Debug = Local0
                If ((Local0 == 0xFF))
                {
                    OBUF [0x03] = 0x80
                }

                Return (OBUF) /* \_SB_.PMAP.BICS.OBUF */
            }

            Method (SOCH, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateByteField (IBUF, 0x07, IDT4)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x30, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x19
                ISIZ = 0x04
                IODT = Arg0
                Debug = "Printing SOCH.IBUF"
                Debug = IBUF /* \_SB_.PMAP.SOCH.IBUF */
                If ((IDT4 & 0x80))
                {
                    Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                    Debug = "Printing SOCH.Local0"
                    Debug = Local0
                    If ((Local0 == 0xFF))
                    {
                        OBUF [0x03] = 0x80
                    }
                }
                Else
                {
                    Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                    Debug = "Printing SOCH.Local0"
                    Debug = Local0
                    If ((Local0 == 0xFF))
                    {
                        OBUF [0x03] = 0x80
                        Return (OBUF) /* \_SB_.PMAP.SOCH.OBUF */
                    }

                    OBUF = \_SB.PMGK.GBOP (One, Zero)
                    Debug = "Printing SOCH.OBUF"
                    Debug = OBUF /* \_SB_.PMAP.SOCH.OBUF */
                }

                Return (OBUF) /* \_SB_.PMAP.SOCH.OBUF */
            }

            Method (SOCT, 1, NotSerialized)
            {
                Name (IBUF, Buffer (0x0A)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, ICMD)
                CreateByteField (IBUF, 0x03, ISIZ)
                CreateByteField (IBUF, 0x07, IDT4)
                CreateWordField (IBUF, 0x08, SYST)
                CreateField (IBUF, 0x10, 0x10, IOCM)
                CreateField (IBUF, 0x20, 0x20, IODT)
                CreateField (IBUF, 0x10, 0x40, IDAT)
                Name (OBUF, Buffer (0x04)
                {
                     0x00                                             // .
                })
                ICMD = 0x1A
                ISIZ = 0x04
                Debug = "Printing SOCT.Arg0"
                Debug = Arg0
                IODT = Arg0
                Debug = "Printing SOCT.IBUF"
                Debug = IBUF /* \_SB_.PMAP.SOCT.IBUF */
                If ((IDT4 & 0x80))
                {
                    Name (RTCB, Buffer (0x10)
                    {
                         0x00                                             // .
                    })
                    CreateWordField (RTCB, Zero, YEAR)
                    CreateByteField (RTCB, 0x02, MNTH)
                    CreateByteField (RTCB, 0x03, DAY0)
                    CreateByteField (RTCB, 0x04, HOUR)
                    CreateByteField (RTCB, 0x05, MINT)
                    RTCB = \_SB.PRTC._GRT ()
                    Debug = "Printing SOCT.RTCB"
                    Debug = RTCB /* \_SB_.PMAP.SOCT.RTCB */
                    Local0 = ((HOUR * 0x3C) + MINT) /* \_SB_.PMAP.SOCT.MINT */
                    SYST = Local0
                    Debug = "Printing SOCT.SystemTimeInMin"
                    Debug = Local0
                    Debug = SYST /* \_SB_.PMAP.SOCT.SYST */
                    ISIZ = 0x06
                    Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                    Debug = "Printing SOCT.Local0"
                    Debug = Local0
                    If ((Local0 == 0xFF))
                    {
                        OBUF [0x03] = 0x80
                    }
                }
                Else
                {
                    Local0 = \_SB.PMGK.GBOP (Zero, IDAT)
                    Debug = "Printing SOCT.Local0"
                    Debug = Local0
                    If ((Local0 == 0xFF))
                    {
                        OBUF [0x03] = 0x80
                        Return (OBUF) /* \_SB_.PMAP.SOCT.OBUF */
                    }

                    OBUF = \_SB.PMGK.GBOP (One, Zero)
                    Debug = "Printing SOCT.OBUF"
                    Debug = OBUF /* \_SB_.PMAP.SOCT.OBUF */
                }

                Return (OBUF) /* \_SB_.PMAP.SOCT.OBUF */
            }

            Method (SBIG, 0, NotSerialized)
            {
                Name (INID, Buffer (0x10)
                {
                     0x00                                             // .
                })
                Name (PKG0, Buffer (0x0100)
                {
                     0x00                                             // .
                })
                Name (ICOP, Buffer (0x06)
                {
                     0x01, 0x17, 0x00                                 // ...
                })
                Name (ICBF, Buffer (0x16)
                {
                     0x00                                             // .
                })
                CreateByteField (ICBF, Zero, RD01)
                CreateByteField (ICBF, One, RD02)
                CreateByteField (ICBF, 0x02, RD03)
                CreateByteField (ICBF, 0x03, RD04)
                CreateByteField (ICBF, 0x04, RD05)
                CreateByteField (ICBF, 0x05, RD06)
                CreateByteField (ICBF, 0x06, RD07)
                CreateByteField (ICBF, 0x07, RD08)
                CreateByteField (ICBF, 0x08, RD09)
                CreateByteField (ICBF, 0x09, RD10)
                CreateByteField (ICBF, 0x0A, RD11)
                CreateByteField (ICBF, 0x0B, RD12)
                CreateByteField (ICBF, 0x0C, RD13)
                CreateByteField (ICBF, 0x0D, RD14)
                CreateByteField (ICBF, 0x0E, RD15)
                CreateByteField (ICBF, 0x0F, RD16)
                CreateByteField (ICBF, 0x10, RD17)
                CreateByteField (ICBF, 0x11, RD18)
                CreateByteField (ICBF, 0x12, RD19)
                CreateByteField (ICBF, 0x13, RD20)
                CreateByteField (ICBF, 0x14, RD21)
                CreateByteField (ICBF, 0x15, RD22)
                PKG0 [Zero] = 0x40
                PKG0 [One] = 0xC0
                PKG0 [0x04] = 0x20
                Local0 = \_SB.I2C7.ECRD (0xC9)
                PKG0 [0x05] = Local0
                PKG0 [0x10] = 0x40
                PKG0 [0x11] = 0xC0
                PKG0 [0x20] = 0x40
                PKG0 [0x21] = 0xC0
                PKG0 [0x30] = 0x40
                PKG0 [0x31] = 0xC0
                PKG0 [0x40] = 0x40
                PKG0 [0x41] = 0xC0
                PKG0 [0x50] = 0x40
                PKG0 [0x51] = 0xC0
                PKG0 [0x60] = 0x40
                PKG0 [0x61] = 0xC0
                PKG0 [0x70] = 0x40
                PKG0 [0x71] = 0xC0
                PKG0 [0x80] = 0x40
                PKG0 [0x81] = 0xC0
                PKG0 [0x90] = 0x40
                PKG0 [0x91] = 0xC0
                PKG0 [0xA0] = 0x40
                PKG0 [0xA1] = 0xC0
                PKG0 [0xB0] = 0x40
                PKG0 [0xB1] = 0xC0
                PKG0 [0xC0] = 0x40
                PKG0 [0xC1] = 0xC0
                PKG0 [0xD0] = 0x40
                PKG0 [0xD1] = 0xC0
                PKG0 [0xE0] = 0x40
                PKG0 [0xE1] = 0xC0
                PKG0 [0xF0] = 0x40
                PKG0 [0xF1] = 0xC0
                Local0 = \_SB.I2C7.ECRD (0x46)
                Local1 = (Local0 & 0x10)
                If ((Local1 == 0x10))
                {
                    Local2 = 0x40
                    Local2 |= 0x80
                    PKG0 [Zero] = Local2
                    PKG0 [0x10] = Local2
                    PKG0 [0x20] = Local2
                    PKG0 [0x30] = Local2
                    PKG0 [0x40] = Local2
                    PKG0 [0x50] = Local2
                    PKG0 [0x60] = Local2
                    PKG0 [0x70] = Local2
                    PKG0 [0x80] = Local2
                    PKG0 [0x90] = Local2
                    PKG0 [0xA0] = Local2
                    PKG0 [0xB0] = Local2
                    PKG0 [0xC0] = Local2
                    PKG0 [0xD0] = Local2
                    PKG0 [0xE0] = Local2
                    PKG0 [0xF0] = Local2
                }

                PKG0 [0x12] = 0x20
                PKG0 [0x13] = 0xE0
                PKG0 [0x3E] = One
                PKG0 [0x3F] = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x16
                ICOP [0x02] = 0x20
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x20.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x42] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                PKG0 [0x43] = RD03 /* \_SB_.PMAP.SBIG.RD03 */
                PKG0 [0x44] = RD04 /* \_SB_.PMAP.SBIG.RD04 */
                PKG0 [0x45] = RD05 /* \_SB_.PMAP.SBIG.RD05 */
                PKG0 [0x46] = RD06 /* \_SB_.PMAP.SBIG.RD06 */
                PKG0 [0x47] = RD07 /* \_SB_.PMAP.SBIG.RD07 */
                PKG0 [0x48] = RD08 /* \_SB_.PMAP.SBIG.RD08 */
                PKG0 [0x49] = RD09 /* \_SB_.PMAP.SBIG.RD09 */
                PKG0 [0x4A] = RD10 /* \_SB_.PMAP.SBIG.RD10 */
                PKG0 [0x4B] = RD11 /* \_SB_.PMAP.SBIG.RD11 */
                PKG0 [0x4C] = RD12 /* \_SB_.PMAP.SBIG.RD12 */
                PKG0 [0x4D] = RD13 /* \_SB_.PMAP.SBIG.RD13 */
                PKG0 [0x4E] = RD14 /* \_SB_.PMAP.SBIG.RD14 */
                PKG0 [0x4F] = RD15 /* \_SB_.PMAP.SBIG.RD15 */
                Debug = "Print manufacture name INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x2F
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x2F.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x72] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                PKG0 [0x73] = RD03 /* \_SB_.PMAP.SBIG.RD03 */
                PKG0 [0x74] = RD04 /* \_SB_.PMAP.SBIG.RD04 */
                PKG0 [0x75] = RD05 /* \_SB_.PMAP.SBIG.RD05 */
                PKG0 [0x76] = RD06 /* \_SB_.PMAP.SBIG.RD06 */
                PKG0 [0x77] = RD07 /* \_SB_.PMAP.SBIG.RD07 */
                PKG0 [0x78] = RD08 /* \_SB_.PMAP.SBIG.RD08 */
                PKG0 [0x79] = RD09 /* \_SB_.PMAP.SBIG.RD09 */
                PKG0 [0x7A] = RD10 /* \_SB_.PMAP.SBIG.RD10 */
                PKG0 [0x7B] = RD11 /* \_SB_.PMAP.SBIG.RD11 */
                PKG0 [0x7C] = RD12 /* \_SB_.PMAP.SBIG.RD12 */
                PKG0 [0x7D] = Zero
                PKG0 [0x7E] = Zero
                PKG0 [0x7F] = Zero
                Debug = "Print Bar code INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x16
                ICOP [0x02] = 0x21
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x21.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x52] = RD06 /* \_SB_.PMAP.SBIG.RD06 */
                PKG0 [0x53] = RD07 /* \_SB_.PMAP.SBIG.RD07 */
                PKG0 [0x54] = RD08 /* \_SB_.PMAP.SBIG.RD08 */
                PKG0 [0x55] = RD09 /* \_SB_.PMAP.SBIG.RD09 */
                PKG0 [0x56] = RD10 /* \_SB_.PMAP.SBIG.RD10 */
                PKG0 [0x57] = RD11 /* \_SB_.PMAP.SBIG.RD11 */
                PKG0 [0x58] = RD12 /* \_SB_.PMAP.SBIG.RD12 */
                PKG0 [0x59] = RD13 /* \_SB_.PMAP.SBIG.RD13 */
                PKG0 [0x5A] = RD14 /* \_SB_.PMAP.SBIG.RD14 */
                PKG0 [0x5B] = RD15 /* \_SB_.PMAP.SBIG.RD15 */
                PKG0 [0x5C] = Zero
                PKG0 [0x5D] = Zero
                PKG0 [0x5E] = Zero
                PKG0 [0x5F] = Zero
                Debug = "Print device name INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x06
                ICOP [0x02] = 0x22
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x22.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x62] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                PKG0 [0x63] = RD03 /* \_SB_.PMAP.SBIG.RD03 */
                PKG0 [0x64] = RD04 /* \_SB_.PMAP.SBIG.RD04 */
                PKG0 [0x65] = Zero
                PKG0 [0x66] = Zero
                PKG0 [0x67] = Zero
                Debug = "Print device chemistry INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x04
                ICOP [0x02] = 0x1C
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x1c.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x3A] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x3B] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print serial number INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x02
                ICOP [0x02] = 0x16
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x16.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x2A] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x2B] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Local1 = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                Local1 &= 0x80
                If ((Local1 == 0x80))
                {
                    Local1 = 0xC0
                    Local3 = (Local1 | 0x60)
                    Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                    Local2 &= 0x08
                    If ((Local2 == 0x08))
                    {
                        Local3 |= 0x08
                    }

                    Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                    Local2 &= 0x10
                    If ((Local2 == 0x10))
                    {
                        Local3 |= One
                    }

                    PKG0 [One] = Local3
                    PKG0 [0x11] = Local3
                    PKG0 [0x21] = Local3
                    PKG0 [0x31] = Local3
                    PKG0 [0x41] = Local3
                    PKG0 [0x51] = Local3
                    PKG0 [0x61] = Local3
                    PKG0 [0x71] = Local3
                    PKG0 [0x81] = Local3
                    PKG0 [0x91] = Local3
                    PKG0 [0xA1] = Local3
                    PKG0 [0xB1] = Local3
                    PKG0 [0xC1] = Local3
                    PKG0 [0xD1] = Local3
                    PKG0 [0xE1] = Local3
                    PKG0 [0xF1] = Local3
                }

                Local2 = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                Local2 &= 0xC0
                If ((Local2 == 0xC0))
                {
                    Local1 = 0xC0
                    Local3 = (Local1 | 0x50)
                    Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                    Local2 &= 0x08
                    If ((Local2 == 0x08))
                    {
                        Local3 |= 0x08
                    }

                    Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                    Local2 &= 0x10
                    If ((Local2 == 0x10))
                    {
                        Local3 |= One
                    }

                    PKG0 [One] = Local3
                    PKG0 [0x11] = Local3
                    PKG0 [0x21] = Local3
                    PKG0 [0x31] = Local3
                    PKG0 [0x41] = Local3
                    PKG0 [0x51] = Local3
                    PKG0 [0x61] = Local3
                    PKG0 [0x71] = Local3
                    PKG0 [0x81] = Local3
                    PKG0 [0x91] = Local3
                    PKG0 [0xA1] = Local3
                    PKG0 [0xB1] = Local3
                    PKG0 [0xC1] = Local3
                    PKG0 [0xD1] = Local3
                    PKG0 [0xE1] = Local3
                    PKG0 [0xF1] = Local3
                }

                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x3F
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x3F.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x82] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x83] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print First Use date INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x37
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x37.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x88] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                PKG0 [0x89] = RD03 /* \_SB_.PMAP.SBIG.RD03 */
                PKG0 [0x8A] = RD04 /* \_SB_.PMAP.SBIG.RD04 */
                PKG0 [0x8B] = RD05 /* \_SB_.PMAP.SBIG.RD05 */
                PKG0 [0x8C] = RD06 /* \_SB_.PMAP.SBIG.RD06 */
                PKG0 [0x8D] = RD07 /* \_SB_.PMAP.SBIG.RD07 */
                PKG0 [0x8E] = RD08 /* \_SB_.PMAP.SBIG.RD08 */
                PKG0 [0x8F] = RD09 /* \_SB_.PMAP.SBIG.RD09 */
                Debug = "Print Firmware version INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x06
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x6.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x26] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x27] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print Remaining time INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x0D
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0xD.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x1C] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x1D] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print Remaining Percentage INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x0F
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0xF.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Local1 = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Local2 <<= 0x08
                Local3 = (Local1 | Local2)
                Local3 /= 0x0A
                Local1 = (Local3 & 0xFF)
                Local2 = (Local3 >> 0x08)
                PKG0 [0x1E] = Local1
                PKG0 [0x1F] = Local2
                Debug = "Print Remaining capacity INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x05
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x5.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x28] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x29] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print Charge complete INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x10
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x10.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Local1 = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Local2 <<= 0x08
                Local3 = (Local1 | Local2)
                Local3 /= 0x0A
                Local1 = (Local3 & 0xFF)
                Local2 = (Local3 >> 0x08)
                PKG0 [0x22] = Local1
                PKG0 [0x23] = Local2
                Debug = "Print Full charge capacity INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x09
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x9.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x16] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x17] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print Voltage INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = One
                ICOP [0x02] = 0x0A
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0xA.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Debug = "Print Wattage INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x04] = One
                ICOP [0x05] = 0x02
                ICOP [0x02] = 0x08
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x8.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x14] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x15] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print temperature INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x17
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x17.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x2C] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x2D] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print cycle count INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x1B
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x1B.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x38] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x39] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print manufacture date INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x18
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x18.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Local1 = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                Local2 = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Local2 <<= 0x08
                Local3 = (Local1 | Local2)
                Local3 /= 0x0A
                Local1 = (Local3 & 0xFF)
                Local2 = (Local3 >> 0x08)
                PKG0 [0x32] = Local1
                PKG0 [0x33] = Local2
                Debug = "Print Device capacity INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x19
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x19.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x34] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x35] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print Device voltage INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x3B
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x3B.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x2E] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x2F] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x0C
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x0C.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x94] = RD01 /* \_SB_.PMAP.SBIG.RD01 */
                PKG0 [0x95] = RD02 /* \_SB_.PMAP.SBIG.RD02 */
                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x23
                ICOP [0x05] = 0x04
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x23.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x30
                ICOP [0x05] = 0x02
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x30.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x2A
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x2A.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0xC3] = (RD01 & 0x0F)
                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x3E
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x3E.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                PKG0 [0x85] = ((RD01 & 0x07) << One)
                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                ICBF = Zero
                INID = Zero
                ICOP [0x02] = 0x3E
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x3E.ICBF"
                Debug = ICBF /* \_SB_.PMAP.SBIG.ICBF */
                If ((RD01 == 0xFF))
                {
                    Return (One)
                }

                Debug = "Print INID"
                Debug = INID /* \_SB_.PMAP.SBIG.INID */
                Debug = "Printing SBIG.PKG0"
                Debug = PKG0 /* \_SB_.PMAP.SBIG.PKG0 */
                Return (PKG0) /* \_SB_.PMAP.SBIG.PKG0 */
            }
        }

        Device (PRTC)
        {
            Name (_HID, "ACPI000E" /* Time and Alarm Device */)  // _HID: Hardware ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                "\\_SB.PMAP"
            })
            Method (_GCP, 0, NotSerialized)  // _GCP: Get Capabilities
            {
                Return (0x01F7)
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0002, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x18)), 
                FLD0,   192
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0005, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x10)), 
                FLD1,   128
            }

            Method (_GRT, 0, NotSerialized)  // _GRT: Get Real Time
            {
                Name (BUFF, Buffer (0x1A){})
                CreateField (BUFF, 0x10, 0x80, TME1)
                CreateField (BUFF, 0x90, 0x20, ACT1)
                CreateField (BUFF, 0xB0, 0x20, ACW1)
                BUFF = FLD0 /* \_SB_.PRTC.FLD0 */
                Return (TME1) /* \_SB_.PRTC._GRT.TME1 */
            }

            Method (_SRT, 1, NotSerialized)  // _SRT: Set Real Time
            {
                Name (BUFF, Buffer (0x32){})
                CreateByteField (BUFF, Zero, STAT)
                CreateField (BUFF, 0x10, 0x80, TME1)
                CreateField (BUFF, 0x90, 0x20, ACT1)
                CreateField (BUFF, 0xB0, 0x20, ACW1)
                ACT1 = Zero
                TME1 = Arg0
                ACW1 = Zero
                BUFF = FLD0 = BUFF /* \_SB_.PRTC._SRT.BUFF */
                If ((STAT != Zero))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (_GWS, 1, NotSerialized)  // _GWS: Get Wake Status
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "GWS arguments"
                Debug = Arg0
                CALL = One
                TIMR = Arg0
                STAT = Zero
                FLD1 = BUFF /* \_SB_.PRTC._GWS.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Return (ToInteger (STAT))
            }

            Method (_CWS, 1, NotSerialized)  // _CWS: Clear Wake Alarm Status
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "CWS arguments"
                Debug = Arg0
                CALL = 0x02
                TIMR = Arg0
                STAT = Zero
                FLD1 = BUFF /* \_SB_.PRTC._CWS.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Return (ToInteger (STAT))
            }

            Method (_STP, 2, NotSerialized)  // _STP: Set Expired Timer Wake Policy
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "STP arguments"
                Debug = Arg0
                Debug = Arg1
                CALL = 0x04
                TIMR = Arg0
                TIME = Arg1
                STAT = Zero
                Debug = "STP saving to buffer.."
                Debug = CALL /* \_SB_.PRTC._STP.CALL */
                Debug = TIMR /* \_SB_.PRTC._STP.TIMR */
                Debug = TIME /* \_SB_.PRTC._STP.TIME */
                Debug = STAT /* \_SB_.PRTC._STP.STAT */
                FLD1 = BUFF /* \_SB_.PRTC._STP.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Return (ToInteger (STAT))
            }

            Method (_STV, 2, NotSerialized)  // _STV: Set Timer Value
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "STV arguments"
                Debug = Arg0
                Debug = Arg1
                CALL = 0x08
                TIMR = Arg0
                TIME = Arg1
                STAT = Zero
                Debug = "STV saving to buffer.."
                Debug = CALL /* \_SB_.PRTC._STV.CALL */
                Debug = TIMR /* \_SB_.PRTC._STV.TIMR */
                Debug = TIME /* \_SB_.PRTC._STV.TIME */
                Debug = STAT /* \_SB_.PRTC._STV.STAT */
                Debug = "STV: buffer="
                Debug = BUFF /* \_SB_.PRTC._STV.BUFF */
                FLD1 = BUFF /* \_SB_.PRTC._STV.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Debug = "STV return: STAT="
                Debug = STAT /* \_SB_.PRTC._STV.STAT */
                Return (ToInteger (STAT))
            }

            Method (_TIP, 1, NotSerialized)  // _TIP: Expired Timer Wake Policy
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "TIP arguments"
                Debug = Arg0
                CALL = 0x10
                TIMR = Arg0
                TIME = Zero
                FLD1 = BUFF /* \_SB_.PRTC._TIP.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Debug = "TIP returning"
                Debug = TIME /* \_SB_.PRTC._TIP.TIME */
                Return (ToInteger (TIME))
            }

            Method (_TIV, 1, NotSerialized)  // _TIV: Timer Values
            {
                Name (BUFF, Buffer (0x12){})
                CreateField (BUFF, 0x10, 0x20, CALL)
                CreateField (BUFF, 0x30, 0x20, TIMR)
                CreateField (BUFF, 0x50, 0x20, TIME)
                CreateField (BUFF, 0x70, 0x20, STAT)
                Debug = "TIV arguments"
                Debug = Arg0
                CALL = 0x20
                TIMR = Arg0
                TIME = Zero
                FLD1 = BUFF /* \_SB_.PRTC._TIV.BUFF */
                BUFF = FLD1 /* \_SB_.PRTC.FLD1 */
                Debug = "TIV returning"
                Debug = TIME /* \_SB_.PRTC._TIV.TIME */
                Return (ToInteger (TIME))
            }
        }

        Device (PMBM)
        {
            Name (_HID, "QCOM0C2A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMGK
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMBM._CRS.RBUF */
            }
        }

        Device (BCL1)
        {
            Name (_HID, "QCOM0C77")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveLow, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00C8
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00C9
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00CA
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00CB
                        }
                    GpioInt (Edge, ActiveLow, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0250
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0251
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0252
                        }
                    GpioInt (Edge, ActiveHigh, Shared, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0253
                        }
                })
                Return (RBUF) /* \_SB_.BCL1._CRS.RBUF */
            }

            Method (BCLQ, 0, NotSerialized)
            {
                Name (CFG0, Package (0x08)
                {
                    "PM2_BCLBIG_LVL0", 
                    "PM2_BCLBIG_LVL1", 
                    "PM2_BCLBIG_LVL2", 
                    "PM2_BCLBIG_BAN", 
                    "PM22_BCLBIG_LVL0", 
                    "PM22_BCLBIG_LVL1", 
                    "PM22_BCLBIG_LVL2", 
                    "PM22_BCLBIG_BAN"
                })
                Return (CFG0) /* \_SB_.BCL1.BCLQ.CFG0 */
            }
        }

        Device (PMGK)
        {
            Name (_HID, "QCOM0C8E")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.ABD
            })
            Name (LKUP, Zero)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }

            Method (GEPT, 0, NotSerialized)
            {
                Return (Buffer (0x03)
                {
                     0x03, 0x04, 0x06                                 // ...
                })
            }

            Method (USBN, 1, NotSerialized)
            {
                \_SB.UCSI.OPMR ()
                Notify (\_SB.UCSI, Arg0)
                Return (Zero)
            }

            Name (PBUF, Buffer (0x10){})
            CreateField (PBUF, Zero, 0x08, BPID)
            CreateField (PBUF, 0x08, 0x08, BORI)
            CreateField (PBUF, 0x10, 0x08, BMUX)
            CreateField (PBUF, 0x20, 0x10, BVID)
            CreateField (PBUF, 0x30, 0x10, BSID)
            CreateField (PBUF, 0x40, 0x08, BSSD)
            Method (UPAN, 1, NotSerialized)
            {
                PBUF = Arg0
                \_SB.UCS0.EINF = 0x03
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = BPID /* \_SB_.PMGK.BPID */
                    If ((_T_0 == Zero))
                    {
                        \_SB.UCS0.EUPD |= One
                        \_SB.UCS0.ECC0 = BORI /* \_SB_.PMGK.BORI */
                        \_SB.UCS0.EMX0 = BMUX /* \_SB_.PMGK.BMUX */
                        \_SB.UCS0.EVI0 = BVID /* \_SB_.PMGK.BVID */
                        \_SB.UCS0.ESI0 = BSID /* \_SB_.PMGK.BSID */
                        \_SB.UCS0.ESV0 = BSSD /* \_SB_.PMGK.BSSD */
                        \_SB.UCS0.USBR ()
                        Break
                    }
                    ElseIf ((_T_0 == One))
                    {
                        \_SB.UCS0.EUPD |= 0x02
                        \_SB.UCS0.ECC1 = BORI /* \_SB_.PMGK.BORI */
                        \_SB.UCS0.EMX1 = BMUX /* \_SB_.PMGK.BMUX */
                        \_SB.UCS0.EVI1 = BVID /* \_SB_.PMGK.BVID */
                        \_SB.UCS0.ESI1 = BSID /* \_SB_.PMGK.BSID */
                        \_SB.UCS0.ESV1 = BSSD /* \_SB_.PMGK.BSSD */
                        \_SB.UCS0.USBR ()
                        Break
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        \_SB.UCS0.EUPD |= 0x04
                        \_SB.UCS0.ECC2 = BORI /* \_SB_.PMGK.BORI */
                        \_SB.UCS0.EMX2 = BMUX /* \_SB_.PMGK.BMUX */
                        \_SB.UCS0.EVI2 = BVID /* \_SB_.PMGK.BVID */
                        \_SB.UCS0.ESI2 = BSID /* \_SB_.PMGK.BSID */
                        \_SB.UCS0.ESV2 = BSSD /* \_SB_.PMGK.BSSD */
                        \_SB.UCS0.USBR ()
                        Break
                    }

                    Break
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.PMGK._CRS.RBUF */
            }

            Method (LKST, 1, NotSerialized)
            {
                LKUP = Arg0
                Notify (\_SB.UCSI, One) // Device Check
                Return (Zero)
            }

            Method (GBOP, 2, Serialized)
            {
                Name (IBUF, Buffer (0x44)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateField (IBUF, 0x10, 0x0210, SDAT)
                Debug = "Printing GBOP.Arg0"
                Debug = Arg0
                If (!(Arg0 & One))
                {
                    SDAT = Arg1
                    Debug = "Printing GBOP.IBUF"
                    Debug = IBUF /* \_SB_.PMGK.GBOP.IBUF */
                    GOEM = IBUF /* \_SB_.PMGK.GBOP.IBUF */
                    Debug = "Printing GBOP.w.STAT"
                    Debug = STAT /* \_SB_.PMGK.GBOP.STAT */
                    If ((STAT == Zero))
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    IBUF = GOEM /* \_SB_.PMGK.GOEM */
                    Debug = "Printing GBOP.IBUF"
                    Debug = IBUF /* \_SB_.PMGK.GBOP.IBUF */
                    If ((STAT == Zero))
                    {
                        Return (SDAT) /* \_SB_.PMGK.GBOP.SDAT */
                    }
                }

                Return (0xFF)
            }

            Method (OEMN, 1, NotSerialized)
            {
                Name (SBUF, Buffer (0x44)
                {
                     0x00                                             // .
                })
                CreateByteField (SBUF, Zero, STAT)
                CreateByteField (SBUF, 0x02, SCMD)
                CreateByteField (SBUF, 0x03, SSIZ)
                CreateByteField (SBUF, 0x04, SDA1)
                CreateByteField (SBUF, 0x05, SDA2)
                CreateField (SBUF, 0x10, 0x0210, SDAT)
                Name (OBUF, Buffer (0x42)
                {
                     0x00                                             // .
                })
                SCMD = 0xFF
                SSIZ = 0x02
                SDA1 = Zero
                SDA2 = 0x03
                GBOP (Zero, SDAT)
                OBUF = GBOP (One, Zero)
                Debug = "Printing OEMN.OBUF"
                Debug = OBUF /* \_SB_.PMGK.OEMN.OBUF */
                Return (Zero)
            }

            Method (CI2C, 2, Serialized)
            {
                Name (IBUF, Buffer (0x48)
                {
                     0x00                                             // .
                })
                CreateByteField (IBUF, Zero, STAT)
                CreateByteField (IBUF, 0x02, BSID)
                CreateByteField (IBUF, 0x03, SLOP)
                CreateWordField (IBUF, 0x04, OFST)
                CreateByteField (IBUF, 0x06, ADSZ)
                CreateByteField (IBUF, 0x07, DTSZ)
                CreateField (IBUF, 0x10, 0x30, RWOP)
                CreateField (IBUF, 0x40, 0x0200, RWDT)
                CreateField (IBUF, 0x10, 0x0230, SDAT)
                Debug = "Printing CI2C.Arg0"
                Debug = Arg0
                RWOP = Arg0
                Debug = "Printing CI2C.IBUF"
                Debug = IBUF /* \_SB_.PMGK.CI2C.IBUF */
                If (!(SLOP & One))
                {
                    Debug = "Printing CI2C.Arg1"
                    Debug = Arg1
                    RWDT = Arg1
                    Debug = "Printing CI2C.IBUF"
                    Debug = IBUF /* \_SB_.PMGK.CI2C.IBUF */
                    GI2C = IBUF /* \_SB_.PMGK.CI2C.IBUF */
                    Debug = "Printing CI2C.w.STAT"
                    Debug = STAT /* \_SB_.PMGK.CI2C.STAT */
                    If ((STAT == Zero))
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    GI2C = IBUF /* \_SB_.PMGK.CI2C.IBUF */
                    IBUF = GI2C /* \_SB_.PMGK.GI2C */
                    Debug = "Printing CI2C.IBUF"
                    Debug = IBUF /* \_SB_.PMGK.CI2C.IBUF */
                    Debug = "Printing CI2C.r.STAT"
                    Debug = STAT /* \_SB_.PMGK.CI2C.STAT */
                    If ((STAT == Zero))
                    {
                        Return (RWDT) /* \_SB_.PMGK.CI2C.RWDT */
                    }
                }

                Return (0xFF)
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0003, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x30)), 
                UCSI,   384
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0004, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x42)), 
                GOEM,   528
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0006, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x46)), 
                GI2C,   560
            }
        }

        Name (PEPI, Zero)
        Device (PEP0)
        {
            Name (_HID, "QCOM0C17")  // _HID: Hardware ID
            Name (_CID, "PNP0D80" /* Windows-compatible System Power Management Controller */)  // _CID: Compatible ID
            Method (THTZ, 4, NotSerialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == One))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg3)
                            If ((_T_1 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TPSV = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._PSV ())
                            }
                            ElseIf ((_T_1 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TCRT = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._CRT) /* External reference */
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTSP = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TSP ())
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTC1 = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TC1 ())
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TTC2 = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._TC2 ())
                            }
                            ElseIf ((_T_1 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ1.TMTL = Arg1
                                    Notify (\_SB.TZ1, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ1._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        While (One)
                        {
                            Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_2 = ToInteger (Arg3)
                            If ((_T_2 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TPSV = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._PSV ())
                            }
                            ElseIf ((_T_2 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TCRT = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._CRT) /* External reference */
                            }
                            ElseIf ((_T_2 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTSP = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TSP ())
                            }
                            ElseIf ((_T_2 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTC1 = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TC1 ())
                            }
                            ElseIf ((_T_2 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TTC2 = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._TC2 ())
                            }
                            ElseIf ((_T_2 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ3.TMTL = Arg1
                                    Notify (\_SB.TZ3, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ3._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        While (One)
                        {
                            Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_3 = ToInteger (Arg3)
                            If ((_T_3 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TPSV = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._PSV ())
                            }
                            ElseIf ((_T_3 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TCRT = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._CRT) /* External reference */
                            }
                            ElseIf ((_T_3 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTSP = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TSP ())
                            }
                            ElseIf ((_T_3 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTC1 = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TC1 ())
                            }
                            ElseIf ((_T_3 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TTC2 = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._TC2 ())
                            }
                            ElseIf ((_T_3 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ5.TMTL = Arg1
                                    Notify (\_SB.TZ5, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ5._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x06))
                    {
                        While (One)
                        {
                            Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_4 = ToInteger (Arg3)
                            If ((_T_4 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TPSV = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._PSV ())
                            }
                            ElseIf ((_T_4 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TCRT = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._CRT) /* External reference */
                            }
                            ElseIf ((_T_4 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TTSP = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._TSP ())
                            }
                            ElseIf ((_T_4 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TTC1 = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._TC1 ())
                            }
                            ElseIf ((_T_4 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TTC2 = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._TC2 ())
                            }
                            ElseIf ((_T_4 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ6.TMTL = Arg1
                                    Notify (\_SB.TZ6, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ6._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0B))
                    {
                        While (One)
                        {
                            Name (_T_5, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_5 = ToInteger (Arg3)
                            If ((_T_5 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TPSV = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._PSV ())
                            }
                            ElseIf ((_T_5 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TCRT = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._CRT) /* External reference */
                            }
                            ElseIf ((_T_5 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTSP = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TSP ())
                            }
                            ElseIf ((_T_5 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTC1 = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TC1 ())
                            }
                            ElseIf ((_T_5 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TTC2 = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._TC2 ())
                            }
                            ElseIf ((_T_5 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ11.TMTL = Arg1
                                    Notify (\_SB.TZ11, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ11._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x0D))
                    {
                        While (One)
                        {
                            Name (_T_6, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_6 = ToInteger (Arg3)
                            If ((_T_6 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TPSV = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._PSV) /* External reference */
                            }
                            ElseIf ((_T_6 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TCRT = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._CRT) /* External reference */
                            }
                            ElseIf ((_T_6 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTSP = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._TSP) /* External reference */
                            }
                            ElseIf ((_T_6 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTC1 = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._TC1) /* External reference */
                            }
                            ElseIf ((_T_6 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TTC2 = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._TC2) /* External reference */
                            }
                            ElseIf ((_T_6 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ13.TMTL = Arg1
                                    Notify (\_SB.TZ13, 0x81) // Information Change
                                }

                                Return (\_SB.TZ13._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x1F))
                    {
                        While (One)
                        {
                            Name (_T_7, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_7 = ToInteger (Arg3)
                            If ((_T_7 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TPSV = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._PSV ())
                            }
                            ElseIf ((_T_7 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TCRT = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._CRT ())
                            }
                            ElseIf ((_T_7 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTSP = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TSP ())
                            }
                            ElseIf ((_T_7 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTC1 = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TC1 ())
                            }
                            ElseIf ((_T_7 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TTC2 = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._TC2 ())
                            }
                            ElseIf ((_T_7 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ31.TMTL = Arg1
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ31._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x20))
                    {
                        While (One)
                        {
                            Name (_T_8, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_8 = ToInteger (Arg3)
                            If ((_T_8 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TPSV = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._PSV ())
                            }
                            ElseIf ((_T_8 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TCRT = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._CRT ())
                            }
                            ElseIf ((_T_8 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTSP = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TSP ())
                            }
                            ElseIf ((_T_8 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTC1 = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TC1 ())
                            }
                            ElseIf ((_T_8 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TTC2 = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._TC2 ())
                            }
                            ElseIf ((_T_8 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ32.TMTL = Arg1
                                    Notify (\_SB.TZ32, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ32._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x21))
                    {
                        While (One)
                        {
                            Name (_T_9, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_9 = ToInteger (Arg3)
                            If ((_T_9 == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TPSV = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._PSV ())
                            }
                            ElseIf ((_T_9 == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TCRT = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._CRT ())
                            }
                            ElseIf ((_T_9 == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTSP = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TSP ())
                            }
                            ElseIf ((_T_9 == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTC1 = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TC1 ())
                            }
                            ElseIf ((_T_9 == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TTC2 = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._TC2 ())
                            }
                            ElseIf ((_T_9 == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ33.TMTL = Arg1
                                    Notify (\_SB.TZ33, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ33._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x22))
                    {
                        While (One)
                        {
                            Name (_T_A, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_A = ToInteger (Arg3)
                            If ((_T_A == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TPSV = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._PSV ())
                            }
                            ElseIf ((_T_A == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TCRT = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._CRT ())
                            }
                            ElseIf ((_T_A == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTSP = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TSP ())
                            }
                            ElseIf ((_T_A == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTC1 = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TC1 ())
                            }
                            ElseIf ((_T_A == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TTC2 = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._TC2 ())
                            }
                            ElseIf ((_T_A == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ34.TMTL = Arg1
                                    Notify (\_SB.TZ34, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ34._MTL ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x23))
                    {
                        While (One)
                        {
                            Name (_T_B, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_B = ToInteger (Arg3)
                            If ((_T_B == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TPSV = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._PSV) /* External reference */
                            }
                            ElseIf ((_T_B == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TCRT = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._CRT) /* External reference */
                            }
                            ElseIf ((_T_B == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTSP = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._TSP) /* External reference */
                            }
                            ElseIf ((_T_B == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTC1 = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._TC1) /* External reference */
                            }
                            ElseIf ((_T_B == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TTC2 = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._TC2) /* External reference */
                            }
                            ElseIf ((_T_B == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ35.TMTL = Arg1
                                    Notify (\_SB.TZ35, 0x81) // Information Change
                                }

                                Return (\_SB.TZ35._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x24))
                    {
                        While (One)
                        {
                            Name (_T_C, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_C = ToInteger (Arg3)
                            If ((_T_C == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TPSV = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._PSV) /* External reference */
                            }
                            ElseIf ((_T_C == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TCRT = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._CRT) /* External reference */
                            }
                            ElseIf ((_T_C == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTSP = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._TSP) /* External reference */
                            }
                            ElseIf ((_T_C == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTC1 = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._TC1) /* External reference */
                            }
                            ElseIf ((_T_C == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TTC2 = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._TC2) /* External reference */
                            }
                            ElseIf ((_T_C == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ36.TMTL = Arg1
                                    Notify (\_SB.TZ36, 0x81) // Information Change
                                }

                                Return (\_SB.TZ36._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x25))
                    {
                        While (One)
                        {
                            Name (_T_D, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_D = ToInteger (Arg3)
                            If ((_T_D == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TPSV = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._PSV) /* External reference */
                            }
                            ElseIf ((_T_D == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TCRT = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._CRT) /* External reference */
                            }
                            ElseIf ((_T_D == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTSP = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._TSP) /* External reference */
                            }
                            ElseIf ((_T_D == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTC1 = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._TC1) /* External reference */
                            }
                            ElseIf ((_T_D == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TTC2 = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._TC2) /* External reference */
                            }
                            ElseIf ((_T_D == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ37.TMTL = Arg1
                                    Notify (\_SB.TZ37, 0x81) // Information Change
                                }

                                Return (\_SB.TZ37._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x26))
                    {
                        While (One)
                        {
                            Name (_T_E, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_E = ToInteger (Arg3)
                            If ((_T_E == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TPSV = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._PSV) /* External reference */
                            }
                            ElseIf ((_T_E == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TCRT = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._CRT) /* External reference */
                            }
                            ElseIf ((_T_E == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTSP = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._TSP) /* External reference */
                            }
                            ElseIf ((_T_E == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTC1 = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._TC1) /* External reference */
                            }
                            ElseIf ((_T_E == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TTC2 = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._TC2) /* External reference */
                            }
                            ElseIf ((_T_E == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ38.TMTL = Arg1
                                    Notify (\_SB.TZ38, 0x81) // Information Change
                                }

                                Return (\_SB.TZ38._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x27))
                    {
                        While (One)
                        {
                            Name (_T_F, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_F = ToInteger (Arg3)
                            If ((_T_F == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TPSV = Arg1
                                    \_SB.TZ39.THSF = One
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._PSV ())
                            }
                            ElseIf ((_T_F == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TCRT = Arg1
                                    \_SB.TZ39.THSF = One
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._CRT ())
                            }
                            ElseIf ((_T_F == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TTSP = Arg1
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._TSP ())
                            }
                            ElseIf ((_T_F == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TTC1 = Arg1
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._TC1 ())
                            }
                            ElseIf ((_T_F == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TTC2 = Arg1
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._TC2 ())
                            }
                            ElseIf ((_T_F == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TMTL = Arg1
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._MTL) /* External reference */
                            }
                            ElseIf ((_T_F == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.TCR3 = Arg1
                                    \_SB.TZ39.THSF = One
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._CR3) /* External reference */
                            }
                            ElseIf ((_T_F == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ39.THOT = Arg1
                                    \_SB.TZ39.THSF = One
                                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ39._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x28))
                    {
                        While (One)
                        {
                            Name (_T_G, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_G = ToInteger (Arg3)
                            If ((_T_G == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TPSV = Arg1
                                    \_SB.TZ40.THSF = One
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._PSV ())
                            }
                            ElseIf ((_T_G == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TCRT = Arg1
                                    \_SB.TZ40.THSF = One
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._CRT ())
                            }
                            ElseIf ((_T_G == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTSP = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TSP ())
                            }
                            ElseIf ((_T_G == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTC1 = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TC1 ())
                            }
                            ElseIf ((_T_G == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TTC2 = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._TC2 ())
                            }
                            ElseIf ((_T_G == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TMTL = Arg1
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._MTL ())
                            }
                            ElseIf ((_T_G == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.TCR3 = Arg1
                                    \_SB.TZ40.THSF = One
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._CR3) /* External reference */
                            }
                            ElseIf ((_T_G == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ40.THOT = Arg1
                                    \_SB.TZ40.THSF = One
                                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ40._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x29))
                    {
                        While (One)
                        {
                            Name (_T_H, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_H = ToInteger (Arg3)
                            If ((_T_H == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TPSV = Arg1
                                    \_SB.TZ41.THSF = One
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._PSV ())
                            }
                            ElseIf ((_T_H == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TCRT = Arg1
                                    \_SB.TZ41.THSF = One
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._CRT ())
                            }
                            ElseIf ((_T_H == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTSP = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TSP ())
                            }
                            ElseIf ((_T_H == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTC1 = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TC1 ())
                            }
                            ElseIf ((_T_H == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TTC2 = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._TC2 ())
                            }
                            ElseIf ((_T_H == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TMTL = Arg1
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._MTL) /* External reference */
                            }
                            ElseIf ((_T_H == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.TCR3 = Arg1
                                    \_SB.TZ41.THSF = One
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._CR3) /* External reference */
                            }
                            ElseIf ((_T_H == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ41.THOT = Arg1
                                    \_SB.TZ41.THSF = One
                                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ41._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x2A))
                    {
                        While (One)
                        {
                            Name (_T_I, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_I = ToInteger (Arg3)
                            If ((_T_I == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TPSV = Arg1
                                    \_SB.TZ42.THSF = One
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._PSV ())
                            }
                            ElseIf ((_T_I == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TCRT = Arg1
                                    \_SB.TZ42.THSF = One
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._CRT ())
                            }
                            ElseIf ((_T_I == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTSP = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TSP ())
                            }
                            ElseIf ((_T_I == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTC1 = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TC1 ())
                            }
                            ElseIf ((_T_I == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TTC2 = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._TC2 ())
                            }
                            ElseIf ((_T_I == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TMTL = Arg1
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._MTL ())
                            }
                            ElseIf ((_T_I == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.TCR3 = Arg1
                                    \_SB.TZ42.THSF = One
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._CR3) /* External reference */
                            }
                            ElseIf ((_T_I == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ42.THOT = Arg1
                                    \_SB.TZ42.THSF = One
                                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ42._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x2B))
                    {
                        While (One)
                        {
                            Name (_T_J, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_J = ToInteger (Arg3)
                            If ((_T_J == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TPSV = Arg1
                                    \_SB.TZ43.THSF = One
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._PSV ())
                            }
                            ElseIf ((_T_J == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TCRT = Arg1
                                    \_SB.TZ43.THSF = One
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._CRT ())
                            }
                            ElseIf ((_T_J == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TTSP = Arg1
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._TSP ())
                            }
                            ElseIf ((_T_J == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TTC1 = Arg1
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._TC1 ())
                            }
                            ElseIf ((_T_J == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TTC2 = Arg1
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._TC2 ())
                            }
                            ElseIf ((_T_J == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TMTL = Arg1
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._MTL) /* External reference */
                            }
                            ElseIf ((_T_J == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.TCR3 = Arg1
                                    \_SB.TZ43.THSF = One
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._CR3) /* External reference */
                            }
                            ElseIf ((_T_J == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ43.THOT = Arg1
                                    \_SB.TZ43.THSF = One
                                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ43._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x2C))
                    {
                        While (One)
                        {
                            Name (_T_K, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_K = ToInteger (Arg3)
                            If ((_T_K == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TPSV = Arg1
                                    \_SB.TZ44.THSF = One
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._PSV ())
                            }
                            ElseIf ((_T_K == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TCRT = Arg1
                                    \_SB.TZ44.THSF = One
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._CRT ())
                            }
                            ElseIf ((_T_K == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TTSP = Arg1
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._TSP ())
                            }
                            ElseIf ((_T_K == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TTC1 = Arg1
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._TC1 ())
                            }
                            ElseIf ((_T_K == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TTC2 = Arg1
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._TC2 ())
                            }
                            ElseIf ((_T_K == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TMTL = Arg1
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._MTL) /* External reference */
                            }
                            ElseIf ((_T_K == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.TCR3 = Arg1
                                    \_SB.TZ44.THSF = One
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._CR3) /* External reference */
                            }
                            ElseIf ((_T_K == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ44.THOT = Arg1
                                    \_SB.TZ44.THSF = One
                                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ44._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x2D))
                    {
                        While (One)
                        {
                            Name (_T_L, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_L = ToInteger (Arg3)
                            If ((_T_L == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TPSV = Arg1
                                    \_SB.TZ45.THSF = One
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._PSV) /* External reference */
                            }
                            ElseIf ((_T_L == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TCRT = Arg1
                                    \_SB.TZ45.THSF = One
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._CRT) /* External reference */
                            }
                            ElseIf ((_T_L == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TTSP = Arg1
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._TSP) /* External reference */
                            }
                            ElseIf ((_T_L == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TTC1 = Arg1
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._TC1) /* External reference */
                            }
                            ElseIf ((_T_L == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TTC2 = Arg1
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._TC2) /* External reference */
                            }
                            ElseIf ((_T_L == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TMTL = Arg1
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._MTL) /* External reference */
                            }
                            ElseIf ((_T_L == 0x07))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.TCR3 = Arg1
                                    \_SB.TZ45.THSF = One
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._CR3) /* External reference */
                            }
                            ElseIf ((_T_L == 0x08))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ45.THOT = Arg1
                                    \_SB.TZ45.THSF = One
                                    Notify (\_SB.TZ45, 0x81) // Information Change
                                }

                                Return (\_SB.TZ45._HOT) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x32))
                    {
                        While (One)
                        {
                            Name (_T_M, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_M = ToInteger (Arg3)
                            If ((_T_M == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TPSV = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Information Change
                                }

                                Return (\_SB.TZ50._PSV) /* External reference */
                            }
                            ElseIf ((_T_M == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTSP = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Information Change
                                }

                                Return (\_SB.TZ50._TSP) /* External reference */
                            }
                            ElseIf ((_T_M == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTC1 = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Information Change
                                }

                                Return (\_SB.TZ50._TC1) /* External reference */
                            }
                            ElseIf ((_T_M == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TTC2 = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Information Change
                                }

                                Return (\_SB.TZ50._TC2) /* External reference */
                            }
                            ElseIf ((_T_M == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ50.TMTL = Arg1
                                    Notify (\_SB.TZ50, 0x81) // Information Change
                                }

                                Return (\_SB.TZ50._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x34))
                    {
                        While (One)
                        {
                            Name (_T_N, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_N = ToInteger (Arg3)
                            If ((_T_N == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TPSV = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Information Change
                                }

                                Return (\_SB.TZ52._PSV) /* External reference */
                            }
                            ElseIf ((_T_N == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTSP = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Information Change
                                }

                                Return (\_SB.TZ52._TSP) /* External reference */
                            }
                            ElseIf ((_T_N == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTC1 = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Information Change
                                }

                                Return (\_SB.TZ52._TC1) /* External reference */
                            }
                            ElseIf ((_T_N == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TTC2 = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Information Change
                                }

                                Return (\_SB.TZ52._TC2) /* External reference */
                            }
                            ElseIf ((_T_N == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ52.TMTL = Arg1
                                    Notify (\_SB.TZ52, 0x81) // Information Change
                                }

                                Return (\_SB.TZ52._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x35))
                    {
                        While (One)
                        {
                            Name (_T_O, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_O = ToInteger (Arg3)
                            If ((_T_O == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ53.TPSV = Arg1
                                    Notify (\_SB.TZ53, 0x81) // Information Change
                                }

                                Return (\_SB.TZ53._PSV) /* External reference */
                            }
                            ElseIf ((_T_O == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ53.TTSP = Arg1
                                    Notify (\_SB.TZ53, 0x81) // Information Change
                                }

                                Return (\_SB.TZ53._TSP) /* External reference */
                            }
                            ElseIf ((_T_O == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ53.TTC1 = Arg1
                                    Notify (\_SB.TZ53, 0x81) // Information Change
                                }

                                Return (\_SB.TZ53._TC1) /* External reference */
                            }
                            ElseIf ((_T_O == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ53.TTC2 = Arg1
                                    Notify (\_SB.TZ53, 0x81) // Information Change
                                }

                                Return (\_SB.TZ53._TC2) /* External reference */
                            }
                            ElseIf ((_T_O == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ53.TMTL = Arg1
                                    Notify (\_SB.TZ53, 0x81) // Information Change
                                }

                                Return (\_SB.TZ53._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x36))
                    {
                        While (One)
                        {
                            Name (_T_P, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_P = ToInteger (Arg3)
                            If ((_T_P == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ54.TPSV = Arg1
                                    Notify (\_SB.TZ54, 0x81) // Information Change
                                }

                                Return (\_SB.TZ54._PSV) /* External reference */
                            }
                            ElseIf ((_T_P == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ54.TTSP = Arg1
                                    Notify (\_SB.TZ54, 0x81) // Information Change
                                }

                                Return (\_SB.TZ54._TSP) /* External reference */
                            }
                            ElseIf ((_T_P == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ54.TTC1 = Arg1
                                    Notify (\_SB.TZ54, 0x81) // Information Change
                                }

                                Return (\_SB.TZ54._TC1) /* External reference */
                            }
                            ElseIf ((_T_P == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ54.TTC2 = Arg1
                                    Notify (\_SB.TZ54, 0x81) // Information Change
                                }

                                Return (\_SB.TZ54._TC2) /* External reference */
                            }
                            ElseIf ((_T_P == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ54.TMTL = Arg1
                                    Notify (\_SB.TZ54, 0x81) // Information Change
                                }

                                Return (\_SB.TZ54._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x37))
                    {
                        While (One)
                        {
                            Name (_T_Q, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_Q = ToInteger (Arg3)
                            If ((_T_Q == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ55.TPSV = Arg1
                                    Notify (\_SB.TZ55, 0x81) // Information Change
                                }

                                Return (\_SB.TZ55._PSV) /* External reference */
                            }
                            ElseIf ((_T_Q == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ55.TTSP = Arg1
                                    Notify (\_SB.TZ55, 0x81) // Information Change
                                }

                                Return (\_SB.TZ55._TSP) /* External reference */
                            }
                            ElseIf ((_T_Q == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ55.TTC1 = Arg1
                                    Notify (\_SB.TZ55, 0x81) // Information Change
                                }

                                Return (\_SB.TZ55._TC1) /* External reference */
                            }
                            ElseIf ((_T_Q == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ55.TTC2 = Arg1
                                    Notify (\_SB.TZ55, 0x81) // Information Change
                                }

                                Return (\_SB.TZ55._TC2) /* External reference */
                            }
                            ElseIf ((_T_Q == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ55.TMTL = Arg1
                                    Notify (\_SB.TZ55, 0x81) // Information Change
                                }

                                Return (\_SB.TZ55._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x38))
                    {
                        While (One)
                        {
                            Name (_T_R, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_R = ToInteger (Arg3)
                            If ((_T_R == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ56.TPSV = Arg1
                                    Notify (\_SB.TZ56, 0x81) // Information Change
                                }

                                Return (\_SB.TZ56._PSV) /* External reference */
                            }
                            ElseIf ((_T_R == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ56.TTSP = Arg1
                                    Notify (\_SB.TZ56, 0x81) // Information Change
                                }

                                Return (\_SB.TZ56._TSP) /* External reference */
                            }
                            ElseIf ((_T_R == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ56.TTC1 = Arg1
                                    Notify (\_SB.TZ56, 0x81) // Information Change
                                }

                                Return (\_SB.TZ56._TC1) /* External reference */
                            }
                            ElseIf ((_T_R == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ56.TTC2 = Arg1
                                    Notify (\_SB.TZ56, 0x81) // Information Change
                                }

                                Return (\_SB.TZ56._TC2) /* External reference */
                            }
                            ElseIf ((_T_R == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ56.TMTL = Arg1
                                    Notify (\_SB.TZ56, 0x81) // Information Change
                                }

                                Return (\_SB.TZ56._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x39))
                    {
                        While (One)
                        {
                            Name (_T_S, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_S = ToInteger (Arg3)
                            If ((_T_S == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ57.TPSV = Arg1
                                    Notify (\_SB.TZ57, 0x81) // Information Change
                                }

                                Return (\_SB.TZ57._PSV) /* External reference */
                            }
                            ElseIf ((_T_S == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ57.TTSP = Arg1
                                    Notify (\_SB.TZ57, 0x81) // Information Change
                                }

                                Return (\_SB.TZ57._TSP) /* External reference */
                            }
                            ElseIf ((_T_S == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ57.TTC1 = Arg1
                                    Notify (\_SB.TZ57, 0x81) // Information Change
                                }

                                Return (\_SB.TZ57._TC1) /* External reference */
                            }
                            ElseIf ((_T_S == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ57.TTC2 = Arg1
                                    Notify (\_SB.TZ57, 0x81) // Information Change
                                }

                                Return (\_SB.TZ57._TC2) /* External reference */
                            }
                            ElseIf ((_T_S == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ57.TMTL = Arg1
                                    Notify (\_SB.TZ57, 0x81) // Information Change
                                }

                                Return (\_SB.TZ57._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3A))
                    {
                        While (One)
                        {
                            Name (_T_T, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_T = ToInteger (Arg3)
                            If ((_T_T == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TPSV = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Information Change
                                }

                                Return (\_SB.TZ58._PSV) /* External reference */
                            }
                            ElseIf ((_T_T == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTSP = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Information Change
                                }

                                Return (\_SB.TZ58._TSP) /* External reference */
                            }
                            ElseIf ((_T_T == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTC1 = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Information Change
                                }

                                Return (\_SB.TZ58._TC1) /* External reference */
                            }
                            ElseIf ((_T_T == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TTC2 = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Information Change
                                }

                                Return (\_SB.TZ58._TC2) /* External reference */
                            }
                            ElseIf ((_T_T == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ58.TMTL = Arg1
                                    Notify (\_SB.TZ58, 0x81) // Information Change
                                }

                                Return (\_SB.TZ58._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3B))
                    {
                        While (One)
                        {
                            Name (_T_U, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_U = ToInteger (Arg3)
                            If ((_T_U == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TPSV = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Information Change
                                }

                                Return (\_SB.TZ59._PSV) /* External reference */
                            }
                            ElseIf ((_T_U == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTSP = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Information Change
                                }

                                Return (\_SB.TZ59._TSP) /* External reference */
                            }
                            ElseIf ((_T_U == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTC1 = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Information Change
                                }

                                Return (\_SB.TZ59._TC1) /* External reference */
                            }
                            ElseIf ((_T_U == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TTC2 = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Information Change
                                }

                                Return (\_SB.TZ59._TC2) /* External reference */
                            }
                            ElseIf ((_T_U == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ59.TMTL = Arg1
                                    Notify (\_SB.TZ59, 0x81) // Information Change
                                }

                                Return (\_SB.TZ59._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3C))
                    {
                        While (One)
                        {
                            Name (_T_V, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_V = ToInteger (Arg3)
                            If ((_T_V == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ60.TPSV = Arg1
                                    Notify (\_SB.TZ60, 0x81) // Information Change
                                }

                                Return (\_SB.TZ60._PSV) /* External reference */
                            }
                            ElseIf ((_T_V == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ60.TTSP = Arg1
                                    Notify (\_SB.TZ60, 0x81) // Information Change
                                }

                                Return (\_SB.TZ60._TSP) /* External reference */
                            }
                            ElseIf ((_T_V == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ60.TTC1 = Arg1
                                    Notify (\_SB.TZ60, 0x81) // Information Change
                                }

                                Return (\_SB.TZ60._TC1) /* External reference */
                            }
                            ElseIf ((_T_V == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ60.TTC2 = Arg1
                                    Notify (\_SB.TZ60, 0x81) // Information Change
                                }

                                Return (\_SB.TZ60._TC2) /* External reference */
                            }
                            ElseIf ((_T_V == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ60.TMTL = Arg1
                                    Notify (\_SB.TZ60, 0x81) // Information Change
                                }

                                Return (\_SB.TZ60._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3D))
                    {
                        While (One)
                        {
                            Name (_T_W, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_W = ToInteger (Arg3)
                            If ((_T_W == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TPSV = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Information Change
                                }

                                Return (\_SB.TZ61._PSV) /* External reference */
                            }
                            ElseIf ((_T_W == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTSP = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Information Change
                                }

                                Return (\_SB.TZ61._TSP) /* External reference */
                            }
                            ElseIf ((_T_W == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTC1 = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Information Change
                                }

                                Return (\_SB.TZ61._TC1) /* External reference */
                            }
                            ElseIf ((_T_W == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TTC2 = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Information Change
                                }

                                Return (\_SB.TZ61._TC2) /* External reference */
                            }
                            ElseIf ((_T_W == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ61.TMTL = Arg1
                                    Notify (\_SB.TZ61, 0x81) // Information Change
                                }

                                Return (\_SB.TZ61._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x3E))
                    {
                        While (One)
                        {
                            Name (_T_X, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_X = ToInteger (Arg3)
                            If ((_T_X == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ62.TPSV = Arg1
                                    Notify (\_SB.TZ62, 0x81) // Information Change
                                }

                                Return (\_SB.TZ62._PSV) /* External reference */
                            }
                            ElseIf ((_T_X == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ62.TTSP = Arg1
                                    Notify (\_SB.TZ62, 0x81) // Information Change
                                }

                                Return (\_SB.TZ62._TSP) /* External reference */
                            }
                            ElseIf ((_T_X == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ62.TTC1 = Arg1
                                    Notify (\_SB.TZ62, 0x81) // Information Change
                                }

                                Return (\_SB.TZ62._TC1) /* External reference */
                            }
                            ElseIf ((_T_X == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ62.TTC2 = Arg1
                                    Notify (\_SB.TZ62, 0x81) // Information Change
                                }

                                Return (\_SB.TZ62._TC2) /* External reference */
                            }
                            ElseIf ((_T_X == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ62.TMTL = Arg1
                                    Notify (\_SB.TZ62, 0x81) // Information Change
                                }

                                Return (\_SB.TZ62._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x62))
                    {
                        While (One)
                        {
                            Name (_T_Y, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_Y = ToInteger (Arg3)
                            If ((_T_Y == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ98.TPSV = Arg1
                                    Notify (\_SB.TZ98, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ98._PSV) /* External reference */
                            }
                            ElseIf ((_T_Y == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ98.TTSP = Arg1
                                    Notify (\_SB.TZ98, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ98._TSP) /* External reference */
                            }
                            ElseIf ((_T_Y == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ98.TTC1 = Arg1
                                    Notify (\_SB.TZ98, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ98._TC1) /* External reference */
                            }
                            ElseIf ((_T_Y == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTC2 = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TC2 ())
                            }
                            ElseIf ((_T_Y == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ98.TMTL = Arg1
                                    Notify (\_SB.TZ98, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ98._MTL) /* External reference */
                            }
                            ElseIf ((_T_Y == 0x06))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ98.TAC0 = Arg1
                                    Notify (\_SB.TZ98, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ98._AC0 ())
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == 0x63))
                    {
                        While (One)
                        {
                            Name (_T_Z, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_Z = ToInteger (Arg3)
                            If ((_T_Z == Zero))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TPSV = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._PSV ())
                            }
                            ElseIf ((_T_Z == One))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TCRT = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._CRT ())
                            }
                            ElseIf ((_T_Z == 0x02))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTSP = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TSP ())
                            }
                            ElseIf ((_T_Z == 0x03))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTC1 = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TC1 ())
                            }
                            ElseIf ((_T_Z == 0x04))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TTC2 = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._TC2 ())
                            }
                            ElseIf ((_T_Z == 0x05))
                            {
                                If (Arg2)
                                {
                                    \_SB.TZ99.TMTL = Arg1
                                    Notify (\_SB.TZ99, 0x81) // Thermal Trip Point Change
                                }

                                Return (\_SB.TZ99._MTL) /* External reference */
                            }
                            Else
                            {
                                Return (0xFFFF)
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (0xFFFF)
                    }

                    Break
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.IPCC
            })
            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                If ((\_SB.PSUB == "IDP08380"))
                {
                    Return ("IDP08380")
                }
                ElseIf ((\_SB.PSUB == "CRD08380"))
                {
                    Return ("CRD08380")
                }
                ElseIf ((\_SB.PSUB == "IDPS8380"))
                {
                    Return ("IDPS8380")
                }
            }

            Alias (\_SB.PHRV, _HRV)
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.PEP0._DSM._T_0 */
                    If ((_T_0 == ToUUID ("8d5ca34c-ae83-4a2a-9dd1-a74ffead548b") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (0x7E)
                                    }

                                    Break
                                }

                                Return (Zero)
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Name (SUBI, Package (0x03)
                                {
                                    Package (0x03)
                                    {
                                        "adsp", 
                                        One, 
                                        0x02
                                    }, 

                                    Package (0x03)
                                    {
                                        "cdsp", 
                                        One, 
                                        0x03
                                    }, 

                                    Package (0x03)
                                    {
                                        "spss", 
                                        Zero, 
                                        0x04
                                    }
                                })
                                Return (SUBI) /* \_SB_.PEP0._DSM.SUBI */
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                If (CondRefOf (\_SB.ADSP))
                                {
                                    If (CondRefOf (\_SB.ADSP._STA))
                                    {
                                        Return (\_SB.ADSP._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                If (CondRefOf (\_SB.NSP0))
                                {
                                    If (CondRefOf (\_SB.NSP0._STA))
                                    {
                                        Return (\_SB.NSP0._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If (CondRefOf (\_SB.SPSS))
                                {
                                    If (CondRefOf (\_SB.SPSS._STA))
                                    {
                                        Return (\_SB.SPSS._STA ())
                                    }
                                    Else
                                    {
                                        Return (0x0F)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            ElseIf ((_T_1 == 0x05))
                            {
                                Debug = "Update PEPI Variable"
                                PEPI = One
                                Debug = PEPI /* \_SB_.PEPI */
                                Return (PEPI) /* \_SB_.PEPI */
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == ToUUID ("11e00d56-ce64-47ce-837b-1f898f9aa461") /* Unknown UUID */))
                    {
                        Name (MBUF, Buffer (DBFL){})
                        CreateByteField (MBUF, Zero, STAT)
                        CreateByteField (MBUF, One, LEN)
                        CreateByteField (MBUF, 0x02, MVAL)
                        CreateField (MBUF, 0x18, 0x20, MSID)
                        MSID = "MSBN"
                        Name (TVAL, Zero)
                        Name (CNTR, Zero)
                        Name (CNTM, 0x05)
                        While (One)
                        {
                            Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_3 = ToInteger (Arg2)
                            If ((_T_3 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0xFF, 0x01                                       // ..
                                })
                            }
                            ElseIf ((_T_3 == 0x03))
                            {
                                MVAL = 0x03
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                \_SB.I2C7.ECWS (0xE0, 0x02, 0x03)
                                Local0 = \_SB.I2C7.ECRD (0xE2)
                                If (((Local0 & 0x40) == 0x40))
                                {
                                    Local0 &= ~0x40
                                    \_SB.I2C7.ECWR (0xE2, Local0)
                                }

                                Break
                            }
                            ElseIf ((_T_3 == 0x04))
                            {
                                MVAL = 0x04
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                \_SB.I2C7.ECWS (0xE0, One, 0x03)
                                Sleep (0x32)
                                VMSC = Zero
                                Sleep (0x32)
                                \_SB.I2C7.HKEY.DYTC (0x000FC001)
                                Break
                            }
                            ElseIf ((_T_3 == 0x05))
                            {
                                MVAL = 0x05
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                Break
                            }
                            ElseIf ((_T_3 == 0x06))
                            {
                                MVAL = 0x06
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                Break
                            }
                            ElseIf ((_T_3 == 0x07))
                            {
                                \_SB.I2C7.HKEY.DYTC (0x001FC001)
                                MVAL = 0x07
                                \_SB.I2C7.ECWS (0xE0, 0x02, 0x03)
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                Break
                            }
                            ElseIf ((_T_3 == 0x08))
                            {
                                MVAL = 0x08
                                \_SB.I2C7.ECWS (0xE0, One, 0x03)
                                Sleep (0x32)
                                VMSC = Zero
                                Sleep (0x32)
                                \_SB.I2C7.HKEY.DYTC (0x000FC001)
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                Break
                            }
                            Else
                            {
                                MVAL = Zero
                                If (\_SB.ABD.AVBL)
                                {
                                    \_SB.PEP0.FLD1 = MBUF /* \_SB_.PEP0._DSM.MBUF */
                                }

                                Break
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }

                    Break
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021A,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x000002A1,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021B,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x000002A2,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x000002A3,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x0000021D,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x00000322,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000025,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000014A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000265,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000071,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000042,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000003C,
                    }
                })
            }

            Field (\_SB.ABD.ROP1, BufferAcc, NoLock, Preserve)
            {
                Connection (
                    I2cSerialBusV2 (0x0001, ControllerInitiated, 0x00000000,
                        AddressingMode7Bit, "\\_SB.ABD",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                ), 
                AccessAs (BufferAcc, AttribRawBytes (0x1A)), 
                FLD0,   168, 
                FLD1,   40
            }

            Method (GEPT, 0, NotSerialized)
            {
                Name (BUFF, Buffer (0x04){})
                CreateByteField (BUFF, Zero, STAT)
                CreateWordField (BUFF, 0x02, DATA)
                DATA = One
                Return (DATA) /* \_SB_.PEP0.GEPT.DATA */
            }

            Name (ROST, Zero)
            Method (NPUR, 1, NotSerialized)
            {
                \_SB.AGR0._PUR [One] = Arg0
                Notify (\_SB.AGR0, 0x80) // Status Change
            }

            Method (INTR, 0, NotSerialized)
            {
                Name (RBUF, Package (0x18)
                {
                    0x02, 
                    One, 
                    0x03, 
                    One, 
                    0x06, 
                    0x17911008, 
                    One, 
                    Zero, 
                    0x86000000, 
                    0x00200000, 
                    Zero, 
                    Zero, 
                    0x0C300000, 
                    0x1000, 
                    Zero, 
                    Zero, 
                    0x01FD4000, 
                    0x08, 
                    Zero, 
                    Zero, 
                    0x17C0000C, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Return (RBUF) /* \_SB_.PEP0.INTR.RBUF */
            }

            Method (STND, 0, NotSerialized)
            {
                Return (STNX) /* \_SB_.PEP0.STNX */
            }

            Name (STNX, Package (0x0B)
            {
                "DMPO", 
                "DMSB", 
                "DMPA", 
                "DMPB", 
                "DMDS", 
                "DMPL", 
                "DMPR", 
                "DMPS", 
                "XMPL", 
                "DMEP", 
                "DMRS"
            })
            Method (CTPM, 0, NotSerialized)
            {
                Name (CTPN, Package (0x02)
                {
                    "CORE_TOPOLOGY", 
                    0x08
                })
                Return (CTPN) /* \_SB_.PEP0.CTPM.CTPN */
            }

            Name (DCVS, Zero)
            Method (PGDS, 0, NotSerialized)
            {
                Return (DCVS) /* \_SB_.PEP0.DCVS */
            }

            Name (PPPP, Package (0x3B)
            {
                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS4_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_F"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_G"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS2_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS4_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS5_J"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO8_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO9_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO10_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO12_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO13_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO14_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO15_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO16_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO17_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_C"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_E"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_E"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_E"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_F"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_F"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_F"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_I"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_J"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_J"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_J"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO1_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO2_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO3_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO4_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO5_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO6_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_LDO7_M"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK3_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK4_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK5_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK6_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK7_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_CLK8_A"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_BUCK_BOOST1_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_BUCK_BOOST2_B"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS8_D"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS1_E"
                }, 

                Package (0x01)
                {
                    "PPP_RESOURCE_ID_SMPS5_K"
                }
            })
            Method (PPPM, 0, NotSerialized)
            {
                Return (PPPP) /* \_SB_.PEP0.PPPP */
            }

            Name (PRRP, Package (0x00){})
            Method (PPRR, 0, NotSerialized)
            {
                Return (PRRP) /* \_SB_.PEP0.PRRP */
            }

            Name (FPDP, Zero)
            Method (FPMD, 0, NotSerialized)
            {
                Return (FPDP) /* \_SB_.PEP0.FPDP */
            }

            Method (DPRF, 0, NotSerialized)
            {
                Return (\_SB.DPP0)
            }

            Method (DMRF, 0, NotSerialized)
            {
                Return (\_SB.DPP1)
            }

            Method (MPRF, 0, NotSerialized)
            {
                Return (\_SB.MPP0) /* External reference */
            }

            Method (MMRF, 0, NotSerialized)
            {
                Return (\_SB.MPP1) /* External reference */
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (PREL, 0, NotSerialized)
            {
                Name (PREX, Package (0x07)
                {
                    "DM0G", 
                    "DM7G", 
                    "DM8G", 
                    "DM9G", 
                    "DMKG", 
                    "DMLG", 
                    "DMMG"
                })
                Return (PREX) /* \_SB_.PEP0.PREL.PREX */
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (PEPH, 0, NotSerialized)
            {
                Return (Package (0x01)
                {
                    "ACPI\\VEN_QCOM&DEV_0C17"
                })
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (OPMD, 0, NotSerialized)
            {
                Return (OPCC) /* \_SB_.PEP0.OPCC */
            }

            Name (OPCC, Package (0x00){})
        }

        Scope (\_SB.PEP0)
        {
            Method (G0MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0B)
                        {
                            "COMPONENT", 
                            Zero, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x1A)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "TLMMGPIO", 
                                        Package (0x06)
                                        {
                                            0x46, 
                                            One, 
                                            Zero, 
                                            One, 
                                            0x03, 
                                            0x07
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "TLMMGPIO", 
                                        Package (0x06)
                                        {
                                            0x77, 
                                            One, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICGPIO", 
                                        Package (0x08)
                                        {
                                            "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                            0x03, 
                                            0x03, 
                                            Zero, 
                                            Zero, 
                                            0x0A, 
                                            0x02, 
                                            0x04
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx3_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G0MD.GPCC */
            }

            Method (G7MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x07, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x2E)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_prim_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G7MD.GPCC */
            }

            Method (G8MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x08, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x2E)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_prim_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_prim_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G8MD.GPCC */
            }

            Method (G9MD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x09, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x30)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_sec_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO14_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.G9MD.GPCC */
            }

            Method (GKMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x0A, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x30)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_sec_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_sec_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO14_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GKMD.GPCC */
            }

            Method (GLMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x0B, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x30)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_tert_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x7E, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GLMD.GPCC */
            }

            Method (GMMD, 0, NotSerialized)
            {
                Name (GPCC, Package (0x01)
                {
                    Package (0x04)
                    {
                        "DEVICE", 
                        0x82, 
                        "\\_SB.GPU0", 
                        Package (0x0D)
                        {
                            "COMPONENT", 
                            0x0C, 
                            Package (0x03)
                            {
                                "FSTATE", 
                                Zero, 
                                Package (0x30)
                                {
                                    "EXIT", 
                                    Package (0x02)
                                    {
                                        "NPARESOURCE", 
                                        Package (0x03)
                                        {
                                            One, 
                                            "/arc/client/rail_mmcx", 
                                            0x40
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x023C3460, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_xo_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_edp_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x03)
                                        {
                                            "disp_cc_mdss_core_gdsc", 
                                            One, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x2FAF0800, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_disp_hf_axi_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_pipe_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb30_tert_sleep_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "gcc_usb3_tert_phy_com_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_rscc_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_ahb_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_vsync_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_D", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_I", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO8_B", 
                                            One, 
                                            0x002EE000, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x03)
                                        {
                                            "PPP_RESOURCE_ID_CLK6_A", 
                                            0x06, 
                                            One
                                        }
                                    }, 

                                    Package (0x03)
                                    {
                                        "TLMMGPIO_V2", 
                                        One, 
                                        Package (0x06)
                                        {
                                            0x7E, 
                                            Zero, 
                                            One, 
                                            Zero, 
                                            Zero, 
                                            Zero
                                        }
                                    }
                                }
                            }, 

                            Package (0x02)
                            {
                                "FSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "INIT_FSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PRELOAD_FSTATE", 
                                One
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE", 
                                    Zero
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                One, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x04)
                                        {
                                            "disp_cc_mdss_mdp_clk", 
                                            0x03, 
                                            0x2245CDC0, 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_APPSS_PROC", 
                                            "ICBID_SLAVE_DISPLAY_CFG", 
                                            0x047868C0, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x02, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            Zero, 
                                            0x77359400
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x03, 
                                Package (0x04)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MDP", 
                                            "ICBID_SLAVE_MNOC_HF_MEM_NOC", 
                                            Zero, 
                                            Zero
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "BUSARB", 
                                        Package (0x05)
                                        {
                                            0x03, 
                                            "ICBID_MASTER_MNOC_HF_MEM_NOC", 
                                            "ICBID_SLAVE_EBI1", 
                                            0x35A4E900, 
                                            Zero
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x04, 
                                Package (0x11)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_1_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_link_intf_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "tcsr_usb4_2_clkref_en", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel0_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_pixel1_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_aux_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_clk", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_link_intf_clk", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x05, 
                                Package (0x05)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx0_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx1_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "CLOCK", 
                                        Package (0x02)
                                        {
                                            "disp_cc_mdss_dptx2_usb_router_link_intf_clk", 
                                            0x02
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE_SET", 
                                0x06, 
                                Package (0x0D)
                                {
                                    "PSTATE", 
                                    Zero, 
                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_C", 
                                            One, 
                                            0x00124F80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_D", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO1_J", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_C", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_D", 
                                            One, 
                                            0x000DEA80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO2_J", 
                                            One, 
                                            0x00132A40, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO3_J", 
                                            One, 
                                            0x000D6D80, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "PMICVREGVOTE", 
                                        Package (0x08)
                                        {
                                            "PPP_RESOURCE_ID_LDO15_B", 
                                            One, 
                                            0x001B7740, 
                                            One, 
                                            0x07, 
                                            Zero, 
                                            "HLOS_DRV", 
                                            "REQUIRED"
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_0_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_1_phy_gdsc", 
                                            One
                                        }
                                    }, 

                                    Package (0x02)
                                    {
                                        "FOOTSWITCH", 
                                        Package (0x02)
                                        {
                                            "gcc_usb_2_phy_gdsc", 
                                            One
                                        }
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PRELOAD_PSTATE", 
                                    Zero
                                }
                            }
                        }
                    }
                })
                Return (GPCC) /* \_SB_.PEP0.GMMD.GPCC */
            }
        }

        Scope (\_SB.PEP0)
        {
            Method (LPMD, 0, NotSerialized)
            {
                Return (LPCC) /* \_SB_.PEP0.LPCC */
            }

            Name (LPCC, Package (0x06)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.URS0", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS0.USB0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1F)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS0.UFN0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x1F)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.URS1", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS1.USB1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x23)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS1.UFN1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x23)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }
            })
            Method (RPMD, 0, NotSerialized)
            {
                Return (LPCK) /* \_SB_.PEP0.LPCK */
            }

            Name (LPCK, Package (0x05)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.URS2", 
                    Package (0x05)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS2.USB2", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x21)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x21)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x21)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.URS2.UFN2", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x21)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x21)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x22)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.USB3", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x23)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp0_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x23)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x23)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x24)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_pipe_1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_mp_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_mp_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp0_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb3_mp1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_MP", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_MP", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_mp_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss0_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb3_mp_ss1_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.USB4", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x18)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb20_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb2_prim_axi_clk", 
                                0x08, 
                                0x78, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb2_prim_axi_clk", 
                                0x08, 
                                0x78, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb20_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb20_master_clk", 
                                0x08, 
                                0x78, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb20_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB2", 
                                "ICBID_SLAVE_EBI1", 
                                0x03938700, 
                                0x03938700
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB2", 
                                0x0BEBC200, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x18)
                    {
                        "DSTATE", 
                        One, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb20_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb20_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb20_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x18)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb20_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb20_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb20_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x19)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb20_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb20_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb2_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb20_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb20_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO13_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO4_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_E", 
                                One, 
                                Zero, 
                                Zero, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }
            })
            Method (SPMD, 0, NotSerialized)
            {
                Return (LPCS) /* \_SB_.PEP0.LPCS */
            }

            Name (LPCS, Package (0x03)
            {
                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.UBF0.PRT0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x34)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb4_0_axi_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_p2rr2p_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_0_master_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_sb_if_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_sys_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_0_tmu_clk", 
                                0x08, 
                                0xFA, 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_dp0_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_dp1_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_pcie_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_usb_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_apb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_at_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                0x17D78400, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x35)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb4_0_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_p2rr2p_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_sb_if_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_sys_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_tmu_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_dp0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_dp1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_pcie_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_phy_usb_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_apb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_at_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_prim_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_prim_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_prim_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_tunnel_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_0_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_0_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_prim_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.UBF0.PRT1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x38)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb4_1_axi_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_p2rr2p_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_1_master_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_sb_if_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_sys_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_1_tmu_clk", 
                                0x08, 
                                0xFA, 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_dp0_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_dp1_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_pcie_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_usb_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_apb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_at_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                0x17D78400, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x39)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb4_1_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_p2rr2p_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_sb_if_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_sys_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_tmu_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_dp0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_dp1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_pcie_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_phy_usb_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_apb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_at_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_sec_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_sec_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_sec_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_1_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_tunnel_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_1_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_sec_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_1_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO14_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.UBF0.PRT2", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "PSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x37)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                0x002EE000, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x12
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x08, 
                                0xC8, 
                                0x09
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x08, 
                                0x4B00, 
                                0x07
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_aggre_usb4_2_axi_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_p2rr2p_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_2_master_clk", 
                                0x08, 
                                0x015E, 
                                0x0B
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_sb_if_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_sys_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb4_2_tmu_clk", 
                                0x08, 
                                0xFA, 
                                0x0A
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_dp0_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_dp1_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_pcie_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_usb_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_apb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_at_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                0x28000000, 
                                0x28000000
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                0x17D78400, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x38)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb4_2_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_p2rr2p_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_sb_if_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_sys_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_tmu_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_dp0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_dp1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_pcie_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_phy_usb_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_apb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_at_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_sleep_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x03, 
                                0x2580, 
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x03)
                            {
                                "gcc_usb30_tert_master_clk", 
                                0x09, 
                                0x13
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb3_tert_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_mock_utmi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_usb3_tert_phy_com_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_north_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_aggre_noc_usb_south_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_north_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cfg_noc_usb_anoc_south_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_sys_noc_usb_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb4_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_usb2_2_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK6_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_USB3_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_USB3_2", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_tunnel_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb4_2_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb30_tert_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_usb_2_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO8_B", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_I", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_D", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_C", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                0x04, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        0x03
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (BPMD, 0, NotSerialized)
            {
                If (((STOR == One) || (STOR == 0x03)))
                {
                    If ((PUS4 == One))
                    {
                        Return (CPCC) /* \_SB_.PEP0.CPCC */
                    }
                    Else
                    {
                        Return (BPCC) /* \_SB_.PEP0.BPCC */
                    }
                }
                Else
                {
                    Return (FPCC) /* \_SB_.PEP0.FPCC */
                }
            }

            Method (SDMD, 0, NotSerialized)
            {
                Return (SDCC) /* \_SB_.PEP0.SDCC */
            }

            Name (BPCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.UFS0", 
                    Package (0x07)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x05)
                        {
                            "FSTATE", 
                            Zero, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "FSTATE", 
                            One, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    One
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            One, 
                            Package (0x0E)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x08, 
                                        0x18054AC0, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK7_A", 
                                        0x06, 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "tcsr_ufs_phy_clkref_en", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK8_A", 
                                        0x06, 
                                        One
                                    }
                                }
                            }, 

                            Package (0x0E)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK8_A", 
                                        0x06, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "tcsr_ufs_phy_clkref_en", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK7_A", 
                                        0x06, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x02, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x8F0D1800, 
                                        0x8F0D1800
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        0x11D260C0, 
                                        Zero
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        Zero, 
                                        Zero
                                    }
                                }
                            }
                        }
                    }, 

                    Package (0x0B)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO17_B", 
                                One, 
                                0x00263540, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_I", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x23
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x0A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_I", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO17_B", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }
            })
            Name (CPCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.UFS0", 
                    Package (0x07)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x05)
                        {
                            "FSTATE", 
                            Zero, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    Zero
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "FSTATE", 
                            One, 
                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    0x02, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    One, 
                                    One
                                }
                            }, 

                            Package (0x02)
                            {
                                "PSTATE_ADJUST", 
                                Package (0x02)
                                {
                                    Zero, 
                                    One
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "FOOTSWITCH", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_gdsc", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            One, 
                            Package (0x10)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x08, 
                                        0x11E1A300, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x03)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x09, 
                                        0x12
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x03, 
                                        0x18054AC0, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK7_A", 
                                        0x06, 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "tcsr_ufs_phy_clkref_en", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK8_A", 
                                        0x06, 
                                        One
                                    }
                                }
                            }, 

                            Package (0x0E)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK8_A", 
                                        0x06, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "tcsr_ufs_phy_clkref_en", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x03)
                                    {
                                        "PPP_RESOURCE_ID_CLK7_A", 
                                        0x06, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_aggre_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ahb_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_phy_aux_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_tx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_0_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_rx_symbol_1_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_ice_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_unipro_core_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_ufs_phy_axi_clk", 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x02, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x000000011E1A3000, 
                                        0x000000011E1A3000
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        0x11D260C0, 
                                        Zero
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_APPSS_PROC", 
                                        "ICBID_SLAVE_UFS_MEM_CFG", 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_UFS_MEM", 
                                        "ICBID_SLAVE_EBI1", 
                                        Zero, 
                                        Zero
                                    }
                                }
                            }
                        }
                    }, 

                    Package (0x0B)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO17_B", 
                                One, 
                                0x00263540, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_I", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x23
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x0A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_I", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO17_B", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }
            })
            Name (FPCC, Package (0x01)
            {
                Package (0x06)
                {
                    "DEVICE", 
                    "\\_SB.UFS0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "PRELOAD_DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_I", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO17_B", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }
                }
            })
            Name (SDCC, Package (0x01)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.SDC2", 
                    Package (0x09)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }, 

                        Package (0x19)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x03, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x04, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x05, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x06, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x07, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x08, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x09, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0B, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0C, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0D, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0E, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x0F, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x10, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x11, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x12, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x13, 
                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        One
                                    }
                                }
                            }, 

                            Package (0x0A)
                            {
                                "PSTATE", 
                                0x14, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO12_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_B", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_B", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO12_B", 
                                        One, 
                                        0x00124F80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                0x15, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_B", 
                                        One, 
                                        0x001B7740, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x06)
                            {
                                "PSTATE", 
                                0x16, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_B", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_B", 
                                        One, 
                                        0x002D2A80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO12_B", 
                                        One, 
                                        0x00124F80, 
                                        One, 
                                        0x07, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }, 

                            Package (0x06)
                            {
                                "PSTATE", 
                                0x17, 
                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO9_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO6_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PMICVREGVOTE", 
                                    Package (0x06)
                                    {
                                        "PPP_RESOURCE_ID_LDO12_B", 
                                        One, 
                                        Zero, 
                                        Zero, 
                                        Zero, 
                                        Zero
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "DELAY", 
                                    Package (0x01)
                                    {
                                        0x23
                                    }
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            One, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x02
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x08, 
                                        0x05F5E100, 
                                        0x02
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x04)
                                    {
                                        "gcc_sdcc2_apps_clk", 
                                        0x08, 
                                        0x0C0A4680, 
                                        0x02
                                    }
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            0x02, 
                            Package (0x03)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x17D78400, 
                                        0x0BEBC200
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        0x0BEBC200, 
                                        0x05F5E100
                                    }
                                }
                            }, 

                            Package (0x03)
                            {
                                "PSTATE", 
                                0x02, 
                                Package (0x02)
                                {
                                    "BUSARB", 
                                    Package (0x05)
                                    {
                                        0x03, 
                                        "ICBID_MASTER_SDCC_2", 
                                        "ICBID_SLAVE_EBI1", 
                                        Zero, 
                                        Zero
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x03, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        One, 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        0x02, 
                                        Zero
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        One, 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "PSTATE_ADJUST", 
                                    Package (0x02)
                                    {
                                        0x02, 
                                        One
                                    }
                                }
                            }
                        }, 

                        Package (0x04)
                        {
                            "PSTATE_SET", 
                            0x04, 
                            Package (0x04)
                            {
                                "PSTATE", 
                                Zero, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_ahb_clk", 
                                        One
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_at_clk", 
                                        One
                                    }
                                }
                            }, 

                            Package (0x04)
                            {
                                "PSTATE", 
                                One, 
                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_ahb_clk", 
                                        0x02
                                    }
                                }, 

                                Package (0x02)
                                {
                                    "CLOCK", 
                                    Package (0x02)
                                    {
                                        "gcc_sdcc2_at_clk", 
                                        0x02
                                    }
                                }
                            }
                        }
                    }, 

                    Package (0x07)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                0x16
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMPORT", 
                            Package (0x03)
                            {
                                0x000F2000, 
                                0x7FFF, 
                                0x1FE4
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x04, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                0x02
                            }
                        }
                    }, 

                    Package (0x07)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x04, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                0x02, 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMPORT", 
                            Package (0x03)
                            {
                                0x000F2000, 
                                0x7FFF, 
                                0x0A00
                            }
                        }, 

                        Package (0x02)
                        {
                            "PSTATE_ADJUST", 
                            Package (0x02)
                            {
                                Zero, 
                                0x17
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdSdCardExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (PEMD, 0, NotSerialized)
            {
                If ((\_SB.SIDV < 0x00020000))
                {
                    Name (CX6, Package (0x02)
                    {
                        "NPARESOURCE", 
                        Package (0x04)
                        {
                            One, 
                            "/arc/client/rail_cx", 
                            0x80, 
                            "SUPPRESSIBLE"
                        }
                    })
                    DerefOf (DerefOf (PEMC [0x12]) [0x04]) [0x03]
                         = CX6 /* \_SB_.PEP0.PEMD.CX6_ */
                }

                Return (PEMC) /* \_SB_.PEP0.PEMC */
            }

            Name (PEMC, Package (0x15)
            {
                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI0", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x77359400, 
                                0x77359400
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_0_CFG", 
                                0x047868C0, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_0_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_0_tunnel_gdsc", 
                                0x02
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI0.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x77359400, 
                                0x77359400
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_1_CFG", 
                                0x047868C0, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_1_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_1_tunnel_gdsc", 
                                0x02
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI1.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI2", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_tunnel_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2", 
                                "ICBID_SLAVE_EBI1", 
                                0x77359400, 
                                0x77359400
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2_CFG", 
                                0x047868C0, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_2_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_2", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_tunnel_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_2_tunnel_gdsc", 
                                0x02
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI2.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI3", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x1D)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICGPIO", 
                            Package (0x08)
                            {
                                "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                0x03, 
                                0x07, 
                                Zero, 
                                Zero, 
                                0x0A, 
                                0x03, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICGPIO", 
                            Package (0x08)
                            {
                                "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                0x03, 
                                0x05, 
                                Zero, 
                                Zero, 
                                0x0A, 
                                0x03, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                0x000DEA80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_mxa", 
                                0x0100
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                0x80
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_north_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_8l_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_rchng_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_3_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_3_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x90, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1A)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_3", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_3_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_north_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_8l_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_3_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_3_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_mxa", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_C", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICGPIO", 
                            Package (0x08)
                            {
                                "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                0x03, 
                                0x05, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICGPIO", 
                            Package (0x08)
                            {
                                "IOCTL_PM_GPIO_CONFIG_DIGITAL_OUTPUT", 
                                0x03, 
                                0x07, 
                                Zero, 
                                Zero, 
                                0x0A, 
                                0x03, 
                                0x04
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI3.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI4", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x17)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_2l_4_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_4_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_4_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_4_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x93, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x15)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_4", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_4_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_2l_4_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_4_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_4_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI4.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI5", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x17)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                0x00124F80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_5_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_2l_5_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_5_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_5_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_5", 
                                "ICBID_SLAVE_EBI1", 
                                0x3B9ACA00, 
                                0x3B9ACA00
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_5_CFG", 
                                0x042C1D80, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x96, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x15)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_5", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_5_CFG", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_2l_5_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_5_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_5_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x03)
                            {
                                "PPP_RESOURCE_ID_CLK7_A", 
                                0x06, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_I", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_E", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.UDE", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.QMUX", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.QMUX.GNSS", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.QMUX.NTAD", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.QMUX.PSAU", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.PCI5.RP1.MHI.QMUX.COEX", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                One
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x02, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x03)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x0B)
                {
                    "DEVICE", 
                    0x83, 
                    "\\_SB.PCI6", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x20)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x04)
                            {
                                One, 
                                "/arc/client/rail_mxa", 
                                0x0100, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x04)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x12, 
                                One, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x07)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                0x00132A40, 
                                One, 
                                0x07, 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x07)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x07)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                0x000D6D80, 
                                One, 
                                0x07, 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_6_phy_gdsc", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_6a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_cfg_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_L1SS_EXCEPTION_EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecutePCIeL1ssExceptions"
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_phy_aux_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_4l_clkref_en", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_pipe_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_pipediv2_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_slv_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_slv_q2a_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_mstr_axi_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_6a_aux_clk", 
                                0x08, 
                                0x0124F800, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_pcie_6a_phy_rchng_clk", 
                                0x08, 
                                0x05F5E100, 
                                0x03
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                One, 
                                0x06
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_6A", 
                                "ICBID_SLAVE_EBI1", 
                                0x000F4240, 
                                0x000F4240, 
                                "HLOS_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_6A", 
                                "ICBID_SLAVE_EBI1", 
                                0x00000001DCD65000, 
                                0xEE6B2800, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_6A_CFG", 
                                0x042C1D80, 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x99, 
                                Zero, 
                                One, 
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x1E)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_6A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "PCIE_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x07)
                            {
                                0x03, 
                                "ICBID_MASTER_PCIE_6A", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero, 
                                "HLOS_DRV", 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x06)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_PCIE_6A_CFG", 
                                Zero, 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "RPMH_COMMIT", 
                            Package (0x01)
                            {
                                "PCIE_DRV"
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x02)
                            {
                                "PCIE_FORCE_WAKE_CMD", 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_HW_DRV_RESOURCE", 
                            Package (0x03)
                            {
                                "PCIE_PLIM_ENABLE_DISABLE_CMD", 
                                Zero, 
                                0x06
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_phy_rchng_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_slv_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_slv_q2a_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_mstr_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_phy_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_aux_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_cnoc_pcie_south_sf_axi_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_pipediv2_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_pipe_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "tcsr_pcie_4l_clkref_en", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PCIE_L1SS_EXCEPTION_EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecutePCIeL1ssExceptions"
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_cfg_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x09)
                            {
                                "gcc_pcie_6a_pipe_clk", 
                                0x06, 
                                Zero, 
                                Zero, 
                                0x02, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_6_phy_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "FOOTSWITCH", 
                            Package (0x02)
                            {
                                "gcc_pcie_6a_gdsc", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO3_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO1_D", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO2_J", 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x07)
                            {
                                0x12, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x04)
                            {
                                One, 
                                "/arc/client/rail_cx", 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }, 

                        Package (0x02)
                        {
                            "NPARESOURCE", 
                            Package (0x04)
                            {
                                One, 
                                "/arc/client/rail_mxa", 
                                Zero, 
                                "SUPPRESSIBLE"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_EXCEPTION", 
                        Package (0x02)
                        {
                            "EXECUTE_FUNCTION", 
                            Package (0x01)
                            {
                                "ExecuteOcdPCIeExceptions"
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "CRASHDUMP_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    "\\_SB.PCI6.RP1", 
                    Package (0x04)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }, 

                        Package (0x02)
                        {
                            "FSTATE", 
                            One
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }, 

                    Package (0x02)
                    {
                        "ABANDON_DSTATE", 
                        Zero
                    }
                }, 

                Package (0x08)
                {
                    "DEVICE", 
                    0x84, 
                    "\\_SB.PCI6.RP1.NVME", 
                    Package (0x23)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x03)
                        {
                            "FSTATE", 
                            Zero, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    0x40
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            One, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x02, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x03, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x04, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x05, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x06, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x07, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x08, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x09, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0A, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0B, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0C, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0D, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0E, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x0F, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x10, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x11, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x12, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x13, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x14, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x15, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x16, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x17, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x18, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x19, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1A, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1B, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1C, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1D, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1E, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x03)
                        {
                            "FSTATE", 
                            0x1F, 
                            Package (0x02)
                            {
                                "NPARESOURCE", 
                                Package (0x03)
                                {
                                    One, 
                                    "/arc/client/rail_cx", 
                                    Zero
                                }
                            }
                        }, 

                        Package (0x05)
                        {
                            "PSTATE_SET", 
                            Zero, 
                            Package (0x02)
                            {
                                "PSTATE", 
                                Zero
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                One
                            }, 

                            Package (0x02)
                            {
                                "PSTATE", 
                                0x02
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (BSMD, 0, NotSerialized)
            {
                Return (BSRC) /* \_SB_.PEP0.BSRC */
            }

            Name (BSRC, Package (0x08)
            {
                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C1", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s0_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                Zero, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                One, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                Zero, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C2", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s1_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x04, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x05, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s1_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x04, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x05, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C4", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s3_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0C, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0D, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s3_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0C, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0D, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C5", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s4_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x10, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x11, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s4_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x10, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x11, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C6", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s5_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x14, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x15, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s5_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x14, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x15, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C7", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s6_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x18, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x19, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s6_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x18, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x19, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C8", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap0_s7_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0E, 
                                One, 
                                0x02, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0F, 
                                One, 
                                0x02, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_s7_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_0_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap0_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_0", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_0", 
                                "ICBID_SLAVE_QUP_CORE_0", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0E, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x0F, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }, 

                Package (0x07)
                {
                    "DEVICE", 
                    "\\_SB.I2C9", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_1", 
                                "ICBID_SLAVE_EBI1", 
                                0x0927C000, 
                                0x0682
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_1", 
                                0x05F5E100, 
                                0x02FAF080
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_1", 
                                "ICBID_SLAVE_QUP_CORE_1", 
                                0x1388, 
                                0x0BB8
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap1_core_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap1_core_2x_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_1_m_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_1_s_ahb_clk", 
                                One
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x04)
                            {
                                "gcc_qupv3_wrap1_s0_clk", 
                                0x08, 
                                0x0124F800, 
                                0x04
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x20, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x21, 
                                One, 
                                One, 
                                One, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        One
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x02
                    }, 

                    Package (0x0C)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap1_s0_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_1_s_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap_1_m_ahb_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap1_core_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "CLOCK", 
                            Package (0x02)
                            {
                                "gcc_qupv3_wrap1_core_2x_clk", 
                                0x02
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_APPSS_PROC", 
                                "ICBID_SLAVE_QUP_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_1", 
                                "ICBID_SLAVE_EBI1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "BUSARB", 
                            Package (0x05)
                            {
                                0x03, 
                                "ICBID_MASTER_QUP_CORE_1", 
                                "ICBID_SLAVE_QUP_CORE_1", 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x20, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x21, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (SRMD, 0, NotSerialized)
            {
                Return (PROX) /* \_SB_.PEP0.PROX */
            }

            Name (PROX, Package (0x02)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.SAR1", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }, 

                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.SAR2", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x03)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "PMICVREGVOTE", 
                            Package (0x06)
                            {
                                "PPP_RESOURCE_ID_LDO10_B", 
                                One, 
                                0x001B7740, 
                                One, 
                                0x07, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }
            })
        }

        Device (WLDS)
        {
            Name (_HID, "QCOM06D0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Scope (\_SB.PEP0)
        {
            Method (LPMX, 0, NotSerialized)
            {
                Return (LPXC) /* \_SB_.PEP0.LPXC */
            }

            Name (LPXC, Package (0x01)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.TSC1", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x07)
                    {
                        "DSTATE", 
                        Zero, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x30, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x05
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x30, 
                                One, 
                                Zero, 
                                One, 
                                Zero, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x0320
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x33, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x03, 
                                Zero
                            }
                        }
                    }, 

                    Package (0x05)
                    {
                        "DSTATE", 
                        0x03, 
                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x33, 
                                Zero, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "TLMMGPIO", 
                            Package (0x06)
                            {
                                0x30, 
                                Zero, 
                                Zero, 
                                Zero, 
                                One, 
                                Zero
                            }
                        }, 

                        Package (0x02)
                        {
                            "DELAY", 
                            Package (0x01)
                            {
                                0x64
                            }
                        }
                    }
                }
            })
        }

        Scope (\_SB.PEP0)
        {
            Method (TPMX, 0, NotSerialized)
            {
                Return (TPXC) /* \_SB_.PEP0.TPXC */
            }

            Name (TPXC, Package (0x01)
            {
                Package (0x05)
                {
                    "DEVICE", 
                    "\\_SB.TCPD", 
                    Package (0x03)
                    {
                        "COMPONENT", 
                        Zero, 
                        Package (0x02)
                        {
                            "FSTATE", 
                            Zero
                        }
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        Zero
                    }, 

                    Package (0x02)
                    {
                        "DSTATE", 
                        0x03
                    }
                }
            })
        }

        Device (BAM1)
        {
            Name (_HID, "QCOM0C0A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x01DC4000,         // Address Base
                        0x00028000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000130,
                    }
                })
                Return (RBUF) /* \_SB_.BAM1._CRS.RBUF */
            }
        }

        Device (BAM5)
        {
            Name (_HID, "QCOM0C0A")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x06C04000,         // Address Base
                        0x00020000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000C4,
                    }
                })
                Return (RBUF) /* \_SB_.BAM5._CRS.RBUF */
            }
        }

        Device (I2C1)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEA")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_0"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B80000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000195,
                    }
                })
                Return (RBUF) /* \_SB_.I2C1._CRS.RBUF */
            }
        }

        Device (I2C2)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEA")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_1"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B84000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000267,
                    }
                })
                Return (RBUF) /* \_SB_.I2C2._CRS.RBUF */
            }
        }

        Device (I2C4)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEA")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_3"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B8C000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000269,
                    }
                })
                Return (RBUF) /* \_SB_.I2C4._CRS.RBUF */
            }
        }

        Device (I2C5)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_4"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B90000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026A,
                    }
                })
                Return (RBUF) /* \_SB_.I2C5._CRS.RBUF */
            }
        }

        Device (I2C6)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x06)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_5"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B94000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026B,
                    }
                })
                Return (RBUF) /* \_SB_.I2C6._CRS.RBUF */
            }
        }

        Device (I2C7)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x07)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_6"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B98000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001ED,
                    }
                })
                Return (RBUF) /* \_SB_.I2C7._CRS.RBUF */
            }
        }

        Device (I2C8)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEA")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x08)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_0_SE_7"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B9C000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EE,
                    }
                })
                Return (RBUF) /* \_SB_.I2C8._CRS.RBUF */
            }
        }

        Device (I2C9)
        {
            Name (_HID, "QCOM0C10")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x09)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_0"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A80000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000340,
                    }
                })
                Return (RBUF) /* \_SB_.I2C9._CRS.RBUF */
            }
        }

        Device (SP11)
        {
            Name (_HID, "QCOM0C0E")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0B)  // _UID: Unique ID
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QGP1, 
                \_SB.MMU0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_2,QSPI"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A88000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000342,
                    }
                })
                Return (RBUF) /* \_SB_.SP11._CRS.RBUF */
            }
        }

        Device (UR15)
        {
            Name (_HID, "QCOM0C16")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x0F)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_1_SE_6,4W,BT"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A98000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000346,
                    }
                    GpioInt (Edge, ActiveLow, Exclusive, PullDown, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x003B
                        }
                })
                Return (RBUF) /* \_SB_.UR15._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (UARD)
        {
            Name (_HID, "QCOM0C16")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x16)  // _UID: Unique ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_STR, Unicode ("QUP_2_SE_5,DBG"))  // _STR: Description String
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00894000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000034D,
                    }
                    GpioInt (Edge, ActiveLow, Exclusive, PullDown, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0057
                        }
                })
                Return (RBUF) /* \_SB_.UARD._CRS.RBUF */
            }
        }

        Device (RPEN)
        {
            Name (_HID, "QCOM06E1")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (PILC)
        {
            Name (_HID, "QCOM06E0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (CHRV, Zero)
            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {
                If ((DPBM & (One << Zero)))
                {
                    CHRV = (CHRV | (One << Zero))
                }

                If ((DPBM & (One << 0x02)))
                {
                    CHRV = (CHRV | (One << One))
                }

                If ((DPBM & (One << 0x07)))
                {
                    CHRV = (CHRV | (One << 0x02))
                }

                If ((\_SB.SDFE == 0x88))
                {
                    CHRV = (CHRV | (One << 0x03))
                }

                Return (CHRV) /* \_SB_.PILC.CHRV */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (CDI)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PILC, 
                \_SB.RPEN
            })
            Name (_HID, "QCOM0C2F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (ADSP)
        {
            Name (_DEP, Package (0x07)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0C1B")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000206,
                    }
                })
                Return (RBUF) /* \_SB_.ADSP._CRS.RBUF */
            }

            Device (SLM1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x06C40000,         // Address Base
                            0x0002C000,         // Address Length
                            )
                        Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                        {
                            0x000000C3,
                        }
                    })
                    Return (RBUF) /* \_SB_.ADSP.SLM1._CRS.RBUF */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }
            }

            Device (ADCM)
            {
                Alias (\_SB.ESUB, _SUB)
                Name (_ADR, One)  // _ADR: Address
                Name (_DEP, Package (0x02)  // _DEP: Dependencies
                {
                    \_SB.MMU0, 
                    \_SB.IMM0
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CHLD, 0, NotSerialized)
                {
                    Return (Package (0x02)
                    {
                        "ADCM\\QCOM0CC1", 
                        "ADCM\\QCOM0CE6"
                    })
                }

                Device (AUCD)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Alias (\_SB.ESUB, _SUB)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Name (RBUF, ResourceTemplate ()
                        {
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x00BF
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x00CC
                                }
                            GpioIo (Exclusive, PullNone, 0x0000, 0x0640, IoRestrictionNone,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0044
                                }
                            GpioInt (Edge, ActiveBoth, ExclusiveAndWake, PullDown, 0x0000,
                                "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x01C0
                                }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x00000210,
                            }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000000BB,
                            }
                            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                            {
                                0x000000CA,
                            }
                        })
                        Return (RBUF) /* \_SB_.ADSP.ADCM.AUCD._CRS.RBUF */
                    }

                    Method (CHLD, 0, NotSerialized)
                    {
                        Name (CH, Package (0x01)
                        {
                            "AUCD\\QCOM0C29"
                        })
                        Return (CH) /* \_SB_.ADSP.ADCM.AUCD.CHLD.CH__ */
                    }

                    Device (QCRT)
                    {
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Name (_ADR, Zero)  // _ADR: Address
                    }
                }

                Device (ACXS)
                {
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_ADR, One)  // _ADR: Address
                }
            }
        }

        Device (SSDD)
        {
            Name (_HID, "QCOM0C20")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.PDSR, 
                \_SB.TFTP
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (PDSR)
        {
            Name (_HID, "QCOM06DF")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GLNK, 
                \_SB.IPC0
            })
            Name (CHRV, Zero)
            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {
                If ((DPBM & (One << 0x07)))
                {
                    CHRV = (CHRV | (One << 0x02))
                }

                If ((\_SB.SDFE == 0x88))
                {
                    CHRV = (CHRV | (One << 0x03))
                }

                Return (CHRV) /* \_SB_.PDSR.CHRV */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (NSP0)
        {
            Name (_DEP, Package (0x08)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.ARPC, 
                \_SB.NSPM
            })
            Name (_HID, "QCOM0CB0")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000262,
                    }
                })
                Return (RBUF) /* \_SB_.NSP0._CRS.RBUF */
            }
        }

        Device (CSW0)
        {
            Name (_HID, "QCOM0CC3")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE0")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.NSP0, 
                \_SB.SBTD
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (SBTD)
        {
            Name (_HID, "QCOM06E5")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (SPSS)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.RPEN, 
                \_SB.GLNK
            })
            Name (_HID, "QCOM0C8D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000180,
                    }
                    Memory32Fixed (ReadWrite,
                        0x01881028,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x01881024,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188101C,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188103C,         // Address Base
                        0x00000004,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0188200C,         // Address Base
                        0x00000004,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPSS._CRS.RBUF */
            }
        }

        Device (TFTP)
        {
            Name (_HID, "QCOM06DC")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.IPC0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (QCSK)
        {
            Name (_HID, "QCOM0CAC")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (WPSS)
        {
            Name (_DEP, Package (0x08)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.GLNK, 
                \_SB.IPC0, 
                \_SB.RPEN, 
                \_SB.SSDD, 
                \_SB.PDSR, 
                \_SB.TFTP
            })
            Name (_HID, "QCOM0D14")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.SDFE == 0x88))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000037D,
                    }
                })
                Return (RBUF) /* \_SB_.WPSS._CRS.RBUF */
            }
        }

        Scope (\_SB.ADSP)
        {
        }

        Scope (\_SB.PILC)
        {
        }

        Scope (\_SB.CDI)
        {
        }

        Scope (\_SB.RPEN)
        {
        }

        Scope (\_SB.NSP0)
        {
            Name (_CID, "QCOMFFE9")  // _CID: Compatible ID
        }

        Device (LLC)
        {
            Name (_HID, "QCOM0C83")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x26200000,         // Address Base
                        0x00200000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000012A,
                    }
                })
            }
        }

        Device (MMU0)
        {
            Name (_HID, "QCOM0C09")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x15000000,         // Address Base
                        0x00100000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000081,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000082,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000083,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000084,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000085,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000086,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000087,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000088,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000089,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000008F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000090,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000091,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000092,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000093,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000094,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000095,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000096,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D5,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D6,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D7,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000D9,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000DF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000E0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000015F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000160,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000161,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000162,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000163,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000164,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000165,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000166,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000167,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000168,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000169,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016E,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000016F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000170,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000171,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000172,
                    }
                })
            }
        }

        Device (MMU1)
        {
            Name (_HID, "QCOM0C09")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.SVMJ, _HRV)
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Return (ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x03DA0000,         // Address Base
                        0x00040000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C6,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C7,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002C9,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CB,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002CC,
                    }
                })
            }
        }

        Device (IMM0)
        {
            Name (_HID, "QCOM068F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (IMM1)
        {
            Name (_HID, "QCOM068F")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (GPU0)
        {
            Name (HHID, "QCOM0C36")
            Name (HDEP, Package (0x0A)
            {
                \_SB.MMU0, 
                \_SB.MMU1, 
                \_SB.IMM0, 
                \_SB.IMM1, 
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.PILC, 
                \_SB.RPEN, 
                \_SB.TREE, 
                \_SB.SCM0
            })
            Name (HBUF, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x0AE00000,         // Address Base
                    0x00200000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00FD0000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000073,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001E1,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001E0,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000027B,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000027A,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001CB,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001CA,
                }
                Memory32Fixed (ReadWrite,
                    0x03D00000,         // Address Base
                    0x0009F000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000014C,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000150,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000014D,
                }
                Memory32Fixed (ReadWrite,
                    0x0B280000,         // Address Base
                    0x00010000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x0AA00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000000CE,
                }
                Memory32Fixed (ReadWrite,
                    0x15200000,         // Address Base
                    0x00200000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000320,
                }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00AA
                    }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00AB
                    }
            })
            Name (HINF, Package (0x16)
            {
                0x03, 
                Zero, 
                Package (0x03)
                {
                    "RESOURCE", 
                    "MDP_REGS", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_PHY_REGS", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VSYNC_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_0_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_0_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_1_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_1_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_2_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_2_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_REGS", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GMU_TO_HOST_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_LPAC_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GPU_PDC_REGS", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO_REGS", 
                    "VIDEO"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDC_INTERRUPT", 
                    "VIDEO"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO2_REGS", 
                    "VIDEO2"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO2_INTERRUPT", 
                    "VIDEO2"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_AUX_SWITCH_SEL5", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_AUX_POLARITY_SEL5", 
                    "DISPLAY"
                }
            })
            Name (PHID, "QCOM0D17")
            Name (PDEP, Package (0x0A)
            {
                \_SB.MMU0, 
                \_SB.MMU1, 
                \_SB.IMM0, 
                \_SB.IMM1, 
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.PILC, 
                \_SB.RPEN, 
                \_SB.TREE, 
                \_SB.SCM0
            })
            Name (PBUF, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x0AE00000,         // Address Base
                    0x00200000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00FD0000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000073,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001E1,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001E0,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000027B,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000027A,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001CB,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000001CA,
                }
                Memory32Fixed (ReadWrite,
                    0x03D00000,         // Address Base
                    0x0009F000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000014C,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000150,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x0000014D,
                }
                Memory32Fixed (ReadWrite,
                    0x0B280000,         // Address Base
                    0x00010000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x0AA00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x000000CE,
                }
                Memory32Fixed (ReadWrite,
                    0x15200000,         // Address Base
                    0x00200000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                {
                    0x00000320,
                }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00AA
                    }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00AB
                    }
            })
            Name (PINF, Package (0x16)
            {
                0x03, 
                Zero, 
                Package (0x03)
                {
                    "RESOURCE", 
                    "MDP_REGS", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_PHY_REGS", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VSYNC_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_0_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_0_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_1_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_1_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_2_DP_AP_0_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "USB4_HR_2_DP_AP_1_INTERRUPT", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_REGS", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GMU_TO_HOST_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GFX_LPAC_INTERRUPT", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "GPU_PDC_REGS", 
                    "GRAPHICS"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO_REGS", 
                    "VIDEO"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDC_INTERRUPT", 
                    "VIDEO"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO2_REGS", 
                    "VIDEO2"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "VIDEO2_INTERRUPT", 
                    "VIDEO2"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_AUX_SWITCH_SEL5", 
                    "DISPLAY"
                }, 

                Package (0x03)
                {
                    "RESOURCE", 
                    "DP_AUX_POLARITY_SEL5", 
                    "DISPLAY"
                }
            })
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CLS, 0x0003000000000000)  // _CLS: Class Code
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                If ((\_SB.SDFE == 0x88))
                {
                    Return (\_SB.GPU0.HHID)
                }
                ElseIf ((\_SB.SDFE == 0x9A))
                {
                    Return (\_SB.GPU0.PHID)
                }
            }

            Device (MON0)
            {
                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                If ((\_SB.SDFE == 0x88))
                {
                    Return (HDEP) /* \_SB_.GPU0.HDEP */
                }
                ElseIf ((\_SB.SDFE == 0x9A))
                {
                    Return (PDEP) /* \_SB_.GPU0.PDEP */
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((\_SB.SDFE == 0x88))
                {
                    Return (HBUF) /* \_SB_.GPU0.HBUF */
                }
                ElseIf ((\_SB.SDFE == 0x9A))
                {
                    Return (PBUF) /* \_SB_.GPU0.PBUF */
                }
            }

            Method (RESI, 0, NotSerialized)
            {
                If ((\_SB.SDFE == 0x88))
                {
                    Return (HINF) /* \_SB_.GPU0.HINF */
                }
                ElseIf ((\_SB.SDFE == 0x9A))
                {
                    Return (PINF) /* \_SB_.GPU0.PINF */
                }
            }

            Method (_ROM, 3, NotSerialized)  // _ROM: Read-Only Memory
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = VPID /* \_SB_.VPID */
                    If ((_T_0 == Zero))
                    {
                        Name (PLCB, Buffer (0x20A5)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x5F, 0x54, 0x4C, 0x31, 0x34, 0x30,  // e>_TL140
                            /* 0090 */  0x56, 0x44, 0x58, 0x53, 0x30, 0x31, 0x2E, 0x30,  // VDXS01.0
                            /* 0098 */  0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E,  // </PanelN
                            /* 00A0 */  0x61, 0x6D, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ame>.   
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x61,  //      <Pa
                            /* 00C8 */  0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72,  // nelDescr
                            /* 00D0 */  0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x41,  // iption>A
                            /* 00D8 */  0x55, 0x4F, 0x20, 0x57, 0x55, 0x58, 0x47, 0x41,  // UO WUXGA
                            /* 00E0 */  0x20, 0x42, 0x31, 0x34, 0x30, 0x55, 0x41, 0x4B,  //  B140UAK
                            /* 00E8 */  0x30, 0x31, 0x2E, 0x33, 0x3C, 0x2F, 0x50, 0x61,  // 01.3</Pa
                            /* 00F0 */  0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72,  // nelDescr
                            /* 00F8 */  0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // iption>.
                            /* 0100 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0108 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0110 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0120 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 0128 */  0x64, 0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20,  // d='EDID 
                            /* 0130 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72,  // Configur
                            /* 0138 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A,  // ation'>.
                            /* 0140 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0150 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E,  //     <Man
                            /* 0168 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0170 */  0x49, 0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30,  // ID>0xAF0
                            /* 0178 */  0x36, 0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // 6</Manuf
                            /* 0180 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44,  // actureID
                            /* 0188 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 01B0 */  0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F,  // roductCo
                            /* 01B8 */  0x64, 0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C,  // de>0x2D<
                            /* 01C0 */  0x2F, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74,  // /Product
                            /* 01C8 */  0x43, 0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Code>.  
                            /* 01D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61,  //   <Seria
                            /* 01F8 */  0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E,  // lNumber>
                            /* 0200 */  0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31,  // 0x000001
                            /* 0208 */  0x3C, 0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  // </Serial
                            /* 0210 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A,  // Number>.
                            /* 0218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0228 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65,  //     <Wee
                            /* 0240 */  0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // kofManuf
                            /* 0248 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30,  // acture>0
                            /* 0250 */  0x78, 0x31, 0x41, 0x3C, 0x2F, 0x57, 0x65, 0x65,  // x1A</Wee
                            /* 0258 */  0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // kofManuf
                            /* 0260 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A,  // acture>.
                            /* 0268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0278 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61,  //     <Yea
                            /* 0290 */  0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // rofManuf
                            /* 0298 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30,  // acture>0
                            /* 02A0 */  0x78, 0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61,  // x1B</Yea
                            /* 02A8 */  0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // rofManuf
                            /* 02B0 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A,  // acture>.
                            /* 02B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 02E0 */  0x44, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // DVersion
                            /* 02E8 */  0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44,  // >1</EDID
                            /* 02F0 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 02F8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0300 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0308 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 0320 */  0x49, 0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,  // IDRevisi
                            /* 0328 */  0x6F, 0x6E, 0x3E, 0x34, 0x3C, 0x2F, 0x45, 0x44,  // on>4</ED
                            /* 0330 */  0x49, 0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,  // IDRevisi
                            /* 0338 */  0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // on>.    
                            /* 0340 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0348 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0350 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x3C, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E,  // <VideoIn
                            /* 0368 */  0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E,  // putDefin
                            /* 0370 */  0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78,  // ition>0x
                            /* 0378 */  0x41, 0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65,  // A5</Vide
                            /* 0380 */  0x6F, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65,  // oInputDe
                            /* 0388 */  0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E,  // finition
                            /* 0390 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0398 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 03B8 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 03C0 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 03C8 */  0x69, 0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44,  // ize>0x1D
                            /* 03D0 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 03D8 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // ntalScre
                            /* 03E0 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A,  // enSize>.
                            /* 03E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0410 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0418 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0420 */  0x30, 0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // 0x10</Ve
                            /* 0428 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0430 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0438 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                            /* 0460 */  0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72,  // isplayTr
                            /* 0468 */  0x61, 0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68,  // ansferCh
                            /* 0470 */  0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,  // aracteri
                            /* 0478 */  0x73, 0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78,  // stics>0x
                            /* 0480 */  0x37, 0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70,  // 78</Disp
                            /* 0488 */  0x6C, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73,  // layTrans
                            /* 0490 */  0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61,  // ferChara
                            /* 0498 */  0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,  // cteristi
                            /* 04A0 */  0x63, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // cs>.    
                            /* 04A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x3C, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,  // <Feature
                            /* 04D0 */  0x53, 0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E,  // Support>
                            /* 04D8 */  0x30, 0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61,  // 0x2</Fea
                            /* 04E0 */  0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70,  // tureSupp
                            /* 04E8 */  0x6F, 0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ort>.   
                            /* 04F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0500 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72,  //  <Red.Gr
                            /* 0518 */  0x65, 0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E,  // eenBits>
                            /* 0520 */  0x30, 0x78, 0x41, 0x34, 0x3C, 0x2F, 0x52, 0x65,  // 0xA4</Re
                            /* 0528 */  0x64, 0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42,  // d.GreenB
                            /* 0530 */  0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // its>.   
                            /* 0538 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0540 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0548 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57,  //  <Blue.W
                            /* 0560 */  0x68, 0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73,  // hiteBits
                            /* 0568 */  0x3E, 0x30, 0x78, 0x31, 0x35, 0x3C, 0x2F, 0x42,  // >0x15</B
                            /* 0570 */  0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74,  // lue.Whit
                            /* 0578 */  0x65, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20,  // eBits>. 
                            /* 0580 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0588 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0590 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58,  //    <RedX
                            /* 05A8 */  0x3E, 0x30, 0x78, 0x39, 0x45, 0x3C, 0x2F, 0x52,  // >0x9E</R
                            /* 05B0 */  0x65, 0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // edX>.   
                            /* 05B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30,  //  <RedY>0
                            /* 05E0 */  0x78, 0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // x55</Red
                            /* 05E8 */  0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // Y>.     
                            /* 05F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0610 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30,  // GreenX>0
                            /* 0618 */  0x78, 0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65,  // x4E</Gre
                            /* 0620 */  0x65, 0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // enX>.   
                            /* 0628 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59,  //  <GreenY
                            /* 0650 */  0x3E, 0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47,  // >0x9B</G
                            /* 0658 */  0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20,  // reenY>. 
                            /* 0660 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0668 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0670 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65,  //    <Blue
                            /* 0688 */  0x58, 0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F,  // X>0x26</
                            /* 0690 */  0x42, 0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20,  // BlueX>. 
                            /* 0698 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65,  //    <Blue
                            /* 06C0 */  0x59, 0x3E, 0x30, 0x78, 0x30, 0x46, 0x3C, 0x2F,  // Y>0x0F</
                            /* 06C8 */  0x42, 0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20,  // BlueY>. 
                            /* 06D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74,  //    <Whit
                            /* 06F8 */  0x65, 0x58, 0x3E, 0x30, 0x78, 0x35, 0x30, 0x3C,  // eX>0x50<
                            /* 0700 */  0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E,  // /WhiteX>
                            /* 0708 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0710 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0718 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68,  //      <Wh
                            /* 0730 */  0x69, 0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35,  // iteY>0x5
                            /* 0738 */  0x34, 0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65,  // 4</White
                            /* 0740 */  0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // Y>.     
                            /* 0748 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0750 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0758 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0768 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 0770 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 0778 */  0x67, 0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C,  // gsI>0x0<
                            /* 0780 */  0x2F, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69,  // /Establi
                            /* 0788 */  0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69,  // shedTimi
                            /* 0790 */  0x6E, 0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20,  // ngsI>.  
                            /* 0798 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62,  //   <Estab
                            /* 07C0 */  0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69,  // lishedTi
                            /* 07C8 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E,  // mingsII>
                            /* 07D0 */  0x30, 0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74,  // 0x0</Est
                            /* 07D8 */  0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64,  // ablished
                            /* 07E0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49,  // TimingsI
                            /* 07E8 */  0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // I>.     
                            /* 07F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0810 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0818 */  0x75, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69,  // uresTimi
                            /* 0820 */  0x6E, 0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // ng>0x0</
                            /* 0828 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0830 */  0x75, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69,  // uresTimi
                            /* 0838 */  0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ng>.    
                            /* 0840 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0848 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0850 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 0868 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 0870 */  0x31, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 1/>.    
                            /* 0878 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0880 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 08A0 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 08A8 */  0x32, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 2/>.    
                            /* 08B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 08D8 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 08E0 */  0x33, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 3/>.    
                            /* 08E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 0910 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 0918 */  0x34, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 4/>.    
                            /* 0920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0930 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 0948 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 0950 */  0x35, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 5/>.    
                            /* 0958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 0980 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 0988 */  0x36, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 6/>.    
                            /* 0990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 09B8 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 09C0 */  0x37, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 7/>.    
                            /* 09C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x3C, 0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54,  // <SignalT
                            /* 09F0 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74,  // imingInt
                            /* 09F8 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E,  // erface/>
                            /* 0A00 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A20 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 0A28 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A48 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 0A50 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74,  //  id='Det
                            /* 0A58 */  0x61, 0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69,  // ailed Ti
                            /* 0A60 */  0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20,  // ming'>. 
                            /* 0A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A88 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0A90 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 0A98 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0AA0 */  0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x31, 0x32, 0x35,  // MM>0x125
                            /* 0AA8 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0AB0 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // ntalScre
                            /* 0AB8 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D,  // enSizeMM
                            /* 0AC0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0AC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0AE8 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0AF0 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0AF8 */  0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x58, 0x41, 0x32,  // eMM>0XA2
                            /* 0B00 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0B08 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B10 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72,  //     <Hor
                            /* 0B40 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56,  // izontalV
                            /* 0B48 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0B50 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0B58 */  0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x30, 0x3C,  // eMM>0x0<
                            /* 0B60 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0B68 */  0x74, 0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69,  // talVerti
                            /* 0B70 */  0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // calScree
                            /* 0B78 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0B80 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0B88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA0 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 0BA8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BC8 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 0BD0 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74,  //  id='Act
                            /* 0BD8 */  0x69, 0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69,  // ive Timi
                            /* 0BE0 */  0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ng'>.   
                            /* 0BE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0C08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0C10 */  0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E,  // lActive>
                            /* 0C18 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0C20 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74,  // ontalAct
                            /* 0C28 */  0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ive>.   
                            /* 0C30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0C50 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0C58 */  0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F,  // lFrontPo
                            /* 0C60 */  0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // rch>0</H
                            /* 0C68 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0C70 */  0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F,  // lFrontPo
                            /* 0C78 */  0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // rch>.   
                            /* 0C80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0CA0 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0CA8 */  0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72,  // lBackPor
                            /* 0CB0 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // h>.     
                            /* 0CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72,  //     <Hor
                            /* 0CF0 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53,  // izontalS
                            /* 0CF8 */  0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65,  // yncPulse
                            /* 0D00 */  0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // >0</Hori
                            /* 0D08 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79,  // zontalSy
                            /* 0D10 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0D18 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0D20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0D40 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D48 */  0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C,  // cSkew>0<
                            /* 0D50 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0D58 */  0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53,  // talSyncS
                            /* 0D60 */  0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // kew>.   
                            /* 0D68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0D88 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D90 */  0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72,  // lLeftBor
                            /* 0D98 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // der>0</H
                            /* 0DA0 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0DA8 */  0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72,  // lLeftBor
                            /* 0DB0 */  0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // der>.   
                            /* 0DB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0DD8 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0DE0 */  0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6F,  // lRightBo
                            /* 0DE8 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F,  // rder>0</
                            /* 0DF0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0DF8 */  0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42,  // alRightB
                            /* 0E00 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 0E08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0E30 */  0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E,  // lActive>
                            /* 0E38 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0E40 */  0x63, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // calActiv
                            /* 0E48 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0E50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0E70 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F,  // ticalFro
                            /* 0E78 */  0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ntPorch>
                            /* 0E80 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0E88 */  0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // calFront
                            /* 0E90 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20,  // Porch>. 
                            /* 0E98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0EC0 */  0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72,  // lBackPor
                            /* 0EC8 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // ch>0</Ve
                            /* 0ED0 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61,  // rticalBa
                            /* 0ED8 */  0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ckPorch>
                            /* 0EE0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0EE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0F08 */  0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50,  // calSyncP
                            /* 0F10 */  0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ulse>0</
                            /* 0F18 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F20 */  0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73,  // SyncPuls
                            /* 0F28 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0F50 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ticalSyn
                            /* 0F58 */  0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C,  // cSkew>0<
                            /* 0F60 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0F68 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65,  // lSyncSke
                            /* 0F70 */  0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // w>.     
                            /* 0F78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0F98 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70,  // ticalTop
                            /* 0FA0 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0FA8 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0FB0 */  0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72,  // alTopBor
                            /* 0FB8 */  0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // der>.   
                            /* 0FC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0FE0 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42,  // erticalB
                            /* 0FE8 */  0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72,  // ottomBor
                            /* 0FF0 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // der>0</V
                            /* 0FF8 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42,  // erticalB
                            /* 1000 */  0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72,  // ottomBor
                            /* 1008 */  0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // der>.   
                            /* 1010 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49,  //       <I
                            /* 1030 */  0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,  // nvertDat
                            /* 1038 */  0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // aPolarit
                            /* 1040 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 1048 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44,  // /InvertD
                            /* 1050 */  0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // ataPolar
                            /* 1058 */  0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ity>.   
                            /* 1060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49,  //       <I
                            /* 1080 */  0x6E, 0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79,  // nvertVsy
                            /* 1088 */  0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69, 0x72,  // ncPolair
                            /* 1090 */  0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65,  // ty>False
                            /* 1098 */  0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74,  // </Invert
                            /* 10A0 */  0x56, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C,  // VsyncPol
                            /* 10A8 */  0x61, 0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // airty>. 
                            /* 10B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D0 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48,  // <InvertH
                            /* 10D8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10E0 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C,  // rity>Fal
                            /* 10E8 */  0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65,  // se</Inve
                            /* 10F0 */  0x72, 0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50,  // rtHsyncP
                            /* 10F8 */  0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E,  // olarity>
                            /* 1100 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1108 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1110 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1118 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1120 */  0x20, 0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65,  //   <Borde
                            /* 1128 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30,  // rColor>0
                            /* 1130 */  0x78, 0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64,  // x0</Bord
                            /* 1138 */  0x65, 0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E,  // erColor>
                            /* 1140 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1150 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 1168 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1180 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1188 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 1190 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x44, 0x69, 0x73,  //  id='Dis
                            /* 1198 */  0x70, 0x6C, 0x61, 0x79, 0x20, 0x49, 0x6E, 0x74,  // play Int
                            /* 11A0 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x27, 0x3E,  // erface'>
                            /* 11A8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 11B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11C8 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72,  //   <Inter
                            /* 11D0 */  0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,  // faceType
                            /* 11D8 */  0x3E, 0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // >18</Int
                            /* 11E0 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,  // erfaceTy
                            /* 11E8 */  0x70, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // pe>.    
                            /* 11F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 1210 */  0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43,  // terfaceC
                            /* 1218 */  0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D,  // olorForm
                            /* 1220 */  0x61, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49, 0x6E,  // at>3</In
                            /* 1228 */  0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43,  // terfaceC
                            /* 1230 */  0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72, 0x6D,  // olorForm
                            /* 1238 */  0x61, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // at>.    
                            /* 1240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1250 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 1260 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77,  // splayPow
                            /* 1268 */  0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67,  // erSaving
                            /* 1270 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1278 */  0x3E, 0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70,  // >8</Disp
                            /* 1280 */  0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77, 0x65, 0x72,  // layPower
                            /* 1288 */  0x53, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x4F, 0x76,  // SavingOv
                            /* 1290 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x3E, 0x0A,  // erride>.
                            /* 1298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 12C0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 12E8 */  0x69, 0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20,  // id='eDP 
                            /* 12F0 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 12F8 */  0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // e'>.    
                            /* 1300 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1308 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1320 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1328 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78,  // hRate>0x
                            /* 1330 */  0x33, 0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F,  // 3C0000</
                            /* 1338 */  0x45, 0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65,  // EDPRefre
                            /* 1340 */  0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A,  // shRate>.
                            /* 1348 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1350 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x54, 0x72,  //   <EDPTr
                            /* 1370 */  0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30,  // aining>0
                            /* 1378 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61,  // </EDPTra
                            /* 1380 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20,  // ining>. 
                            /* 1388 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1390 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1398 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13A8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C,  //  <EDPVol
                            /* 13B0 */  0x74, 0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E,  // tageSwin
                            /* 13B8 */  0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30,  // gLevel>0
                            /* 13C0 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x56, 0x6F, 0x6C,  // </EDPVol
                            /* 13C8 */  0x74, 0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x6E,  // tageSwin
                            /* 13D0 */  0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A,  // gLevel>.
                            /* 13D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13F8 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x72,  //   <EDPPr
                            /* 1400 */  0x65, 0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69,  // eemphasi
                            /* 1408 */  0x73, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x30,  // sLevel>0
                            /* 1410 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x50, 0x72, 0x65,  // </EDPPre
                            /* 1418 */  0x65, 0x6D, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,  // emphasis
                            /* 1420 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20,  // Level>. 
                            /* 1428 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1430 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1438 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x44, 0x50, 0x43,  //  <EDPDPC
                            /* 1450 */  0x44, 0x52, 0x65, 0x61, 0x64, 0x3E, 0x46, 0x61,  // DRead>Fa
                            /* 1458 */  0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // lse</EDP
                            /* 1460 */  0x44, 0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64,  // DPCDRead
                            /* 1468 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1478 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1480 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1490 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x61, 0x64,  // EDIDRead
                            /* 1498 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 14A0 */  0x45, 0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52,  // EDPEDIDR
                            /* 14A8 */  0x65, 0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ead>.   
                            /* 14B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 14D0 */  0x45, 0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65,  // EDPNumbe
                            /* 14D8 */  0x72, 0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73,  // rOfLanes
                            /* 14E0 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4E,  // >2</EDPN
                            /* 14E8 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C,  // umberOfL
                            /* 14F0 */  0x61, 0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // anes>.  
                            /* 14F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1500 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C,  // <EDPMaxL
                            /* 1520 */  0x69, 0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E,  // inkRate>
                            /* 1528 */  0x38, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 8100</ED
                            /* 1530 */  0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B,  // PMaxLink
                            /* 1538 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Rate>.  
                            /* 1540 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1548 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x3C, 0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41,  // <EDPHPDA
                            /* 1568 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77,  // ctiveLow
                            /* 1570 */  0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45,  // >True</E
                            /* 1578 */  0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74,  // DPHPDAct
                            /* 1580 */  0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A,  // iveLow>.
                            /* 1588 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1590 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15A8 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F,  //   <EDPPo
                            /* 15B0 */  0x77, 0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69,  // werUpWai
                            /* 15B8 */  0x74, 0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C,  // tInMs>0<
                            /* 15C0 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65,  // /EDPPowe
                            /* 15C8 */  0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49,  // rUpWaitI
                            /* 15D0 */  0x6E, 0x4D, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nMs>.   
                            /* 15D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 15F8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75,  // EDPMaxAu
                            /* 1600 */  0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x32,  // xRetry>2
                            /* 1608 */  0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D, 0x61,  // 0</EDPMa
                            /* 1610 */  0x78, 0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72,  // xAuxRetr
                            /* 1618 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1628 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1640 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1648 */  0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x30, 0x30,  // eEDID>00
                            /* 1650 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1658 */  0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20,  // F FF FF 
                            /* 1660 */  0x46, 0x46, 0x20, 0x30, 0x30, 0x20, 0x33, 0x30,  // FF 00 30
                            /* 1668 */  0x20, 0x41, 0x45, 0x20, 0x33, 0x44, 0x20, 0x34,  //  AE 3D 4
                            /* 1670 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1678 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1680 */  0x20, 0x32, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  21 01 0
                            /* 1688 */  0x34, 0x20, 0x41, 0x35, 0x20, 0x31, 0x45, 0x20,  // 4 A5 1E 
                            /* 1690 */  0x31, 0x33, 0x20, 0x37, 0x38, 0x20, 0x30, 0x32,  // 13 78 02
                            /* 1698 */  0x20, 0x44, 0x37, 0x20, 0x32, 0x35, 0x20, 0x39,  //  D7 25 9
                            /* 16A0 */  0x34, 0x20, 0x35, 0x38, 0x20, 0x35, 0x41, 0x20,  // 4 58 5A 
                            /* 16A8 */  0x39, 0x33, 0x20, 0x32, 0x39, 0x20, 0x31, 0x44,  // 93 29 1D
                            /* 16B0 */  0x20, 0x35, 0x30, 0x20, 0x35, 0x34, 0x20, 0x30,  //  50 54 0
                            /* 16B8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 16C0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16C8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16D0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16D8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E0 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16E8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F0 */  0x32, 0x36, 0x20, 0x33, 0x44, 0x20, 0x38, 0x30,  // 26 3D 80
                            /* 16F8 */  0x20, 0x42, 0x38, 0x20, 0x37, 0x30, 0x20, 0x42,  //  B8 70 B
                            /* 1700 */  0x30, 0x20, 0x32, 0x38, 0x20, 0x34, 0x30, 0x20,  // 0 28 40 
                            /* 1708 */  0x31, 0x30, 0x20, 0x31, 0x30, 0x20, 0x33, 0x45,  // 10 10 3E
                            /* 1710 */  0x20, 0x30, 0x30, 0x20, 0x32, 0x45, 0x20, 0x42,  //  00 2E B
                            /* 1718 */  0x43, 0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20,  // C 10 00 
                            /* 1720 */  0x30, 0x30, 0x20, 0x31, 0x38, 0x20, 0x30, 0x30,  // 00 18 00
                            /* 1728 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1730 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1738 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1740 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1748 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1750 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1758 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1760 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x46, 0x20,  // 0 00 0F 
                            /* 1768 */  0x30, 0x30, 0x20, 0x44, 0x31, 0x20, 0x30, 0x41,  // 00 D1 0A
                            /* 1770 */  0x20, 0x33, 0x43, 0x20, 0x44, 0x31, 0x20, 0x30,  //  3C D1 0
                            /* 1778 */  0x41, 0x20, 0x33, 0x43, 0x20, 0x32, 0x38, 0x20,  // A 3C 28 
                            /* 1780 */  0x30, 0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x36,  // 0A 00 06
                            /* 1788 */  0x20, 0x41, 0x46, 0x20, 0x41, 0x43, 0x20, 0x33,  //  AF AC 3
                            /* 1790 */  0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 7 00 00 
                            /* 1798 */  0x30, 0x30, 0x20, 0x46, 0x45, 0x20, 0x30, 0x30,  // 00 FE 00
                            /* 17A0 */  0x20, 0x34, 0x32, 0x20, 0x33, 0x31, 0x20, 0x33,  //  42 31 3
                            /* 17A8 */  0x34, 0x20, 0x33, 0x30, 0x20, 0x35, 0x35, 0x20,  // 4 30 55 
                            /* 17B0 */  0x34, 0x31, 0x20, 0x34, 0x42, 0x20, 0x33, 0x30,  // 41 4B 30
                            /* 17B8 */  0x20, 0x33, 0x31, 0x20, 0x32, 0x45, 0x20, 0x33,  //  31 2E 3
                            /* 17C0 */  0x33, 0x20, 0x32, 0x30, 0x20, 0x30, 0x41, 0x20,  // 3 20 0A 
                            /* 17C8 */  0x30, 0x30, 0x20, 0x32, 0x41, 0x3C, 0x2F, 0x45,  // 00 2A</E
                            /* 17D0 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 17D8 */  0x64, 0x65, 0x45, 0x44, 0x49, 0x44, 0x3E, 0x0A,  // deEDID>.
                            /* 17E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1800 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76,  //   <EDPOv
                            /* 1808 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50,  // errideDP
                            /* 1810 */  0x43, 0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x31,  // CDCaps>1
                            /* 1818 */  0x32, 0x20, 0x30, 0x41, 0x20, 0x43, 0x32, 0x20,  // 2 0A C2 
                            /* 1820 */  0x34, 0x31, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 41 00 00
                            /* 1828 */  0x20, 0x30, 0x31, 0x20, 0x43, 0x30, 0x20, 0x30,  //  01 C0 0
                            /* 1830 */  0x32, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 2 00 00 
                            /* 1838 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x42,  // 00 00 0B
                            /* 1840 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41,  //  00 00 A
                            /* 1848 */  0x34, 0x20, 0x31, 0x46, 0x20, 0x33, 0x30, 0x20,  // 4 1F 30 
                            /* 1850 */  0x32, 0x41, 0x20, 0x37, 0x36, 0x20, 0x32, 0x46,  // 2A 76 2F
                            /* 1858 */  0x20, 0x42, 0x43, 0x20, 0x33, 0x34, 0x20, 0x34,  //  BC 34 4
                            /* 1860 */  0x38, 0x20, 0x33, 0x46, 0x20, 0x44, 0x34, 0x20,  // 8 3F D4 
                            /* 1868 */  0x34, 0x39, 0x20, 0x36, 0x30, 0x20, 0x35, 0x34,  // 49 60 54
                            /* 1870 */  0x20, 0x37, 0x38, 0x20, 0x36, 0x39, 0x3C, 0x2F,  //  78 69</
                            /* 1878 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1880 */  0x69, 0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43,  // ideDPCDC
                            /* 1888 */  0x61, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // aps>.   
                            /* 1890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 18B0 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 18B8 */  0x69, 0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53,  // ideDPCDS
                            /* 18C0 */  0x74, 0x61, 0x74, 0x75, 0x73, 0x3E, 0x30, 0x31,  // tatus>01
                            /* 18C8 */  0x20, 0x30, 0x30, 0x20, 0x37, 0x37, 0x20, 0x37,  //  00 77 7
                            /* 18D0 */  0x37, 0x20, 0x30, 0x31, 0x20, 0x30, 0x30, 0x20,  // 7 01 00 
                            /* 18D8 */  0x34, 0x34, 0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45,  // 44 44</E
                            /* 18E0 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 18E8 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74,  // deDPCDSt
                            /* 18F0 */  0x61, 0x74, 0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // atus>.  
                            /* 18F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // <EDPOver
                            /* 1920 */  0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65,  // rideMode
                            /* 1928 */  0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F,  // >1</EDPO
                            /* 1930 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D,  // verrideM
                            /* 1938 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 1940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1960 */  0x45, 0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // EDPEnabl
                            /* 1968 */  0x65, 0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F,  // eSSC>1</
                            /* 1970 */  0x45, 0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // EDPEnabl
                            /* 1978 */  0x65, 0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20,  // eSSC>.  
                            /* 1980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50,  // <EDPMaxP
                            /* 19A8 */  0x73, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F,  // srVersio
                            /* 19B0 */  0x6E, 0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // n>2</EDP
                            /* 19B8 */  0x4D, 0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65,  // MaxPsrVe
                            /* 19C0 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // rsion>. 
                            /* 19C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72,  //  <EDPPsr
                            /* 19F0 */  0x54, 0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67,  // Training
                            /* 19F8 */  0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E,  // Duration
                            /* 1A00 */  0x3E, 0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // >2500</E
                            /* 1A08 */  0x44, 0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61,  // DPPsrTra
                            /* 1A10 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72,  // iningDur
                            /* 1A18 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ation>. 
                            /* 1A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1A40 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 1A70 */  0x64, 0x3D, 0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // d='Backl
                            /* 1A78 */  0x69, 0x67, 0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E,  // ight Con
                            /* 1A80 */  0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,  // figurati
                            /* 1A88 */  0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // on'>.   
                            /* 1A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1AB0 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1AB8 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C,  // tType>1<
                            /* 1AC0 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1AC8 */  0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // htType>.
                            /* 1AD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF0 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1AF8 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63,  // ightPmic
                            /* 1B00 */  0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54,  // ControlT
                            /* 1B08 */  0x79, 0x70, 0x65, 0x3E, 0x33, 0x3C, 0x2F, 0x42,  // ype>3</B
                            /* 1B10 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1B18 */  0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74,  // PmicCont
                            /* 1B20 */  0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E,  // rolType>
                            /* 1B28 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1B30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B48 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1B50 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49,  // lightPMI
                            /* 1B58 */  0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65, 0x6C,  // CBankSel
                            /* 1B60 */  0x65, 0x63, 0x74, 0x3E, 0x30, 0x3C, 0x2F, 0x42,  // ect>0</B
                            /* 1B68 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1B70 */  0x50, 0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B,  // PMICBank
                            /* 1B78 */  0x53, 0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x0A,  // Select>.
                            /* 1B80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA0 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1BA8 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63,  // ightPmic
                            /* 1BB0 */  0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69,  // PWMSizei
                            /* 1BB8 */  0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x31, 0x32,  // nBits>12
                            /* 1BC0 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1BC8 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1BD0 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1BD8 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 1BE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1C08 */  0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57,  // htPMICPW
                            /* 1C10 */  0x4D, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E,  // MFrequen
                            /* 1C18 */  0x63, 0x79, 0x3E, 0x39, 0x39, 0x30, 0x3C, 0x2F,  // cy>990</
                            /* 1C20 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1C28 */  0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D,  // tPMICPWM
                            /* 1C30 */  0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63,  // Frequenc
                            /* 1C38 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1C40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1C60 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1C68 */  0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C,  // micPWMGl
                            /* 1C70 */  0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F,  // itchRemo
                            /* 1C78 */  0x76, 0x61, 0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65,  // val>True
                            /* 1C80 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1C88 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1C90 */  0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74, 0x63, 0x68,  // WMGlitch
                            /* 1C98 */  0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E,  // Removal>
                            /* 1CA0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1CC8 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65,  // lightSte
                            /* 1CD0 */  0x70, 0x73, 0x3E, 0x31, 0x30, 0x30, 0x3C, 0x2F,  // ps>100</
                            /* 1CD8 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1CE0 */  0x74, 0x53, 0x74, 0x65, 0x70, 0x73, 0x3E, 0x0A,  // tSteps>.
                            /* 1CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1D10 */  0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x61,  // ightDefa
                            /* 1D18 */  0x75, 0x6C, 0x74, 0x3E, 0x38, 0x30, 0x3C, 0x2F,  // ult>80</
                            /* 1D20 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1D28 */  0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6C, 0x74,  // tDefault
                            /* 1D30 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1D58 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F,  // klightLo
                            /* 1D60 */  0x77, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x3E, 0x34,  // wPower>4
                            /* 1D68 */  0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // 0</Backl
                            /* 1D70 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F, 0x77, 0x50,  // ightLowP
                            /* 1D78 */  0x6F, 0x77, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // ower>.  
                            /* 1D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65,  // <PMIPowe
                            /* 1DA8 */  0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E, 0x75, 0x6D,  // rPmicNum
                            /* 1DB0 */  0x3E, 0x32, 0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50,  // >2</PMIP
                            /* 1DB8 */  0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D, 0x69, 0x63,  // owerPmic
                            /* 1DC0 */  0x4E, 0x75, 0x6D, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // Num>.   
                            /* 1DC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1DE8 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1DF0 */  0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65,  // PmicMode
                            /* 1DF8 */  0x6C, 0x3E, 0x30, 0x78, 0x32, 0x46, 0x3C, 0x2F,  // l>0x2F</
                            /* 1E00 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E08 */  0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64, 0x65,  // PmicMode
                            /* 1E10 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 1E18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1E38 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1E40 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F,  // nfig>0</
                            /* 1E48 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E50 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A,  // Config>.
                            /* 1E58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 1E80 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E,  // tnessMin
                            /* 1E88 */  0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63,  // Luminanc
                            /* 1E90 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69,  // e>0</Bri
                            /* 1E98 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D,  // ghtnessM
                            /* 1EA0 */  0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61,  // inLumina
                            /* 1EA8 */  0x6E, 0x63, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // nce>.   
                            /* 1EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1ED0 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1ED8 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1EE0 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30,  // inance>0
                            /* 1EE8 */  0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // </Bright
                            /* 1EF0 */  0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C,  // nessMaxL
                            /* 1EF8 */  0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65,  // uminance
                            /* 1F00 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72, 0x69,  //     <Bri
                            /* 1F28 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x52,  // ghtnessR
                            /* 1F30 */  0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65,  // angeLeve
                            /* 1F38 */  0x6C, 0x30, 0x3E, 0x34, 0x30, 0x30, 0x30, 0x20,  // l0>4000 
                            /* 1F40 */  0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x34,  // 400000 4
                            /* 1F48 */  0x30, 0x30, 0x30, 0x20, 0x32, 0x3C, 0x2F, 0x42,  // 000 2</B
                            /* 1F50 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1F58 */  0x73, 0x52, 0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65,  // sRangeLe
                            /* 1F60 */  0x76, 0x65, 0x6C, 0x30, 0x3E, 0x0A, 0x20, 0x20,  // vel0>.  
                            /* 1F68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x3C, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76,  // <Adaptiv
                            /* 1F90 */  0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // eBrightn
                            /* 1F98 */  0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75,  // essFeatu
                            /* 1FA0 */  0x72, 0x65, 0x3E, 0x31, 0x3C, 0x2F, 0x41, 0x64,  // re>1</Ad
                            /* 1FA8 */  0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72,  // aptiveBr
                            /* 1FB0 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1FB8 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E,  // Feature>
                            /* 1FC0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1FC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C,  //    <CABL
                            /* 1FE8 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x54,  // Enable>T
                            /* 1FF0 */  0x72, 0x75, 0x65, 0x3C, 0x2F, 0x43, 0x41, 0x42,  // rue</CAB
                            /* 1FF8 */  0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E,  // LEnable>
                            /* 2000 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 2008 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2010 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C,  //    <CABL
                            /* 2028 */  0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // MinBackl
                            /* 2030 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x65, 0x76, 0x65,  // ightLeve
                            /* 2038 */  0x6C, 0x3E, 0x30, 0x78, 0x34, 0x62, 0x34, 0x30,  // l>0x4b40
                            /* 2040 */  0x33, 0x32, 0x3C, 0x2F, 0x43, 0x41, 0x42, 0x4C,  // 32</CABL
                            /* 2048 */  0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // MinBackl
                            /* 2050 */  0x69, 0x67, 0x68, 0x74, 0x4C, 0x65, 0x76, 0x65,  // ightLeve
                            /* 2058 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 2060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2078 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 2080 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x00                     //     .
                        })
                        Local2 = PLCB /* \_SB_.GPU0._ROM.PLCB */
                        Break
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Name (PLCC, Buffer (0x20BF)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x5F, 0x54, 0x4C, 0x31, 0x34, 0x30,  // e>_TL140
                            /* 0090 */  0x56, 0x44, 0x58, 0x53, 0x30, 0x31, 0x2E, 0x30,  // VDXS01.0
                            /* 0098 */  0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E,  // </PanelN
                            /* 00A0 */  0x61, 0x6D, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ame>.   
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x61,  //      <Pa
                            /* 00C8 */  0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72,  // nelDescr
                            /* 00D0 */  0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x42,  // iption>B
                            /* 00D8 */  0x4F, 0x45, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70,  // OE 1080p
                            /* 00E0 */  0x20, 0x65, 0x44, 0x50, 0x20, 0x56, 0x69, 0x64,  //  eDP Vid
                            /* 00E8 */  0x65, 0x6F, 0x20, 0x4D, 0x6F, 0x64, 0x65, 0x20,  // eo Mode 
                            /* 00F0 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x28, 0x31, 0x39,  // Panel(19
                            /* 00F8 */  0x32, 0x30, 0x78, 0x31, 0x30, 0x38, 0x30, 0x20,  // 20x1080 
                            /* 0100 */  0x32, 0x34, 0x62, 0x70, 0x70, 0x29, 0x3C, 0x2F,  // 24bpp)</
                            /* 0108 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73,  // PanelDes
                            /* 0110 */  0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E,  // cription
                            /* 0118 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0138 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 0140 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x45, 0x44, 0x49,  //  id='EDI
                            /* 0148 */  0x44, 0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67,  // D Config
                            /* 0150 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27,  // uration'
                            /* 0158 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0180 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0188 */  0x72, 0x65, 0x49, 0x44, 0x3E, 0x30, 0x78, 0x41,  // reID>0xA
                            /* 0190 */  0x46, 0x30, 0x36, 0x3C, 0x2F, 0x4D, 0x61, 0x6E,  // F06</Man
                            /* 0198 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 01A0 */  0x49, 0x44, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ID>.    
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C8 */  0x3C, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74,  // <Product
                            /* 01D0 */  0x43, 0x6F, 0x64, 0x65, 0x3E, 0x30, 0x78, 0x32,  // Code>0x2
                            /* 01D8 */  0x44, 0x3C, 0x2F, 0x50, 0x72, 0x6F, 0x64, 0x75,  // D</Produ
                            /* 01E0 */  0x63, 0x74, 0x43, 0x6F, 0x64, 0x65, 0x3E, 0x0A,  // ctCode>.
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x65, 0x72,  //     <Ser
                            /* 0210 */  0x69, 0x61, 0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65,  // ialNumbe
                            /* 0218 */  0x72, 0x3E, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30,  // r>0x0000
                            /* 0220 */  0x30, 0x31, 0x3C, 0x2F, 0x53, 0x65, 0x72, 0x69,  // 01</Seri
                            /* 0228 */  0x61, 0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // alNumber
                            /* 0230 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x57,  //       <W
                            /* 0258 */  0x65, 0x65, 0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // eekofMan
                            /* 0260 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0268 */  0x3E, 0x30, 0x78, 0x31, 0x41, 0x3C, 0x2F, 0x57,  // >0x1A</W
                            /* 0270 */  0x65, 0x65, 0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // eekofMan
                            /* 0278 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0280 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x59,  //       <Y
                            /* 02A8 */  0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // earofMan
                            /* 02B0 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 02B8 */  0x3E, 0x30, 0x78, 0x31, 0x42, 0x3C, 0x2F, 0x59,  // >0x1B</Y
                            /* 02C0 */  0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // earofMan
                            /* 02C8 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 02D0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 02F8 */  0x44, 0x49, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69,  // DIDVersi
                            /* 0300 */  0x6F, 0x6E, 0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44,  // on>1</ED
                            /* 0308 */  0x49, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F,  // IDVersio
                            /* 0310 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0338 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0340 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x34, 0x3C, 0x2F,  // sion>4</
                            /* 0348 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0350 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0378 */  0x20, 0x20, 0x3C, 0x56, 0x69, 0x64, 0x65, 0x6F,  //   <Video
                            /* 0380 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 0388 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 0390 */  0x30, 0x78, 0x41, 0x35, 0x3C, 0x2F, 0x56, 0x69,  // 0xA5</Vi
                            /* 0398 */  0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70, 0x75, 0x74,  // deoInput
                            /* 03A0 */  0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69,  // Definiti
                            /* 03A8 */  0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // on>.    
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03D0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 03D8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03E0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30, 0x78,  // nSize>0x
                            /* 03E8 */  0x31, 0x44, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // 1D</Hori
                            /* 03F0 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 03F8 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0400 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0428 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0430 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0438 */  0x65, 0x3E, 0x30, 0x78, 0x31, 0x30, 0x3C, 0x2F,  // e>0x10</
                            /* 0440 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0448 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0450 */  0x7A, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ze>.    
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0478 */  0x3C, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79,  // <Display
                            /* 0480 */  0x54, 0x72, 0x61, 0x6E, 0x73, 0x66, 0x65, 0x72,  // Transfer
                            /* 0488 */  0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,  // Characte
                            /* 0490 */  0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x3E,  // ristics>
                            /* 0498 */  0x30, 0x78, 0x37, 0x38, 0x3C, 0x2F, 0x44, 0x69,  // 0x78</Di
                            /* 04A0 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 04A8 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 04B0 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 04B8 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // tics>.  
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04E0 */  0x20, 0x20, 0x3C, 0x46, 0x65, 0x61, 0x74, 0x75,  //   <Featu
                            /* 04E8 */  0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F, 0x72,  // reSuppor
                            /* 04F0 */  0x74, 0x3E, 0x30, 0x78, 0x32, 0x3C, 0x2F, 0x46,  // t>0x2</F
                            /* 04F8 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75,  // eatureSu
                            /* 0500 */  0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x0A, 0x20,  // pport>. 
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x2E,  //    <Red.
                            /* 0530 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69, 0x74,  // GreenBit
                            /* 0538 */  0x73, 0x3E, 0x30, 0x78, 0x41, 0x34, 0x3C, 0x2F,  // s>0xA4</
                            /* 0540 */  0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65, 0x65,  // Red.Gree
                            /* 0548 */  0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20,  // nBits>. 
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65,  //    <Blue
                            /* 0578 */  0x2E, 0x57, 0x68, 0x69, 0x74, 0x65, 0x42, 0x69,  // .WhiteBi
                            /* 0580 */  0x74, 0x73, 0x3E, 0x30, 0x78, 0x31, 0x35, 0x3C,  // ts>0x15<
                            /* 0588 */  0x2F, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // /Blue.Wh
                            /* 0590 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0598 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x52, 0x65,  //      <Re
                            /* 05C0 */  0x64, 0x58, 0x3E, 0x30, 0x78, 0x39, 0x45, 0x3C,  // dX>0x9E<
                            /* 05C8 */  0x2F, 0x52, 0x65, 0x64, 0x58, 0x3E, 0x0A, 0x20,  // /RedX>. 
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x59,  //    <RedY
                            /* 05F8 */  0x3E, 0x30, 0x78, 0x35, 0x35, 0x3C, 0x2F, 0x52,  // >0x55</R
                            /* 0600 */  0x65, 0x64, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // edY>.   
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0628 */  0x20, 0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x58,  //  <GreenX
                            /* 0630 */  0x3E, 0x30, 0x78, 0x34, 0x45, 0x3C, 0x2F, 0x47,  // >0x4E</G
                            /* 0638 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x0A, 0x20,  // reenX>. 
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x65, 0x65,  //    <Gree
                            /* 0668 */  0x6E, 0x59, 0x3E, 0x30, 0x78, 0x39, 0x42, 0x3C,  // nY>0x9B<
                            /* 0670 */  0x2F, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // /GreenY>
                            /* 0678 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C,  //      <Bl
                            /* 06A0 */  0x75, 0x65, 0x58, 0x3E, 0x30, 0x78, 0x32, 0x36,  // ueX>0x26
                            /* 06A8 */  0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65, 0x58, 0x3E,  // </BlueX>
                            /* 06B0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C,  //      <Bl
                            /* 06D8 */  0x75, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x30, 0x46,  // ueY>0x0F
                            /* 06E0 */  0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65, 0x59, 0x3E,  // </BlueY>
                            /* 06E8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68,  //      <Wh
                            /* 0710 */  0x69, 0x74, 0x65, 0x58, 0x3E, 0x30, 0x78, 0x35,  // iteX>0x5
                            /* 0718 */  0x30, 0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65,  // 0</White
                            /* 0720 */  0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // X>.     
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0748 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x59, 0x3E, 0x30,  // WhiteY>0
                            /* 0750 */  0x78, 0x35, 0x34, 0x3C, 0x2F, 0x57, 0x68, 0x69,  // x54</Whi
                            /* 0758 */  0x74, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // teY>.   
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0780 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 0788 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 0790 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x30, 0x78,  // ingsI>0x
                            /* 0798 */  0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61, 0x62,  // 0</Estab
                            /* 07A0 */  0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69,  // lishedTi
                            /* 07A8 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x0A,  // mingsI>.
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x73, 0x74,  //     <Est
                            /* 07D8 */  0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64,  // ablished
                            /* 07E0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49,  // TimingsI
                            /* 07E8 */  0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x45,  // I>0x0</E
                            /* 07F0 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 07F8 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0800 */  0x73, 0x49, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // sII>.   
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0828 */  0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  //  <Manufa
                            /* 0830 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 0838 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x78, 0x30,  // ming>0x0
                            /* 0840 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0848 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 0850 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ming>.  
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0878 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0880 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0888 */  0x67, 0x73, 0x31, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs1/>.  
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B0 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 08B8 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 08C0 */  0x67, 0x73, 0x32, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs2/>.  
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E8 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 08F0 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 08F8 */  0x67, 0x73, 0x33, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs3/>.  
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0920 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0928 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0930 */  0x67, 0x73, 0x34, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs4/>.  
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0958 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0960 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0968 */  0x67, 0x73, 0x35, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs5/>.  
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0990 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0998 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 09A0 */  0x67, 0x73, 0x36, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs6/>.  
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C8 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 09D0 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 09D8 */  0x67, 0x73, 0x37, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs7/>.  
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A00 */  0x20, 0x20, 0x3C, 0x53, 0x69, 0x67, 0x6E, 0x61,  //   <Signa
                            /* 0A08 */  0x6C, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x49,  // lTimingI
                            /* 0A10 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 0A18 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 0A40 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 0A68 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x44,  // up id='D
                            /* 0A70 */  0x65, 0x74, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x20,  // etailed 
                            /* 0A78 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E,  // Timing'>
                            /* 0A80 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0AA8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0AB0 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0AB8 */  0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x31,  // zeMM>0x1
                            /* 0AC0 */  0x32, 0x35, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // 25</Hori
                            /* 0AC8 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 0AD0 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0AD8 */  0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // MM>.    
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B00 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0B08 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B10 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x58,  // izeMM>0X
                            /* 0B18 */  0x41, 0x32, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // A2</Vert
                            /* 0B20 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0B28 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D,  // enSizeMM
                            /* 0B30 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0B58 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0B60 */  0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // lVertica
                            /* 0B68 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B70 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x78,  // izeMM>0x
                            /* 0B78 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0B80 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65, 0x72,  // ontalVer
                            /* 0B88 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0B90 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0B98 */  0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // M>.     
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 0BC0 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 0BE8 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x41,  // up id='A
                            /* 0BF0 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x69,  // ctive Ti
                            /* 0BF8 */  0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20,  // ming'>. 
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C20 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0C28 */  0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // talActiv
                            /* 0C30 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // e>0</Hor
                            /* 0C38 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41,  // izontalA
                            /* 0C40 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20,  // ctive>. 
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C68 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0C70 */  0x74, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // talFront
                            /* 0C78 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C,  // Porch>0<
                            /* 0C80 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0C88 */  0x74, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // talFront
                            /* 0C90 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20,  // Porch>. 
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB8 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0CC0 */  0x74, 0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50,  // talBackP
                            /* 0CC8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F,  // orch>0</
                            /* 0CD0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0CD8 */  0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F,  // alBackPo
                            /* 0CE0 */  0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // rch>.   
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0D08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D10 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0D18 */  0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // se>0</Ho
                            /* 0D20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0D28 */  0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73,  // SyncPuls
                            /* 0D30 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72,  //     <Hor
                            /* 0D58 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53,  // izontalS
                            /* 0D60 */  0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E,  // yncSkew>
                            /* 0D68 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D70 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D78 */  0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20,  // cSkew>. 
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DA0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0DA8 */  0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42,  // talLeftB
                            /* 0DB0 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0DB8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0DC0 */  0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42,  // talLeftB
                            /* 0DC8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DF0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0DF8 */  0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74,  // talRight
                            /* 0E00 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0E08 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0E10 */  0x6E, 0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68,  // ntalRigh
                            /* 0E18 */  0x74, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E,  // tBorder>
                            /* 0E20 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E40 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0E48 */  0x63, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // calActiv
                            /* 0E50 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // e>0</Ver
                            /* 0E58 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x41, 0x63, 0x74,  // ticalAct
                            /* 0E60 */  0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ive>.   
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0E88 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x46,  // erticalF
                            /* 0E90 */  0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63,  // rontPorc
                            /* 0E98 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EA0 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F,  // ticalFro
                            /* 0EA8 */  0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ntPorch>
                            /* 0EB0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED0 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0ED8 */  0x63, 0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50,  // calBackP
                            /* 0EE0 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F,  // orch>0</
                            /* 0EE8 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0EF0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EF8 */  0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // h>.     
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0F20 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ticalSyn
                            /* 0F28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30,  // cPulse>0
                            /* 0F30 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0F38 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F40 */  0x6C, 0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // lse>.   
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0F68 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F70 */  0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E,  // yncSkew>
                            /* 0F78 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0F80 */  0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53,  // calSyncS
                            /* 0F88 */  0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // kew>.   
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0FB0 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x54,  // erticalT
                            /* 0FB8 */  0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  // opBorder
                            /* 0FC0 */  0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // >0</Vert
                            /* 0FC8 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FD0 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF8 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 1000 */  0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42,  // lBottomB
                            /* 1008 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 1010 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 1018 */  0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42,  // lBottomB
                            /* 1020 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1048 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44,  // <InvertD
                            /* 1050 */  0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // ataPolar
                            /* 1058 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1060 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1068 */  0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C,  // tDataPol
                            /* 1070 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1098 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // <InvertV
                            /* 10A0 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10A8 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C,  // irty>Fal
                            /* 10B0 */  0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65,  // se</Inve
                            /* 10B8 */  0x72, 0x74, 0x56, 0x73, 0x79, 0x6E, 0x63, 0x50,  // rtVsyncP
                            /* 10C0 */  0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74, 0x79, 0x3E,  // olairty>
                            /* 10C8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E8 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72,  //   <Inver
                            /* 10F0 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 10F8 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x46,  // larity>F
                            /* 1100 */  0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E,  // alse</In
                            /* 1108 */  0x76, 0x65, 0x72, 0x74, 0x48, 0x73, 0x79, 0x6E,  // vertHsyn
                            /* 1110 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // cPolarit
                            /* 1118 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6F, 0x72,  //     <Bor
                            /* 1140 */  0x64, 0x65, 0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72,  // derColor
                            /* 1148 */  0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x42, 0x6F,  // >0x0</Bo
                            /* 1150 */  0x72, 0x64, 0x65, 0x72, 0x43, 0x6F, 0x6C, 0x6F,  // rderColo
                            /* 1158 */  0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // r>.     
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 1180 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 11A8 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x44,  // up id='D
                            /* 11B0 */  0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x20, 0x49,  // isplay I
                            /* 11B8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 11C0 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 11E8 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,  // erfaceTy
                            /* 11F0 */  0x70, 0x65, 0x3E, 0x31, 0x38, 0x3C, 0x2F, 0x49,  // pe>18</I
                            /* 11F8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1200 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Type>.  
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1228 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 1230 */  0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F,  // eColorFo
                            /* 1238 */  0x72, 0x6D, 0x61, 0x74, 0x3E, 0x33, 0x3C, 0x2F,  // rmat>3</
                            /* 1240 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 1248 */  0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F,  // eColorFo
                            /* 1250 */  0x72, 0x6D, 0x61, 0x74, 0x3E, 0x0A, 0x20, 0x20,  // rmat>.  
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1278 */  0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x50,  // DisplayP
                            /* 1280 */  0x6F, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69,  // owerSavi
                            /* 1288 */  0x6E, 0x67, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // ngOverri
                            /* 1290 */  0x64, 0x65, 0x3E, 0x38, 0x3C, 0x2F, 0x44, 0x69,  // de>8</Di
                            /* 1298 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77,  // splayPow
                            /* 12A0 */  0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67,  // erSaving
                            /* 12A8 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 12B0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12D0 */  0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75,  //   </Grou
                            /* 12D8 */  0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // p>.     
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75,  //    <Grou
                            /* 1300 */  0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x65, 0x44,  // p id='eD
                            /* 1308 */  0x50, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  // P Interf
                            /* 1310 */  0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ace'>.  
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1338 */  0x3C, 0x45, 0x44, 0x50, 0x52, 0x65, 0x66, 0x72,  // <EDPRefr
                            /* 1340 */  0x65, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x3E,  // eshRate>
                            /* 1348 */  0x30, 0x78, 0x33, 0x43, 0x30, 0x30, 0x30, 0x30,  // 0x3C0000
                            /* 1350 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x52, 0x65, 0x66,  // </EDPRef
                            /* 1358 */  0x72, 0x65, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65,  // reshRate
                            /* 1360 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1388 */  0x54, 0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67,  // Training
                            /* 1390 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x54,  // >0</EDPT
                            /* 1398 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E,  // raining>
                            /* 13A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x56,  //    <EDPV
                            /* 13C8 */  0x6F, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x53, 0x77,  // oltageSw
                            /* 13D0 */  0x69, 0x6E, 0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // ingLevel
                            /* 13D8 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x56,  // >0</EDPV
                            /* 13E0 */  0x6F, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x53, 0x77,  // oltageSw
                            /* 13E8 */  0x69, 0x6E, 0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // ingLevel
                            /* 13F0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1418 */  0x50, 0x72, 0x65, 0x65, 0x6D, 0x70, 0x68, 0x61,  // Preempha
                            /* 1420 */  0x73, 0x69, 0x73, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // sisLevel
                            /* 1428 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x50,  // >0</EDPP
                            /* 1430 */  0x72, 0x65, 0x65, 0x6D, 0x70, 0x68, 0x61, 0x73,  // reemphas
                            /* 1438 */  0x69, 0x73, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E,  // isLevel>
                            /* 1440 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x44,  //    <EDPD
                            /* 1468 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1470 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 1478 */  0x44, 0x50, 0x44, 0x50, 0x43, 0x44, 0x52, 0x65,  // DPDPCDRe
                            /* 1480 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14A8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14B0 */  0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65,  // ad>False
                            /* 14B8 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x45, 0x44, 0x49,  // </EDPEDI
                            /* 14C0 */  0x44, 0x52, 0x65, 0x61, 0x64, 0x3E, 0x0A, 0x20,  // DRead>. 
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4E, 0x75, 0x6D,  //  <EDPNum
                            /* 14F0 */  0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61, 0x6E,  // berOfLan
                            /* 14F8 */  0x65, 0x73, 0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44,  // es>2</ED
                            /* 1500 */  0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x4F,  // PNumberO
                            /* 1508 */  0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E, 0x0A,  // fLanes>.
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1530 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61,  //   <EDPMa
                            /* 1538 */  0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52, 0x61, 0x74,  // xLinkRat
                            /* 1540 */  0x65, 0x3E, 0x38, 0x31, 0x30, 0x30, 0x3C, 0x2F,  // e>8100</
                            /* 1548 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1550 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A,  // nkRate>.
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1578 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x48, 0x50,  //   <EDPHP
                            /* 1580 */  0x44, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4C,  // DActiveL
                            /* 1588 */  0x6F, 0x77, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // ow>True<
                            /* 1590 */  0x2F, 0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41,  // /EDPHPDA
                            /* 1598 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77,  // ctiveLow
                            /* 15A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 15C8 */  0x50, 0x6F, 0x77, 0x65, 0x72, 0x55, 0x70, 0x57,  // PowerUpW
                            /* 15D0 */  0x61, 0x69, 0x74, 0x49, 0x6E, 0x4D, 0x73, 0x3E,  // aitInMs>
                            /* 15D8 */  0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x50, 0x6F,  // 0</EDPPo
                            /* 15E0 */  0x77, 0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69,  // werUpWai
                            /* 15E8 */  0x74, 0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x0A, 0x20,  // tInMs>. 
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1610 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  //  <EDPMax
                            /* 1618 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1620 */  0x3E, 0x32, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // >20</EDP
                            /* 1628 */  0x4D, 0x61, 0x78, 0x41, 0x75, 0x78, 0x52, 0x65,  // MaxAuxRe
                            /* 1630 */  0x74, 0x72, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // try>.   
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1658 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1660 */  0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44, 0x3E,  // ideEDID>
                            /* 1668 */  0x30, 0x30, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // 00 FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x46, 0x46, 0x20, 0x30, 0x30, 0x20,  // F FF 00 
                            /* 1680 */  0x33, 0x30, 0x20, 0x41, 0x45, 0x20, 0x33, 0x44,  // 30 AE 3D
                            /* 1688 */  0x20, 0x34, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  40 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x30, 0x30, 0x20, 0x32, 0x31, 0x20, 0x30, 0x31,  // 00 21 01
                            /* 16A0 */  0x20, 0x30, 0x34, 0x20, 0x41, 0x35, 0x20, 0x31,  //  04 A5 1
                            /* 16A8 */  0x45, 0x20, 0x31, 0x33, 0x20, 0x37, 0x38, 0x20,  // E 13 78 
                            /* 16B0 */  0x30, 0x32, 0x20, 0x46, 0x37, 0x20, 0x42, 0x35,  // 02 F7 B5
                            /* 16B8 */  0x20, 0x39, 0x42, 0x20, 0x35, 0x43, 0x20, 0x35,  //  9B 5C 5
                            /* 16C0 */  0x35, 0x20, 0x38, 0x44, 0x20, 0x32, 0x35, 0x20,  // 5 8D 25 
                            /* 16C8 */  0x32, 0x33, 0x20, 0x35, 0x30, 0x20, 0x35, 0x34,  // 23 50 54
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x30, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 0 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1708 */  0x31, 0x20, 0x33, 0x33, 0x20, 0x33, 0x46, 0x20,  // 1 33 3F 
                            /* 1710 */  0x38, 0x30, 0x20, 0x44, 0x43, 0x20, 0x37, 0x30,  // 80 DC 70
                            /* 1718 */  0x20, 0x42, 0x30, 0x20, 0x33, 0x43, 0x20, 0x34,  //  B0 3C 4
                            /* 1720 */  0x30, 0x20, 0x33, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 30 20 
                            /* 1728 */  0x33, 0x36, 0x20, 0x30, 0x30, 0x20, 0x32, 0x45,  // 36 00 2E
                            /* 1730 */  0x20, 0x42, 0x43, 0x20, 0x31, 0x30, 0x20, 0x30,  //  BC 10 0
                            /* 1738 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x31, 0x41, 0x20,  // 0 00 1A 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1750 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1758 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1768 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1770 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1780 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x44, 0x31, 0x20,  // F 00 D1 
                            /* 1788 */  0x30, 0x41, 0x20, 0x33, 0x43, 0x20, 0x44, 0x31,  // 0A 3C D1
                            /* 1790 */  0x20, 0x30, 0x41, 0x20, 0x33, 0x43, 0x20, 0x32,  //  0A 3C 2
                            /* 1798 */  0x38, 0x20, 0x30, 0x41, 0x20, 0x30, 0x30, 0x20,  // 8 0A 00 
                            /* 17A0 */  0x30, 0x39, 0x20, 0x45, 0x35, 0x20, 0x32, 0x36,  // 09 E5 26
                            /* 17A8 */  0x20, 0x30, 0x43, 0x20, 0x30, 0x30, 0x20, 0x30,  //  0C 00 0
                            /* 17B0 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x45, 0x20,  // 0 00 FE 
                            /* 17B8 */  0x30, 0x30, 0x20, 0x34, 0x45, 0x20, 0x35, 0x36,  // 00 4E 56
                            /* 17C0 */  0x20, 0x33, 0x31, 0x20, 0x33, 0x34, 0x20, 0x33,  //  31 34 3
                            /* 17C8 */  0x30, 0x20, 0x35, 0x37, 0x20, 0x35, 0x35, 0x20,  // 0 57 55 
                            /* 17D0 */  0x34, 0x44, 0x20, 0x32, 0x44, 0x20, 0x35, 0x34,  // 4D 2D 54
                            /* 17D8 */  0x20, 0x33, 0x30, 0x20, 0x33, 0x38, 0x20, 0x30,  //  30 38 0
                            /* 17E0 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x46, 0x45, 0x3C,  // A 00 FE<
                            /* 17E8 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 17F0 */  0x72, 0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44,  // rideEDID
                            /* 17F8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1820 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1828 */  0x44, 0x50, 0x43, 0x44, 0x43, 0x61, 0x70, 0x73,  // DPCDCaps
                            /* 1830 */  0x3E, 0x31, 0x32, 0x20, 0x30, 0x41, 0x20, 0x43,  // >12 0A C
                            /* 1838 */  0x32, 0x20, 0x34, 0x31, 0x20, 0x30, 0x30, 0x20,  // 2 41 00 
                            /* 1840 */  0x30, 0x30, 0x20, 0x30, 0x31, 0x20, 0x43, 0x30,  // 00 01 C0
                            /* 1848 */  0x20, 0x30, 0x32, 0x20, 0x30, 0x30, 0x20, 0x30,  //  02 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1858 */  0x30, 0x42, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 0B 00 00
                            /* 1860 */  0x20, 0x41, 0x34, 0x20, 0x31, 0x46, 0x20, 0x33,  //  A4 1F 3
                            /* 1868 */  0x30, 0x20, 0x32, 0x41, 0x20, 0x37, 0x36, 0x20,  // 0 2A 76 
                            /* 1870 */  0x32, 0x46, 0x20, 0x42, 0x43, 0x20, 0x33, 0x34,  // 2F BC 34
                            /* 1878 */  0x20, 0x34, 0x38, 0x20, 0x33, 0x46, 0x20, 0x44,  //  48 3F D
                            /* 1880 */  0x34, 0x20, 0x34, 0x39, 0x20, 0x36, 0x30, 0x20,  // 4 49 60 
                            /* 1888 */  0x35, 0x34, 0x20, 0x37, 0x38, 0x20, 0x36, 0x39,  // 54 78 69
                            /* 1890 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  // </EDPOve
                            /* 1898 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 18A0 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x0A, 0x20,  // DCaps>. 
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 18D0 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 18D8 */  0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E,  // DStatus>
                            /* 18E0 */  0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x37, 0x37,  // 01 00 77
                            /* 18E8 */  0x20, 0x37, 0x37, 0x20, 0x30, 0x31, 0x20, 0x30,  //  77 01 0
                            /* 18F0 */  0x30, 0x20, 0x34, 0x34, 0x20, 0x34, 0x34, 0x3C,  // 0 44 44<
                            /* 18F8 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 1900 */  0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43, 0x44,  // rideDPCD
                            /* 1908 */  0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E, 0x0A,  // Status>.
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1930 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76,  //   <EDPOv
                            /* 1938 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1940 */  0x64, 0x65, 0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44,  // de>1</ED
                            /* 1948 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1950 */  0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // eMode>. 
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1978 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x45, 0x6E, 0x61,  //  <EDPEna
                            /* 1980 */  0x62, 0x6C, 0x65, 0x53, 0x53, 0x43, 0x3E, 0x31,  // bleSSC>1
                            /* 1988 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x45, 0x6E, 0x61,  // </EDPEna
                            /* 1990 */  0x62, 0x6C, 0x65, 0x53, 0x53, 0x43, 0x3E, 0x0A,  // bleSSC>.
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B8 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61,  //   <EDPMa
                            /* 19C0 */  0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72, 0x73,  // xPsrVers
                            /* 19C8 */  0x69, 0x6F, 0x6E, 0x3E, 0x32, 0x3C, 0x2F, 0x45,  // ion>2</E
                            /* 19D0 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73, 0x72,  // DPMaxPsr
                            /* 19D8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 19E0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x50,  //    <EDPP
                            /* 1A08 */  0x73, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6E, 0x69,  // srTraini
                            /* 1A10 */  0x6E, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,  // ngDurati
                            /* 1A18 */  0x6F, 0x6E, 0x3E, 0x32, 0x35, 0x30, 0x30, 0x3C,  // on>2500<
                            /* 1A20 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // /EDPPsrT
                            /* 1A28 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A30 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A38 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A58 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 1A60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A80 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 1A88 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x42, 0x61, 0x63,  //  id='Bac
                            /* 1A90 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x20, 0x43,  // klight C
                            /* 1A98 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 1AA0 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1AD0 */  0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3E,  // ghtType>
                            /* 1AD8 */  0x31, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // 1</Backl
                            /* 1AE0 */  0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65,  // ightType
                            /* 1AE8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1B10 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1B18 */  0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F,  // icContro
                            /* 1B20 */  0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x33, 0x3C,  // lType>3<
                            /* 1B28 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1B30 */  0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F,  // htPmicCo
                            /* 1B38 */  0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70,  // ntrolTyp
                            /* 1B40 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1B68 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B70 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B78 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x30, 0x3C,  // elect>0<
                            /* 1B80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1B88 */  0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x42, 0x61,  // htPMICBa
                            /* 1B90 */  0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65, 0x63, 0x74,  // nkSelect
                            /* 1B98 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1BC0 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1BC8 */  0x69, 0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A,  // icPWMSiz
                            /* 1BD0 */  0x65, 0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E,  // einBits>
                            /* 1BD8 */  0x31, 0x32, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // 12</Back
                            /* 1BE0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1BE8 */  0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65,  // cPWMSize
                            /* 1BF0 */  0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A,  // inBits>.
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C18 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1C20 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1C28 */  0x50, 0x57, 0x4D, 0x46, 0x72, 0x65, 0x71, 0x75,  // PWMFrequ
                            /* 1C30 */  0x65, 0x6E, 0x63, 0x79, 0x3E, 0x39, 0x39, 0x30,  // ency>990
                            /* 1C38 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1C40 */  0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x50,  // ghtPMICP
                            /* 1C48 */  0x57, 0x4D, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,  // WMFreque
                            /* 1C50 */  0x6E, 0x63, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ncy>.   
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1C78 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1C80 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1C88 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1C90 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x54, 0x72,  // moval>Tr
                            /* 1C98 */  0x75, 0x65, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // ue</Back
                            /* 1CA0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1CA8 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1CB0 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1CB8 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1CE0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CE8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x31, 0x30, 0x30,  // teps>100
                            /* 1CF0 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1CF8 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1D00 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1D28 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65,  // klightDe
                            /* 1D30 */  0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x38, 0x30,  // fault>80
                            /* 1D38 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1D40 */  0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,  // ghtDefau
                            /* 1D48 */  0x6C, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // lt>.    
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1D70 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1D78 */  0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77, 0x65, 0x72,  // LowPower
                            /* 1D80 */  0x3E, 0x34, 0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63,  // >40</Bac
                            /* 1D88 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F,  // klightLo
                            /* 1D90 */  0x77, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x3E, 0x0A,  // wPower>.
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB8 */  0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F,  //   <PMIPo
                            /* 1DC0 */  0x77, 0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E,  // werPmicN
                            /* 1DC8 */  0x75, 0x6D, 0x3E, 0x32, 0x3C, 0x2F, 0x50, 0x4D,  // um>2</PM
                            /* 1DD0 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1DD8 */  0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x0A, 0x20,  // icNum>. 
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E00 */  0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  //  <PMIPow
                            /* 1E08 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F,  // erPmicMo
                            /* 1E10 */  0x64, 0x65, 0x6C, 0x3E, 0x30, 0x78, 0x32, 0x46,  // del>0x2F
                            /* 1E18 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1E20 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F,  // erPmicMo
                            /* 1E28 */  0x64, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // del>.   
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1E50 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E58 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x3E, 0x30,  // Config>0
                            /* 1E60 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1E68 */  0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67,  // erConfig
                            /* 1E70 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72, 0x69,  //     <Bri
                            /* 1E98 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D,  // ghtnessM
                            /* 1EA0 */  0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61,  // inLumina
                            /* 1EA8 */  0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x42,  // nce>0</B
                            /* 1EB0 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1EB8 */  0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69,  // sMinLumi
                            /* 1EC0 */  0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A, 0x20,  // nance>. 
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE8 */  0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  //  <Bright
                            /* 1EF0 */  0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C,  // nessMaxL
                            /* 1EF8 */  0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65,  // uminance
                            /* 1F00 */  0x3E, 0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67,  // >0</Brig
                            /* 1F08 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61,  // htnessMa
                            /* 1F10 */  0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E,  // xLuminan
                            /* 1F18 */  0x63, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ce>.    
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1F40 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1F48 */  0x73, 0x52, 0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65,  // sRangeLe
                            /* 1F50 */  0x76, 0x65, 0x6C, 0x30, 0x3E, 0x34, 0x30, 0x30,  // vel0>400
                            /* 1F58 */  0x30, 0x20, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,  // 0 400000
                            /* 1F60 */  0x20, 0x34, 0x30, 0x30, 0x30, 0x20, 0x32, 0x3C,  //  4000 2<
                            /* 1F68 */  0x2F, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // /Brightn
                            /* 1F70 */  0x65, 0x73, 0x73, 0x52, 0x61, 0x6E, 0x67, 0x65,  // essRange
                            /* 1F78 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30, 0x3E, 0x0A,  // Level0>.
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FA0 */  0x20, 0x20, 0x3C, 0x41, 0x64, 0x61, 0x70, 0x74,  //   <Adapt
                            /* 1FA8 */  0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68,  // iveBrigh
                            /* 1FB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61,  // tnessFea
                            /* 1FB8 */  0x74, 0x75, 0x72, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // ture>1</
                            /* 1FC0 */  0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65,  // Adaptive
                            /* 1FC8 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1FD0 */  0x73, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,  // ssFeatur
                            /* 1FD8 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43, 0x41,  //      <CA
                            /* 2000 */  0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // BLEnable
                            /* 2008 */  0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x43,  // >True</C
                            /* 2010 */  0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // ABLEnabl
                            /* 2018 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43, 0x41,  //      <CA
                            /* 2040 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 2048 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 2050 */  0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78, 0x34, 0x62,  // vel>0x4b
                            /* 2058 */  0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F, 0x43, 0x41,  // 4032</CA
                            /* 2060 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 2068 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 2070 */  0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // vel>.   
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47,  //      </G
                            /* 2098 */  0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20,  // roup>.  
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00         //       .
                        })
                        Local2 = PLCC /* \_SB_.GPU0._ROM.PLCC */
                        Break
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Name (PLC6, Buffer (0x20BF)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x5F, 0x54, 0x4C, 0x31, 0x34, 0x30,  // e>_TL140
                            /* 0090 */  0x56, 0x44, 0x58, 0x53, 0x30, 0x31, 0x2E, 0x30,  // VDXS01.0
                            /* 0098 */  0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E,  // </PanelN
                            /* 00A0 */  0x61, 0x6D, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ame>.   
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x61,  //      <Pa
                            /* 00C8 */  0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72,  // nelDescr
                            /* 00D0 */  0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x42,  // iption>B
                            /* 00D8 */  0x4F, 0x45, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70,  // OE 1080p
                            /* 00E0 */  0x20, 0x65, 0x44, 0x50, 0x20, 0x56, 0x69, 0x64,  //  eDP Vid
                            /* 00E8 */  0x65, 0x6F, 0x20, 0x4D, 0x6F, 0x64, 0x65, 0x20,  // eo Mode 
                            /* 00F0 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x28, 0x31, 0x39,  // Panel(19
                            /* 00F8 */  0x32, 0x30, 0x78, 0x31, 0x30, 0x38, 0x30, 0x20,  // 20x1080 
                            /* 0100 */  0x32, 0x34, 0x62, 0x70, 0x70, 0x29, 0x3C, 0x2F,  // 24bpp)</
                            /* 0108 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73,  // PanelDes
                            /* 0110 */  0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E,  // cription
                            /* 0118 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0138 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 0140 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x45, 0x44, 0x49,  //  id='EDI
                            /* 0148 */  0x44, 0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67,  // D Config
                            /* 0150 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27,  // uration'
                            /* 0158 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0180 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0188 */  0x72, 0x65, 0x49, 0x44, 0x3E, 0x30, 0x78, 0x41,  // reID>0xA
                            /* 0190 */  0x46, 0x30, 0x36, 0x3C, 0x2F, 0x4D, 0x61, 0x6E,  // F06</Man
                            /* 0198 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 01A0 */  0x49, 0x44, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ID>.    
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C8 */  0x3C, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74,  // <Product
                            /* 01D0 */  0x43, 0x6F, 0x64, 0x65, 0x3E, 0x30, 0x78, 0x32,  // Code>0x2
                            /* 01D8 */  0x44, 0x3C, 0x2F, 0x50, 0x72, 0x6F, 0x64, 0x75,  // D</Produ
                            /* 01E0 */  0x63, 0x74, 0x43, 0x6F, 0x64, 0x65, 0x3E, 0x0A,  // ctCode>.
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x65, 0x72,  //     <Ser
                            /* 0210 */  0x69, 0x61, 0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65,  // ialNumbe
                            /* 0218 */  0x72, 0x3E, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30,  // r>0x0000
                            /* 0220 */  0x30, 0x31, 0x3C, 0x2F, 0x53, 0x65, 0x72, 0x69,  // 01</Seri
                            /* 0228 */  0x61, 0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,  // alNumber
                            /* 0230 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x57,  //       <W
                            /* 0258 */  0x65, 0x65, 0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // eekofMan
                            /* 0260 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0268 */  0x3E, 0x30, 0x78, 0x31, 0x41, 0x3C, 0x2F, 0x57,  // >0x1A</W
                            /* 0270 */  0x65, 0x65, 0x6B, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // eekofMan
                            /* 0278 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0280 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x59,  //       <Y
                            /* 02A8 */  0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // earofMan
                            /* 02B0 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 02B8 */  0x3E, 0x30, 0x78, 0x31, 0x42, 0x3C, 0x2F, 0x59,  // >0x1B</Y
                            /* 02C0 */  0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D, 0x61, 0x6E,  // earofMan
                            /* 02C8 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 02D0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 02F8 */  0x44, 0x49, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69,  // DIDVersi
                            /* 0300 */  0x6F, 0x6E, 0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44,  // on>1</ED
                            /* 0308 */  0x49, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F,  // IDVersio
                            /* 0310 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0338 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0340 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x34, 0x3C, 0x2F,  // sion>4</
                            /* 0348 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0350 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0378 */  0x20, 0x20, 0x3C, 0x56, 0x69, 0x64, 0x65, 0x6F,  //   <Video
                            /* 0380 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 0388 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 0390 */  0x30, 0x78, 0x41, 0x35, 0x3C, 0x2F, 0x56, 0x69,  // 0xA5</Vi
                            /* 0398 */  0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70, 0x75, 0x74,  // deoInput
                            /* 03A0 */  0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69,  // Definiti
                            /* 03A8 */  0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // on>.    
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03D0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 03D8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03E0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30, 0x78,  // nSize>0x
                            /* 03E8 */  0x31, 0x44, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // 1D</Hori
                            /* 03F0 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 03F8 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0400 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0420 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0428 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0430 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0438 */  0x65, 0x3E, 0x30, 0x78, 0x31, 0x30, 0x3C, 0x2F,  // e>0x10</
                            /* 0440 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0448 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0450 */  0x7A, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ze>.    
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0470 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0478 */  0x3C, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79,  // <Display
                            /* 0480 */  0x54, 0x72, 0x61, 0x6E, 0x73, 0x66, 0x65, 0x72,  // Transfer
                            /* 0488 */  0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,  // Characte
                            /* 0490 */  0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x3E,  // ristics>
                            /* 0498 */  0x30, 0x78, 0x37, 0x38, 0x3C, 0x2F, 0x44, 0x69,  // 0x78</Di
                            /* 04A0 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 04A8 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 04B0 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 04B8 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // tics>.  
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04E0 */  0x20, 0x20, 0x3C, 0x46, 0x65, 0x61, 0x74, 0x75,  //   <Featu
                            /* 04E8 */  0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F, 0x72,  // reSuppor
                            /* 04F0 */  0x74, 0x3E, 0x30, 0x78, 0x32, 0x3C, 0x2F, 0x46,  // t>0x2</F
                            /* 04F8 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75,  // eatureSu
                            /* 0500 */  0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x0A, 0x20,  // pport>. 
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x2E,  //    <Red.
                            /* 0530 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69, 0x74,  // GreenBit
                            /* 0538 */  0x73, 0x3E, 0x30, 0x78, 0x41, 0x34, 0x3C, 0x2F,  // s>0xA4</
                            /* 0540 */  0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65, 0x65,  // Red.Gree
                            /* 0548 */  0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20,  // nBits>. 
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65,  //    <Blue
                            /* 0578 */  0x2E, 0x57, 0x68, 0x69, 0x74, 0x65, 0x42, 0x69,  // .WhiteBi
                            /* 0580 */  0x74, 0x73, 0x3E, 0x30, 0x78, 0x31, 0x35, 0x3C,  // ts>0x15<
                            /* 0588 */  0x2F, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // /Blue.Wh
                            /* 0590 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0598 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x52, 0x65,  //      <Re
                            /* 05C0 */  0x64, 0x58, 0x3E, 0x30, 0x78, 0x39, 0x45, 0x3C,  // dX>0x9E<
                            /* 05C8 */  0x2F, 0x52, 0x65, 0x64, 0x58, 0x3E, 0x0A, 0x20,  // /RedX>. 
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x59,  //    <RedY
                            /* 05F8 */  0x3E, 0x30, 0x78, 0x35, 0x35, 0x3C, 0x2F, 0x52,  // >0x55</R
                            /* 0600 */  0x65, 0x64, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // edY>.   
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0628 */  0x20, 0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x58,  //  <GreenX
                            /* 0630 */  0x3E, 0x30, 0x78, 0x34, 0x45, 0x3C, 0x2F, 0x47,  // >0x4E</G
                            /* 0638 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x0A, 0x20,  // reenX>. 
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x65, 0x65,  //    <Gree
                            /* 0668 */  0x6E, 0x59, 0x3E, 0x30, 0x78, 0x39, 0x42, 0x3C,  // nY>0x9B<
                            /* 0670 */  0x2F, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // /GreenY>
                            /* 0678 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C,  //      <Bl
                            /* 06A0 */  0x75, 0x65, 0x58, 0x3E, 0x30, 0x78, 0x32, 0x36,  // ueX>0x26
                            /* 06A8 */  0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65, 0x58, 0x3E,  // </BlueX>
                            /* 06B0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C,  //      <Bl
                            /* 06D8 */  0x75, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x30, 0x46,  // ueY>0x0F
                            /* 06E0 */  0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65, 0x59, 0x3E,  // </BlueY>
                            /* 06E8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68,  //      <Wh
                            /* 0710 */  0x69, 0x74, 0x65, 0x58, 0x3E, 0x30, 0x78, 0x35,  // iteX>0x5
                            /* 0718 */  0x30, 0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65,  // 0</White
                            /* 0720 */  0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // X>.     
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0748 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x59, 0x3E, 0x30,  // WhiteY>0
                            /* 0750 */  0x78, 0x35, 0x34, 0x3C, 0x2F, 0x57, 0x68, 0x69,  // x54</Whi
                            /* 0758 */  0x74, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // teY>.   
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0780 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 0788 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 0790 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x30, 0x78,  // ingsI>0x
                            /* 0798 */  0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61, 0x62,  // 0</Estab
                            /* 07A0 */  0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69,  // lishedTi
                            /* 07A8 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x0A,  // mingsI>.
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x73, 0x74,  //     <Est
                            /* 07D8 */  0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64,  // ablished
                            /* 07E0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49,  // TimingsI
                            /* 07E8 */  0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x45,  // I>0x0</E
                            /* 07F0 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 07F8 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0800 */  0x73, 0x49, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // sII>.   
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0828 */  0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  //  <Manufa
                            /* 0830 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 0838 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x78, 0x30,  // ming>0x0
                            /* 0840 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0848 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 0850 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ming>.  
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0878 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0880 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0888 */  0x67, 0x73, 0x31, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs1/>.  
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B0 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 08B8 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 08C0 */  0x67, 0x73, 0x32, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs2/>.  
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E8 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 08F0 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 08F8 */  0x67, 0x73, 0x33, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs3/>.  
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0920 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0928 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0930 */  0x67, 0x73, 0x34, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs4/>.  
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0958 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0960 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0968 */  0x67, 0x73, 0x35, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs5/>.  
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0990 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0998 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 09A0 */  0x67, 0x73, 0x36, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs6/>.  
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C8 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 09D0 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 09D8 */  0x67, 0x73, 0x37, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs7/>.  
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A00 */  0x20, 0x20, 0x3C, 0x53, 0x69, 0x67, 0x6E, 0x61,  //   <Signa
                            /* 0A08 */  0x6C, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x49,  // lTimingI
                            /* 0A10 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 0A18 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 0A40 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A60 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 0A68 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x44,  // up id='D
                            /* 0A70 */  0x65, 0x74, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x20,  // etailed 
                            /* 0A78 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E,  // Timing'>
                            /* 0A80 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0AA8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0AB0 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0AB8 */  0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x78, 0x31,  // zeMM>0x1
                            /* 0AC0 */  0x32, 0x35, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // 25</Hori
                            /* 0AC8 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 0AD0 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0AD8 */  0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // MM>.    
                            /* 0AE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B00 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0B08 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B10 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x58,  // izeMM>0X
                            /* 0B18 */  0x41, 0x32, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // A2</Vert
                            /* 0B20 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0B28 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D,  // enSizeMM
                            /* 0B30 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0B38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0B58 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0B60 */  0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // lVertica
                            /* 0B68 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0B70 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30, 0x78,  // izeMM>0x
                            /* 0B78 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0B80 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65, 0x72,  // ontalVer
                            /* 0B88 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0B90 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0B98 */  0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // M>.     
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 0BC0 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 0BE8 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x41,  // up id='A
                            /* 0BF0 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x69,  // ctive Ti
                            /* 0BF8 */  0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20,  // ming'>. 
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C20 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0C28 */  0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // talActiv
                            /* 0C30 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // e>0</Hor
                            /* 0C38 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41,  // izontalA
                            /* 0C40 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20,  // ctive>. 
                            /* 0C48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C68 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0C70 */  0x74, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // talFront
                            /* 0C78 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C,  // Porch>0<
                            /* 0C80 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0C88 */  0x74, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // talFront
                            /* 0C90 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20,  // Porch>. 
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB8 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0CC0 */  0x74, 0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50,  // talBackP
                            /* 0CC8 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F,  // orch>0</
                            /* 0CD0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0CD8 */  0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F,  // alBackPo
                            /* 0CE0 */  0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // rch>.   
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0D08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D10 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0D18 */  0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // se>0</Ho
                            /* 0D20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0D28 */  0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73,  // SyncPuls
                            /* 0D30 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72,  //     <Hor
                            /* 0D58 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53,  // izontalS
                            /* 0D60 */  0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E,  // yncSkew>
                            /* 0D68 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0D70 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ontalSyn
                            /* 0D78 */  0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20,  // cSkew>. 
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DA0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0DA8 */  0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42,  // talLeftB
                            /* 0DB0 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0DB8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0DC0 */  0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42,  // talLeftB
                            /* 0DC8 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DF0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0DF8 */  0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74,  // talRight
                            /* 0E00 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0E08 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0E10 */  0x6E, 0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68,  // ntalRigh
                            /* 0E18 */  0x74, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E,  // tBorder>
                            /* 0E20 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E40 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0E48 */  0x63, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // calActiv
                            /* 0E50 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // e>0</Ver
                            /* 0E58 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x41, 0x63, 0x74,  // ticalAct
                            /* 0E60 */  0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ive>.   
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0E88 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x46,  // erticalF
                            /* 0E90 */  0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63,  // rontPorc
                            /* 0E98 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EA0 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F,  // ticalFro
                            /* 0EA8 */  0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ntPorch>
                            /* 0EB0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED0 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0ED8 */  0x63, 0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50,  // calBackP
                            /* 0EE0 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F,  // orch>0</
                            /* 0EE8 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0EF0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EF8 */  0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // h>.     
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0F20 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E,  // ticalSyn
                            /* 0F28 */  0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30,  // cPulse>0
                            /* 0F30 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0F38 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0F40 */  0x6C, 0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // lse>.   
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0F68 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0F70 */  0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E,  // yncSkew>
                            /* 0F78 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0F80 */  0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53,  // calSyncS
                            /* 0F88 */  0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // kew>.   
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0FB0 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x54,  // erticalT
                            /* 0FB8 */  0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  // opBorder
                            /* 0FC0 */  0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // >0</Vert
                            /* 0FC8 */  0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42,  // icalTopB
                            /* 0FD0 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 0FD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF8 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 1000 */  0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42,  // lBottomB
                            /* 1008 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 1010 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 1018 */  0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42,  // lBottomB
                            /* 1020 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // order>. 
                            /* 1028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1048 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44,  // <InvertD
                            /* 1050 */  0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // ataPolar
                            /* 1058 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1060 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1068 */  0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C,  // tDataPol
                            /* 1070 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                            /* 1078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1098 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // <InvertV
                            /* 10A0 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10A8 */  0x69, 0x72, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C,  // irty>Fal
                            /* 10B0 */  0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65,  // se</Inve
                            /* 10B8 */  0x72, 0x74, 0x56, 0x73, 0x79, 0x6E, 0x63, 0x50,  // rtVsyncP
                            /* 10C0 */  0x6F, 0x6C, 0x61, 0x69, 0x72, 0x74, 0x79, 0x3E,  // olairty>
                            /* 10C8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 10D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E8 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72,  //   <Inver
                            /* 10F0 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 10F8 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x46,  // larity>F
                            /* 1100 */  0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E,  // alse</In
                            /* 1108 */  0x76, 0x65, 0x72, 0x74, 0x48, 0x73, 0x79, 0x6E,  // vertHsyn
                            /* 1110 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // cPolarit
                            /* 1118 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6F, 0x72,  //     <Bor
                            /* 1140 */  0x64, 0x65, 0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72,  // derColor
                            /* 1148 */  0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x42, 0x6F,  // >0x0</Bo
                            /* 1150 */  0x72, 0x64, 0x65, 0x72, 0x43, 0x6F, 0x6C, 0x6F,  // rderColo
                            /* 1158 */  0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // r>.     
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 1180 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 11A8 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x44,  // up id='D
                            /* 11B0 */  0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x20, 0x49,  // isplay I
                            /* 11B8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 11C0 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74,  //     <Int
                            /* 11E8 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,  // erfaceTy
                            /* 11F0 */  0x70, 0x65, 0x3E, 0x31, 0x38, 0x3C, 0x2F, 0x49,  // pe>18</I
                            /* 11F8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1200 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Type>.  
                            /* 1208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1228 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 1230 */  0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F,  // eColorFo
                            /* 1238 */  0x72, 0x6D, 0x61, 0x74, 0x3E, 0x33, 0x3C, 0x2F,  // rmat>3</
                            /* 1240 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 1248 */  0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F,  // eColorFo
                            /* 1250 */  0x72, 0x6D, 0x61, 0x74, 0x3E, 0x0A, 0x20, 0x20,  // rmat>.  
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1278 */  0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x50,  // DisplayP
                            /* 1280 */  0x6F, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69,  // owerSavi
                            /* 1288 */  0x6E, 0x67, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // ngOverri
                            /* 1290 */  0x64, 0x65, 0x3E, 0x38, 0x3C, 0x2F, 0x44, 0x69,  // de>8</Di
                            /* 1298 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77,  // splayPow
                            /* 12A0 */  0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67,  // erSaving
                            /* 12A8 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 12B0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 12B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12D0 */  0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75,  //   </Grou
                            /* 12D8 */  0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // p>.     
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F8 */  0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75,  //    <Grou
                            /* 1300 */  0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x65, 0x44,  // p id='eD
                            /* 1308 */  0x50, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  // P Interf
                            /* 1310 */  0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ace'>.  
                            /* 1318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1338 */  0x3C, 0x45, 0x44, 0x50, 0x52, 0x65, 0x66, 0x72,  // <EDPRefr
                            /* 1340 */  0x65, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x3E,  // eshRate>
                            /* 1348 */  0x30, 0x78, 0x33, 0x43, 0x30, 0x30, 0x30, 0x30,  // 0x3C0000
                            /* 1350 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x52, 0x65, 0x66,  // </EDPRef
                            /* 1358 */  0x72, 0x65, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65,  // reshRate
                            /* 1360 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1380 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1388 */  0x54, 0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67,  // Training
                            /* 1390 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x54,  // >0</EDPT
                            /* 1398 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x3E,  // raining>
                            /* 13A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 13A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x56,  //    <EDPV
                            /* 13C8 */  0x6F, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x53, 0x77,  // oltageSw
                            /* 13D0 */  0x69, 0x6E, 0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // ingLevel
                            /* 13D8 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x56,  // >0</EDPV
                            /* 13E0 */  0x6F, 0x6C, 0x74, 0x61, 0x67, 0x65, 0x53, 0x77,  // oltageSw
                            /* 13E8 */  0x69, 0x6E, 0x67, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // ingLevel
                            /* 13F0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 13F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1418 */  0x50, 0x72, 0x65, 0x65, 0x6D, 0x70, 0x68, 0x61,  // Preempha
                            /* 1420 */  0x73, 0x69, 0x73, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // sisLevel
                            /* 1428 */  0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x50,  // >0</EDPP
                            /* 1430 */  0x72, 0x65, 0x65, 0x6D, 0x70, 0x68, 0x61, 0x73,  // reemphas
                            /* 1438 */  0x69, 0x73, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x3E,  // isLevel>
                            /* 1440 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1460 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x44,  //    <EDPD
                            /* 1468 */  0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64, 0x3E,  // PCDRead>
                            /* 1470 */  0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x45,  // False</E
                            /* 1478 */  0x44, 0x50, 0x44, 0x50, 0x43, 0x44, 0x52, 0x65,  // DPDPCDRe
                            /* 1480 */  0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ad>.    
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14A8 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 14B0 */  0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65,  // ad>False
                            /* 14B8 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x45, 0x44, 0x49,  // </EDPEDI
                            /* 14C0 */  0x44, 0x52, 0x65, 0x61, 0x64, 0x3E, 0x0A, 0x20,  // DRead>. 
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4E, 0x75, 0x6D,  //  <EDPNum
                            /* 14F0 */  0x62, 0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61, 0x6E,  // berOfLan
                            /* 14F8 */  0x65, 0x73, 0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44,  // es>2</ED
                            /* 1500 */  0x50, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x4F,  // PNumberO
                            /* 1508 */  0x66, 0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E, 0x0A,  // fLanes>.
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1530 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61,  //   <EDPMa
                            /* 1538 */  0x78, 0x4C, 0x69, 0x6E, 0x6B, 0x52, 0x61, 0x74,  // xLinkRat
                            /* 1540 */  0x65, 0x3E, 0x38, 0x31, 0x30, 0x30, 0x3C, 0x2F,  // e>8100</
                            /* 1548 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69,  // EDPMaxLi
                            /* 1550 */  0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A,  // nkRate>.
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1578 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x48, 0x50,  //   <EDPHP
                            /* 1580 */  0x44, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4C,  // DActiveL
                            /* 1588 */  0x6F, 0x77, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C,  // ow>True<
                            /* 1590 */  0x2F, 0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41,  // /EDPHPDA
                            /* 1598 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77,  // ctiveLow
                            /* 15A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 15C8 */  0x50, 0x6F, 0x77, 0x65, 0x72, 0x55, 0x70, 0x57,  // PowerUpW
                            /* 15D0 */  0x61, 0x69, 0x74, 0x49, 0x6E, 0x4D, 0x73, 0x3E,  // aitInMs>
                            /* 15D8 */  0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x50, 0x6F,  // 0</EDPPo
                            /* 15E0 */  0x77, 0x65, 0x72, 0x55, 0x70, 0x57, 0x61, 0x69,  // werUpWai
                            /* 15E8 */  0x74, 0x49, 0x6E, 0x4D, 0x73, 0x3E, 0x0A, 0x20,  // tInMs>. 
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1610 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78,  //  <EDPMax
                            /* 1618 */  0x41, 0x75, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,  // AuxRetry
                            /* 1620 */  0x3E, 0x32, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // >20</EDP
                            /* 1628 */  0x4D, 0x61, 0x78, 0x41, 0x75, 0x78, 0x52, 0x65,  // MaxAuxRe
                            /* 1630 */  0x74, 0x72, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // try>.   
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1658 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1660 */  0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44, 0x3E,  // ideEDID>
                            /* 1668 */  0x30, 0x30, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // 00 FF FF
                            /* 1670 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1678 */  0x46, 0x20, 0x46, 0x46, 0x20, 0x30, 0x30, 0x20,  // F FF 00 
                            /* 1680 */  0x33, 0x30, 0x20, 0x41, 0x45, 0x20, 0x33, 0x41,  // 30 AE 3A
                            /* 1688 */  0x20, 0x34, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  40 00 0
                            /* 1690 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1698 */  0x30, 0x30, 0x20, 0x32, 0x31, 0x20, 0x30, 0x31,  // 00 21 01
                            /* 16A0 */  0x20, 0x30, 0x34, 0x20, 0x41, 0x35, 0x20, 0x31,  //  04 A5 1
                            /* 16A8 */  0x45, 0x20, 0x31, 0x33, 0x20, 0x37, 0x38, 0x20,  // E 13 78 
                            /* 16B0 */  0x30, 0x37, 0x20, 0x44, 0x41, 0x20, 0x32, 0x35,  // 07 DA 25
                            /* 16B8 */  0x20, 0x41, 0x37, 0x20, 0x35, 0x34, 0x20, 0x34,  //  A7 54 4
                            /* 16C0 */  0x42, 0x20, 0x39, 0x39, 0x20, 0x32, 0x35, 0x20,  // B 99 25 
                            /* 16C8 */  0x31, 0x30, 0x20, 0x35, 0x30, 0x20, 0x35, 0x34,  // 10 50 54
                            /* 16D0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 16D8 */  0x30, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 0 01 01 
                            /* 16E0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16E8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16F0 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16F8 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1700 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1708 */  0x31, 0x20, 0x39, 0x43, 0x20, 0x33, 0x45, 0x20,  // 1 9C 3E 
                            /* 1710 */  0x38, 0x30, 0x20, 0x43, 0x38, 0x20, 0x37, 0x30,  // 80 C8 70
                            /* 1718 */  0x20, 0x42, 0x30, 0x20, 0x33, 0x43, 0x20, 0x34,  //  B0 3C 4
                            /* 1720 */  0x30, 0x20, 0x33, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 30 20 
                            /* 1728 */  0x33, 0x36, 0x20, 0x30, 0x30, 0x20, 0x32, 0x45,  // 36 00 2E
                            /* 1730 */  0x20, 0x42, 0x43, 0x20, 0x31, 0x30, 0x20, 0x30,  //  BC 10 0
                            /* 1738 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x31, 0x41, 0x20,  // 0 00 1A 
                            /* 1740 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1748 */  0x20, 0x46, 0x44, 0x20, 0x30, 0x30, 0x20, 0x33,  //  FD 00 3
                            /* 1750 */  0x30, 0x20, 0x33, 0x43, 0x20, 0x34, 0x43, 0x20,  // 0 3C 4C 
                            /* 1758 */  0x34, 0x43, 0x20, 0x31, 0x30, 0x20, 0x30, 0x31,  // 4C 10 01
                            /* 1760 */  0x20, 0x30, 0x41, 0x20, 0x32, 0x30, 0x20, 0x32,  //  0A 20 2
                            /* 1768 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1770 */  0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x30, 0x30,  // 20 20 00
                            /* 1778 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1780 */  0x46, 0x20, 0x30, 0x30, 0x20, 0x44, 0x31, 0x20,  // F 00 D1 
                            /* 1788 */  0x30, 0x41, 0x20, 0x33, 0x30, 0x20, 0x44, 0x31,  // 0A 30 D1
                            /* 1790 */  0x20, 0x30, 0x41, 0x20, 0x33, 0x30, 0x20, 0x32,  //  0A 30 2
                            /* 1798 */  0x38, 0x20, 0x30, 0x41, 0x20, 0x30, 0x34, 0x20,  // 8 0A 04 
                            /* 17A0 */  0x30, 0x39, 0x20, 0x45, 0x35, 0x20, 0x36, 0x36,  // 09 E5 66
                            /* 17A8 */  0x20, 0x30, 0x42, 0x20, 0x30, 0x30, 0x20, 0x30,  //  0B 00 0
                            /* 17B0 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x45, 0x20,  // 0 00 FE 
                            /* 17B8 */  0x30, 0x30, 0x20, 0x34, 0x45, 0x20, 0x34, 0x35,  // 00 4E 45
                            /* 17C0 */  0x20, 0x33, 0x31, 0x20, 0x33, 0x34, 0x20, 0x33,  //  31 34 3
                            /* 17C8 */  0x30, 0x20, 0x35, 0x37, 0x20, 0x35, 0x35, 0x20,  // 0 57 55 
                            /* 17D0 */  0x34, 0x44, 0x20, 0x32, 0x44, 0x20, 0x34, 0x45,  // 4D 2D 4E
                            /* 17D8 */  0x20, 0x33, 0x36, 0x20, 0x34, 0x37, 0x20, 0x30,  //  36 47 0
                            /* 17E0 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x44, 0x3C,  // A 00 5D<
                            /* 17E8 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 17F0 */  0x72, 0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44,  // rideEDID
                            /* 17F8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1810 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1818 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1820 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1828 */  0x44, 0x50, 0x43, 0x44, 0x43, 0x61, 0x70, 0x73,  // DPCDCaps
                            /* 1830 */  0x3E, 0x31, 0x32, 0x20, 0x30, 0x41, 0x20, 0x43,  // >12 0A C
                            /* 1838 */  0x32, 0x20, 0x34, 0x31, 0x20, 0x30, 0x30, 0x20,  // 2 41 00 
                            /* 1840 */  0x30, 0x30, 0x20, 0x30, 0x31, 0x20, 0x43, 0x30,  // 00 01 C0
                            /* 1848 */  0x20, 0x30, 0x32, 0x20, 0x30, 0x30, 0x20, 0x30,  //  02 00 0
                            /* 1850 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1858 */  0x30, 0x42, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 0B 00 00
                            /* 1860 */  0x20, 0x41, 0x34, 0x20, 0x31, 0x46, 0x20, 0x33,  //  A4 1F 3
                            /* 1868 */  0x30, 0x20, 0x32, 0x41, 0x20, 0x37, 0x36, 0x20,  // 0 2A 76 
                            /* 1870 */  0x32, 0x46, 0x20, 0x42, 0x43, 0x20, 0x33, 0x34,  // 2F BC 34
                            /* 1878 */  0x20, 0x34, 0x38, 0x20, 0x33, 0x46, 0x20, 0x44,  //  48 3F D
                            /* 1880 */  0x34, 0x20, 0x34, 0x39, 0x20, 0x36, 0x30, 0x20,  // 4 49 60 
                            /* 1888 */  0x35, 0x34, 0x20, 0x37, 0x38, 0x20, 0x36, 0x39,  // 54 78 69
                            /* 1890 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  // </EDPOve
                            /* 1898 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 18A0 */  0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x0A, 0x20,  // DCaps>. 
                            /* 18A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C8 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 18D0 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 18D8 */  0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E,  // DStatus>
                            /* 18E0 */  0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x37, 0x37,  // 01 00 77
                            /* 18E8 */  0x20, 0x37, 0x37, 0x20, 0x30, 0x31, 0x20, 0x30,  //  77 01 0
                            /* 18F0 */  0x30, 0x20, 0x34, 0x34, 0x20, 0x34, 0x34, 0x3C,  // 0 44 44<
                            /* 18F8 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 1900 */  0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43, 0x44,  // rideDPCD
                            /* 1908 */  0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E, 0x0A,  // Status>.
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1930 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76,  //   <EDPOv
                            /* 1938 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1940 */  0x64, 0x65, 0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44,  // de>1</ED
                            /* 1948 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1950 */  0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // eMode>. 
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1978 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x45, 0x6E, 0x61,  //  <EDPEna
                            /* 1980 */  0x62, 0x6C, 0x65, 0x53, 0x53, 0x43, 0x3E, 0x31,  // bleSSC>1
                            /* 1988 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x45, 0x6E, 0x61,  // </EDPEna
                            /* 1990 */  0x62, 0x6C, 0x65, 0x53, 0x53, 0x43, 0x3E, 0x0A,  // bleSSC>.
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B8 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61,  //   <EDPMa
                            /* 19C0 */  0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72, 0x73,  // xPsrVers
                            /* 19C8 */  0x69, 0x6F, 0x6E, 0x3E, 0x32, 0x3C, 0x2F, 0x45,  // ion>2</E
                            /* 19D0 */  0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73, 0x72,  // DPMaxPsr
                            /* 19D8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 19E0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x50,  //    <EDPP
                            /* 1A08 */  0x73, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6E, 0x69,  // srTraini
                            /* 1A10 */  0x6E, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,  // ngDurati
                            /* 1A18 */  0x6F, 0x6E, 0x3E, 0x32, 0x35, 0x30, 0x30, 0x3C,  // on>2500<
                            /* 1A20 */  0x2F, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54,  // /EDPPsrT
                            /* 1A28 */  0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44,  // rainingD
                            /* 1A30 */  0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // uration>
                            /* 1A38 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A58 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 1A60 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A80 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 1A88 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x42, 0x61, 0x63,  //  id='Bac
                            /* 1A90 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x20, 0x43,  // klight C
                            /* 1A98 */  0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,  // onfigura
                            /* 1AA0 */  0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A, 0x20,  // tion'>. 
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AC8 */  0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  //  <Backli
                            /* 1AD0 */  0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3E,  // ghtType>
                            /* 1AD8 */  0x31, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // 1</Backl
                            /* 1AE0 */  0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65,  // ightType
                            /* 1AE8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1B10 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1B18 */  0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F,  // icContro
                            /* 1B20 */  0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x33, 0x3C,  // lType>3<
                            /* 1B28 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1B30 */  0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F,  // htPmicCo
                            /* 1B38 */  0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70,  // ntrolTyp
                            /* 1B40 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1B68 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50,  // cklightP
                            /* 1B70 */  0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53,  // MICBankS
                            /* 1B78 */  0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E, 0x30, 0x3C,  // elect>0<
                            /* 1B80 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1B88 */  0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x42, 0x61,  // htPMICBa
                            /* 1B90 */  0x6E, 0x6B, 0x53, 0x65, 0x6C, 0x65, 0x63, 0x74,  // nkSelect
                            /* 1B98 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1BC0 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1BC8 */  0x69, 0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A,  // icPWMSiz
                            /* 1BD0 */  0x65, 0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E,  // einBits>
                            /* 1BD8 */  0x31, 0x32, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // 12</Back
                            /* 1BE0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1BE8 */  0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65,  // cPWMSize
                            /* 1BF0 */  0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A,  // inBits>.
                            /* 1BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C18 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1C20 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43,  // ightPMIC
                            /* 1C28 */  0x50, 0x57, 0x4D, 0x46, 0x72, 0x65, 0x71, 0x75,  // PWMFrequ
                            /* 1C30 */  0x65, 0x6E, 0x63, 0x79, 0x3E, 0x39, 0x39, 0x30,  // ency>990
                            /* 1C38 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1C40 */  0x67, 0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x50,  // ghtPMICP
                            /* 1C48 */  0x57, 0x4D, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,  // WMFreque
                            /* 1C50 */  0x6E, 0x63, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ncy>.   
                            /* 1C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1C78 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1C80 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1C88 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1C90 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x54, 0x72,  // moval>Tr
                            /* 1C98 */  0x75, 0x65, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // ue</Back
                            /* 1CA0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1CA8 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1CB0 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1CB8 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61,  //      <Ba
                            /* 1CE0 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53,  // cklightS
                            /* 1CE8 */  0x74, 0x65, 0x70, 0x73, 0x3E, 0x31, 0x30, 0x30,  // teps>100
                            /* 1CF0 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1CF8 */  0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73,  // ghtSteps
                            /* 1D00 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D20 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1D28 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65,  // klightDe
                            /* 1D30 */  0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E, 0x38, 0x30,  // fault>80
                            /* 1D38 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1D40 */  0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,  // ghtDefau
                            /* 1D48 */  0x6C, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // lt>.    
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1D70 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1D78 */  0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77, 0x65, 0x72,  // LowPower
                            /* 1D80 */  0x3E, 0x34, 0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63,  // >40</Bac
                            /* 1D88 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x6F,  // klightLo
                            /* 1D90 */  0x77, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x3E, 0x0A,  // wPower>.
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DB8 */  0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F,  //   <PMIPo
                            /* 1DC0 */  0x77, 0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E,  // werPmicN
                            /* 1DC8 */  0x75, 0x6D, 0x3E, 0x32, 0x3C, 0x2F, 0x50, 0x4D,  // um>2</PM
                            /* 1DD0 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1DD8 */  0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x0A, 0x20,  // icNum>. 
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E00 */  0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  //  <PMIPow
                            /* 1E08 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F,  // erPmicMo
                            /* 1E10 */  0x64, 0x65, 0x6C, 0x3E, 0x30, 0x78, 0x32, 0x46,  // del>0x2F
                            /* 1E18 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1E20 */  0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F,  // erPmicMo
                            /* 1E28 */  0x64, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // del>.   
                            /* 1E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1E50 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E58 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x3E, 0x30,  // Config>0
                            /* 1E60 */  0x3C, 0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77,  // </PMIPow
                            /* 1E68 */  0x65, 0x72, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67,  // erConfig
                            /* 1E70 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E90 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72, 0x69,  //     <Bri
                            /* 1E98 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D,  // ghtnessM
                            /* 1EA0 */  0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61,  // inLumina
                            /* 1EA8 */  0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x42,  // nce>0</B
                            /* 1EB0 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1EB8 */  0x73, 0x4D, 0x69, 0x6E, 0x4C, 0x75, 0x6D, 0x69,  // sMinLumi
                            /* 1EC0 */  0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A, 0x20,  // nance>. 
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EE8 */  0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  //  <Bright
                            /* 1EF0 */  0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C,  // nessMaxL
                            /* 1EF8 */  0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65,  // uminance
                            /* 1F00 */  0x3E, 0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67,  // >0</Brig
                            /* 1F08 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x61,  // htnessMa
                            /* 1F10 */  0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E,  // xLuminan
                            /* 1F18 */  0x63, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ce>.    
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1F40 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 1F48 */  0x73, 0x52, 0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65,  // sRangeLe
                            /* 1F50 */  0x76, 0x65, 0x6C, 0x30, 0x3E, 0x34, 0x30, 0x30,  // vel0>400
                            /* 1F58 */  0x30, 0x20, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30,  // 0 400000
                            /* 1F60 */  0x20, 0x34, 0x30, 0x30, 0x30, 0x20, 0x32, 0x3C,  //  4000 2<
                            /* 1F68 */  0x2F, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // /Brightn
                            /* 1F70 */  0x65, 0x73, 0x73, 0x52, 0x61, 0x6E, 0x67, 0x65,  // essRange
                            /* 1F78 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30, 0x3E, 0x0A,  // Level0>.
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FA0 */  0x20, 0x20, 0x3C, 0x41, 0x64, 0x61, 0x70, 0x74,  //   <Adapt
                            /* 1FA8 */  0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68,  // iveBrigh
                            /* 1FB0 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61,  // tnessFea
                            /* 1FB8 */  0x74, 0x75, 0x72, 0x65, 0x3E, 0x31, 0x3C, 0x2F,  // ture>1</
                            /* 1FC0 */  0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65,  // Adaptive
                            /* 1FC8 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1FD0 */  0x73, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,  // ssFeatur
                            /* 1FD8 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43, 0x41,  //      <CA
                            /* 2000 */  0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65,  // BLEnable
                            /* 2008 */  0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x43,  // >True</C
                            /* 2010 */  0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // ABLEnabl
                            /* 2018 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43, 0x41,  //      <CA
                            /* 2040 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 2048 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 2050 */  0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78, 0x34, 0x62,  // vel>0x4b
                            /* 2058 */  0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F, 0x43, 0x41,  // 4032</CA
                            /* 2060 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 2068 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 2070 */  0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // vel>.   
                            /* 2078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2080 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47,  //      </G
                            /* 2098 */  0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20,  // roup>.  
                            /* 20A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 20B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00         //       .
                        })
                        Local2 = PLC6 /* \_SB_.GPU0._ROM.PLC6 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        Name (PLC8, Buffer (0x2055)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0048 */  0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64, 0x3D,  // roup id=
                            /* 0050 */  0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50, 0x61,  // 'Main Pa
                            /* 0058 */  0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // nel'>.  
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x61,  //      <Pa
                            /* 0080 */  0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65, 0x3E,  // nelName>
                            /* 0088 */  0x5F, 0x54, 0x4C, 0x31, 0x34, 0x30, 0x56, 0x44,  // _TL140VD
                            /* 0090 */  0x58, 0x53, 0x30, 0x31, 0x2E, 0x30, 0x3C, 0x2F,  // XS01.0</
                            /* 0098 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 00A0 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C,  //   <Panel
                            /* 00C8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00D0 */  0x69, 0x6F, 0x6E, 0x3E, 0x54, 0x49, 0x41, 0x4E,  // ion>TIAN
                            /* 00D8 */  0x4D, 0x41, 0x20, 0x31, 0x30, 0x38, 0x30, 0x70,  // MA 1080p
                            /* 00E0 */  0x20, 0x65, 0x44, 0x50, 0x20, 0x56, 0x69, 0x64,  //  eDP Vid
                            /* 00E8 */  0x65, 0x6F, 0x20, 0x4D, 0x6F, 0x64, 0x65, 0x20,  // eo Mode 
                            /* 00F0 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x28, 0x31, 0x39,  // Panel(19
                            /* 00F8 */  0x32, 0x30, 0x78, 0x31, 0x30, 0x38, 0x30, 0x20,  // 20x1080 
                            /* 0100 */  0x32, 0x34, 0x62, 0x70, 0x70, 0x29, 0x3C, 0x2F,  // 24bpp)</
                            /* 0108 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73,  // PanelDes
                            /* 0110 */  0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E,  // cription
                            /* 0118 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0138 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0140 */  0x69, 0x64, 0x3D, 0x27, 0x45, 0x44, 0x49, 0x44,  // id='EDID
                            /* 0148 */  0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75,  //  Configu
                            /* 0150 */  0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E,  // ration'>
                            /* 0158 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0178 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E,  //     <Man
                            /* 0180 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0188 */  0x49, 0x44, 0x3E, 0x30, 0x78, 0x41, 0x46, 0x30,  // ID>0xAF0
                            /* 0190 */  0x36, 0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // 6</Manuf
                            /* 0198 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44,  // actureID
                            /* 01A0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 01A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x72,  //      <Pr
                            /* 01C8 */  0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F, 0x64,  // oductCod
                            /* 01D0 */  0x65, 0x3E, 0x30, 0x78, 0x32, 0x44, 0x3C, 0x2F,  // e>0x2D</
                            /* 01D8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01E0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0200 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0208 */  0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // <SerialN
                            /* 0210 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30, 0x78,  // umber>0x
                            /* 0218 */  0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C, 0x2F,  // 000001</
                            /* 0220 */  0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E, 0x75,  // SerialNu
                            /* 0228 */  0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // mber>.  
                            /* 0230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0248 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0250 */  0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B, 0x6F, 0x66,  //  <Weekof
                            /* 0258 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0260 */  0x75, 0x72, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x41,  // ure>0x1A
                            /* 0268 */  0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B, 0x6F, 0x66,  // </Weekof
                            /* 0270 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0278 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 0280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02A0 */  0x3C, 0x59, 0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D,  // <YearofM
                            /* 02A8 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 02B0 */  0x72, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x42, 0x3C,  // re>0x1B<
                            /* 02B8 */  0x2F, 0x59, 0x65, 0x61, 0x72, 0x6F, 0x66, 0x4D,  // /YearofM
                            /* 02C0 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 02C8 */  0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // re>.    
                            /* 02D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 02F0 */  0x45, 0x44, 0x49, 0x44, 0x56, 0x65, 0x72, 0x73,  // EDIDVers
                            /* 02F8 */  0x69, 0x6F, 0x6E, 0x3E, 0x31, 0x3C, 0x2F, 0x45,  // ion>1</E
                            /* 0300 */  0x44, 0x49, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69,  // DIDVersi
                            /* 0308 */  0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // on>.    
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0318 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0330 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0338 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x34, 0x3C, 0x2F,  // sion>4</
                            /* 0340 */  0x45, 0x44, 0x49, 0x44, 0x52, 0x65, 0x76, 0x69,  // EDIDRevi
                            /* 0348 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 0350 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0358 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0370 */  0x20, 0x3C, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x49,  //  <VideoI
                            /* 0378 */  0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x69,  // nputDefi
                            /* 0380 */  0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30,  // nition>0
                            /* 0388 */  0x78, 0x41, 0x35, 0x3C, 0x2F, 0x56, 0x69, 0x64,  // xA5</Vid
                            /* 0390 */  0x65, 0x6F, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x44,  // eoInputD
                            /* 0398 */  0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F,  // efinitio
                            /* 03A0 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 03A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 03C8 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 03D0 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 03D8 */  0x69, 0x7A, 0x65, 0x3E, 0x30, 0x78, 0x31, 0x44,  // ize>0x1D
                            /* 03E0 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 03E8 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // ntalScre
                            /* 03F0 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A,  // enSize>.
                            /* 03F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0418 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0420 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0428 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0430 */  0x78, 0x31, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x10</Ver
                            /* 0438 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0440 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0448 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0460 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0468 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69, 0x73,  //     <Dis
                            /* 0470 */  0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6E,  // playTran
                            /* 0478 */  0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72,  // sferChar
                            /* 0480 */  0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,  // acterist
                            /* 0488 */  0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37, 0x38,  // ics>0x78
                            /* 0490 */  0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61,  // </Displa
                            /* 0498 */  0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66, 0x65,  // yTransfe
                            /* 04A0 */  0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,  // rCharact
                            /* 04A8 */  0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,  // eristics
                            /* 04B0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 04B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x46, 0x65,  //      <Fe
                            /* 04D8 */  0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x70,  // atureSup
                            /* 04E0 */  0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30, 0x78, 0x32,  // port>0x2
                            /* 04E8 */  0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,  // </Featur
                            /* 04F0 */  0x65, 0x53, 0x75, 0x70, 0x70, 0x6F, 0x72, 0x74,  // eSupport
                            /* 04F8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0500 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0508 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x52, 0x65,  //      <Re
                            /* 0520 */  0x64, 0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42,  // d.GreenB
                            /* 0528 */  0x69, 0x74, 0x73, 0x3E, 0x30, 0x78, 0x41, 0x34,  // its>0xA4
                            /* 0530 */  0x3C, 0x2F, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72,  // </Red.Gr
                            /* 0538 */  0x65, 0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E,  // eenBits>
                            /* 0540 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0548 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0560 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75,  //     <Blu
                            /* 0568 */  0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65, 0x42,  // e.WhiteB
                            /* 0570 */  0x69, 0x74, 0x73, 0x3E, 0x30, 0x78, 0x31, 0x35,  // its>0x15
                            /* 0578 */  0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57,  // </Blue.W
                            /* 0580 */  0x68, 0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73,  // hiteBits
                            /* 0588 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0590 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0598 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x52, 0x65,  //      <Re
                            /* 05B0 */  0x64, 0x58, 0x3E, 0x30, 0x78, 0x39, 0x45, 0x3C,  // dX>0x9E<
                            /* 05B8 */  0x2F, 0x52, 0x65, 0x64, 0x58, 0x3E, 0x0A, 0x20,  // /RedX>. 
                            /* 05C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E,  //   <RedY>
                            /* 05E8 */  0x30, 0x78, 0x35, 0x35, 0x3C, 0x2F, 0x52, 0x65,  // 0x55</Re
                            /* 05F0 */  0x64, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dY>.    
                            /* 05F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0618 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30,  // GreenX>0
                            /* 0620 */  0x78, 0x34, 0x45, 0x3C, 0x2F, 0x47, 0x72, 0x65,  // x4E</Gre
                            /* 0628 */  0x65, 0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // enX>.   
                            /* 0630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0658 */  0x30, 0x78, 0x39, 0x42, 0x3C, 0x2F, 0x47, 0x72,  // 0x9B</Gr
                            /* 0660 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0668 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0670 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58, 0x3E,  //  <BlueX>
                            /* 0690 */  0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42, 0x6C,  // 0x26</Bl
                            /* 0698 */  0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ueX>.   
                            /* 06A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59, 0x3E, 0x30,  // <BlueY>0
                            /* 06C8 */  0x78, 0x30, 0x46, 0x3C, 0x2F, 0x42, 0x6C, 0x75,  // x0F</Blu
                            /* 06D0 */  0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // eY>.    
                            /* 06D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 06F8 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x30,  // WhiteX>0
                            /* 0700 */  0x78, 0x35, 0x30, 0x3C, 0x2F, 0x57, 0x68, 0x69,  // x50</Whi
                            /* 0708 */  0x74, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // teX>.   
                            /* 0710 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0718 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x3C, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59, 0x3E,  // <WhiteY>
                            /* 0738 */  0x30, 0x78, 0x35, 0x34, 0x3C, 0x2F, 0x57, 0x68,  // 0x54</Wh
                            /* 0740 */  0x69, 0x74, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // iteY>.  
                            /* 0748 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0750 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0758 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0768 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 0770 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 0778 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x30, 0x78,  // ingsI>0x
                            /* 0780 */  0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61, 0x62,  // 0</Estab
                            /* 0788 */  0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69,  // lishedTi
                            /* 0790 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E, 0x0A,  // mingsI>.
                            /* 0798 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B8 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x73, 0x74, 0x61,  //    <Esta
                            /* 07C0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07C8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 07D0 */  0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73,  // >0x0</Es
                            /* 07D8 */  0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65,  // tablishe
                            /* 07E0 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 07E8 */  0x49, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // II>.    
                            /* 07F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0808 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0810 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0818 */  0x75, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69,  // uresTimi
                            /* 0820 */  0x6E, 0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // ng>0x0</
                            /* 0828 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0830 */  0x75, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69,  // uresTimi
                            /* 0838 */  0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ng>.    
                            /* 0840 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0848 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0850 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0860 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0868 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0870 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0878 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0880 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x53,  //       <S
                            /* 0898 */  0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x54,  // tandardT
                            /* 08A0 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32, 0x2F,  // imings2/
                            /* 08A8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 08B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x74,  //      <St
                            /* 08D0 */  0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x54, 0x69,  // andardTi
                            /* 08D8 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33, 0x2F, 0x3E,  // mings3/>
                            /* 08E0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 08E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x74, 0x61,  //     <Sta
                            /* 0908 */  0x6E, 0x64, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6D,  // ndardTim
                            /* 0910 */  0x69, 0x6E, 0x67, 0x73, 0x34, 0x2F, 0x3E, 0x0A,  // ings4/>.
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0930 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0938 */  0x20, 0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E,  //    <Stan
                            /* 0940 */  0x64, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69,  // dardTimi
                            /* 0948 */  0x6E, 0x67, 0x73, 0x35, 0x2F, 0x3E, 0x0A, 0x20,  // ngs5/>. 
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0970 */  0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64,  //   <Stand
                            /* 0978 */  0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ardTimin
                            /* 0980 */  0x67, 0x73, 0x36, 0x2F, 0x3E, 0x0A, 0x20, 0x20,  // gs6/>.  
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A8 */  0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61,  //  <Standa
                            /* 09B0 */  0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // rdTiming
                            /* 09B8 */  0x73, 0x37, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // s7/>.   
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E0 */  0x3C, 0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54,  // <SignalT
                            /* 09E8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74,  // imingInt
                            /* 09F0 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E,  // erface/>
                            /* 09F8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A18 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A20 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A40 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 0A48 */  0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61, 0x69,  // d='Detai
                            /* 0A50 */  0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D, 0x69,  // led Timi
                            /* 0A58 */  0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ng'>.   
                            /* 0A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A80 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0A88 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 0A90 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0A98 */  0x30, 0x78, 0x31, 0x32, 0x35, 0x3C, 0x2F, 0x48,  // 0x125</H
                            /* 0AA0 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0AA8 */  0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53,  // lScreenS
                            /* 0AB0 */  0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20,  // izeMM>. 
                            /* 0AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD8 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0AE0 */  0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // calScree
                            /* 0AE8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0AF0 */  0x30, 0x58, 0x41, 0x32, 0x3C, 0x2F, 0x56, 0x65,  // 0XA2</Ve
                            /* 0AF8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B00 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B08 */  0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // MM>.    
                            /* 0B10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0B30 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B38 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B40 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B48 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x30,  // SizeMM>0
                            /* 0B50 */  0x78, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // x0</Hori
                            /* 0B58 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65,  // zontalVe
                            /* 0B60 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0B68 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0B70 */  0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // MM>.    
                            /* 0B78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B90 */  0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F,  //    </Gro
                            /* 0B98 */  0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // up>.    
                            /* 0BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75,  //    <Grou
                            /* 0BC0 */  0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x41, 0x63,  // p id='Ac
                            /* 0BC8 */  0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x69, 0x6D,  // tive Tim
                            /* 0BD0 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0BD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0BF8 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0C00 */  0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E,  // lActive>
                            /* 0C08 */  0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A,  // 0</Horiz
                            /* 0C10 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63, 0x74,  // ontalAct
                            /* 0C18 */  0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ive>.   
                            /* 0C20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C40 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C48 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C50 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C58 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C60 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C68 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C88 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72,  //     <Hor
                            /* 0C90 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42,  // izontalB
                            /* 0C98 */  0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ackPorch
                            /* 0CA0 */  0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // >0</Hori
                            /* 0CA8 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x42, 0x61,  // zontalBa
                            /* 0CB0 */  0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ckPorch>
                            /* 0CB8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CD8 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0CE0 */  0x6E, 0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // ntalSync
                            /* 0CE8 */  0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C,  // Pulse>0<
                            /* 0CF0 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0CF8 */  0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50,  // talSyncP
                            /* 0D00 */  0x75, 0x6C, 0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // ulse>.  
                            /* 0D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0D28 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D30 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65,  // lSyncSke
                            /* 0D38 */  0x77, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // w>0</Hor
                            /* 0D40 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53,  // izontalS
                            /* 0D48 */  0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E,  // yncSkew>
                            /* 0D50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D70 */  0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  //  <Horizo
                            /* 0D78 */  0x6E, 0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74,  // ntalLeft
                            /* 0D80 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0D88 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0D90 */  0x6E, 0x74, 0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74,  // ntalLeft
                            /* 0D98 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A,  // Border>.
                            /* 0DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DC0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0DC8 */  0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74,  // talRight
                            /* 0DD0 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0DD8 */  0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F,  // </Horizo
                            /* 0DE0 */  0x6E, 0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68,  // ntalRigh
                            /* 0DE8 */  0x74, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E,  // tBorder>
                            /* 0DF0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E10 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0E18 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E20 */  0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // >0</Vert
                            /* 0E28 */  0x69, 0x63, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // icalActi
                            /* 0E30 */  0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ve>.    
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E50 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0E58 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F,  // ticalFro
                            /* 0E60 */  0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ntPorch>
                            /* 0E68 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0E70 */  0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74,  // calFront
                            /* 0E78 */  0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20,  // Porch>. 
                            /* 0E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0EA0 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0EA8 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EB0 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EB8 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EC0 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EE8 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0EF0 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0EF8 */  0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // se>0</Ve
                            /* 0F00 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x79,  // rticalSy
                            /* 0F08 */  0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E,  // ncPulse>
                            /* 0F10 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F30 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F38 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0F40 */  0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // ew>0</Ve
                            /* 0F48 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x79,  // rticalSy
                            /* 0F50 */  0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77, 0x3E, 0x0A,  // ncSkew>.
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F78 */  0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // <Vertica
                            /* 0F80 */  0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64,  // lTopBord
                            /* 0F88 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 0F90 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x54, 0x6F,  // rticalTo
                            /* 0F98 */  0x70, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E,  // pBorder>
                            /* 0FA0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FC0 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0FC8 */  0x61, 0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D,  // alBottom
                            /* 0FD0 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30,  // Border>0
                            /* 0FD8 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0FE0 */  0x61, 0x6C, 0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D,  // alBottom
                            /* 0FE8 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A,  // Border>.
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1000 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1008 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1010 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44,  // <InvertD
                            /* 1018 */  0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72,  // ataPolar
                            /* 1020 */  0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // ity>Fals
                            /* 1028 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1030 */  0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C,  // tDataPol
                            /* 1038 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20,  // arity>. 
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1048 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1050 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1058 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1060 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56, 0x73,  // InvertVs
                            /* 1068 */  0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61, 0x69,  // yncPolai
                            /* 1070 */  0x72, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73,  // rty>Fals
                            /* 1078 */  0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72,  // e</Inver
                            /* 1080 */  0x74, 0x56, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tVsyncPo
                            /* 1088 */  0x6C, 0x61, 0x69, 0x72, 0x74, 0x79, 0x3E, 0x0A,  // lairty>.
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10B0 */  0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48,  // <InvertH
                            /* 10B8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10C0 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C,  // rity>Fal
                            /* 10C8 */  0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65,  // se</Inve
                            /* 10D0 */  0x72, 0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50,  // rtHsyncP
                            /* 10D8 */  0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E,  // olarity>
                            /* 10E0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 10E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1100 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1108 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1110 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1118 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1120 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1128 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1140 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 1148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1150 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1168 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1170 */  0x3D, 0x27, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61,  // ='Displa
                            /* 1178 */  0x79, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  // y Interf
                            /* 1180 */  0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ace'>.  
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49,  //       <I
                            /* 11A8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 11B0 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x38, 0x3C,  // Type>18<
                            /* 11B8 */  0x2F, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61,  // /Interfa
                            /* 11C0 */  0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // ceType>.
                            /* 11C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E8 */  0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61,  // <Interfa
                            /* 11F0 */  0x63, 0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46,  // ceColorF
                            /* 11F8 */  0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x33, 0x3C,  // ormat>3<
                            /* 1200 */  0x2F, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61,  // /Interfa
                            /* 1208 */  0x63, 0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46,  // ceColorF
                            /* 1210 */  0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x0A, 0x20,  // ormat>. 
                            /* 1218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1228 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1238 */  0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x50,  // DisplayP
                            /* 1240 */  0x6F, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69,  // owerSavi
                            /* 1248 */  0x6E, 0x67, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // ngOverri
                            /* 1250 */  0x64, 0x65, 0x3E, 0x38, 0x3C, 0x2F, 0x44, 0x69,  // de>8</Di
                            /* 1258 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x50, 0x6F, 0x77,  // splayPow
                            /* 1260 */  0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6E, 0x67,  // erSaving
                            /* 1268 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1270 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1278 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1290 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 1298 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 12A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 12C0 */  0x69, 0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20,  // id='eDP 
                            /* 12C8 */  0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,  // Interfac
                            /* 12D0 */  0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // e'>.    
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 12F8 */  0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,  // PRefresh
                            /* 1300 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x30, 0x78, 0x33,  // Rate>0x3
                            /* 1308 */  0x43, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // C0000</E
                            /* 1310 */  0x44, 0x50, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,  // DPRefres
                            /* 1318 */  0x68, 0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20,  // hRate>. 
                            /* 1320 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1338 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1340 */  0x3C, 0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69,  // <EDPTrai
                            /* 1348 */  0x6E, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x3C, 0x2F,  // ning>0</
                            /* 1350 */  0x45, 0x44, 0x50, 0x54, 0x72, 0x61, 0x69, 0x6E,  // EDPTrain
                            /* 1358 */  0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ing>.   
                            /* 1360 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1368 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1370 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1378 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1380 */  0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74, 0x61, 0x67,  // DPVoltag
                            /* 1388 */  0x65, 0x53, 0x77, 0x69, 0x6E, 0x67, 0x4C, 0x65,  // eSwingLe
                            /* 1390 */  0x76, 0x65, 0x6C, 0x3E, 0x30, 0x3C, 0x2F, 0x45,  // vel>0</E
                            /* 1398 */  0x44, 0x50, 0x56, 0x6F, 0x6C, 0x74, 0x61, 0x67,  // DPVoltag
                            /* 13A0 */  0x65, 0x53, 0x77, 0x69, 0x6E, 0x67, 0x4C, 0x65,  // eSwingLe
                            /* 13A8 */  0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // vel>.   
                            /* 13B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 13C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 13D0 */  0x44, 0x50, 0x50, 0x72, 0x65, 0x65, 0x6D, 0x70,  // DPPreemp
                            /* 13D8 */  0x68, 0x61, 0x73, 0x69, 0x73, 0x4C, 0x65, 0x76,  // hasisLev
                            /* 13E0 */  0x65, 0x6C, 0x3E, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // el>0</ED
                            /* 13E8 */  0x50, 0x50, 0x72, 0x65, 0x65, 0x6D, 0x70, 0x68,  // PPreemph
                            /* 13F0 */  0x61, 0x73, 0x69, 0x73, 0x4C, 0x65, 0x76, 0x65,  // asisLeve
                            /* 13F8 */  0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // l>.     
                            /* 1400 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1408 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1410 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1418 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 1420 */  0x44, 0x50, 0x43, 0x44, 0x52, 0x65, 0x61, 0x64,  // DPCDRead
                            /* 1428 */  0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F,  // >False</
                            /* 1430 */  0x45, 0x44, 0x50, 0x44, 0x50, 0x43, 0x44, 0x52,  // EDPDPCDR
                            /* 1438 */  0x65, 0x61, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ead>.   
                            /* 1440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1458 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 1460 */  0x44, 0x50, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // DPEDIDRe
                            /* 1468 */  0x61, 0x64, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65,  // ad>False
                            /* 1470 */  0x3C, 0x2F, 0x45, 0x44, 0x50, 0x45, 0x44, 0x49,  // </EDPEDI
                            /* 1478 */  0x44, 0x52, 0x65, 0x61, 0x64, 0x3E, 0x0A, 0x20,  // DRead>. 
                            /* 1480 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1488 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A0 */  0x3C, 0x45, 0x44, 0x50, 0x4E, 0x75, 0x6D, 0x62,  // <EDPNumb
                            /* 14A8 */  0x65, 0x72, 0x4F, 0x66, 0x4C, 0x61, 0x6E, 0x65,  // erOfLane
                            /* 14B0 */  0x73, 0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // s>2</EDP
                            /* 14B8 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x4F, 0x66,  // NumberOf
                            /* 14C0 */  0x4C, 0x61, 0x6E, 0x65, 0x73, 0x3E, 0x0A, 0x20,  // Lanes>. 
                            /* 14C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14E8 */  0x3C, 0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x4C,  // <EDPMaxL
                            /* 14F0 */  0x69, 0x6E, 0x6B, 0x52, 0x61, 0x74, 0x65, 0x3E,  // inkRate>
                            /* 14F8 */  0x38, 0x31, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44,  // 8100</ED
                            /* 1500 */  0x50, 0x4D, 0x61, 0x78, 0x4C, 0x69, 0x6E, 0x6B,  // PMaxLink
                            /* 1508 */  0x52, 0x61, 0x74, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Rate>.  
                            /* 1510 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1518 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1530 */  0x45, 0x44, 0x50, 0x48, 0x50, 0x44, 0x41, 0x63,  // EDPHPDAc
                            /* 1538 */  0x74, 0x69, 0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E,  // tiveLow>
                            /* 1540 */  0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F, 0x45, 0x44,  // True</ED
                            /* 1548 */  0x50, 0x48, 0x50, 0x44, 0x41, 0x63, 0x74, 0x69,  // PHPDActi
                            /* 1550 */  0x76, 0x65, 0x4C, 0x6F, 0x77, 0x3E, 0x0A, 0x20,  // veLow>. 
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1578 */  0x3C, 0x45, 0x44, 0x50, 0x50, 0x6F, 0x77, 0x65,  // <EDPPowe
                            /* 1580 */  0x72, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x49,  // rUpWaitI
                            /* 1588 */  0x6E, 0x4D, 0x73, 0x3E, 0x30, 0x3C, 0x2F, 0x45,  // nMs>0</E
                            /* 1590 */  0x44, 0x50, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x55,  // DPPowerU
                            /* 1598 */  0x70, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6E, 0x4D,  // pWaitInM
                            /* 15A0 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 15A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x50,  //     <EDP
                            /* 15C8 */  0x4D, 0x61, 0x78, 0x41, 0x75, 0x78, 0x52, 0x65,  // MaxAuxRe
                            /* 15D0 */  0x74, 0x72, 0x79, 0x3E, 0x32, 0x30, 0x3C, 0x2F,  // try>20</
                            /* 15D8 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x41, 0x75,  // EDPMaxAu
                            /* 15E0 */  0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x3E, 0x0A,  // xRetry>.
                            /* 15E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1610 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x44, 0x49,  // rrideEDI
                            /* 1618 */  0x44, 0x3E, 0x30, 0x30, 0x20, 0x46, 0x46, 0x20,  // D>00 FF 
                            /* 1620 */  0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // FF FF FF
                            /* 1628 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x30,  //  FF FF 0
                            /* 1630 */  0x30, 0x20, 0x33, 0x30, 0x20, 0x41, 0x45, 0x20,  // 0 30 AE 
                            /* 1638 */  0x33, 0x41, 0x20, 0x34, 0x30, 0x20, 0x30, 0x30,  // 3A 40 00
                            /* 1640 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1648 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x32, 0x31, 0x20,  // 0 00 21 
                            /* 1650 */  0x30, 0x31, 0x20, 0x30, 0x34, 0x20, 0x41, 0x35,  // 01 04 A5
                            /* 1658 */  0x20, 0x31, 0x45, 0x20, 0x31, 0x33, 0x20, 0x37,  //  1E 13 7
                            /* 1660 */  0x38, 0x20, 0x30, 0x37, 0x20, 0x45, 0x45, 0x20,  // 8 07 EE 
                            /* 1668 */  0x39, 0x35, 0x20, 0x41, 0x33, 0x20, 0x35, 0x34,  // 95 A3 54
                            /* 1670 */  0x20, 0x34, 0x43, 0x20, 0x39, 0x39, 0x20, 0x32,  //  4C 99 2
                            /* 1678 */  0x36, 0x20, 0x30, 0x46, 0x20, 0x35, 0x30, 0x20,  // 6 0F 50 
                            /* 1680 */  0x35, 0x34, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 54 00 00
                            /* 1688 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x31, 0x20, 0x30,  //  00 01 0
                            /* 1690 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 1698 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16A0 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 16A8 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 16B0 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 16B8 */  0x20, 0x30, 0x31, 0x20, 0x33, 0x35, 0x20, 0x33,  //  01 35 3
                            /* 16C0 */  0x43, 0x20, 0x38, 0x30, 0x20, 0x41, 0x30, 0x20,  // C 80 A0 
                            /* 16C8 */  0x37, 0x30, 0x20, 0x42, 0x30, 0x20, 0x32, 0x33,  // 70 B0 23
                            /* 16D0 */  0x20, 0x34, 0x30, 0x20, 0x33, 0x30, 0x20, 0x32,  //  40 30 2
                            /* 16D8 */  0x30, 0x20, 0x33, 0x36, 0x20, 0x30, 0x30, 0x20,  // 0 36 00 
                            /* 16E0 */  0x32, 0x45, 0x20, 0x42, 0x43, 0x20, 0x31, 0x30,  // 2E BC 10
                            /* 16E8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x31,  //  00 00 1
                            /* 16F0 */  0x38, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 8 00 00 
                            /* 16F8 */  0x30, 0x30, 0x20, 0x46, 0x44, 0x20, 0x30, 0x30,  // 00 FD 00
                            /* 1700 */  0x20, 0x33, 0x30, 0x20, 0x33, 0x43, 0x20, 0x34,  //  30 3C 4
                            /* 1708 */  0x41, 0x20, 0x34, 0x41, 0x20, 0x30, 0x46, 0x20,  // A 4A 0F 
                            /* 1710 */  0x30, 0x31, 0x20, 0x30, 0x41, 0x20, 0x32, 0x30,  // 01 0A 20
                            /* 1718 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1720 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1728 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1730 */  0x20, 0x30, 0x46, 0x20, 0x30, 0x30, 0x20, 0x44,  //  0F 00 D
                            /* 1738 */  0x31, 0x20, 0x30, 0x41, 0x20, 0x33, 0x30, 0x20,  // 1 0A 30 
                            /* 1740 */  0x44, 0x31, 0x20, 0x30, 0x41, 0x20, 0x33, 0x30,  // D1 0A 30
                            /* 1748 */  0x20, 0x32, 0x38, 0x20, 0x30, 0x41, 0x20, 0x30,  //  28 0A 0
                            /* 1750 */  0x34, 0x20, 0x30, 0x45, 0x20, 0x36, 0x46, 0x20,  // 4 0E 6F 
                            /* 1758 */  0x31, 0x33, 0x20, 0x31, 0x34, 0x20, 0x30, 0x30,  // 13 14 00
                            /* 1760 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46,  //  00 00 F
                            /* 1768 */  0x45, 0x20, 0x30, 0x30, 0x20, 0x34, 0x44, 0x20,  // E 00 4D 
                            /* 1770 */  0x34, 0x45, 0x20, 0x34, 0x35, 0x20, 0x33, 0x30,  // 4E 45 30
                            /* 1778 */  0x20, 0x33, 0x30, 0x20, 0x33, 0x37, 0x20, 0x34,  //  30 37 4
                            /* 1780 */  0x41, 0x20, 0x34, 0x31, 0x20, 0x33, 0x31, 0x20,  // A 41 31 
                            /* 1788 */  0x32, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x41,  // 2D 32 0A
                            /* 1790 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x30, 0x20, 0x41,  //  20 00 A
                            /* 1798 */  0x46, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // F</EDPOv
                            /* 17A0 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x44,  // errideED
                            /* 17A8 */  0x49, 0x44, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ID>.    
                            /* 17B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 17D0 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 17D8 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61, 0x70,  // eDPCDCap
                            /* 17E0 */  0x73, 0x3E, 0x31, 0x32, 0x20, 0x30, 0x41, 0x20,  // s>12 0A 
                            /* 17E8 */  0x43, 0x32, 0x20, 0x34, 0x31, 0x20, 0x30, 0x30,  // C2 41 00
                            /* 17F0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x31, 0x20, 0x43,  //  00 01 C
                            /* 17F8 */  0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x30, 0x20,  // 0 02 00 
                            /* 1800 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1808 */  0x20, 0x30, 0x42, 0x20, 0x30, 0x30, 0x20, 0x30,  //  0B 00 0
                            /* 1810 */  0x30, 0x20, 0x41, 0x34, 0x20, 0x31, 0x46, 0x20,  // 0 A4 1F 
                            /* 1818 */  0x33, 0x30, 0x20, 0x32, 0x41, 0x20, 0x37, 0x36,  // 30 2A 76
                            /* 1820 */  0x20, 0x32, 0x46, 0x20, 0x42, 0x43, 0x20, 0x33,  //  2F BC 3
                            /* 1828 */  0x34, 0x20, 0x34, 0x38, 0x20, 0x33, 0x46, 0x20,  // 4 48 3F 
                            /* 1830 */  0x44, 0x34, 0x20, 0x34, 0x39, 0x20, 0x36, 0x30,  // D4 49 60
                            /* 1838 */  0x20, 0x35, 0x34, 0x20, 0x37, 0x38, 0x20, 0x36,  //  54 78 6
                            /* 1840 */  0x39, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 9</EDPOv
                            /* 1848 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50,  // errideDP
                            /* 1850 */  0x43, 0x44, 0x43, 0x61, 0x70, 0x73, 0x3E, 0x0A,  // CDCaps>.
                            /* 1858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1878 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 1880 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43,  // rrideDPC
                            /* 1888 */  0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E,  // DStatus>
                            /* 1890 */  0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x37, 0x37,  // 01 00 77
                            /* 1898 */  0x20, 0x37, 0x37, 0x20, 0x30, 0x31, 0x20, 0x30,  //  77 01 0
                            /* 18A0 */  0x30, 0x20, 0x34, 0x34, 0x20, 0x34, 0x34, 0x3C,  // 0 44 44<
                            /* 18A8 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 18B0 */  0x72, 0x69, 0x64, 0x65, 0x44, 0x50, 0x43, 0x44,  // rideDPCD
                            /* 18B8 */  0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3E, 0x0A,  // Status>.
                            /* 18C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18E0 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65,  //  <EDPOve
                            /* 18E8 */  0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64,  // rrideMod
                            /* 18F0 */  0x65, 0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // e>1</EDP
                            /* 18F8 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 1900 */  0x4D, 0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // Mode>.  
                            /* 1908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1928 */  0x45, 0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // EDPEnabl
                            /* 1930 */  0x65, 0x53, 0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F,  // eSSC>1</
                            /* 1938 */  0x45, 0x44, 0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // EDPEnabl
                            /* 1940 */  0x65, 0x53, 0x53, 0x43, 0x3E, 0x0A, 0x20, 0x20,  // eSSC>.  
                            /* 1948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1968 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 1970 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 1978 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >2</EDPM
                            /* 1980 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 1988 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 1990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 19B0 */  0x45, 0x44, 0x50, 0x50, 0x73, 0x72, 0x54, 0x72,  // EDPPsrTr
                            /* 19B8 */  0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75,  // ainingDu
                            /* 19C0 */  0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x32,  // ration>2
                            /* 19C8 */  0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45, 0x44, 0x50,  // 500</EDP
                            /* 19D0 */  0x50, 0x73, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6E,  // PsrTrain
                            /* 19D8 */  0x69, 0x6E, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74,  // ingDurat
                            /* 19E0 */  0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ion>.   
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A00 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72,  //     </Gr
                            /* 1A08 */  0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // oup>.   
                            /* 1A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A28 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 1A30 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x42,  // up id='B
                            /* 1A38 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1A40 */  0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75,  //  Configu
                            /* 1A48 */  0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E,  // ration'>
                            /* 1A50 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1A58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A70 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1A78 */  0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65,  // ightType
                            /* 1A80 */  0x3E, 0x31, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // >1</Back
                            /* 1A88 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70,  // lightTyp
                            /* 1A90 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AB0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1AB8 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1AC0 */  0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F,  // icContro
                            /* 1AC8 */  0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x33, 0x3C,  // lType>3<
                            /* 1AD0 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1AD8 */  0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F,  // htPmicCo
                            /* 1AE0 */  0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70,  // ntrolTyp
                            /* 1AE8 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B08 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1B10 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x4D,  // klightPM
                            /* 1B18 */  0x49, 0x43, 0x42, 0x61, 0x6E, 0x6B, 0x53, 0x65,  // ICBankSe
                            /* 1B20 */  0x6C, 0x65, 0x63, 0x74, 0x3E, 0x30, 0x3C, 0x2F,  // lect>0</
                            /* 1B28 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1B30 */  0x74, 0x50, 0x4D, 0x49, 0x43, 0x42, 0x61, 0x6E,  // tPMICBan
                            /* 1B38 */  0x6B, 0x53, 0x65, 0x6C, 0x65, 0x63, 0x74, 0x3E,  // kSelect>
                            /* 1B40 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1B48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1B60 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1B68 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63,  // ightPmic
                            /* 1B70 */  0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69,  // PWMSizei
                            /* 1B78 */  0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x31, 0x32,  // nBits>12
                            /* 1B80 */  0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69,  // </Backli
                            /* 1B88 */  0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50,  // ghtPmicP
                            /* 1B90 */  0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E,  // WMSizein
                            /* 1B98 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 1BA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1BB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1BC0 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1BC8 */  0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D,  // tPMICPWM
                            /* 1BD0 */  0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63,  // Frequenc
                            /* 1BD8 */  0x79, 0x3E, 0x39, 0x39, 0x30, 0x3C, 0x2F, 0x42,  // y>990</B
                            /* 1BE0 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1BE8 */  0x50, 0x4D, 0x49, 0x43, 0x50, 0x57, 0x4D, 0x46,  // PMICPWMF
                            /* 1BF0 */  0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79,  // requency
                            /* 1BF8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C18 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1C20 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1C28 */  0x63, 0x50, 0x57, 0x4D, 0x47, 0x6C, 0x69, 0x74,  // cPWMGlit
                            /* 1C30 */  0x63, 0x68, 0x52, 0x65, 0x6D, 0x6F, 0x76, 0x61,  // chRemova
                            /* 1C38 */  0x6C, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // l>True</
                            /* 1C40 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1C48 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 1C50 */  0x47, 0x6C, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,  // GlitchRe
                            /* 1C58 */  0x6D, 0x6F, 0x76, 0x61, 0x6C, 0x3E, 0x0A, 0x20,  // moval>. 
                            /* 1C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1C80 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1C88 */  0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x73, 0x3E,  // htSteps>
                            /* 1C90 */  0x31, 0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63,  // 100</Bac
                            /* 1C98 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74,  // klightSt
                            /* 1CA0 */  0x65, 0x70, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // eps>.   
                            /* 1CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1CC8 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1CD0 */  0x44, 0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x3E,  // Default>
                            /* 1CD8 */  0x38, 0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // 80</Back
                            /* 1CE0 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66,  // lightDef
                            /* 1CE8 */  0x61, 0x75, 0x6C, 0x74, 0x3E, 0x0A, 0x20, 0x20,  // ault>.  
                            /* 1CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1D10 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1D18 */  0x74, 0x4C, 0x6F, 0x77, 0x50, 0x6F, 0x77, 0x65,  // tLowPowe
                            /* 1D20 */  0x72, 0x3E, 0x34, 0x30, 0x3C, 0x2F, 0x42, 0x61,  // r>40</Ba
                            /* 1D28 */  0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C,  // cklightL
                            /* 1D30 */  0x6F, 0x77, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x3E,  // owPower>
                            /* 1D38 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D58 */  0x20, 0x20, 0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F,  //   <PMIPo
                            /* 1D60 */  0x77, 0x65, 0x72, 0x50, 0x6D, 0x69, 0x63, 0x4E,  // werPmicN
                            /* 1D68 */  0x75, 0x6D, 0x3E, 0x32, 0x3C, 0x2F, 0x50, 0x4D,  // um>2</PM
                            /* 1D70 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x50, 0x6D,  // IPowerPm
                            /* 1D78 */  0x69, 0x63, 0x4E, 0x75, 0x6D, 0x3E, 0x0A, 0x20,  // icNum>. 
                            /* 1D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DA0 */  0x3C, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65,  // <PMIPowe
                            /* 1DA8 */  0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64,  // rPmicMod
                            /* 1DB0 */  0x65, 0x6C, 0x3E, 0x30, 0x78, 0x32, 0x46, 0x3C,  // el>0x2F<
                            /* 1DB8 */  0x2F, 0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65,  // /PMIPowe
                            /* 1DC0 */  0x72, 0x50, 0x6D, 0x69, 0x63, 0x4D, 0x6F, 0x64,  // rPmicMod
                            /* 1DC8 */  0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // el>.    
                            /* 1DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x4D,  //      <PM
                            /* 1DF0 */  0x49, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6F,  // IPowerCo
                            /* 1DF8 */  0x6E, 0x66, 0x69, 0x67, 0x3E, 0x30, 0x3C, 0x2F,  // nfig>0</
                            /* 1E00 */  0x50, 0x4D, 0x49, 0x50, 0x6F, 0x77, 0x65, 0x72,  // PMIPower
                            /* 1E08 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x3E, 0x0A,  // Config>.
                            /* 1E10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E30 */  0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  //  <Bright
                            /* 1E38 */  0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69, 0x6E, 0x4C,  // nessMinL
                            /* 1E40 */  0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65,  // uminance
                            /* 1E48 */  0x3E, 0x30, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67,  // >0</Brig
                            /* 1E50 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x4D, 0x69,  // htnessMi
                            /* 1E58 */  0x6E, 0x4C, 0x75, 0x6D, 0x69, 0x6E, 0x61, 0x6E,  // nLuminan
                            /* 1E60 */  0x63, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ce>.    
                            /* 1E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x72,  //      <Br
                            /* 1E88 */  0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73,  // ightness
                            /* 1E90 */  0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D, 0x69, 0x6E,  // MaxLumin
                            /* 1E98 */  0x61, 0x6E, 0x63, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ance>0</
                            /* 1EA0 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1EA8 */  0x73, 0x73, 0x4D, 0x61, 0x78, 0x4C, 0x75, 0x6D,  // ssMaxLum
                            /* 1EB0 */  0x69, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x3E, 0x0A,  // inance>.
                            /* 1EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1ED8 */  0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  //  <Bright
                            /* 1EE0 */  0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E, 0x67,  // nessRang
                            /* 1EE8 */  0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30, 0x3E,  // eLevel0>
                            /* 1EF0 */  0x34, 0x30, 0x30, 0x30, 0x20, 0x34, 0x30, 0x30,  // 4000 400
                            /* 1EF8 */  0x30, 0x30, 0x30, 0x20, 0x34, 0x30, 0x30, 0x30,  // 000 4000
                            /* 1F00 */  0x20, 0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67,  //  2</Brig
                            /* 1F08 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61,  // htnessRa
                            /* 1F10 */  0x6E, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C,  // ngeLevel
                            /* 1F18 */  0x30, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // 0>.     
                            /* 1F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F38 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x41, 0x64, 0x61,  //     <Ada
                            /* 1F40 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1F48 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1F50 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x31,  // eature>1
                            /* 1F58 */  0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,  // </Adapti
                            /* 1F60 */  0x76, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74,  // veBright
                            /* 1F68 */  0x6E, 0x65, 0x73, 0x73, 0x46, 0x65, 0x61, 0x74,  // nessFeat
                            /* 1F70 */  0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ure>.   
                            /* 1F78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43,  //       <C
                            /* 1F98 */  0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C,  // ABLEnabl
                            /* 1FA0 */  0x65, 0x3E, 0x54, 0x72, 0x75, 0x65, 0x3C, 0x2F,  // e>True</
                            /* 1FA8 */  0x43, 0x41, 0x42, 0x4C, 0x45, 0x6E, 0x61, 0x62,  // CABLEnab
                            /* 1FB0 */  0x6C, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // le>.    
                            /* 1FB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1FD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x43, 0x41,  //      <CA
                            /* 1FD8 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 1FE0 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 1FE8 */  0x76, 0x65, 0x6C, 0x3E, 0x30, 0x78, 0x34, 0x62,  // vel>0x4b
                            /* 1FF0 */  0x34, 0x30, 0x33, 0x32, 0x3C, 0x2F, 0x43, 0x41,  // 4032</CA
                            /* 1FF8 */  0x42, 0x4C, 0x4D, 0x69, 0x6E, 0x42, 0x61, 0x63,  // BLMinBac
                            /* 2000 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x4C, 0x65,  // klightLe
                            /* 2008 */  0x76, 0x65, 0x6C, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // vel>.   
                            /* 2010 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2018 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2020 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2028 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72,  //     </Gr
                            /* 2030 */  0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // oup>.   
                            /* 2038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2048 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 2050 */  0x20, 0x20, 0x20, 0x20, 0x00                     //     .
                        })
                        Local2 = PLC8 /* \_SB_.GPU0._ROM.PLC8 */
                        Break
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Name (PLC4, Buffer (0x1A57)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0048 */  0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64, 0x3D,  // roup id=
                            /* 0050 */  0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50, 0x61,  // 'Main Pa
                            /* 0058 */  0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // nel'>.  
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50, 0x61,  //      <Pa
                            /* 0080 */  0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65, 0x3E,  // nelName>
                            /* 0088 */  0x47, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x45,  // GenericE
                            /* 0090 */  0x44, 0x50, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65,  // DP</Pane
                            /* 0098 */  0x6C, 0x4E, 0x61, 0x6D, 0x65, 0x3E, 0x0A, 0x20,  // lName>. 
                            /* 00A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 00C0 */  0x61, 0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63,  // anelDesc
                            /* 00C8 */  0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // ription>
                            /* 00D0 */  0x47, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x20,  // Generic 
                            /* 00D8 */  0x65, 0x44, 0x50, 0x20, 0x50, 0x61, 0x6E, 0x65,  // eDP Pane
                            /* 00E0 */  0x6C, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C,  // l</Panel
                            /* 00E8 */  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,  // Descript
                            /* 00F0 */  0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ion>.   
                            /* 00F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0100 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0108 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0110 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 0118 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x45,  // up id='E
                            /* 0120 */  0x44, 0x49, 0x44, 0x20, 0x43, 0x6F, 0x6E, 0x66,  // DID Conf
                            /* 0128 */  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F,  // iguratio
                            /* 0130 */  0x6E, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // n'>.    
                            /* 0138 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0140 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0150 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0158 */  0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74,  // Manufact
                            /* 0160 */  0x75, 0x72, 0x65, 0x49, 0x44, 0x3E, 0x30, 0x78,  // ureID>0x
                            /* 0168 */  0x31, 0x30, 0x34, 0x44, 0x3C, 0x2F, 0x4D, 0x61,  // 104D</Ma
                            /* 0170 */  0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,  // nufactur
                            /* 0178 */  0x65, 0x49, 0x44, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // eID>.   
                            /* 0180 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01A0 */  0x3C, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74,  // <Product
                            /* 01A8 */  0x43, 0x6F, 0x64, 0x65, 0x3E, 0x38, 0x35, 0x30,  // Code>850
                            /* 01B0 */  0x3C, 0x2F, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63,  // </Produc
                            /* 01B8 */  0x74, 0x43, 0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20,  // tCode>. 
                            /* 01C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01E0 */  0x20, 0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61,  //   <Seria
                            /* 01E8 */  0x6C, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E,  // lNumber>
                            /* 01F0 */  0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31,  // 0x000001
                            /* 01F8 */  0x3C, 0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  // </Serial
                            /* 0200 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A,  // Number>.
                            /* 0208 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0228 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0230 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0238 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0240 */  0x30, 0x31, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 01</Week
                            /* 0248 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0250 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0278 */  0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72, 0x6F,  //   <Yearo
                            /* 0280 */  0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63,  // fManufac
                            /* 0288 */  0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78, 0x31,  // ture>0x1
                            /* 0290 */  0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72, 0x6F,  // B</Yearo
                            /* 0298 */  0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61, 0x63,  // fManufac
                            /* 02A0 */  0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // ture>.  
                            /* 02A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C8 */  0x20, 0x3C, 0x45, 0x44, 0x49, 0x44, 0x56, 0x65,  //  <EDIDVe
                            /* 02D0 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x31, 0x3C,  // rsion>1<
                            /* 02D8 */  0x2F, 0x45, 0x44, 0x49, 0x44, 0x56, 0x65, 0x72,  // /EDIDVer
                            /* 02E0 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 02E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0300 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0308 */  0x20, 0x3C, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  //  <EDIDRe
                            /* 0310 */  0x76, 0x69, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x33,  // vision>3
                            /* 0318 */  0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x52, 0x65,  // </EDIDRe
                            /* 0320 */  0x76, 0x69, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // vision>.
                            /* 0328 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0330 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0338 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0340 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0348 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x69, 0x64, 0x65,  //    <Vide
                            /* 0350 */  0x6F, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65,  // oInputDe
                            /* 0358 */  0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E,  // finition
                            /* 0360 */  0x3E, 0x30, 0x78, 0x38, 0x30, 0x3C, 0x2F, 0x56,  // >0x80</V
                            /* 0368 */  0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70, 0x75,  // ideoInpu
                            /* 0370 */  0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74,  // tDefinit
                            /* 0378 */  0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ion>.   
                            /* 0380 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0388 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0390 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0398 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03A0 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 03A8 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03B0 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30, 0x78,  // nSize>0x
                            /* 03B8 */  0x30, 0x37, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // 07</Hori
                            /* 03C0 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63,  // zontalSc
                            /* 03C8 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 03D0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 03D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 03F8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63,  // rticalSc
                            /* 0400 */  0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65,  // reenSize
                            /* 0408 */  0x3E, 0x30, 0x78, 0x30, 0x43, 0x3C, 0x2F, 0x56,  // >0x0C</V
                            /* 0410 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0418 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0420 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0428 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0430 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0438 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                            /* 0448 */  0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72,  // isplayTr
                            /* 0450 */  0x61, 0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68,  // ansferCh
                            /* 0458 */  0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,  // aracteri
                            /* 0460 */  0x73, 0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78,  // stics>0x
                            /* 0468 */  0x37, 0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70,  // 78</Disp
                            /* 0470 */  0x6C, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73,  // layTrans
                            /* 0478 */  0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61,  // ferChara
                            /* 0480 */  0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,  // cteristi
                            /* 0488 */  0x63, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // cs>.    
                            /* 0490 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0498 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04B0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04B8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04C0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04C8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 04D0 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 04D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04F8 */  0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65, 0x65,  // Red.Gree
                            /* 0500 */  0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30, 0x78,  // nBits>0x
                            /* 0508 */  0x41, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x2E,  // A5</Red.
                            /* 0510 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69, 0x74,  // GreenBit
                            /* 0518 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 0520 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0528 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0530 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0538 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 0540 */  0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74,  // lue.Whit
                            /* 0548 */  0x65, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30, 0x78,  // eBits>0x
                            /* 0550 */  0x35, 0x38, 0x3C, 0x2F, 0x42, 0x6C, 0x75, 0x65,  // 58</Blue
                            /* 0558 */  0x2E, 0x57, 0x68, 0x69, 0x74, 0x65, 0x42, 0x69,  // .WhiteBi
                            /* 0560 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0570 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0578 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0580 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0588 */  0x52, 0x65, 0x64, 0x58, 0x3E, 0x30, 0x78, 0x41,  // RedX>0xA
                            /* 0590 */  0x36, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x58, 0x3E,  // 6</RedX>
                            /* 0598 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 05A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x52, 0x65, 0x64,  //     <Red
                            /* 05C0 */  0x59, 0x3E, 0x30, 0x78, 0x35, 0x34, 0x3C, 0x2F,  // Y>0x54</
                            /* 05C8 */  0x52, 0x65, 0x64, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // RedY>.  
                            /* 05D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x20, 0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x58,  //  <GreenX
                            /* 05F8 */  0x3E, 0x30, 0x78, 0x33, 0x33, 0x3C, 0x2F, 0x47,  // >0x33</G
                            /* 0600 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x0A, 0x20,  // reenX>. 
                            /* 0608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0628 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E,  //   <Green
                            /* 0630 */  0x59, 0x3E, 0x30, 0x78, 0x42, 0x33, 0x3C, 0x2F,  // Y>0xB3</
                            /* 0638 */  0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A,  // GreenY>.
                            /* 0640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0648 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0650 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65,  //    <Blue
                            /* 0668 */  0x58, 0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F,  // X>0x26</
                            /* 0670 */  0x42, 0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20,  // BlueX>. 
                            /* 0678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06A0 */  0x3E, 0x30, 0x78, 0x31, 0x32, 0x3C, 0x2F, 0x42,  // >0x12</B
                            /* 06A8 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65, 0x58,  //  <WhiteX
                            /* 06D8 */  0x3E, 0x30, 0x78, 0x34, 0x46, 0x3C, 0x2F, 0x57,  // >0x4F</W
                            /* 06E0 */  0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A, 0x20,  // hiteX>. 
                            /* 06E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 0710 */  0x59, 0x3E, 0x30, 0x78, 0x35, 0x34, 0x3C, 0x2F,  // Y>0x54</
                            /* 0718 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x59, 0x3E, 0x0A,  // WhiteY>.
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0740 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x73, 0x74, 0x61,  //    <Esta
                            /* 0748 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 0750 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x3E,  // imingsI>
                            /* 0758 */  0x30, 0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74,  // 0x0</Est
                            /* 0760 */  0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64,  // ablished
                            /* 0768 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49,  // TimingsI
                            /* 0770 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0780 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0788 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0790 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x73,  //      <Es
                            /* 0798 */  0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65,  // tablishe
                            /* 07A0 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 07A8 */  0x49, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // II>0x0</
                            /* 07B0 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 07B8 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 07C0 */  0x67, 0x73, 0x49, 0x49, 0x3E, 0x0A, 0x20, 0x20,  // gsII>.  
                            /* 07C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07E8 */  0x20, 0x3C, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  //  <Manufa
                            /* 07F0 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 07F8 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x30, 0x78, 0x30,  // ming>0x0
                            /* 0800 */  0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // </Manufa
                            /* 0808 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x69,  // cturesTi
                            /* 0810 */  0x6D, 0x69, 0x6E, 0x67, 0x3E, 0x0A, 0x20, 0x20,  // ming>.  
                            /* 0818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0828 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0830 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0838 */  0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61,  //  <Standa
                            /* 0840 */  0x72, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // rdTiming
                            /* 0848 */  0x73, 0x31, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // s1/>.   
                            /* 0850 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0858 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0860 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0868 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0870 */  0x3C, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72,  // <Standar
                            /* 0878 */  0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73,  // dTimings
                            /* 0880 */  0x32, 0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // 2/>.    
                            /* 0888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08A8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08B0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08B8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x53,  //       <S
                            /* 08E0 */  0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x54,  // tandardT
                            /* 08E8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34, 0x2F,  // imings4/
                            /* 08F0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 08F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0900 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0908 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0910 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x74,  //      <St
                            /* 0918 */  0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x54, 0x69,  // andardTi
                            /* 0920 */  0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35, 0x2F, 0x3E,  // mings5/>
                            /* 0928 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0930 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0948 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x53, 0x74, 0x61,  //     <Sta
                            /* 0950 */  0x6E, 0x64, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6D,  // ndardTim
                            /* 0958 */  0x69, 0x6E, 0x67, 0x73, 0x36, 0x2F, 0x3E, 0x0A,  // ings6/>.
                            /* 0960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0970 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0978 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0980 */  0x20, 0x20, 0x20, 0x3C, 0x53, 0x74, 0x61, 0x6E,  //    <Stan
                            /* 0988 */  0x64, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6D, 0x69,  // dardTimi
                            /* 0990 */  0x6E, 0x67, 0x73, 0x37, 0x2F, 0x3E, 0x0A, 0x20,  // ngs7/>. 
                            /* 0998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09B8 */  0x20, 0x20, 0x3C, 0x53, 0x69, 0x67, 0x6E, 0x61,  //   <Signa
                            /* 09C0 */  0x6C, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x49,  // lTimingI
                            /* 09C8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 09D0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09F0 */  0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75,  //   </Grou
                            /* 09F8 */  0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // p>.     
                            /* 0A00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A18 */  0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70,  //   <Group
                            /* 0A20 */  0x20, 0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74,  //  id='Det
                            /* 0A28 */  0x61, 0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69,  // ailed Ti
                            /* 0A30 */  0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20,  // ming'>. 
                            /* 0A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A58 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0A60 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0A68 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0A70 */  0x4D, 0x3E, 0x30, 0x78, 0x34, 0x34, 0x3C, 0x2F,  // M>0x44</
                            /* 0A78 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0A80 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0A88 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0A90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AB0 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0AB8 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0AC0 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D,  // enSizeMM
                            /* 0AC8 */  0x3E, 0x30, 0x78, 0x37, 0x38, 0x3C, 0x2F, 0x56,  // >0x78</V
                            /* 0AD0 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x53,  // erticalS
                            /* 0AD8 */  0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A,  // creenSiz
                            /* 0AE0 */  0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // eMM>.   
                            /* 0AE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B08 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0B10 */  0x74, 0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69,  // talVerti
                            /* 0B18 */  0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // calScree
                            /* 0B20 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E,  // nSizeMM>
                            /* 0B28 */  0x30, 0x78, 0x30, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // 0x00</Ho
                            /* 0B30 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0B38 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0B40 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0B48 */  0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20,  // zeMM>.  
                            /* 0B50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47,  //      </G
                            /* 0B70 */  0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20,  // roup>.  
                            /* 0B78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72,  //      <Gr
                            /* 0B98 */  0x6F, 0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27,  // oup id='
                            /* 0BA0 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54,  // Active T
                            /* 0BA8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A,  // iming'>.
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BD0 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0BD8 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41, 0x63,  // zontalAc
                            /* 0BE0 */  0x74, 0x69, 0x76, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // tive>0</
                            /* 0BE8 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0BF0 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0BF8 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0C00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0C20 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C28 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C30 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0C38 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0C40 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0C48 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0C50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0C70 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0C78 */  0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F,  // alBackPo
                            /* 0C80 */  0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // rch>0</H
                            /* 0C88 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0C90 */  0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72,  // lBackPor
                            /* 0C98 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0CA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0CC0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0CC8 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0CD0 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // lse>0</H
                            /* 0CD8 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0CE0 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0CE8 */  0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // se>.    
                            /* 0CF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0D10 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D18 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B,  // alSyncSk
                            /* 0D20 */  0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ew>0</Ho
                            /* 0D28 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0D30 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0D38 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0D40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 0D60 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0D68 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0D70 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // er>0</Ho
                            /* 0D78 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0D80 */  0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F, 0x72, 0x64,  // LeftBord
                            /* 0D88 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0D90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0DB0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0DB8 */  0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42,  // alRightB
                            /* 0DC0 */  0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C,  // order>0<
                            /* 0DC8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 0DD0 */  0x74, 0x61, 0x6C, 0x52, 0x69, 0x67, 0x68, 0x74,  // talRight
                            /* 0DD8 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A,  // Border>.
                            /* 0DE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E00 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0E08 */  0x69, 0x63, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69,  // icalActi
                            /* 0E10 */  0x76, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // ve>0</Ve
                            /* 0E18 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x41, 0x63,  // rticalAc
                            /* 0E20 */  0x74, 0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20, 0x20,  // tive>.  
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E48 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0E50 */  0x61, 0x6C, 0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50,  // alFrontP
                            /* 0E58 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F,  // orch>0</
                            /* 0E60 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E68 */  0x46, 0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72,  // FrontPor
                            /* 0E70 */  0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ch>.    
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E98 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0EA0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0EA8 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0EB0 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61, 0x63,  // ticalBac
                            /* 0EB8 */  0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A,  // kPorch>.
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0ED8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EE0 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0EE8 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0EF0 */  0x50, 0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C,  // Pulse>0<
                            /* 0EF8 */  0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,  // /Vertica
                            /* 0F00 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0F08 */  0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // se>.    
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0F30 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F38 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F40 */  0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // >0</Vert
                            /* 0F48 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F50 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20,  // Skew>.  
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F78 */  0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  //  <Vertic
                            /* 0F80 */  0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72,  // alTopBor
                            /* 0F88 */  0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56,  // der>0</V
                            /* 0F90 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x54,  // erticalT
                            /* 0F98 */  0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  // opBorder
                            /* 0FA0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0FC8 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 0FD0 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 0FD8 */  0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65,  // er>0</Ve
                            /* 0FE0 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x6F,  // rticalBo
                            /* 0FE8 */  0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F, 0x72, 0x64,  // ttomBord
                            /* 0FF0 */  0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // er>.    
                            /* 0FF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1000 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1008 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1010 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1018 */  0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61,  // InvertDa
                            /* 1020 */  0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69,  // taPolari
                            /* 1028 */  0x74, 0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65,  // ty>False
                            /* 1030 */  0x3C, 0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74,  // </Invert
                            /* 1038 */  0x44, 0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C, 0x61,  // DataPola
                            /* 1040 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // rity>.  
                            /* 1048 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1050 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1058 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1068 */  0x20, 0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74,  //  <Invert
                            /* 1070 */  0x56, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C,  // VsyncPol
                            /* 1078 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x46, 0x61,  // arity>Fa
                            /* 1080 */  0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76,  // lse</Inv
                            /* 1088 */  0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E, 0x63,  // ertVsync
                            /* 1090 */  0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79,  // Polarity
                            /* 1098 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 10A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 10C0 */  0x76, 0x65, 0x72, 0x74, 0x48, 0x73, 0x79, 0x6E,  // vertHsyn
                            /* 10C8 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // cPolarit
                            /* 10D0 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10D8 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x48,  // /InvertH
                            /* 10E0 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10E8 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // rity>.  
                            /* 10F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1100 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1108 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1110 */  0x20, 0x3C, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  //  <Border
                            /* 1118 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78,  // Color>0x
                            /* 1120 */  0x30, 0x3C, 0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65,  // 0</Borde
                            /* 1128 */  0x72, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A,  // rColor>.
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1140 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1150 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 1158 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1160 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1168 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1178 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 1180 */  0x3D, 0x27, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61,  // ='Displa
                            /* 1188 */  0x79, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  // y Interf
                            /* 1190 */  0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ace'>.  
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11B8 */  0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  //  <Interf
                            /* 11C0 */  0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3E,  // aceType>
                            /* 11C8 */  0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74, 0x65,  // 18</Inte
                            /* 11D0 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,  // rfaceTyp
                            /* 11D8 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 11E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49,  //       <I
                            /* 1200 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1208 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72,  // ColorFor
                            /* 1210 */  0x6D, 0x61, 0x74, 0x3E, 0x33, 0x3C, 0x2F, 0x49,  // mat>3</I
                            /* 1218 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 1220 */  0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46, 0x6F, 0x72,  // ColorFor
                            /* 1228 */  0x6D, 0x61, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // mat>.   
                            /* 1230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1240 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1248 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47, 0x72,  //     </Gr
                            /* 1250 */  0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // oup>.   
                            /* 1258 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x47, 0x72, 0x6F,  //     <Gro
                            /* 1278 */  0x75, 0x70, 0x20, 0x69, 0x64, 0x3D, 0x27, 0x65,  // up id='e
                            /* 1280 */  0x44, 0x50, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72,  // DP Inter
                            /* 1288 */  0x66, 0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20,  // face'>. 
                            /* 1290 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B0 */  0x20, 0x20, 0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76,  //   <EDPOv
                            /* 12B8 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x44,  // errideED
                            /* 12C0 */  0x49, 0x44, 0x3E, 0x30, 0x30, 0x20, 0x46, 0x46,  // ID>00 FF
                            /* 12C8 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 12D0 */  0x46, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20,  // F FF FF 
                            /* 12D8 */  0x30, 0x30, 0x20, 0x33, 0x30, 0x20, 0x41, 0x45,  // 00 30 AE
                            /* 12E0 */  0x20, 0x34, 0x42, 0x20, 0x34, 0x31, 0x20, 0x30,  //  4B 41 0
                            /* 12E8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 12F0 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x32, 0x31,  // 00 00 21
                            /* 12F8 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x34, 0x20, 0x42,  //  01 04 B
                            /* 1300 */  0x35, 0x20, 0x31, 0x45, 0x20, 0x31, 0x33, 0x20,  // 5 1E 13 
                            /* 1308 */  0x37, 0x38, 0x20, 0x30, 0x32, 0x20, 0x30, 0x43,  // 78 02 0C
                            /* 1310 */  0x20, 0x46, 0x31, 0x20, 0x41, 0x45, 0x20, 0x35,  //  F1 AE 5
                            /* 1318 */  0x32, 0x20, 0x33, 0x43, 0x20, 0x42, 0x39, 0x20,  // 2 3C B9 
                            /* 1320 */  0x32, 0x33, 0x20, 0x30, 0x43, 0x20, 0x35, 0x30,  // 23 0C 50
                            /* 1328 */  0x20, 0x35, 0x34, 0x20, 0x30, 0x30, 0x20, 0x30,  //  54 00 0
                            /* 1330 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x31, 0x20,  // 0 00 01 
                            /* 1338 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1340 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1348 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 1350 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1358 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1360 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x43, 0x41, 0x20,  // 1 01 CA 
                            /* 1368 */  0x46, 0x45, 0x20, 0x34, 0x30, 0x20, 0x36, 0x34,  // FE 40 64
                            /* 1370 */  0x20, 0x42, 0x30, 0x20, 0x30, 0x38, 0x20, 0x33,  //  B0 08 3
                            /* 1378 */  0x38, 0x20, 0x37, 0x37, 0x20, 0x30, 0x38, 0x20,  // 8 77 08 
                            /* 1380 */  0x32, 0x30, 0x20, 0x38, 0x38, 0x20, 0x30, 0x20,  // 20 88 0 
                            /* 1388 */  0x32, 0x45, 0x20, 0x42, 0x44, 0x20, 0x31, 0x30,  // 2E BD 10
                            /* 1390 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x31,  //  00 00 1
                            /* 1398 */  0x42, 0x20, 0x43, 0x41, 0x20, 0x46, 0x45, 0x20,  // B CA FE 
                            /* 13A0 */  0x34, 0x30, 0x20, 0x36, 0x34, 0x20, 0x42, 0x30,  // 40 64 B0
                            /* 13A8 */  0x20, 0x30, 0x38, 0x20, 0x31, 0x38, 0x20, 0x37,  //  08 18 7
                            /* 13B0 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x30, 0x38, 0x20,  // 0 20 08 
                            /* 13B8 */  0x38, 0x38, 0x20, 0x30, 0x30, 0x20, 0x32, 0x45,  // 88 00 2E
                            /* 13C0 */  0x20, 0x42, 0x44, 0x20, 0x31, 0x30, 0x20, 0x30,  //  BD 10 0
                            /* 13C8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x31, 0x42, 0x20,  // 0 00 1B 
                            /* 13D0 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 13D8 */  0x20, 0x30, 0x46, 0x20, 0x30, 0x30, 0x20, 0x46,  //  0F 00 F
                            /* 13E0 */  0x46, 0x20, 0x30, 0x41, 0x20, 0x33, 0x43, 0x20,  // F 0A 3C 
                            /* 13E8 */  0x46, 0x46, 0x20, 0x30, 0x41, 0x20, 0x33, 0x43,  // FF 0A 3C
                            /* 13F0 */  0x20, 0x32, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30,  //  27 00 0
                            /* 13F8 */  0x33, 0x20, 0x34, 0x43, 0x20, 0x38, 0x33, 0x20,  // 3 4C 83 
                            /* 1400 */  0x39, 0x46, 0x20, 0x34, 0x31, 0x20, 0x30, 0x30,  // 9F 41 00
                            /* 1408 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46,  //  00 00 F
                            /* 1410 */  0x45, 0x20, 0x30, 0x30, 0x20, 0x34, 0x31, 0x20,  // E 00 41 
                            /* 1418 */  0x35, 0x34, 0x20, 0x34, 0x45, 0x20, 0x34, 0x31,  // 54 4E 41
                            /* 1420 */  0x20, 0x33, 0x34, 0x20, 0x33, 0x30, 0x20, 0x35,  //  34 30 5
                            /* 1428 */  0x39, 0x20, 0x34, 0x42, 0x20, 0x33, 0x32, 0x20,  // 9 4B 32 
                            /* 1430 */  0x33, 0x30, 0x20, 0x32, 0x44, 0x20, 0x33, 0x30,  // 30 2D 30
                            /* 1438 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x31, 0x20, 0x42,  //  20 01 B
                            /* 1440 */  0x41, 0x20, 0x30, 0x32, 0x20, 0x30, 0x33, 0x20,  // A 02 03 
                            /* 1448 */  0x30, 0x46, 0x20, 0x30, 0x30, 0x20, 0x45, 0x33,  // 0F 00 E3
                            /* 1450 */  0x20, 0x30, 0x35, 0x20, 0x38, 0x30, 0x20, 0x30,  //  05 80 0
                            /* 1458 */  0x30, 0x20, 0x45, 0x36, 0x20, 0x30, 0x36, 0x20,  // 0 E6 06 
                            /* 1460 */  0x30, 0x35, 0x20, 0x30, 0x31, 0x20, 0x37, 0x34,  // 05 01 74
                            /* 1468 */  0x20, 0x36, 0x30, 0x20, 0x30, 0x37, 0x20, 0x30,  //  60 07 0
                            /* 1470 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1478 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1480 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1488 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1490 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1498 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 14A0 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 14A8 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 14B0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 14B8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 14C0 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 14C8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 14D0 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 14D8 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 14E0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 14E8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 14F0 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 14F8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1500 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1508 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1510 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1518 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1520 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1528 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1530 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1538 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1540 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1548 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1550 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1558 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1560 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1568 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1570 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1578 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1580 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 1588 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1590 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1598 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 15A0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 15A8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 15B0 */  0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30,  // 00 00 00
                            /* 15B8 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x42,  //  00 00 B
                            /* 15C0 */  0x37, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 7</EDPOv
                            /* 15C8 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x44,  // errideED
                            /* 15D0 */  0x49, 0x44, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ID>.    
                            /* 15D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 15F8 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1600 */  0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65, 0x3E,  // ideMode>
                            /* 1608 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76,  // 1</EDPOv
                            /* 1610 */  0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F,  // errideMo
                            /* 1618 */  0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // de>.    
                            /* 1620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1628 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1640 */  0x45, 0x44, 0x50, 0x4D, 0x61, 0x78, 0x50, 0x73,  // EDPMaxPs
                            /* 1648 */  0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E,  // rVersion
                            /* 1650 */  0x3E, 0x31, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4D,  // >1</EDPM
                            /* 1658 */  0x61, 0x78, 0x50, 0x73, 0x72, 0x56, 0x65, 0x72,  // axPsrVer
                            /* 1660 */  0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20, 0x20,  // sion>.  
                            /* 1668 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1670 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1688 */  0x20, 0x3C, 0x45, 0x44, 0x50, 0x50, 0x73, 0x72,  //  <EDPPsr
                            /* 1690 */  0x54, 0x72, 0x61, 0x69, 0x6E, 0x69, 0x6E, 0x67,  // Training
                            /* 1698 */  0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E,  // Duration
                            /* 16A0 */  0x3E, 0x32, 0x35, 0x30, 0x30, 0x3C, 0x2F, 0x45,  // >2500</E
                            /* 16A8 */  0x44, 0x50, 0x50, 0x73, 0x72, 0x54, 0x72, 0x61,  // DPPsrTra
                            /* 16B0 */  0x69, 0x6E, 0x69, 0x6E, 0x67, 0x44, 0x75, 0x72,  // iningDur
                            /* 16B8 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A, 0x20,  // ation>. 
                            /* 16C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 16E0 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 16E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 1708 */  0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64, 0x3D,  // roup id=
                            /* 1710 */  0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // 'Backlig
                            /* 1718 */  0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69,  // ht Confi
                            /* 1720 */  0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E,  // guration
                            /* 1728 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1730 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1738 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1740 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1748 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x42,  //       <B
                            /* 1750 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 1758 */  0x54, 0x79, 0x70, 0x65, 0x3E, 0x35, 0x3C, 0x2F,  // Type>5</
                            /* 1760 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1768 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A, 0x20,  // tType>. 
                            /* 1770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1778 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1780 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1788 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1790 */  0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C,  //   <Backl
                            /* 1798 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63,  // ightPmic
                            /* 17A0 */  0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54,  // ControlT
                            /* 17A8 */  0x79, 0x70, 0x65, 0x3E, 0x34, 0x3C, 0x2F, 0x42,  // ype>4</B
                            /* 17B0 */  0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74,  // acklight
                            /* 17B8 */  0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74,  // PmicCont
                            /* 17C0 */  0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E,  // rolType>
                            /* 17C8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 17D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17E8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 17F0 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 17F8 */  0x69, 0x63, 0x49, 0x64, 0x3E, 0x30, 0x3C, 0x2F,  // icId>0</
                            /* 1800 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1808 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x49, 0x64, 0x3E,  // tPmicId>
                            /* 1810 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1828 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1830 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 1838 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 1840 */  0x69, 0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A,  // icPWMSiz
                            /* 1848 */  0x65, 0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E,  // einBits>
                            /* 1850 */  0x31, 0x32, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // 12</Back
                            /* 1858 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69,  // lightPmi
                            /* 1860 */  0x63, 0x50, 0x57, 0x4D, 0x53, 0x69, 0x7A, 0x65,  // cPWMSize
                            /* 1868 */  0x69, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A,  // inBits>.
                            /* 1870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1878 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1880 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1890 */  0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63, 0x6B,  //    <Back
                            /* 1898 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49,  // lightPMI
                            /* 18A0 */  0x43, 0x50, 0x57, 0x4D, 0x46, 0x72, 0x65, 0x71,  // CPWMFreq
                            /* 18A8 */  0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E, 0x32, 0x34,  // uency>24
                            /* 18B0 */  0x30, 0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B,  // 00</Back
                            /* 18B8 */  0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x4D, 0x49,  // lightPMI
                            /* 18C0 */  0x43, 0x50, 0x57, 0x4D, 0x46, 0x72, 0x65, 0x71,  // CPWMFreq
                            /* 18C8 */  0x75, 0x65, 0x6E, 0x63, 0x79, 0x3E, 0x0A, 0x20,  // uency>. 
                            /* 18D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18F0 */  0x20, 0x20, 0x3C, 0x42, 0x72, 0x69, 0x67, 0x68,  //   <Brigh
                            /* 18F8 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1900 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1908 */  0x3E, 0x34, 0x30, 0x30, 0x30, 0x20, 0x34, 0x30,  // >4000 40
                            /* 1910 */  0x30, 0x30, 0x30, 0x30, 0x20, 0x34, 0x30, 0x30,  // 0000 400
                            /* 1918 */  0x30, 0x20, 0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69,  // 0 2</Bri
                            /* 1920 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x52,  // ghtnessR
                            /* 1928 */  0x61, 0x6E, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65,  // angeLeve
                            /* 1930 */  0x6C, 0x30, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // l0>.    
                            /* 1938 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1940 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1958 */  0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65,  // Adaptive
                            /* 1960 */  0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65,  // Brightne
                            /* 1968 */  0x73, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,  // ssFeatur
                            /* 1970 */  0x65, 0x3E, 0x31, 0x3C, 0x2F, 0x41, 0x64, 0x61,  // e>1</Ada
                            /* 1978 */  0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69,  // ptiveBri
                            /* 1980 */  0x67, 0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46,  // ghtnessF
                            /* 1988 */  0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A,  // eature>.
                            /* 1990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19B0 */  0x20, 0x20, 0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C,  //    <CABL
                            /* 19B8 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x54,  // Enable>T
                            /* 19C0 */  0x72, 0x75, 0x65, 0x3C, 0x2F, 0x43, 0x41, 0x42,  // rue</CAB
                            /* 19C8 */  0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E,  // LEnable>
                            /* 19D0 */  0x0A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // ..      
                            /* 19D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 19F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4C, 0x54,  //      <LT
                            /* 19F8 */  0x4D, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E,  // MEnable>
                            /* 1A00 */  0x31, 0x3C, 0x2F, 0x4C, 0x54, 0x4D, 0x45, 0x6E,  // 1</LTMEn
                            /* 1A08 */  0x61, 0x62, 0x6C, 0x65, 0x3E, 0x0A, 0x0A, 0x20,  // able>.. 
                            /* 1A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1A30 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1A50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00         //       .
                        })
                        Local2 = PLC4 /* \_SB_.GPU0._ROM.PLC4 */
                        Break
                    }
                    Else
                    {
                        Name (PCFG, Buffer (0x1963)
                        {
                            /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                            /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                            /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                            /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                            /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                            /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0048 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 0050 */  0x3D, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x20, 0x50,  // ='Main P
                            /* 0058 */  0x61, 0x6E, 0x65, 0x6C, 0x27, 0x3E, 0x0A, 0x20,  // anel'>. 
                            /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0070 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0078 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0080 */  0x50, 0x61, 0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D,  // PanelNam
                            /* 0088 */  0x65, 0x3E, 0x47, 0x65, 0x6E, 0x65, 0x72, 0x69,  // e>Generi
                            /* 0090 */  0x63, 0x45, 0x44, 0x50, 0x3C, 0x2F, 0x50, 0x61,  // cEDP</Pa
                            /* 0098 */  0x6E, 0x65, 0x6C, 0x4E, 0x61, 0x6D, 0x65, 0x3E,  // nelName>
                            /* 00A0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 00A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 00C0 */  0x20, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x44,  //  <PanelD
                            /* 00C8 */  0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,  // escripti
                            /* 00D0 */  0x6F, 0x6E, 0x3E, 0x47, 0x65, 0x6E, 0x65, 0x72,  // on>Gener
                            /* 00D8 */  0x69, 0x63, 0x20, 0x65, 0x44, 0x50, 0x20, 0x50,  // ic eDP P
                            /* 00E0 */  0x61, 0x6E, 0x65, 0x6C, 0x3C, 0x2F, 0x50, 0x61,  // anel</Pa
                            /* 00E8 */  0x6E, 0x65, 0x6C, 0x44, 0x65, 0x73, 0x63, 0x72,  // nelDescr
                            /* 00F0 */  0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // iption>.
                            /* 00F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0100 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0108 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0110 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0118 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 0120 */  0x64, 0x3D, 0x27, 0x45, 0x44, 0x49, 0x44, 0x20,  // d='EDID 
                            /* 0128 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72,  // Configur
                            /* 0130 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x27, 0x3E, 0x0A,  // ation'>.
                            /* 0138 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0140 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0150 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0158 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D, 0x61, 0x6E,  //     <Man
                            /* 0160 */  0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,  // ufacture
                            /* 0168 */  0x49, 0x44, 0x3E, 0x30, 0x78, 0x31, 0x30, 0x34,  // ID>0x104
                            /* 0170 */  0x44, 0x3C, 0x2F, 0x4D, 0x61, 0x6E, 0x75, 0x66,  // D</Manuf
                            /* 0178 */  0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44,  // actureID
                            /* 0180 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0190 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x50,  //       <P
                            /* 01A8 */  0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6F,  // roductCo
                            /* 01B0 */  0x64, 0x65, 0x3E, 0x38, 0x35, 0x30, 0x3C, 0x2F,  // de>850</
                            /* 01B8 */  0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x43,  // ProductC
                            /* 01C0 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 01C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 01E8 */  0x20, 0x3C, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C,  //  <Serial
                            /* 01F0 */  0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x30,  // Number>0
                            /* 01F8 */  0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3C,  // x000001<
                            /* 0200 */  0x2F, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6C, 0x4E,  // /SerialN
                            /* 0208 */  0x75, 0x6D, 0x62, 0x65, 0x72, 0x3E, 0x0A, 0x20,  // umber>. 
                            /* 0210 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0218 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0228 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0230 */  0x20, 0x20, 0x20, 0x3C, 0x57, 0x65, 0x65, 0x6B,  //    <Week
                            /* 0238 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0240 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0248 */  0x30, 0x31, 0x3C, 0x2F, 0x57, 0x65, 0x65, 0x6B,  // 01</Week
                            /* 0250 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0258 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 0260 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0268 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0278 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0280 */  0x20, 0x20, 0x20, 0x3C, 0x59, 0x65, 0x61, 0x72,  //    <Year
                            /* 0288 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 0290 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x30, 0x78,  // cture>0x
                            /* 0298 */  0x31, 0x42, 0x3C, 0x2F, 0x59, 0x65, 0x61, 0x72,  // 1B</Year
                            /* 02A0 */  0x6F, 0x66, 0x4D, 0x61, 0x6E, 0x75, 0x66, 0x61,  // ofManufa
                            /* 02A8 */  0x63, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // cture>. 
                            /* 02B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02D0 */  0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49, 0x44,  //    <EDID
                            /* 02D8 */  0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E,  // Version>
                            /* 02E0 */  0x31, 0x3C, 0x2F, 0x45, 0x44, 0x49, 0x44, 0x56,  // 1</EDIDV
                            /* 02E8 */  0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3E, 0x0A,  // ersion>.
                            /* 02F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 02F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0300 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0308 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0310 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44, 0x49,  //     <EDI
                            /* 0318 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0320 */  0x6E, 0x3E, 0x33, 0x3C, 0x2F, 0x45, 0x44, 0x49,  // n>3</EDI
                            /* 0328 */  0x44, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6F,  // DRevisio
                            /* 0330 */  0x6E, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // n>.     
                            /* 0338 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0340 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0348 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0350 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0358 */  0x56, 0x69, 0x64, 0x65, 0x6F, 0x49, 0x6E, 0x70,  // VideoInp
                            /* 0360 */  0x75, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69,  // utDefini
                            /* 0368 */  0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x30, 0x78, 0x38,  // tion>0x8
                            /* 0370 */  0x30, 0x3C, 0x2F, 0x56, 0x69, 0x64, 0x65, 0x6F,  // 0</Video
                            /* 0378 */  0x49, 0x6E, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,  // InputDef
                            /* 0380 */  0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x3E,  // inition>
                            /* 0388 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0390 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0398 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F,  //      <Ho
                            /* 03B0 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 03B8 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 03C0 */  0x7A, 0x65, 0x3E, 0x30, 0x78, 0x30, 0x37, 0x3C,  // ze>0x07<
                            /* 03C8 */  0x2F, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // /Horizon
                            /* 03D0 */  0x74, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65,  // talScree
                            /* 03D8 */  0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x0A, 0x20,  // nSize>. 
                            /* 03E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 03F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0400 */  0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74,  //    <Vert
                            /* 0408 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72, 0x65,  // icalScre
                            /* 0410 */  0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E, 0x30,  // enSize>0
                            /* 0418 */  0x78, 0x30, 0x43, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // x0C</Ver
                            /* 0420 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0428 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x3E,  // eenSize>
                            /* 0430 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0438 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0440 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0448 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0450 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44, 0x69,  //      <Di
                            /* 0458 */  0x73, 0x70, 0x6C, 0x61, 0x79, 0x54, 0x72, 0x61,  // splayTra
                            /* 0460 */  0x6E, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61,  // nsferCha
                            /* 0468 */  0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,  // racteris
                            /* 0470 */  0x74, 0x69, 0x63, 0x73, 0x3E, 0x30, 0x78, 0x37,  // tics>0x7
                            /* 0478 */  0x38, 0x3C, 0x2F, 0x44, 0x69, 0x73, 0x70, 0x6C,  // 8</Displ
                            /* 0480 */  0x61, 0x79, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66,  // ayTransf
                            /* 0488 */  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,  // erCharac
                            /* 0490 */  0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,  // teristic
                            /* 0498 */  0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // s>.     
                            /* 04A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 04C0 */  0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,  // FeatureS
                            /* 04C8 */  0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x3E, 0x30,  // upport>0
                            /* 04D0 */  0x78, 0x32, 0x3C, 0x2F, 0x46, 0x65, 0x61, 0x74,  // x2</Feat
                            /* 04D8 */  0x75, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6F,  // ureSuppo
                            /* 04E0 */  0x72, 0x74, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // rt>.    
                            /* 04E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 04F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0500 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0508 */  0x3C, 0x52, 0x65, 0x64, 0x2E, 0x47, 0x72, 0x65,  // <Red.Gre
                            /* 0510 */  0x65, 0x6E, 0x42, 0x69, 0x74, 0x73, 0x3E, 0x30,  // enBits>0
                            /* 0518 */  0x78, 0x41, 0x35, 0x3C, 0x2F, 0x52, 0x65, 0x64,  // xA5</Red
                            /* 0520 */  0x2E, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x42, 0x69,  // .GreenBi
                            /* 0528 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 0530 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0538 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0540 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0548 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0550 */  0x3C, 0x42, 0x6C, 0x75, 0x65, 0x2E, 0x57, 0x68,  // <Blue.Wh
                            /* 0558 */  0x69, 0x74, 0x65, 0x42, 0x69, 0x74, 0x73, 0x3E,  // iteBits>
                            /* 0560 */  0x30, 0x78, 0x35, 0x38, 0x3C, 0x2F, 0x42, 0x6C,  // 0x58</Bl
                            /* 0568 */  0x75, 0x65, 0x2E, 0x57, 0x68, 0x69, 0x74, 0x65,  // ue.White
                            /* 0570 */  0x42, 0x69, 0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20,  // Bits>.  
                            /* 0578 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0580 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0588 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0590 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0598 */  0x20, 0x20, 0x3C, 0x52, 0x65, 0x64, 0x58, 0x3E,  //   <RedX>
                            /* 05A0 */  0x30, 0x78, 0x41, 0x36, 0x3C, 0x2F, 0x52, 0x65,  // 0xA6</Re
                            /* 05A8 */  0x64, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // dX>.    
                            /* 05B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05D0 */  0x3C, 0x52, 0x65, 0x64, 0x59, 0x3E, 0x30, 0x78,  // <RedY>0x
                            /* 05D8 */  0x35, 0x34, 0x3C, 0x2F, 0x52, 0x65, 0x64, 0x59,  // 54</RedY
                            /* 05E0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 05E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 05F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 0608 */  0x72, 0x65, 0x65, 0x6E, 0x58, 0x3E, 0x30, 0x78,  // reenX>0x
                            /* 0610 */  0x33, 0x33, 0x3C, 0x2F, 0x47, 0x72, 0x65, 0x65,  // 33</Gree
                            /* 0618 */  0x6E, 0x58, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // nX>.    
                            /* 0620 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0628 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0640 */  0x3C, 0x47, 0x72, 0x65, 0x65, 0x6E, 0x59, 0x3E,  // <GreenY>
                            /* 0648 */  0x30, 0x78, 0x42, 0x33, 0x3C, 0x2F, 0x47, 0x72,  // 0xB3</Gr
                            /* 0650 */  0x65, 0x65, 0x6E, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // eenY>.  
                            /* 0658 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0660 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0668 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0670 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0678 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x58,  //   <BlueX
                            /* 0680 */  0x3E, 0x30, 0x78, 0x32, 0x36, 0x3C, 0x2F, 0x42,  // >0x26</B
                            /* 0688 */  0x6C, 0x75, 0x65, 0x58, 0x3E, 0x0A, 0x20, 0x20,  // lueX>.  
                            /* 0690 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0698 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06B0 */  0x20, 0x20, 0x3C, 0x42, 0x6C, 0x75, 0x65, 0x59,  //   <BlueY
                            /* 06B8 */  0x3E, 0x30, 0x78, 0x31, 0x32, 0x3C, 0x2F, 0x42,  // >0x12</B
                            /* 06C0 */  0x6C, 0x75, 0x65, 0x59, 0x3E, 0x0A, 0x20, 0x20,  // lueY>.  
                            /* 06C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 06E8 */  0x20, 0x20, 0x3C, 0x57, 0x68, 0x69, 0x74, 0x65,  //   <White
                            /* 06F0 */  0x58, 0x3E, 0x30, 0x78, 0x34, 0x46, 0x3C, 0x2F,  // X>0x4F</
                            /* 06F8 */  0x57, 0x68, 0x69, 0x74, 0x65, 0x58, 0x3E, 0x0A,  // WhiteX>.
                            /* 0700 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0708 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0710 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0718 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0720 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x57, 0x68, 0x69,  //     <Whi
                            /* 0728 */  0x74, 0x65, 0x59, 0x3E, 0x30, 0x78, 0x35, 0x34,  // teY>0x54
                            /* 0730 */  0x3C, 0x2F, 0x57, 0x68, 0x69, 0x74, 0x65, 0x59,  // </WhiteY
                            /* 0738 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0740 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0748 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0750 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0758 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 0760 */  0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68,  // stablish
                            /* 0768 */  0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67,  // edTiming
                            /* 0770 */  0x73, 0x49, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F,  // sI>0x0</
                            /* 0778 */  0x45, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73,  // Establis
                            /* 0780 */  0x68, 0x65, 0x64, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // hedTimin
                            /* 0788 */  0x67, 0x73, 0x49, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // gsI>.   
                            /* 0790 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0798 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07B0 */  0x20, 0x3C, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6C,  //  <Establ
                            /* 07B8 */  0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6D,  // ishedTim
                            /* 07C0 */  0x69, 0x6E, 0x67, 0x73, 0x49, 0x49, 0x3E, 0x30,  // ingsII>0
                            /* 07C8 */  0x78, 0x30, 0x3C, 0x2F, 0x45, 0x73, 0x74, 0x61,  // x0</Esta
                            /* 07D0 */  0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,  // blishedT
                            /* 07D8 */  0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x49, 0x49,  // imingsII
                            /* 07E0 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 07E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 07F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0800 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x4D,  //       <M
                            /* 0808 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0810 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0818 */  0x67, 0x3E, 0x30, 0x78, 0x30, 0x3C, 0x2F, 0x4D,  // g>0x0</M
                            /* 0820 */  0x61, 0x6E, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,  // anufactu
                            /* 0828 */  0x72, 0x65, 0x73, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // resTimin
                            /* 0830 */  0x67, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // g>.     
                            /* 0838 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0840 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0848 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0850 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0858 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0860 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x31,  // Timings1
                            /* 0868 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0870 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0878 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0880 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0890 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0898 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x32,  // Timings2
                            /* 08A0 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 08C8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 08D0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x33,  // Timings3
                            /* 08D8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 08E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 08F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0900 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0908 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x34,  // Timings4
                            /* 0910 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0918 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0930 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0938 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0940 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x35,  // Timings5
                            /* 0948 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0960 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0968 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0970 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 0978 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x36,  // Timings6
                            /* 0980 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 0988 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0990 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0998 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09A8 */  0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,  // Standard
                            /* 09B0 */  0x54, 0x69, 0x6D, 0x69, 0x6E, 0x67, 0x73, 0x37,  // Timings7
                            /* 09B8 */  0x2F, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // />.     
                            /* 09C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 09D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 09E0 */  0x53, 0x69, 0x67, 0x6E, 0x61, 0x6C, 0x54, 0x69,  // SignalTi
                            /* 09E8 */  0x6D, 0x69, 0x6E, 0x67, 0x49, 0x6E, 0x74, 0x65,  // mingInte
                            /* 09F0 */  0x72, 0x66, 0x61, 0x63, 0x65, 0x2F, 0x3E, 0x0A,  // rface/>.
                            /* 09F8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A18 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0A20 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0A28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A40 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0A48 */  0x69, 0x64, 0x3D, 0x27, 0x44, 0x65, 0x74, 0x61,  // id='Deta
                            /* 0A50 */  0x69, 0x6C, 0x65, 0x64, 0x20, 0x54, 0x69, 0x6D,  // iled Tim
                            /* 0A58 */  0x69, 0x6E, 0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ing'>.  
                            /* 0A60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0A80 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0A88 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ontalScr
                            /* 0A90 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0A98 */  0x4D, 0x3E, 0x30, 0x78, 0x34, 0x34, 0x3C, 0x2F,  // M>0x44</
                            /* 0AA0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0AA8 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0AB0 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0AB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0AD8 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65, 0x72,  //     <Ver
                            /* 0AE0 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0AE8 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0AF0 */  0x4D, 0x3E, 0x30, 0x78, 0x37, 0x38, 0x3C, 0x2F,  // M>0x78</
                            /* 0AF8 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0B00 */  0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x53, 0x69,  // ScreenSi
                            /* 0B08 */  0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A, 0x20, 0x20,  // zeMM>.  
                            /* 0B10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B30 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0B38 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x56, 0x65, 0x72,  // ontalVer
                            /* 0B40 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x53, 0x63, 0x72,  // ticalScr
                            /* 0B48 */  0x65, 0x65, 0x6E, 0x53, 0x69, 0x7A, 0x65, 0x4D,  // eenSizeM
                            /* 0B50 */  0x4D, 0x3E, 0x30, 0x78, 0x30, 0x30, 0x3C, 0x2F,  // M>0x00</
                            /* 0B58 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0B60 */  0x61, 0x6C, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // alVertic
                            /* 0B68 */  0x61, 0x6C, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,  // alScreen
                            /* 0B70 */  0x53, 0x69, 0x7A, 0x65, 0x4D, 0x4D, 0x3E, 0x0A,  // SizeMM>.
                            /* 0B78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0B98 */  0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E,  // </Group>
                            /* 0BA0 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0BA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BC0 */  0x20, 0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20,  //  <Group 
                            /* 0BC8 */  0x69, 0x64, 0x3D, 0x27, 0x41, 0x63, 0x74, 0x69,  // id='Acti
                            /* 0BD0 */  0x76, 0x65, 0x20, 0x54, 0x69, 0x6D, 0x69, 0x6E,  // ve Timin
                            /* 0BD8 */  0x67, 0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // g'>.    
                            /* 0BE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0BF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C00 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0C08 */  0x74, 0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76,  // talActiv
                            /* 0C10 */  0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72,  // e>0</Hor
                            /* 0C18 */  0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x41,  // izontalA
                            /* 0C20 */  0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x0A, 0x20,  // ctive>. 
                            /* 0C28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C40 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C48 */  0x20, 0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69,  //    <Hori
                            /* 0C50 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x46, 0x72,  // zontalFr
                            /* 0C58 */  0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ontPorch
                            /* 0C60 */  0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // >0</Hori
                            /* 0C68 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x46, 0x72,  // zontalFr
                            /* 0C70 */  0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68,  // ontPorch
                            /* 0C78 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0C80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0C98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x48,  //       <H
                            /* 0CA0 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0CA8 */  0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72,  // lBackPor
                            /* 0CB0 */  0x63, 0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F,  // ch>0</Ho
                            /* 0CB8 */  0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C,  // rizontal
                            /* 0CC0 */  0x42, 0x61, 0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63,  // BackPorc
                            /* 0CC8 */  0x68, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // h>.     
                            /* 0CD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0CE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0CF0 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0CF8 */  0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75,  // alSyncPu
                            /* 0D00 */  0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // lse>0</H
                            /* 0D08 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D10 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C,  // lSyncPul
                            /* 0D18 */  0x73, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // se>.    
                            /* 0D20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D38 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D40 */  0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E,  // <Horizon
                            /* 0D48 */  0x74, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53,  // talSyncS
                            /* 0D50 */  0x6B, 0x65, 0x77, 0x3E, 0x30, 0x3C, 0x2F, 0x48,  // kew>0</H
                            /* 0D58 */  0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74, 0x61,  // orizonta
                            /* 0D60 */  0x6C, 0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65,  // lSyncSke
                            /* 0D68 */  0x77, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // w>.     
                            /* 0D70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D80 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0D88 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0D90 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0D98 */  0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F,  // alLeftBo
                            /* 0DA0 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F,  // rder>0</
                            /* 0DA8 */  0x48, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,  // Horizont
                            /* 0DB0 */  0x61, 0x6C, 0x4C, 0x65, 0x66, 0x74, 0x42, 0x6F,  // alLeftBo
                            /* 0DB8 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 0DC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DD8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0DE0 */  0x20, 0x20, 0x3C, 0x48, 0x6F, 0x72, 0x69, 0x7A,  //   <Horiz
                            /* 0DE8 */  0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x52, 0x69, 0x67,  // ontalRig
                            /* 0DF0 */  0x68, 0x74, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72,  // htBorder
                            /* 0DF8 */  0x3E, 0x30, 0x3C, 0x2F, 0x48, 0x6F, 0x72, 0x69,  // >0</Hori
                            /* 0E00 */  0x7A, 0x6F, 0x6E, 0x74, 0x61, 0x6C, 0x52, 0x69,  // zontalRi
                            /* 0E08 */  0x67, 0x68, 0x74, 0x42, 0x6F, 0x72, 0x64, 0x65,  // ghtBorde
                            /* 0E10 */  0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // r>.     
                            /* 0E18 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E20 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E28 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E30 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0E38 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0E40 */  0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3E, 0x30,  // Active>0
                            /* 0E48 */  0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,  // </Vertic
                            /* 0E50 */  0x61, 0x6C, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,  // alActive
                            /* 0E58 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 0E60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E68 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E70 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0E78 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56,  //       <V
                            /* 0E80 */  0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x46,  // erticalF
                            /* 0E88 */  0x72, 0x6F, 0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63,  // rontPorc
                            /* 0E90 */  0x68, 0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72,  // h>0</Ver
                            /* 0E98 */  0x74, 0x69, 0x63, 0x61, 0x6C, 0x46, 0x72, 0x6F,  // ticalFro
                            /* 0EA0 */  0x6E, 0x74, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ntPorch>
                            /* 0EA8 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 0EB0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EB8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0EC8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x56, 0x65,  //      <Ve
                            /* 0ED0 */  0x72, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x42, 0x61,  // rticalBa
                            /* 0ED8 */  0x63, 0x6B, 0x50, 0x6F, 0x72, 0x63, 0x68, 0x3E,  // ckPorch>
                            /* 0EE0 */  0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74, 0x69,  // 0</Verti
                            /* 0EE8 */  0x63, 0x61, 0x6C, 0x42, 0x61, 0x63, 0x6B, 0x50,  // calBackP
                            /* 0EF0 */  0x6F, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x20, 0x20,  // orch>.  
                            /* 0EF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F00 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F08 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F10 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F18 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0F20 */  0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63, 0x50,  // calSyncP
                            /* 0F28 */  0x75, 0x6C, 0x73, 0x65, 0x3E, 0x30, 0x3C, 0x2F,  // ulse>0</
                            /* 0F30 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F38 */  0x53, 0x79, 0x6E, 0x63, 0x50, 0x75, 0x6C, 0x73,  // SyncPuls
                            /* 0F40 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 0F48 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F50 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F58 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F60 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 0F68 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0F70 */  0x53, 0x79, 0x6E, 0x63, 0x53, 0x6B, 0x65, 0x77,  // SyncSkew
                            /* 0F78 */  0x3E, 0x30, 0x3C, 0x2F, 0x56, 0x65, 0x72, 0x74,  // >0</Vert
                            /* 0F80 */  0x69, 0x63, 0x61, 0x6C, 0x53, 0x79, 0x6E, 0x63,  // icalSync
                            /* 0F88 */  0x53, 0x6B, 0x65, 0x77, 0x3E, 0x0A, 0x20, 0x20,  // Skew>.  
                            /* 0F90 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0F98 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FA8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FB0 */  0x20, 0x20, 0x3C, 0x56, 0x65, 0x72, 0x74, 0x69,  //   <Verti
                            /* 0FB8 */  0x63, 0x61, 0x6C, 0x54, 0x6F, 0x70, 0x42, 0x6F,  // calTopBo
                            /* 0FC0 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F,  // rder>0</
                            /* 0FC8 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 0FD0 */  0x54, 0x6F, 0x70, 0x42, 0x6F, 0x72, 0x64, 0x65,  // TopBorde
                            /* 0FD8 */  0x72, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // r>.     
                            /* 0FE0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FE8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 0FF8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1000 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 1008 */  0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F,  // BottomBo
                            /* 1010 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x30, 0x3C, 0x2F,  // rder>0</
                            /* 1018 */  0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6C,  // Vertical
                            /* 1020 */  0x42, 0x6F, 0x74, 0x74, 0x6F, 0x6D, 0x42, 0x6F,  // BottomBo
                            /* 1028 */  0x72, 0x64, 0x65, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // rder>.  
                            /* 1030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1040 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1048 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1050 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72,  //   <Inver
                            /* 1058 */  0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6F, 0x6C,  // tDataPol
                            /* 1060 */  0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x46, 0x61,  // arity>Fa
                            /* 1068 */  0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E, 0x76,  // lse</Inv
                            /* 1070 */  0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,  // ertDataP
                            /* 1078 */  0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E,  // olarity>
                            /* 1080 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1088 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1090 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1098 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x49, 0x6E,  //      <In
                            /* 10A8 */  0x76, 0x65, 0x72, 0x74, 0x56, 0x73, 0x79, 0x6E,  // vertVsyn
                            /* 10B0 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // cPolarit
                            /* 10B8 */  0x79, 0x3E, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x3C,  // y>False<
                            /* 10C0 */  0x2F, 0x49, 0x6E, 0x76, 0x65, 0x72, 0x74, 0x56,  // /InvertV
                            /* 10C8 */  0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F, 0x6C, 0x61,  // syncPola
                            /* 10D0 */  0x72, 0x69, 0x74, 0x79, 0x3E, 0x0A, 0x20, 0x20,  // rity>.  
                            /* 10D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 10F8 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x76, 0x65, 0x72,  //   <Inver
                            /* 1100 */  0x74, 0x48, 0x73, 0x79, 0x6E, 0x63, 0x50, 0x6F,  // tHsyncPo
                            /* 1108 */  0x6C, 0x61, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x46,  // larity>F
                            /* 1110 */  0x61, 0x6C, 0x73, 0x65, 0x3C, 0x2F, 0x49, 0x6E,  // alse</In
                            /* 1118 */  0x76, 0x65, 0x72, 0x74, 0x48, 0x73, 0x79, 0x6E,  // vertHsyn
                            /* 1120 */  0x63, 0x50, 0x6F, 0x6C, 0x61, 0x72, 0x69, 0x74,  // cPolarit
                            /* 1128 */  0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // y>.     
                            /* 1130 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1138 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1140 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1148 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1150 */  0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6F,  // BorderCo
                            /* 1158 */  0x6C, 0x6F, 0x72, 0x3E, 0x30, 0x78, 0x30, 0x3C,  // lor>0x0<
                            /* 1160 */  0x2F, 0x42, 0x6F, 0x72, 0x64, 0x65, 0x72, 0x43,  // /BorderC
                            /* 1168 */  0x6F, 0x6C, 0x6F, 0x72, 0x3E, 0x0A, 0x20, 0x20,  // olor>.  
                            /* 1170 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1178 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1180 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1188 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F,  //       </
                            /* 1190 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20,  // Group>. 
                            /* 1198 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 11B8 */  0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64,  // Group id
                            /* 11C0 */  0x3D, 0x27, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61,  // ='Displa
                            /* 11C8 */  0x79, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,  // y Interf
                            /* 11D0 */  0x61, 0x63, 0x65, 0x27, 0x3E, 0x0A, 0x20, 0x20,  // ace'>.  
                            /* 11D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 11F8 */  0x20, 0x20, 0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72,  //   <Inter
                            /* 1200 */  0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,  // faceType
                            /* 1208 */  0x3E, 0x31, 0x38, 0x3C, 0x2F, 0x49, 0x6E, 0x74,  // >18</Int
                            /* 1210 */  0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,  // erfaceTy
                            /* 1218 */  0x70, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // pe>.    
                            /* 1220 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1228 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1230 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1238 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1240 */  0x3C, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61,  // <Interfa
                            /* 1248 */  0x63, 0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46,  // ceColorF
                            /* 1250 */  0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x33, 0x3C,  // ormat>3<
                            /* 1258 */  0x2F, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66, 0x61,  // /Interfa
                            /* 1260 */  0x63, 0x65, 0x43, 0x6F, 0x6C, 0x6F, 0x72, 0x46,  // ceColorF
                            /* 1268 */  0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x0A, 0x20,  // ormat>. 
                            /* 1270 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1278 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1280 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1288 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1290 */  0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A,  // /Group>.
                            /* 1298 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12B8 */  0x3C, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x20, 0x69,  // <Group i
                            /* 12C0 */  0x64, 0x3D, 0x27, 0x65, 0x44, 0x50, 0x20, 0x49,  // d='eDP I
                            /* 12C8 */  0x6E, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,  // nterface
                            /* 12D0 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 12D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 12F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 12F8 */  0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72,  // EDPOverr
                            /* 1300 */  0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44, 0x3E,  // ideEDID>
                            /* 1308 */  0x30, 0x30, 0x20, 0x46, 0x46, 0x20, 0x46, 0x46,  // 00 FF FF
                            /* 1310 */  0x20, 0x46, 0x46, 0x20, 0x46, 0x46, 0x20, 0x46,  //  FF FF F
                            /* 1318 */  0x46, 0x20, 0x46, 0x46, 0x20, 0x30, 0x30, 0x20,  // F FF 00 
                            /* 1320 */  0x30, 0x36, 0x20, 0x41, 0x46, 0x20, 0x32, 0x44,  // 06 AF 2D
                            /* 1328 */  0x20, 0x35, 0x38, 0x20, 0x30, 0x30, 0x20, 0x30,  //  58 00 0
                            /* 1330 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20,  // 0 00 00 
                            /* 1338 */  0x30, 0x30, 0x20, 0x31, 0x43, 0x20, 0x30, 0x31,  // 00 1C 01
                            /* 1340 */  0x20, 0x30, 0x34, 0x20, 0x41, 0x35, 0x20, 0x31,  //  04 A5 1
                            /* 1348 */  0x44, 0x20, 0x31, 0x31, 0x20, 0x37, 0x38, 0x20,  // D 11 78 
                            /* 1350 */  0x30, 0x32, 0x20, 0x45, 0x45, 0x20, 0x39, 0x35,  // 02 EE 95
                            /* 1358 */  0x20, 0x41, 0x33, 0x20, 0x35, 0x34, 0x20, 0x34,  //  A3 54 4
                            /* 1360 */  0x43, 0x20, 0x39, 0x39, 0x20, 0x32, 0x36, 0x20,  // C 99 26 
                            /* 1368 */  0x30, 0x46, 0x20, 0x35, 0x30, 0x20, 0x35, 0x34,  // 0F 50 54
                            /* 1370 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 1378 */  0x30, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 0 01 01 
                            /* 1380 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 1388 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 1390 */  0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20,  // 1 01 01 
                            /* 1398 */  0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30, 0x31,  // 01 01 01
                            /* 13A0 */  0x20, 0x30, 0x31, 0x20, 0x30, 0x31, 0x20, 0x30,  //  01 01 0
                            /* 13A8 */  0x31, 0x20, 0x42, 0x34, 0x20, 0x33, 0x37, 0x20,  // 1 B4 37 
                            /* 13B0 */  0x38, 0x30, 0x20, 0x41, 0x30, 0x20, 0x37, 0x30,  // 80 A0 70
                            /* 13B8 */  0x20, 0x33, 0x38, 0x20, 0x33, 0x45, 0x20, 0x34,  //  38 3E 4
                            /* 13C0 */  0x30, 0x20, 0x33, 0x41, 0x20, 0x32, 0x41, 0x20,  // 0 3A 2A 
                            /* 13C8 */  0x33, 0x35, 0x20, 0x30, 0x30, 0x20, 0x32, 0x35,  // 35 00 25
                            /* 13D0 */  0x20, 0x41, 0x35, 0x20, 0x31, 0x30, 0x20, 0x30,  //  A5 10 0
                            /* 13D8 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x31, 0x38, 0x20,  // 0 00 18 
                            /* 13E0 */  0x42, 0x34, 0x20, 0x33, 0x37, 0x20, 0x38, 0x30,  // B4 37 80
                            /* 13E8 */  0x20, 0x41, 0x30, 0x20, 0x37, 0x30, 0x20, 0x33,  //  A0 70 3
                            /* 13F0 */  0x38, 0x20, 0x35, 0x43, 0x20, 0x34, 0x31, 0x20,  // 8 5C 41 
                            /* 13F8 */  0x33, 0x41, 0x20, 0x32, 0x41, 0x20, 0x33, 0x35,  // 3A 2A 35
                            /* 1400 */  0x20, 0x30, 0x30, 0x20, 0x32, 0x35, 0x20, 0x41,  //  00 25 A
                            /* 1408 */  0x35, 0x20, 0x31, 0x30, 0x20, 0x30, 0x30, 0x20,  // 5 10 00 
                            /* 1410 */  0x30, 0x30, 0x20, 0x31, 0x38, 0x20, 0x30, 0x30,  // 00 18 00
                            /* 1418 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x46,  //  00 00 F
                            /* 1420 */  0x45, 0x20, 0x30, 0x30, 0x20, 0x34, 0x31, 0x20,  // E 00 41 
                            /* 1428 */  0x35, 0x35, 0x20, 0x34, 0x46, 0x20, 0x30, 0x41,  // 55 4F 0A
                            /* 1430 */  0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32,  //  20 20 2
                            /* 1438 */  0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30, 0x20,  // 0 20 20 
                            /* 1440 */  0x32, 0x30, 0x20, 0x32, 0x30, 0x20, 0x32, 0x30,  // 20 20 20
                            /* 1448 */  0x20, 0x32, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  20 00 0
                            /* 1450 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x46, 0x45, 0x20,  // 0 00 FE 
                            /* 1458 */  0x30, 0x30, 0x20, 0x34, 0x32, 0x20, 0x33, 0x31,  // 00 42 31
                            /* 1460 */  0x20, 0x33, 0x33, 0x20, 0x33, 0x33, 0x20, 0x34,  //  33 33 4
                            /* 1468 */  0x38, 0x20, 0x34, 0x31, 0x20, 0x34, 0x45, 0x20,  // 8 41 4E 
                            /* 1470 */  0x33, 0x30, 0x20, 0x33, 0x35, 0x20, 0x32, 0x45,  // 30 35 2E
                            /* 1478 */  0x20, 0x33, 0x38, 0x20, 0x32, 0x30, 0x20, 0x30,  //  38 20 0
                            /* 1480 */  0x41, 0x20, 0x30, 0x30, 0x20, 0x43, 0x46, 0x3C,  // A 00 CF<
                            /* 1488 */  0x2F, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // /EDPOver
                            /* 1490 */  0x72, 0x69, 0x64, 0x65, 0x45, 0x44, 0x49, 0x44,  // rideEDID
                            /* 1498 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 14A0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14A8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 14B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45,  //       <E
                            /* 14C0 */  0x44, 0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69,  // DPOverri
                            /* 14C8 */  0x64, 0x65, 0x44, 0x50, 0x43, 0x44, 0x43, 0x61,  // deDPCDCa
                            /* 14D0 */  0x70, 0x73, 0x3E, 0x31, 0x32, 0x20, 0x30, 0x41,  // ps>12 0A
                            /* 14D8 */  0x20, 0x43, 0x32, 0x20, 0x34, 0x31, 0x20, 0x30,  //  C2 41 0
                            /* 14E0 */  0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x31, 0x20,  // 0 00 01 
                            /* 14E8 */  0x43, 0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x30,  // C0 02 00
                            /* 14F0 */  0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30,  //  00 00 0
                            /* 14F8 */  0x30, 0x20, 0x30, 0x42, 0x20, 0x30, 0x30, 0x20,  // 0 0B 00 
                            /* 1500 */  0x30, 0x30, 0x20, 0x41, 0x34, 0x20, 0x31, 0x46,  // 00 A4 1F
                            /* 1508 */  0x20, 0x33, 0x30, 0x20, 0x32, 0x41, 0x20, 0x37,  //  30 2A 7
                            /* 1510 */  0x36, 0x20, 0x32, 0x46, 0x20, 0x42, 0x43, 0x20,  // 6 2F BC 
                            /* 1518 */  0x33, 0x34, 0x20, 0x34, 0x38, 0x20, 0x33, 0x46,  // 34 48 3F
                            /* 1520 */  0x20, 0x44, 0x34, 0x20, 0x34, 0x39, 0x20, 0x36,  //  D4 49 6
                            /* 1528 */  0x30, 0x20, 0x35, 0x34, 0x20, 0x37, 0x38, 0x20,  // 0 54 78 
                            /* 1530 */  0x36, 0x39, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F,  // 69</EDPO
                            /* 1538 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x44,  // verrideD
                            /* 1540 */  0x50, 0x43, 0x44, 0x43, 0x61, 0x70, 0x73, 0x3E,  // PCDCaps>
                            /* 1548 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1550 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1558 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1560 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1568 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x45, 0x44,  //      <ED
                            /* 1570 */  0x50, 0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,  // POverrid
                            /* 1578 */  0x65, 0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61,  // eDPCDSta
                            /* 1580 */  0x74, 0x75, 0x73, 0x3E, 0x30, 0x31, 0x20, 0x30,  // tus>01 0
                            /* 1588 */  0x30, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37, 0x20,  // 0 77 77 
                            /* 1590 */  0x30, 0x31, 0x20, 0x30, 0x30, 0x20, 0x34, 0x34,  // 01 00 44
                            /* 1598 */  0x20, 0x34, 0x34, 0x3C, 0x2F, 0x45, 0x44, 0x50,  //  44</EDP
                            /* 15A0 */  0x4F, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,  // Override
                            /* 15A8 */  0x44, 0x50, 0x43, 0x44, 0x53, 0x74, 0x61, 0x74,  // DPCDStat
                            /* 15B0 */  0x75, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // us>.    
                            /* 15B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 15D8 */  0x3C, 0x45, 0x44, 0x50, 0x4F, 0x76, 0x65, 0x72,  // <EDPOver
                            /* 15E0 */  0x72, 0x69, 0x64, 0x65, 0x4D, 0x6F, 0x64, 0x65,  // rideMode
                            /* 15E8 */  0x3E, 0x32, 0x3C, 0x2F, 0x45, 0x44, 0x50, 0x4F,  // >2</EDPO
                            /* 15F0 */  0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4D,  // verrideM
                            /* 15F8 */  0x6F, 0x64, 0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20,  // ode>.   
                            /* 1600 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1608 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1610 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1618 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x47,  //      </G
                            /* 1620 */  0x72, 0x6F, 0x75, 0x70, 0x3E, 0x0A, 0x20, 0x20,  // roup>.  
                            /* 1628 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1630 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1638 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1640 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x47,  //       <G
                            /* 1648 */  0x72, 0x6F, 0x75, 0x70, 0x20, 0x69, 0x64, 0x3D,  // roup id=
                            /* 1650 */  0x27, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // 'Backlig
                            /* 1658 */  0x68, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x66, 0x69,  // ht Confi
                            /* 1660 */  0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E,  // guration
                            /* 1668 */  0x27, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // '>.     
                            /* 1670 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1678 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1680 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1688 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1690 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1698 */  0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x31, 0x3C,  // tType>1<
                            /* 16A0 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 16A8 */  0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x0A,  // htType>.
                            /* 16B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 16D0 */  0x20, 0x20, 0x20, 0x20, 0x3C, 0x42, 0x61, 0x63,  //     <Bac
                            /* 16D8 */  0x6B, 0x6C, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6D,  // klightPm
                            /* 16E0 */  0x69, 0x63, 0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F,  // icContro
                            /* 16E8 */  0x6C, 0x54, 0x79, 0x70, 0x65, 0x3E, 0x34, 0x3C,  // lType>4<
                            /* 16F0 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 16F8 */  0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x43, 0x6F,  // htPmicCo
                            /* 1700 */  0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x54, 0x79, 0x70,  // ntrolTyp
                            /* 1708 */  0x65, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // e>.     
                            /* 1710 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1718 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1720 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1728 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C,  //        <
                            /* 1730 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 1738 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x49, 0x64, 0x3E,  // tPmicId>
                            /* 1740 */  0x30, 0x3C, 0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C,  // 0</Backl
                            /* 1748 */  0x69, 0x67, 0x68, 0x74, 0x50, 0x6D, 0x69, 0x63,  // ightPmic
                            /* 1750 */  0x49, 0x64, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // Id>.    
                            /* 1758 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1760 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1768 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1770 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1778 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 1780 */  0x68, 0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57,  // htPmicPW
                            /* 1788 */  0x4D, 0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42,  // MSizeinB
                            /* 1790 */  0x69, 0x74, 0x73, 0x3E, 0x31, 0x32, 0x3C, 0x2F,  // its>12</
                            /* 1798 */  0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67, 0x68,  // Backligh
                            /* 17A0 */  0x74, 0x50, 0x6D, 0x69, 0x63, 0x50, 0x57, 0x4D,  // tPmicPWM
                            /* 17A8 */  0x53, 0x69, 0x7A, 0x65, 0x69, 0x6E, 0x42, 0x69,  // SizeinBi
                            /* 17B0 */  0x74, 0x73, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // ts>.    
                            /* 17B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17C0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17C8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17D0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 17D8 */  0x3C, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // <Backlig
                            /* 17E0 */  0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57,  // htPMICPW
                            /* 17E8 */  0x4D, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E,  // MFrequen
                            /* 17F0 */  0x63, 0x79, 0x3E, 0x32, 0x34, 0x30, 0x30, 0x3C,  // cy>2400<
                            /* 17F8 */  0x2F, 0x42, 0x61, 0x63, 0x6B, 0x6C, 0x69, 0x67,  // /Backlig
                            /* 1800 */  0x68, 0x74, 0x50, 0x4D, 0x49, 0x43, 0x50, 0x57,  // htPMICPW
                            /* 1808 */  0x4D, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E,  // MFrequen
                            /* 1810 */  0x63, 0x79, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20,  // cy>.    
                            /* 1818 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1820 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1828 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1830 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1838 */  0x3C, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6E,  // <Brightn
                            /* 1840 */  0x65, 0x73, 0x73, 0x52, 0x61, 0x6E, 0x67, 0x65,  // essRange
                            /* 1848 */  0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30, 0x3E, 0x34,  // Level0>4
                            /* 1850 */  0x30, 0x30, 0x30, 0x20, 0x34, 0x30, 0x30, 0x30,  // 000 4000
                            /* 1858 */  0x30, 0x30, 0x20, 0x34, 0x30, 0x30, 0x30, 0x20,  // 00 4000 
                            /* 1860 */  0x32, 0x3C, 0x2F, 0x42, 0x72, 0x69, 0x67, 0x68,  // 2</Brigh
                            /* 1868 */  0x74, 0x6E, 0x65, 0x73, 0x73, 0x52, 0x61, 0x6E,  // tnessRan
                            /* 1870 */  0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x30,  // geLevel0
                            /* 1878 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1880 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1888 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1890 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1898 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x41,  //       <A
                            /* 18A0 */  0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x42,  // daptiveB
                            /* 18A8 */  0x72, 0x69, 0x67, 0x68, 0x74, 0x6E, 0x65, 0x73,  // rightnes
                            /* 18B0 */  0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,  // sFeature
                            /* 18B8 */  0x3E, 0x31, 0x3C, 0x2F, 0x41, 0x64, 0x61, 0x70,  // >1</Adap
                            /* 18C0 */  0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x67,  // tiveBrig
                            /* 18C8 */  0x68, 0x74, 0x6E, 0x65, 0x73, 0x73, 0x46, 0x65,  // htnessFe
                            /* 18D0 */  0x61, 0x74, 0x75, 0x72, 0x65, 0x3E, 0x0A, 0x20,  // ature>. 
                            /* 18D8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18E0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18E8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18F0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 18F8 */  0x20, 0x20, 0x20, 0x3C, 0x43, 0x41, 0x42, 0x4C,  //    <CABL
                            /* 1900 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x54,  // Enable>T
                            /* 1908 */  0x72, 0x75, 0x65, 0x3C, 0x2F, 0x43, 0x41, 0x42,  // rue</CAB
                            /* 1910 */  0x4C, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x3E,  // LEnable>
                            /* 1918 */  0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .       
                            /* 1920 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1928 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1930 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1938 */  0x20, 0x3C, 0x2F, 0x47, 0x72, 0x6F, 0x75, 0x70,  //  </Group
                            /* 1940 */  0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // >.      
                            /* 1948 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1950 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1958 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                            /* 1960 */  0x20, 0x20, 0x00                                 //   .
                        })
                        Local2 = PCFG /* \_SB_.GPU0._ROM.PCFG */
                    }

                    Break
                }

                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0._ROM.RBUF */
            }

            Method (PGRT, 2, NotSerialized)
            {
                Name (RBUF, Buffer (One)
                {
                     0x00                                             // .
                })
                Return (RBUF) /* \_SB_.GPU0.PGRT.RBUF */
            }

            Method (PBRT, 2, NotSerialized)
            {
                Name (RBUF, Buffer (0x0200)
                {
                    /* 0000 */  0x26, 0x02, 0x24, 0x03, 0x23, 0x04, 0x22, 0x05,  // &.$.#.".
                    /* 0008 */  0x21, 0x06, 0x20, 0x07, 0x1F, 0x08, 0x1D, 0x09,  // !. .....
                    /* 0010 */  0x1C, 0x0A, 0x1B, 0x0B, 0x1A, 0x0C, 0x19, 0x0D,  // ........
                    /* 0018 */  0x18, 0x0E, 0x16, 0x0F, 0x15, 0x10, 0x14, 0x11,  // ........
                    /* 0020 */  0x13, 0x12, 0x12, 0x13, 0x11, 0x14, 0x10, 0x15,  // ........
                    /* 0028 */  0x0E, 0x16, 0x0D, 0x17, 0x0C, 0x18, 0x0B, 0x19,  // ........
                    /* 0030 */  0x0A, 0x1A, 0x09, 0x1B, 0x07, 0x1C, 0x06, 0x1D,  // ........
                    /* 0038 */  0x05, 0x1E, 0x04, 0x1F, 0x03, 0x20, 0x02, 0x21,  // ..... .!
                    /* 0040 */  0x00, 0x22, 0xFF, 0x22, 0xFE, 0x23, 0xFD, 0x24,  // .".".#.$
                    /* 0048 */  0xFC, 0x25, 0xFB, 0x26, 0xFA, 0x27, 0xF8, 0x28,  // .%.&.'.(
                    /* 0050 */  0xF7, 0x29, 0xF6, 0x2A, 0xF5, 0x2B, 0xF4, 0x2C,  // .).*.+.,
                    /* 0058 */  0xF3, 0x2D, 0xF1, 0x2E, 0xF0, 0x2F, 0xEF, 0x30,  // .-.../.0
                    /* 0060 */  0xEE, 0x31, 0xED, 0x32, 0xEC, 0x33, 0xEB, 0x34,  // .1.2.3.4
                    /* 0068 */  0xE9, 0x35, 0xE8, 0x36, 0xE7, 0x37, 0xE6, 0x38,  // .5.6.7.8
                    /* 0070 */  0xE5, 0x39, 0xE4, 0x3A, 0xE2, 0x3B, 0xE1, 0x3C,  // .9.:.;.<
                    /* 0078 */  0xE0, 0x3D, 0xDF, 0x3E, 0xDE, 0x3F, 0xDD, 0x40,  // .=.>.?.@
                    /* 0080 */  0xDB, 0x41, 0xDA, 0x42, 0xD9, 0x43, 0xD8, 0x44,  // .A.B.C.D
                    /* 0088 */  0xD7, 0x45, 0xD6, 0x46, 0xD5, 0x47, 0xD3, 0x48,  // .E.F.G.H
                    /* 0090 */  0xD2, 0x49, 0xD1, 0x4A, 0xD0, 0x4B, 0xCF, 0x4C,  // .I.J.K.L
                    /* 0098 */  0xCE, 0x4D, 0xCC, 0x4E, 0xCB, 0x4F, 0xCA, 0x50,  // .M.N.O.P
                    /* 00A0 */  0xC9, 0x51, 0xC8, 0x52, 0xC7, 0x53, 0xC5, 0x54,  // .Q.R.S.T
                    /* 00A8 */  0xC4, 0x55, 0xC3, 0x56, 0xC2, 0x57, 0xC1, 0x58,  // .U.V.W.X
                    /* 00B0 */  0xC0, 0x59, 0xBF, 0x5A, 0xBD, 0x5B, 0xBC, 0x5C,  // .Y.Z.[.\
                    /* 00B8 */  0xBB, 0x5D, 0xBA, 0x5E, 0xB9, 0x5F, 0xB8, 0x60,  // .].^._.`
                    /* 00C0 */  0xB6, 0x61, 0xB5, 0x62, 0xB4, 0x63, 0xB3, 0x64,  // .a.b.c.d
                    /* 00C8 */  0xB2, 0x65, 0xB1, 0x66, 0xB0, 0x67, 0xAE, 0x68,  // .e.f.g.h
                    /* 00D0 */  0xAD, 0x69, 0xAC, 0x6A, 0xAB, 0x6B, 0xAA, 0x6C,  // .i.j.k.l
                    /* 00D8 */  0xA9, 0x6D, 0xA7, 0x6E, 0xA6, 0x6F, 0xA5, 0x70,  // .m.n.o.p
                    /* 00E0 */  0xA4, 0x71, 0xA3, 0x72, 0xA2, 0x73, 0xA0, 0x74,  // .q.r.s.t
                    /* 00E8 */  0x9F, 0x75, 0x9E, 0x76, 0x9D, 0x77, 0x9C, 0x78,  // .u.v.w.x
                    /* 00F0 */  0x9B, 0x79, 0x9A, 0x7A, 0x98, 0x7B, 0x97, 0x7C,  // .y.z.{.|
                    /* 00F8 */  0x96, 0x7D, 0x95, 0x7E, 0x94, 0x7F, 0x93, 0x80,  // .}.~....
                    /* 0100 */  0x91, 0x81, 0x90, 0x82, 0x8F, 0x83, 0x8E, 0x84,  // ........
                    /* 0108 */  0x8D, 0x85, 0x8C, 0x86, 0x8A, 0x87, 0x89, 0x88,  // ........
                    /* 0110 */  0x88, 0x89, 0x87, 0x8A, 0x86, 0x8B, 0x85, 0x8C,  // ........
                    /* 0118 */  0x84, 0x8D, 0x82, 0x8E, 0x81, 0x8F, 0x80, 0x90,  // ........
                    /* 0120 */  0x7F, 0x91, 0x7E, 0x92, 0x7D, 0x93, 0x7B, 0x94,  // ..~.}.{.
                    /* 0128 */  0x7A, 0x95, 0x79, 0x96, 0x78, 0x97, 0x77, 0x98,  // z.y.x.w.
                    /* 0130 */  0x76, 0x99, 0x75, 0x9A, 0x73, 0x9B, 0x72, 0x9C,  // v.u.s.r.
                    /* 0138 */  0x71, 0x9D, 0x70, 0x9E, 0x6F, 0x9F, 0x6E, 0xA0,  // q.p.o.n.
                    /* 0140 */  0x6C, 0xA1, 0x6B, 0xA2, 0x6A, 0xA3, 0x69, 0xA4,  // l.k.j.i.
                    /* 0148 */  0x68, 0xA5, 0x67, 0xA6, 0x65, 0xA7, 0x64, 0xA8,  // h.g.e.d.
                    /* 0150 */  0x63, 0xA9, 0x62, 0xAA, 0x61, 0xAB, 0x60, 0xAC,  // c.b.a.`.
                    /* 0158 */  0x5F, 0xAD, 0x5D, 0xAE, 0x5C, 0xAF, 0x5B, 0xB0,  // _.].\.[.
                    /* 0160 */  0x5A, 0xB1, 0x59, 0xB2, 0x58, 0xB3, 0x56, 0xB4,  // Z.Y.X.V.
                    /* 0168 */  0x55, 0xB5, 0x54, 0xB6, 0x53, 0xB7, 0x52, 0xB8,  // U.T.S.R.
                    /* 0170 */  0x51, 0xB9, 0x4F, 0xBA, 0x4E, 0xBB, 0x4D, 0xBC,  // Q.O.N.M.
                    /* 0178 */  0x4C, 0xBD, 0x4B, 0xBE, 0x4A, 0xBF, 0x49, 0xC0,  // L.K.J.I.
                    /* 0180 */  0x47, 0xC1, 0x46, 0xC2, 0x45, 0xC3, 0x44, 0xC4,  // G.F.E.D.
                    /* 0188 */  0x43, 0xC5, 0x42, 0xC6, 0x40, 0xC7, 0x3F, 0xC8,  // C.B.@.?.
                    /* 0190 */  0x3E, 0xC9, 0x3D, 0xCA, 0x3C, 0xCB, 0x3B, 0xCC,  // >.=.<.;.
                    /* 0198 */  0x3A, 0xCD, 0x38, 0xCE, 0x37, 0xCF, 0x36, 0xD0,  // :.8.7.6.
                    /* 01A0 */  0x35, 0xD1, 0x34, 0xD2, 0x33, 0xD3, 0x31, 0xD4,  // 5.4.3.1.
                    /* 01A8 */  0x30, 0xD5, 0x2F, 0xD6, 0x2E, 0xD7, 0x2D, 0xD8,  // 0./...-.
                    /* 01B0 */  0x2C, 0xD9, 0x2A, 0xDA, 0x29, 0xDB, 0x28, 0xDC,  // ,.*.).(.
                    /* 01B8 */  0x27, 0xDD, 0x26, 0xDE, 0x25, 0xDF, 0x24, 0xE0,  // '.&.%.$.
                    /* 01C0 */  0x22, 0xE1, 0x21, 0xE2, 0x20, 0xE3, 0x1F, 0xE4,  // ".!. ...
                    /* 01C8 */  0x1E, 0xE5, 0x1D, 0xE6, 0x1B, 0xE7, 0x1A, 0xE8,  // ........
                    /* 01D0 */  0x19, 0xE9, 0x18, 0xEA, 0x17, 0xEB, 0x16, 0xEC,  // ........
                    /* 01D8 */  0x14, 0xED, 0x13, 0xEE, 0x12, 0xEF, 0x11, 0xF0,  // ........
                    /* 01E0 */  0x10, 0xF1, 0x0F, 0xF2, 0x0E, 0xF3, 0x0C, 0xF4,  // ........
                    /* 01E8 */  0x0B, 0xF5, 0x0A, 0xF6, 0x09, 0xF7, 0x08, 0xF8,  // ........
                    /* 01F0 */  0x07, 0xF9, 0x05, 0xFA, 0x04, 0xFB, 0x03, 0xFC,  // ........
                    /* 01F8 */  0x02, 0xFD, 0x01, 0xFE, 0x00, 0xFF, 0xFF, 0xFF   // ........
                })
                Return (RBUF) /* \_SB_.GPU0.PBRT.RBUF */
            }

            Method (ROE1, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE1.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE1.RBUF */
            }

            Method (ROE2, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE2.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE2.RBUF */
            }

            Method (ROE3, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE3.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE3.RBUF */
            }

            Method (ROE4, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0x73)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,  // C>.     
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x00                                 //   .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE4.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE4.RBUF */
            }

            Method (ROE5, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xC5)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x0A, 0x20, 0x20, 0x20, 0x20,  // C>..    
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x3C, 0x44, 0x50, 0x46, 0x69,  //    <DPFi
                    /* 0078 */  0x78, 0x65, 0x64, 0x4C, 0x61, 0x6E, 0x65, 0x64,  // xedLaned
                    /* 0080 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72,  // Configur
                    /* 0088 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x31, 0x3C,  // ation>1<
                    /* 0090 */  0x2F, 0x44, 0x50, 0x46, 0x69, 0x78, 0x65, 0x64,  // /DPFixed
                    /* 0098 */  0x4C, 0x61, 0x6E, 0x65, 0x64, 0x43, 0x6F, 0x6E,  // LanedCon
                    /* 00A0 */  0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,  // figurati
                    /* 00A8 */  0x6F, 0x6E, 0x3E, 0x0A, 0x0A, 0x20, 0x20, 0x20,  // on>..   
                    /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00C0 */  0x20, 0x20, 0x20, 0x20, 0x00                     //     .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE5.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE5.RBUF */
            }

            Method (ROE6, 3, NotSerialized)
            {
                Name (PCFG, Buffer (0xC5)
                {
                    /* 0000 */  0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65,  // <?xml ve
                    /* 0008 */  0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31,  // rsion='1
                    /* 0010 */  0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F,  // .0' enco
                    /* 0018 */  0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x75, 0x74,  // ding='ut
                    /* 0020 */  0x66, 0x2D, 0x38, 0x27, 0x3F, 0x3E, 0x0A, 0x20,  // f-8'?>. 
                    /* 0028 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0030 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0038 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x44,  //       <D
                    /* 0040 */  0x50, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53,  // PEnableS
                    /* 0048 */  0x53, 0x43, 0x3E, 0x31, 0x3C, 0x2F, 0x44, 0x50,  // SC>1</DP
                    /* 0050 */  0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x53, 0x53,  // EnableSS
                    /* 0058 */  0x43, 0x3E, 0x0A, 0x0A, 0x20, 0x20, 0x20, 0x20,  // C>..    
                    /* 0060 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0068 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 0070 */  0x20, 0x20, 0x20, 0x3C, 0x44, 0x50, 0x46, 0x69,  //    <DPFi
                    /* 0078 */  0x78, 0x65, 0x64, 0x4C, 0x61, 0x6E, 0x65, 0x64,  // xedLaned
                    /* 0080 */  0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72,  // Configur
                    /* 0088 */  0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x31, 0x3C,  // ation>1<
                    /* 0090 */  0x2F, 0x44, 0x50, 0x46, 0x69, 0x78, 0x65, 0x64,  // /DPFixed
                    /* 0098 */  0x4C, 0x61, 0x6E, 0x65, 0x64, 0x43, 0x6F, 0x6E,  // LanedCon
                    /* 00A0 */  0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,  // figurati
                    /* 00A8 */  0x6F, 0x6E, 0x3E, 0x0A, 0x0A, 0x20, 0x20, 0x20,  // on>..   
                    /* 00B0 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00B8 */  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //         
                    /* 00C0 */  0x20, 0x20, 0x20, 0x20, 0x00                     //     .
                })
                Local2 = PCFG /* \_SB_.GPU0.ROE6.PCFG */
                If ((Arg0 >= SizeOf (Local2)))
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Local0 = Arg0
                }

                If ((Arg1 > 0x1000))
                {
                    Local1 = 0x1000
                }
                Else
                {
                    Local1 = Arg1
                }

                If (((Local0 + Local1) > SizeOf (Local2)))
                {
                    Local1 = (SizeOf (Local2) - Local0)
                }

                CreateField (Local2, (0x08 * Local0), (0x08 * Local1), RBUF)
                Return (RBUF) /* \_SB_.GPU0.ROE6.RBUF */
            }

            Name (_DOD, Package (0x01)  // _DOD: Display Output Devices
            {
                0x00024321
            })
            Device (AVS0)
            {
                Name (_ADR, 0x00024321)  // _ADR: Address
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.GPU0.AVS0._CRS.RBUF */
                }

                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.MMU0, 
                    \_SB.IMM0, 
                    \_SB.VFE0
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Alias (\_SB.PHRV, _HRV)
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.GPU0._DSM._T_0 */
                    If ((_T_0 == ToUUID ("67ea40b8-8062-4448-968e-46ba873119ba") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x01                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Notify (\_SB.GPU0, DerefOf (Arg3 [Zero]))
                                Return (One)
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }

            Method (_SUB, 0, NotSerialized)  // _SUB: Subsystem ID
            {
                Return (\_SB.ESUB)
            }

            Method (CHDV, 0, NotSerialized)
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Name (CHIF, Package (0x02)
                {
                    One, 
                    Package (0x07)
                    {
                        "CHILDDEV", 
                        Zero, 
                        0x00024321, 
                        "QCOM_AVStream_8380", 
                        Zero, 
                        "Qualcomm Camera AVStream Mini Driver", 
                        Package (0x04)
                        {
                            "COMPATIBLEIDS", 
                            0x02, 
                            "VEN_QCOM&DEV__AVSTREAM", 
                            "QCOM_AVSTREAM"
                        }
                    }
                })
                Return (CHIF) /* \_SB_.GPU0.CHDV.CHIF */
            }

            Name (LIDB, One)
            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Return (LIDB) /* \_SB_.GPU0.LIDB */
            }
        }

        Device (SCM0)
        {
            Name (_HID, "QCOM04DD")  // _HID: Hardware ID
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (TLOG)
        {
            Name (_HID, "QCOM0CE4")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (TREE)
        {
            Name (_HID, "QCOM04DE")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEC")  // _CID: Compatible ID
            Alias (\_SB.LSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0023
                        }
                    Memory32Fixed (ReadWrite,
                        0xDEADBEEF,         // Address Base
                        0xBEEFDEAD,         // Address Length
                        _Y00)
                })
                CreateDWordField (RBUF, \_SB.TREE._CRS._Y00._BAS, TGCA)  // _BAS: Base Address
                CreateDWordField (RBUF, \_SB.TREE._CRS._Y00._LEN, TGCL)  // _LEN: Length
                TGCA = \_SB.TCMA
                TGCL = \_SB.TCML
                Return (RBUF) /* \_SB_.TREE._CRS.RBUF */
            }
        }

        Device (QRNG)
        {
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_HID, "QCOM0C85")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x010C3000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.QRNG._CRS.RBUF */
            }
        }

        Device (SPMI)
        {
            Name (_HID, "QCOM0C0B")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "PNP0CA2")  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0C400000,         // Address Base
                        0x00500000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPMI._CRS.RBUF */
            }

            Method (CONF, 0, NotSerialized)
            {
                Name (XBUF, Buffer (0x34)
                {
                    /* 0000 */  0x00, 0x01, 0x01, 0x03, 0x7F, 0x00, 0x03, 0x80,  // ........
                    /* 0008 */  0x0B, 0x08, 0x08, 0x0A, 0x03, 0x7F, 0x1C, 0x01,  // ........
                    /* 0010 */  0x00, 0x02, 0x0C, 0x40, 0x00, 0x00, 0x00, 0x50,  // ...@...P
                    /* 0018 */  0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x7F, 0x00,  // ........
                    /* 0020 */  0x00, 0x80, 0x03, 0x00, 0x00, 0x0A, 0x00, 0x7F,  // ........
                    /* 0028 */  0x04, 0x01, 0x00, 0x02, 0x0C, 0x40, 0x00, 0x00,  // .....@..
                    /* 0030 */  0x00, 0x50, 0x00, 0x00                           // .P..
                })
                Return (XBUF) /* \_SB_.SPMI.CONF.XBUF */
            }
        }

        Device (GIO0)
        {
            Name (_HID, "QCOM0C0C")  // _HID: Hardware ID
            Name (_CID, "QCOMFFEB")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            OperationRegion (GPOR, GeneralPurposeIo, Zero, One)
            Field (\_SB.GIO0.GPOR, ByteAcc, NoLock, Preserve)
            {
                Connection (
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x005C
                        }
                ), 
                LIDR,   1
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0F100000,         // Address Base
                        0x00F00000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000000F0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000256,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x000002F8,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000253,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000293,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x0000025A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x0000025C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x00000285,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x00000282,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Shared, ,, )
                    {
                        0x00000289,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002F4,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000242,
                    }
                })
                Return (RBUF) /* \_SB_.GIO0._CRS.RBUF */
            }

            Name (GABL, Zero)
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x08))
                {
                    GABL = Arg1
                }
            }

            Method (_AEI, 0, NotSerialized)  // _AEI: ACPI Event Interrupts
            {
                Name (RBF0, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveBoth, SharedAndWake, PullNone, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0340
                        }
                    GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0140
                        }
                    GpioInt (Edge, ActiveHigh, Exclusive, PullNone, 0x01F4,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x007E
                        }
                })
                Return (RBF0) /* \_SB_.GIO0._AEI.RBF0 */
            }

            Method (_EVT, 1, NotSerialized)  // _EVT: Event
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = Arg0
                    If ((_T_0 == 0x0140))
                    {
                        \_SB.I2C7.QEXC ()
                    }
                    ElseIf ((_T_0 == 0x0340))
                    {
                        \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                        \_SB.GPU0.LIDB = \_SB.GIO0.LIDR
                        Notify (\_SB.LID0, 0x80) // Status Change
                    }
                    ElseIf ((_T_0 == 0x7E))
                    {
                        Notify (\_SB.GPU0, 0xD1) // Hardware-Specific
                    }

                    Break
                }
            }

            Name (GPIV, Zero)
            Name (GPIC, 0xEE)
            Name (GPIW, 0x1000)
            Name (GPIB, Package (0x26)
            {
                Zero, 
                0x04, 
                0x08, 
                0x0C, 
                0x03, 
                Zero, 
                0x3C, 
                0x02, 
                0x01C0, 
                0x06, 
                0x0200, 
                0x09, 
                0x0400, 
                0x0A, 
                0x0800, 
                0x0B, 
                0x1000, 
                0x0C, 
                0x2000, 
                0x0D, 
                One, 
                Zero, 
                0x02, 
                One, 
                One, 
                Zero, 
                0x02, 
                One, 
                0x0C, 
                0x02, 
                0x10, 
                0x04, 
                0xE0, 
                0x05, 
                0x0100, 
                0x08, 
                One, 
                Zero
            })
            Name (GICB, 0x17000000)
            Name (GICS, 0x00390000)
            Name (GIC0, 0x0100)
            Name (GIC1, 0x0180)
            Name (GIC2, 0x0280)
            Name (GIC3, 0x0380)
            Name (PDCE, 0x0B220010)
            Name (PDCC, 0x0B220110)
            Name (PDCM, 0x4330)
            Name (PDCV, One)
            Name (CIPR, Package (0x5D)
            {
                Package (0x03)
                {
                    0x71, 
                    0x26, 
                    0x028F
                }, 

                Package (0x03)
                {
                    0x70, 
                    0xA6, 
                    0x028E
                }, 

                Package (0x03)
                {
                    0x6F, 
                    0xDD, 
                    0x028D
                }, 

                Package (0x03)
                {
                    0x6E, 
                    0xDC, 
                    0x028C
                }, 

                Package (0x03)
                {
                    0x6D, 
                    0xD9, 
                    0x028B
                }, 

                Package (0x03)
                {
                    0x6C, 
                    0xC4, 
                    0x028A
                }, 

                Package (0x03)
                {
                    0x6B, 
                    0x9D, 
                    0x0289
                }, 

                Package (0x03)
                {
                    0x6A, 
                    0x41, 
                    0x0288
                }, 

                Package (0x03)
                {
                    0x69, 
                    0x9C, 
                    0x0287
                }, 

                Package (0x03)
                {
                    0x68, 
                    0x99, 
                    0x0286
                }, 

                Package (0x03)
                {
                    0x67, 
                    0x97, 
                    0x0285
                }, 

                Package (0x03)
                {
                    0x66, 
                    0x96, 
                    0x0284
                }, 

                Package (0x03)
                {
                    0x65, 
                    0xB5, 
                    0x0283
                }, 

                Package (0x03)
                {
                    0x64, 
                    0x9A, 
                    0x0282
                }, 

                Package (0x03)
                {
                    0x63, 
                    0xAC, 
                    0x0281
                }, 

                Package (0x03)
                {
                    0x62, 
                    0xA3, 
                    0x025D
                }, 

                Package (0x03)
                {
                    0x61, 
                    0x94, 
                    0x025C
                }, 

                Package (0x03)
                {
                    0x60, 
                    0x93, 
                    0x025B
                }, 

                Package (0x03)
                {
                    0x5F, 
                    0x91, 
                    0x025A
                }, 

                Package (0x03)
                {
                    0x5E, 
                    0x90, 
                    0x0259
                }, 

                Package (0x03)
                {
                    0x5D, 
                    0x8D, 
                    0x0258
                }, 

                Package (0x03)
                {
                    0x5C, 
                    0x1E, 
                    0x0257
                }, 

                Package (0x03)
                {
                    0x5B, 
                    0x47, 
                    0x0256
                }, 

                Package (0x03)
                {
                    0x5A, 
                    0x40, 
                    0x0255
                }, 

                Package (0x03)
                {
                    0x59, 
                    0x35, 
                    0x0254
                }, 

                Package (0x03)
                {
                    0x58, 
                    0x43, 
                    0x0253
                }, 

                Package (0x03)
                {
                    0x57, 
                    0x3B, 
                    0x0252
                }, 

                Package (0x03)
                {
                    0x56, 
                    0x0D, 
                    0x0251
                }, 

                Package (0x03)
                {
                    0x55, 
                    0x0B, 
                    0x0250
                }, 

                Package (0x03)
                {
                    0x54, 
                    0x71, 
                    0x024F
                }, 

                Package (0x03)
                {
                    0x53, 
                    0x86, 
                    0x024E
                }, 

                Package (0x03)
                {
                    0x52, 
                    0x83, 
                    0x024D
                }, 

                Package (0x03)
                {
                    0x51, 
                    0x37, 
                    0x024C
                }, 

                Package (0x03)
                {
                    0x50, 
                    0x27, 
                    0x024B
                }, 

                Package (0x03)
                {
                    0x4F, 
                    0x33, 
                    0x024A
                }, 

                Package (0x03)
                {
                    0x4E, 
                    0x1D, 
                    0x0249
                }, 

                Package (0x03)
                {
                    0x4D, 
                    0x1C, 
                    0x0248
                }, 

                Package (0x03)
                {
                    0x4C, 
                    0x81, 
                    0x0247
                }, 

                Package (0x03)
                {
                    0x4B, 
                    0x7D, 
                    0x0246
                }, 

                Package (0x03)
                {
                    0x4A, 
                    0x7B, 
                    0x0245
                }, 

                Package (0x03)
                {
                    0x49, 
                    0x79, 
                    0x0244
                }, 

                Package (0x03)
                {
                    0x48, 
                    Zero, 
                    0x0243
                }, 

                Package (0x03)
                {
                    0x47, 
                    0x03, 
                    0x0242
                }, 

                Package (0x03)
                {
                    0x46, 
                    0x02, 
                    0x0241
                }, 

                Package (0x03)
                {
                    0x45, 
                    0x13, 
                    0x0240
                }, 

                Package (0x03)
                {
                    0x44, 
                    0x0F, 
                    0x023F
                }, 

                Package (0x03)
                {
                    0x43, 
                    0x07, 
                    0x023E
                }, 

                Package (0x03)
                {
                    0x91, 
                    0x20, 
                    0x0352
                }, 

                Package (0x03)
                {
                    0x90, 
                    0x1B, 
                    0x0351
                }, 

                Package (0x03)
                {
                    0x8F, 
                    0x17, 
                    0x0350
                }, 

                Package (0x03)
                {
                    0x8E, 
                    0x42, 
                    0x02F8
                }, 

                Package (0x03)
                {
                    0x8D, 
                    0x5F, 
                    0x02F7
                }, 

                Package (0x03)
                {
                    0x8C, 
                    0x5E, 
                    0x02F6
                }, 

                Package (0x03)
                {
                    0x8B, 
                    0x5D, 
                    0x02F5
                }, 

                Package (0x03)
                {
                    0x8A, 
                    0x5C, 
                    0x02F4
                }, 

                Package (0x03)
                {
                    0x89, 
                    0x54, 
                    0x02F3
                }, 

                Package (0x03)
                {
                    0x88, 
                    0xE6, 
                    0x02F2
                }, 

                Package (0x03)
                {
                    0x87, 
                    0xE4, 
                    0x02F1
                }, 

                Package (0x03)
                {
                    0x86, 
                    0xD0, 
                    0x02F0
                }, 

                Package (0x03)
                {
                    0x85, 
                    0xCB, 
                    0x02EF
                }, 

                Package (0x03)
                {
                    0x84, 
                    0xE1, 
                    0x02EE
                }, 

                Package (0x03)
                {
                    0x83, 
                    0xE0, 
                    0x02ED
                }, 

                Package (0x03)
                {
                    0x82, 
                    0x22, 
                    0x02A0
                }, 

                Package (0x03)
                {
                    0x81, 
                    0x1A, 
                    0x029F
                }, 

                Package (0x03)
                {
                    0x80, 
                    0x51, 
                    0x029E
                }, 

                Package (0x03)
                {
                    0x7E, 
                    0x18, 
                    0x029C
                }, 

                Package (0x03)
                {
                    0x7D, 
                    0x50, 
                    0x029B
                }, 

                Package (0x03)
                {
                    0x7C, 
                    0xDE, 
                    0x029A
                }, 

                Package (0x03)
                {
                    0x7B, 
                    0x06, 
                    0x0299
                }, 

                Package (0x03)
                {
                    0x7A, 
                    0x12, 
                    0x0298
                }, 

                Package (0x03)
                {
                    0x79, 
                    0xD6, 
                    0x0297
                }, 

                Package (0x03)
                {
                    0x78, 
                    0xD4, 
                    0x0296
                }, 

                Package (0x03)
                {
                    0x77, 
                    0xDB, 
                    0x0295
                }, 

                Package (0x03)
                {
                    0x76, 
                    0xD7, 
                    0x0294
                }, 

                Package (0x03)
                {
                    0x75, 
                    0xC1, 
                    0x0293
                }, 

                Package (0x03)
                {
                    0x74, 
                    0xB8, 
                    0x0292
                }, 

                Package (0x03)
                {
                    0x73, 
                    0x21, 
                    0x0291
                }, 

                Package (0x03)
                {
                    0x72, 
                    0xAF, 
                    0x0290
                }, 

                Package (0x03)
                {
                    0x9D, 
                    0x5B, 
                    0x035E
                }, 

                Package (0x03)
                {
                    0x9C, 
                    0x57, 
                    0x035D
                }, 

                Package (0x03)
                {
                    0x9B, 
                    0x55, 
                    0x035C
                }, 

                Package (0x03)
                {
                    0x9A, 
                    0x53, 
                    0x035B
                }, 

                Package (0x03)
                {
                    0x99, 
                    0x4F, 
                    0x035A
                }, 

                Package (0x03)
                {
                    0x98, 
                    0x4B, 
                    0x0359
                }, 

                Package (0x03)
                {
                    0x97, 
                    0x44, 
                    0x0358
                }, 

                Package (0x03)
                {
                    0x96, 
                    0xD5, 
                    0x0357
                }, 

                Package (0x03)
                {
                    0x95, 
                    0x2F, 
                    0x0356
                }, 

                Package (0x03)
                {
                    0x94, 
                    0x2B, 
                    0x0355
                }, 

                Package (0x03)
                {
                    0x93, 
                    0x24, 
                    0x0354
                }, 

                Package (0x03)
                {
                    0x92, 
                    0x23, 
                    0x0353
                }, 

                Package (0x03)
                {
                    0xA2, 
                    0xE8, 
                    0x0363
                }, 

                Package (0x03)
                {
                    0x9F, 
                    0x1F, 
                    0x0360
                }, 

                Package (0x03)
                {
                    0x9E, 
                    0x15, 
                    0x035F
                }
            })
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.GIO0._DSM._T_0 */
                    If ((_T_0 == ToUUID ("4f248f40-d5e2-499f-834c-27758ea1cd3f") /* GPIO Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = Arg2
                            If ((_T_1 == Zero))
                            {
                                Return (Buffer (One)
                                {
                                     0x03                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Package (0x01)
                                {
                                    0x01C0
                                })
                            }
                            Else
                            {
                                BreakPoint
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == ToUUID ("98b9b2a4-1663-4a5f-82f2-c6c99a394726") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_2 = ToInteger (Arg2)
                            If ((_T_2 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_3 = ToInteger (Arg1)
                                    If ((_T_3 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x0F                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_2 == One))
                            {
                                Debug = "GPIO Version"
                                Return (GPIV) /* \_SB_.GIO0.GPIV */
                            }
                            ElseIf ((_T_2 == 0x02))
                            {
                                Debug = "GPIO Total number of pins"
                                Return (GPIC) /* \_SB_.GIO0.GPIC */
                            }
                            ElseIf ((_T_2 == 0x03))
                            {
                                Debug = "GPIO pin to pin width"
                                Return (GPIW) /* \_SB_.GIO0.GPIW */
                            }
                            ElseIf ((_T_2 == 0x04))
                            {
                                Debug = "GPIO Register Layout buffer"
                                Return (GPIB) /* \_SB_.GIO0.GPIB */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == ToUUID ("921b0fd4-567c-43a0-bb14-2648f7b2a18c") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_4 = ToInteger (Arg2)
                            If ((_T_4 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_5, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_5 = ToInteger (Arg1)
                                    If ((_T_5 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x0F                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_4 == One))
                            {
                                Debug = "PDC Version"
                                Return (PDCV) /* \_SB_.GIO0.PDCV */
                            }
                            ElseIf ((_T_4 == 0x02))
                            {
                                Debug = "CIPR"
                                Return (CIPR) /* \_SB_.GIO0.CIPR */
                            }
                            ElseIf ((_T_4 == 0x03))
                            {
                                Debug = "PDC Enable Register Address"
                                Return (PDCE) /* \_SB_.GIO0.PDCE */
                            }
                            ElseIf ((_T_4 == 0x04))
                            {
                                Debug = "PDC Config Register Address"
                                Return (PDCC) /* \_SB_.GIO0.PDCC */
                            }
                            ElseIf ((_T_4 == 0x05))
                            {
                                Debug = "PDC Config Register Mask"
                                Return (PDCM) /* \_SB_.GIO0.PDCM */
                            }
                            ElseIf ((_T_4 == 0x06))
                            {
                                Debug = "GIC Physical Address"
                                Return (GICB) /* \_SB_.GIO0.GICB */
                            }
                            ElseIf ((_T_4 == 0x07))
                            {
                                Debug = "GIC Size"
                                Return (GICS) /* \_SB_.GIO0.GICS */
                            }
                            ElseIf ((_T_4 == 0x08))
                            {
                                Debug = "GIC IS ENABLE Offset"
                                Return (GIC0) /* \_SB_.GIO0.GIC0 */
                            }
                            ElseIf ((_T_4 == 0x09))
                            {
                                Debug = "GIC IC ENABLE Offset"
                                Return (GIC1) /* \_SB_.GIO0.GIC1 */
                            }
                            ElseIf ((_T_4 == 0x0A))
                            {
                                Debug = "GIC IC PEND Offset"
                                Return (GIC2) /* \_SB_.GIO0.GIC2 */
                            }
                            ElseIf ((_T_4 == 0x0B))
                            {
                                Debug = "GIC IC STATUS Offset"
                                Return (GIC3) /* \_SB_.GIO0.GIC3 */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (IPCC)
        {
            Name (_HID, "QCOM06C2")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE2")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000105,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000106,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000107,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000384,
                    }
                })
                Return (RBUF) /* \_SB_.IPCC._CRS.RBUF */
            }
        }

        Device (WWAN)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PM01, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM0CDA")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Name (GMDN, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0104
                    }
            })
            Name (GMDR, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00DD
                    }
            })
            Name (GMDW, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x008C
                    }
            })
            Name (GMDG, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x008E
                    }
            })
            Scope (\_SB.PM01)
            {
                OperationRegion (NPON, GeneralPurposeIo, Zero, One)
            }

            Scope (\_SB.GIO0)
            {
                OperationRegion (EMDR, GeneralPurposeIo, Zero, One)
                OperationRegion (WDPM, GeneralPurposeIo, Zero, One)
                OperationRegion (GDPM, GeneralPurposeIo, Zero, One)
            }

            Field (\_SB.PM01.NPON, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDN), 
                NPON,   1
            }

            Field (\_SB.GIO0.EMDR, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDR), 
                EMDR,   1
            }

            Field (\_SB.GIO0.WDPM, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDW), 
                WDPM,   1
            }

            Field (\_SB.GIO0.GDPM, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.WWAN.GMDG), 
                GDPM,   1
            }

            Method (_MFF, 0, NotSerialized)
            {
                Debug = "Disable SDX65 Power OFF Sequence"
                If ((((\_SB.PSUB == "IDPS8380") || (\_SB.PSUB == "IDP08380")) || (\_SB.PSUB == "CRD08380")))
                {
                    Sleep (0x64)
                    Debug = "Set SOC EM GPIO 221 to Low"
                    \_SB.WWAN.EMDR = Zero
                    Sleep (0x64)
                    Debug = "Set GPIO 4C to Low"
                    \_SB.WWAN.NPON = Zero
                    Sleep (One)
                    Debug = "Set SOC GPIO 140 to Low"
                    \_SB.WWAN.WDPM = Zero
                    Sleep (One)
                    Debug = "Set SOC GPIO 142 to Low"
                    \_SB.WWAN.GDPM = Zero
                    Sleep (One)
                }
                Else
                {
                    Debug = "SDX65 Power OFF not supported for this form factor"
                }

                Debug = "End SDX65 Power OFF Sequence"
            }

            Method (_MNF, 0, NotSerialized)
            {
                Debug = "Disable SDX65 Power OFF Sequence with 3000 ms delay."
                If ((((\_SB.PSUB == "IDPS8380") || (\_SB.PSUB == "IDP08380")) || (\_SB.PSUB == "CRD08380")))
                {
                    Sleep (0x64)
                    Debug = "SOC EM GPIO 221 to Low"
                    \_SB.WWAN.GMDR = Zero
                    Sleep (0x64)
                    Debug = "Set GPIO 4C to Low"
                    \_SB.WWAN.NPON = Zero
                    Sleep (0x0384)
                    Debug = "Set SOC GPIO 140 to Low"
                    \_SB.WWAN.WDPM = Zero
                    Sleep (One)
                    Debug = "Set SOC GPIO 142 to Low"
                    \_SB.WWAN.GDPM = Zero
                    Sleep (One)
                }
                Else
                {
                    Debug = "SDX55 Power OFF not supported for this form factor"
                }

                Debug = "End SDX55 Power OFF Sequence"
            }
        }

        Scope (\_SB.WWAN)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP5 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (QPPX)
        {
            Name (_HID, "QCOM0C96")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE4")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F9,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000027E,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001D0,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x000000C7,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000316,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000030B,
                    }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x01, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x01, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x008F
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x01, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0092
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x02, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0095
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x0098
                        }
                    GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x03, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x01
                        })
                        {   // Pin list
                            0x009B
                        }
                    GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0100
                        }
                })
                Return (RBUF) /* \_SB_.QPPX._CRS.RBUF */
            }

            Method (_QPG, 1, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == Zero))
                    {
                        Return (Package (0x08)
                        {
                            Zero, 
                            Zero, 
                            Zero, 
                            One, 
                            One, 
                            One, 
                            One, 
                            Zero
                        })
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Name (RBUF, Zero)
                        If ((PRP0 == One))
                        {
                            RBUF |= One
                        }

                        If ((PRP1 == One))
                        {
                            RBUF |= (One << One)
                        }

                        If ((PRP2 == One))
                        {
                            RBUF |= (One << 0x02)
                        }

                        If ((PRP3 == One))
                        {
                            RBUF |= (One << 0x03)
                        }

                        If ((PRP4 == One))
                        {
                            RBUF |= (One << 0x04)
                        }

                        If ((PRP5 == One))
                        {
                            RBUF |= (One << 0x05)
                        }

                        If ((PRP6 == One))
                        {
                            RBUF |= (One << 0x06)
                        }

                        If ((PRP7 == One))
                        {
                            RBUF |= (One << 0x07)
                        }

                        Return (RBUF) /* \_SB_.QPPX._QPG.RBUF */
                    }

                    Break
                }
            }

            Name (DBUF, Buffer (DBFL){})
            CreateByteField (DBUF, Zero, STAT)
            CreateByteField (DBUF, One, LEN)
            CreateByteField (DBUF, 0x02, DVAL)
            CreateField (DBUF, 0x18, 0xA0, DEID)
            Method (_HPX, 2, Serialized)  // _HPX: Hot Plug Parameter Extensions
            {
                DEID = Buffer (ESNL){}
                DVAL = Arg1
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == Zero))
                    {
                        Debug = "Requesting to power on PCIe 0"
                        Name (PID0, Buffer (0x0A)
                        {
                            "\\_SB.PCI0"
                        })
                        DEID = PID0 /* \_SB_.QPPX._HPX.PID0 */
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Debug = "Requesting to power on PCIe 1"
                        Name (PID1, Buffer (0x0A)
                        {
                            "\\_SB.PCI1"
                        })
                        DEID = PID1 /* \_SB_.QPPX._HPX.PID1 */
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Debug = "Requesting to power on PCIe 2"
                        Name (PID2, Buffer (0x0A)
                        {
                            "\\_SB.PCI2"
                        })
                        DEID = PID2 /* \_SB_.QPPX._HPX.PID2 */
                    }
                    Else
                    {
                        Return (Break)
                    }
                }

                If (\_SB.ABD.AVBL)
                {
                    \_SB.PEP0.FLD0 = DBUF /* \_SB_.QPPX.DBUF */
                }
            }

            Method (_HPE, 2, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == Zero))
                    {
                        If ((Arg1 == Zero))
                        {
                            PRP0 = One
                            Notify (\_SB.PCI0, Zero) // Bus Check
                        }
                        Else
                        {
                            PRP0 = 0xFFFFFFFF
                            Notify (\_SB.PCI0, One) // Device Check
                        }
                    }
                    ElseIf ((_T_0 == One))
                    {
                        If ((Arg1 == Zero))
                        {
                            PRP1 = One
                            Notify (\_SB.PCI1, Zero) // Bus Check
                        }
                        Else
                        {
                            PRP1 = 0xFFFFFFFF
                            Notify (\_SB.PCI1, One) // Device Check
                        }
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        If ((Arg1 == Zero))
                        {
                            PRP2 = One
                            Notify (\_SB.PCI2, Zero) // Bus Check
                        }
                        Else
                        {
                            PRP2 = 0xFFFFFFFF
                            Notify (\_SB.PCI2, One) // Device Check
                        }
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        If ((Arg1 == Zero))
                        {
                            PRP3 = One
                            Notify (\_SB.PCI3, Zero) // Bus Check
                        }
                        Else
                        {
                            PRP3 = 0xFFFFFFFF
                            Notify (\_SB.PCI3, One) // Device Check
                        }
                    }

                    Break
                }
            }

            Name (GWLE, ResourceTemplate ()
            {
                GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0075
                    }
            })
            Scope (\_SB.GIO0)
            {
                OperationRegion (WLEN, GeneralPurposeIo, Zero, One)
            }

            Field (\_SB.GIO0.WLEN, ByteAcc, NoLock, Preserve)
            {
                Connection (\_SB.QPPX.GWLE), 
                WLEN,   1
            }

            Method (_RST, 1, Serialized)  // _RST: Device Reset
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == 0x04))
                    {
                        \_SB.QPPX.WLEN = Zero
                        Sleep (0x1F)
                        \_SB.QPPX.WLEN = One
                        Sleep (0x0A)
                        Debug = "Reset 4 pass"
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        Debug = "Power off-on SDX65 with 200 ms delay."
                        Sleep (0x0190)
                        Debug = "Set GPIO 4C to Low"
                        \_SB.WWAN.NPON = Zero
                        Sleep (0xFF)
                        Debug = "SOC EM GPIO 221 to Low"
                        \_SB.WWAN.GMDR = Zero
                        Sleep (0xC8)
                        Debug = "SOC EM GPIO 221 to High"
                        \_SB.WWAN.GMDR = One
                        Sleep (0x05)
                        Debug = "Set GPIO 4C to High"
                        \_SB.WWAN.NPON = One
                        Sleep (0xA5)
                        Sleep (0x32)
                        Debug = "End SDX65 Reset Sequence"
                    }
                    Else
                    {
                        Debug = "Invalid PCIe port number passed to QPPX reset helper"
                    }

                    Break
                }
            }
        }

        Device (PCI0)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_SEG, Zero)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x02DF
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x02E4
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x02EA
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x02EC
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP0 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_CBA, 0, NotSerialized)  // _CBA: Configuration Base Address
            {
                Return (0x0000000400000000)
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x40000000,         // Range Minimum
                        0x4FFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x10000000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x0000000000000000, // Granularity
                        0x0000000410000000, // Range Minimum
                        0x00000004FFFFFFFF, // Range Maximum
                        0x0000000000000000, // Translation Offset
                        0x00000000F0000000, // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x00FF,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0100,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI0._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x06)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }, 

                    ToUUID ("efcc06cc-73ac-4bc3-bff0-76143807c389") /* Unknown UUID */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "ExternalFacingPort", 
                            One
                        }, 

                        Package (0x02)
                        {
                            "UID", 
                            Zero
                        }
                    }, 

                    ToUUID ("daffd814-6eba-4d8c-8a91-bc9bbf4aa301") /* Device Properties for _DSD */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "usb4-host-interface", 
                            \_SB.UBF0.PRT0
                        }, 

                        Package (0x02)
                        {
                            "usb4-port-number", 
                            Zero
                        }
                    }
                })
                Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
                {
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.PCI0.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        Device (PCI1)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_SEG, One)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x0152
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x0308
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x0309
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x030A
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP1 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_CBA, 0, NotSerialized)  // _CBA: Configuration Base Address
            {
                Return (0x0000000500000000)
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x50000000,         // Range Minimum
                        0x5FFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x10000000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x0000000000000000, // Granularity
                        0x0000000510000000, // Range Minimum
                        0x00000005FFFFFFFF, // Range Maximum
                        0x0000000000000000, // Translation Offset
                        0x00000000F0000000, // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x00FF,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0100,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI1._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI1._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI1._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI1.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x02
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x06)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }, 

                    ToUUID ("efcc06cc-73ac-4bc3-bff0-76143807c389") /* Unknown UUID */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "ExternalFacingPort", 
                            One
                        }, 

                        Package (0x02)
                        {
                            "UID", 
                            One
                        }
                    }, 

                    ToUUID ("daffd814-6eba-4d8c-8a91-bc9bbf4aa301") /* Device Properties for _DSD */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "usb4-host-interface", 
                            \_SB.UBF0.PRT1
                        }, 

                        Package (0x02)
                        {
                            "usb4-port-number", 
                            One
                        }
                    }
                })
                Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
                {
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.PCI1.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        Device (PCI2)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_SEG, 0x02)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x0315
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x030C
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x030D
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x030E
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP2 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_CBA, 0, NotSerialized)  // _CBA: Configuration Base Address
            {
                Return (0x0000006000000000)
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x60000000,         // Range Minimum
                        0x6FFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x10000000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x0000000000000000, // Granularity
                        0x0000006010000000, // Range Minimum
                        0x0000006FFFFFFFFF, // Range Maximum
                        0x0000000000000000, // Translation Offset
                        0x0000000FF0000000, // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x00FF,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0100,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI2._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI2._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI2._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI2.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x03
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x06)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }, 

                    ToUUID ("efcc06cc-73ac-4bc3-bff0-76143807c389") /* Unknown UUID */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "ExternalFacingPort", 
                            One
                        }, 

                        Package (0x02)
                        {
                            "UID", 
                            0x02
                        }
                    }, 

                    ToUUID ("daffd814-6eba-4d8c-8a91-bc9bbf4aa301") /* Device Properties for _DSD */, 
                    Package (0x02)
                    {
                        Package (0x02)
                        {
                            "usb4-host-interface", 
                            \_SB.UBF0.PRT2
                        }, 

                        Package (0x02)
                        {
                            "usb4-port-number", 
                            0x02
                        }
                    }
                })
                Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
                {
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    })
                    Return (RBUF) /* \_SB_.PCI2.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        Device (PCI3)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_SEG, 0x03)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0xFC
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0xFD
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x010D
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x010E
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP3 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x7A000000,         // Range Minimum
                        0x7BFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x02000000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x0000000000000000, // Granularity
                        0x0000000740200000, // Range Minimum
                        0x000000077FFFFFFF, // Range Maximum
                        0x0000000000000000, // Translation Offset
                        0x000000003FE00000, // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI3._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI3._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI3._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI3.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x04
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R3RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0200
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI3.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }

                Device (EP1)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (PFLG, Zero)
                    OperationRegion (CFG0, PCI_Config, Zero, 0x0C)
                    Field (CFG0, DWordAcc, NoLock, Preserve)
                    {
                        DID0,   32, 
                        Offset (0x0A), 
                        EPCC,   16
                    }

                    OperationRegion (PWR0, PCI_Config, 0x0814, One)
                    Field (PWR0, DWordAcc, NoLock, Preserve)
                    {
                            ,   3, 
                        LGD3,   1
                    }

                    OperationRegion (PWR2, PCI_Config, 0x0816, One)
                    Field (PWR2, DWordAcc, NoLock, Preserve)
                    {
                        VLD0,   1, 
                            ,   1, 
                        NVD3,   1, 
                        PRTG,   1
                    }

                    OperationRegion (PWR3, PCI_Config, 0x0817, One)
                    Field (PWR3, DWordAcc, NoLock, Preserve)
                    {
                            ,   7, 
                        UNLK,   1
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        If (((PRP3 == One) && (PFLG == Zero)))
                        {
                            If ((DID0 == 0x526110EC))
                            {
                                UNLK = One
                                LGD3 = One
                                NVD3 = One
                                VLD0 = One
                                PFLG = One
                            }
                        }
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                    {
                        ToUUID ("5025030f-842f-4ab4-a561-99a5189762d0") /* Unknown UUID */, 
                        Package (0x01)
                        {
                            Package (0x02)
                            {
                                "StorageD3Enable", 
                                One
                            }
                        }
                    })
                }
            }
        }

        PowerResource (R3RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI4)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_SEG, 0x04)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0xB5
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0xB6
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0xB7
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0xB8
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP4 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x7C300000,         // Range Minimum
                        0x7DFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x01D00000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI4._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI4._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI4._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI4.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x05
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R4RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0240
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI4.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }

                Device (WLN)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (RD, 0x9C)
                    Name (BFLG, Zero)
                    Name (BDFE, "")
                    Name (FFLG, One)
                    Name (PWLN, Buffer (0x22)
                    {
                        /* 0000 */  0x01, 0x01, 0x38, 0x38, 0x32, 0x32, 0x2A, 0x2A,  // ..8822**
                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x44, 0x3E, 0x3E, 0x3E,  // ....D>>>
                        /* 0010 */  0x3E, 0x36, 0x36, 0x2A, 0x36, 0x36, 0x2A, 0x44,  // >66*66*D
                        /* 0018 */  0x3E, 0x3E, 0x3E, 0x3E, 0x2A, 0x36, 0x36, 0x36,  // >>>>*666
                        /* 0020 */  0x36, 0x2A                                       // 6*
                    })
                    Name (SGB, Buffer (0x20)
                    {
                        /* 0000 */  0x5F, 0x05, 0x54, 0xD1, 0xC9, 0xE9, 0x68, 0xCE,  // _.T...h.
                        /* 0008 */  0x53, 0x73, 0x70, 0xA1, 0x30, 0xAA, 0x7B, 0x74,  // Ssp.0.{t
                        /* 0010 */  0xFB, 0x5E, 0x29, 0xE7, 0xF5, 0x64, 0xC4, 0xC7,  // .^)..d..
                        /* 0018 */  0xFA, 0xD2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF   // ........
                    })
                    Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("f634f534-6147-11ec-90d6-0242ac120003") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_0 = ToInteger (Arg2)
                                If ((_T_0 == Zero))
                                {
                                    Return (Buffer (0x02)
                                    {
                                         0xBF, 0x08                                       // ..
                                    })
                                }
                                ElseIf ((_T_0 == One))
                                {
                                    If (((WFCC & One) == One))
                                    {
                                        Return (RD) /* \_SB_.PCI4.RP1_.WLN_.RD__ */
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }
                                ElseIf ((_T_0 == 0x02))
                                {
                                    Return (BFLG) /* \_SB_.PCI4.RP1_.WLN_.BFLG */
                                }
                                ElseIf ((_T_0 == 0x03))
                                {
                                    Return (BDFE) /* \_SB_.PCI4.RP1_.WLN_.BDFE */
                                }
                                ElseIf ((_T_0 == 0x04))
                                {
                                    Return (PWLN) /* \_SB_.PCI4.RP1_.WLN_.PWLN */
                                }
                                ElseIf ((_T_0 == 0x07))
                                {
                                    Return (SGB) /* \_SB_.PCI4.RP1_.WLN_.SGB_ */
                                }
                                ElseIf ((_T_0 == 0x0B))
                                {
                                    Return (FFLG) /* \_SB_.PCI4.RP1_.WLN_.FFLG */
                                }

                                Break
                            }
                        }

                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }
                }
            }
        }

        PowerResource (R4RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI5)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX, 
                \_SB.WWAN
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_SEG, 0x05)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x66
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x67
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x68
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x69
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP5 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x7E300000,         // Range Minimum
                        0x7FFFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x01D00000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI5._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI5._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI5._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI5.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x06
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R5RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0280
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI5.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }

                Device (MHI)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (UDE)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                    }

                    Device (QMUX)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Device (GNSS)
                        {
                            Name (_ADR, One)  // _ADR: Address
                        }

                        Device (NTAD)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                        }

                        Device (PSAU)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                        }

                        Device (COEX)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                        }
                    }
                }
            }
        }

        PowerResource (R5RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI6)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Name (_SEG, 0x06)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x036B
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x036C
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x036D
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x0324
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP6 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x70300000,         // Range Minimum
                        0x71FFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x01D00000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI6._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI6._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI6._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI6.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x07
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R6RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x02C0
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI6.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }

                Device (NVME)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                    {
                        ToUUID ("5025030f-842f-4ab4-a561-99a5189762d0") /* Unknown UUID */, 
                        Package (0x01)
                        {
                            Package (0x02)
                            {
                                "StorageD3Enable", 
                                Zero
                            }
                        }
                    })
                }
            }
        }

        PowerResource (R6RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (PCI7)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.QPPX
            })
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Name (_SEG, 0x07)  // _SEG: PCI Segment
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_PRT, Package (0x04)  // _PRT: PCI Routing Table
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x0138
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x0139
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x013A
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x013B
                }
            })
            Method (_CCA, 0, NotSerialized)  // _CCA: Cache Coherency Attribute
            {
                Return (One)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PRP7 == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {
                Return (Zero)
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                        0x00000000,         // Granularity
                        0x74300000,         // Range Minimum
                        0x75FFFFFF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x01D00000,         // Length
                        ,, , AddressRangeMemory, TypeStatic)
                    WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                        0x0000,             // Granularity
                        0x0000,             // Range Minimum
                        0x0001,             // Range Maximum
                        0x0000,             // Translation Offset
                        0x0002,             // Length
                        ,, )
                })
                Return (RBUF) /* \_SB_.PCI7._CRS.RBUF */
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
            }

            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    CreateDWordField (Arg3, Zero, CDW1)
                    CreateDWordField (Arg3, 0x04, CDW2)
                    CreateDWordField (Arg3, 0x08, CDW3)
                    SUPP = CDW2 /* \_SB_.PCI7._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI7._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x15
                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI7.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (0x02)
                            {
                                 0xFF, 0x03                                       // ..
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    One
                                }, 

                                Package (0x03)
                                {
                                    Zero, 
                                    One, 
                                    One
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (Package (One)
                            {
                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (One)
                            {
                                Zero
                            })
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (Package (0x02)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (0x04)
                                {
                                    One, 
                                    0x03, 
                                    Zero, 
                                    0x07
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x05))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x06))
                        {
                            Return (Package (0x04)
                            {
                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }, 

                                Package (One)
                                {
                                    Zero
                                }
                            })
                        }
                        ElseIf ((_T_0 == 0x07))
                        {
                            Return (Package (One)
                            {
                                0x08
                            })
                        }
                        ElseIf ((_T_0 == 0x08))
                        {
                            Return (Package (One)
                            {
                                One
                            })
                        }
                        ElseIf ((_T_0 == 0x09))
                        {
                            Return (Package (0x05)
                            {
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                Zero, 
                                0xFFFFFFFF
                            })
                        }
                        Else
                        {
                        }

                        Break
                    }
                }
            }

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Device (RP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                }

                Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                {
                    \_SB.R7RR
                })
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                {
                    ToUUID ("6211e2c0-58a3-4af3-90e1-927a4e0c55a4") /* Unknown UUID */, 
                    Package (0x01)
                    {
                        Package (0x02)
                        {
                            "HotPlugSupportInD3", 
                            One
                        }
                    }
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0300
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI7.RP1_._CRS.RBUF */
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {
                        While (One)
                        {
                            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_0 = ToInteger (Arg2)
                            If ((_T_0 == Zero))
                            {
                                Return (Buffer (0x02)
                                {
                                     0x01, 0x03                                       // ..
                                })
                            }
                            ElseIf ((_T_0 == 0x08))
                            {
                                Return (Package (One)
                                {
                                    One
                                })
                            }
                            ElseIf ((_T_0 == 0x09))
                            {
                                Return (Package (0x05)
                                {
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    0xFFFFFFFF, 
                                    Zero, 
                                    0xFFFFFFFF
                                })
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                }
            }
        }

        PowerResource (R7RR, 0x05, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (One)
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
            }

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
            }
        }

        Device (IPC0)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM0C0D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (GLNK)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.IPCC, 
                \_SB.RPEN
            })
            Name (_HID, "QCOM0C84")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (ARPC)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.GLNK, 
                \_SB.SCM0, 
                \_SB.IMM0
            })
            Name (_HID, "QCOM0C5C")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (ARPD)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.ADSP, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0C82")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (NSPM)
        {
            Name (_DEP, Package (0x05)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.GLNK, 
                \_SB.SCM0, 
                \_SB.IMM0, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0D0A")  // _HID: Hardware ID
            Alias (\_SB.PHRV, _HRV)
        }

        Scope (\_SB)
        {
            Mutex (MUT0, 0x00)
            Mutex (ECMX, 0x00)
            Mutex (FANL, 0x00)
        }

        Scope (\_SB.I2C6)
        {
            Name (UMPC, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0036, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2C6",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Name (AVBL, Zero)
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x09))
                {
                    AVBL = Arg1
                    Debug = "I2C6 AVBL:"
                    Debug = AVBL /* \_SB_.I2C6.AVBL */
                    If ((Arg1 == One))
                    {
                        Acquire (\_SB.ECMX, 0xFFFF)
                        FNHB = Zero
                        Release (\_SB.ECMX)
                        Debug = "Fan Hibernate Notification:"
                        Debug = FNHB /* \_SB_.FNHB */
                    }
                }
            }

            OperationRegion (DVUM, GenericSerialBus, Zero, 0x0100)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x05), 
                AccessAs (BufferAcc, AttribByte), 
                CMD5,   8
            }

            Name (DSME, ToUUID ("62617bb4-a257-415d-ad2c-0f6bd849278a") /* Unknown UUID */)
            Name (EF01, One)
            Name (EF02, 0x02)
            Name (EF03, 0x03)
            Name (EF04, 0x04)
            Name (EF05, 0x05)
            Name (EF06, 0x06)
            Name (DSMF, ToUUID ("5792aa21-7727-443f-8ca2-e6b3be94b6b1") /* Unknown UUID */)
            Name (FF01, One)
            Name (FF02, 0x02)
            Name (FF03, 0x03)
            Name (FF04, 0x04)
            Name (FF05, 0x05)
            Name (FF06, 0x06)
            Name (FF07, 0x07)
            Name (FF08, 0x08)
            Name (FF09, 0x09)
            Name (FF10, 0x0A)
            Name (FF11, 0x0B)
            Name (FF12, 0x0C)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawBytes (0x05)), 
                FC20,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x01)), 
                FC21,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x03)), 
                FC22,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x23), 
                AccessAs (BufferAcc, AttribByte), 
                FC23,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x24), 
                AccessAs (BufferAcc, AttribByte), 
                FC24,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x03)), 
                F25G,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawBytes (0x05)), 
                F25S,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x02)), 
                FC26,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x01)), 
                FC27,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x41)), 
                F28G,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawBytes (0x44)), 
                F28S,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x29), 
                AccessAs (BufferAcc, AttribByte), 
                FC29,   8
            }

            Name (CB29, Buffer (0x03){})
            CreateByteField (CB29, Zero, B029)
            CreateByteField (CB29, One, B129)
            CreateByteField (CB29, 0x02, B229)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2A), 
                AccessAs (BufferAcc, AttribByte), 
                FC2A,   8
            }

            Name (CB2A, Buffer (0x03){})
            CreateByteField (CB2A, Zero, B02A)
            CreateByteField (CB2A, One, B12A)
            CreateByteField (CB2A, 0x02, B22A)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2B), 
                AccessAs (BufferAcc, AttribByte), 
                FC2B,   8
            }

            Name (CB2B, Buffer (0x03){})
            CreateByteField (CB2B, Zero, B02B)
            CreateByteField (CB2B, One, B12B)
            CreateByteField (CB2B, 0x02, B22B)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2C), 
                AccessAs (BufferAcc, AttribByte), 
                FC2C,   8
            }

            Name (CB2C, Buffer (0x03){})
            CreateByteField (CB2C, Zero, B02C)
            CreateByteField (CB2C, One, B12C)
            CreateByteField (CB2C, 0x02, B22C)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2D), 
                AccessAs (BufferAcc, AttribByte), 
                FC2D,   8
            }

            Name (CB2D, Buffer (0x03){})
            CreateByteField (CB2D, Zero, B02D)
            CreateByteField (CB2D, One, B12D)
            CreateByteField (CB2D, 0x02, B22D)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2E), 
                AccessAs (BufferAcc, AttribByte), 
                FC2E,   8
            }

            Name (CB2E, Buffer (0x03){})
            CreateByteField (CB2E, Zero, B02E)
            CreateByteField (CB2E, One, B12E)
            CreateByteField (CB2E, 0x02, B22E)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x2F), 
                AccessAs (BufferAcc, AttribByte), 
                FC2F,   8
            }

            Name (CB2F, Buffer (0x03){})
            CreateByteField (CB2F, Zero, B02F)
            CreateByteField (CB2F, One, B12F)
            CreateByteField (CB2F, 0x02, B22F)
            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawBytes (0x07)), 
                FC30,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawBytes (0x07)), 
                F32S,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                AccessAs (BufferAcc, AttribRawProcessBytes (0x05)), 
                F32G,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x34), 
                AccessAs (BufferAcc, AttribBytes (0x02)), 
                FC34,   8
            }

            Field (DVUM, BufferAcc, NoLock, Preserve)
            {
                Connection (UMPC), 
                Offset (0x35), 
                AccessAs (BufferAcc, AttribByte), 
                FC35,   8
            }

            Method (EAPQ, 0, NotSerialized)
            {
                If ((\_SB.I2C6.DATA == 0x30))
                {
                    Debug = "Fan 1 status change"
                    \_SB.I2C6._DSM (DSME, Zero, EF01, One)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x31))
                {
                    Debug = "Fan 2 status change"
                    \_SB.I2C6._DSM (DSME, Zero, EF01, 0x02)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x32))
                {
                    Debug = "Fan1 speed change"
                    \_SB.I2C6._DSM (DSME, Zero, EF02, One)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x33))
                {
                    Debug = "Fan2 speed change"
                    \_SB.I2C6._DSM (DSME, Zero, EF02, 0x02)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x34))
                {
                    Debug = "EC completed LUT update"
                    \_SB.I2C6._DSM (DSME, Zero, EF03, Zero)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x35))
                {
                    Debug = "EC completed Fan Profile Switch"
                    \_SB.I2C6._DSM (DSME, Zero, EF04, Zero)
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x36))
                {
                    Debug = "EC thermistor #1 temperature crossed threshold"
                    Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x37))
                {
                    Debug = "EC thermistor #2 temperature crossed threshold"
                    Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x38))
                {
                    Debug = "EC thermistor #3 temperature crossed threshold"
                    Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x39))
                {
                    Debug = "EC thermistor #4 temperature crossed threshold"
                    Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x3A))
                {
                    Debug = "EC thermistor #5 temperature crossed threshold"
                    Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x3B))
                {
                    Debug = "EC thermistor #6 temperature crossed threshold"
                    Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x3C))
                {
                    Debug = "EC thermistor #7 temperature crossed threshold"
                    Notify (\_SB.TZ45, 0x81) // Information Change
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                ElseIf ((\_SB.I2C6.DATA == 0x3D))
                {
                    Debug = "EC Recovered from Reset"
                    \_SB.I2C6._DSM (DSME, Zero, EF05, Zero)
                }
                Else
                {
                    Debug = "Unknown event"
                    Debug = \_SB.I2C6.DATA
                }
            }

            Name (BUF5, Buffer (0x03)
            {
                 0x00, 0x01, 0x00                                 // ...
            })
            CreateByteField (BUF5, Zero, BYAT)
            CreateByteField (BUF5, 0x02, DATA)
            Method (INTR, 0, NotSerialized)
            {
                BUF5 = \_SB.I2C6.CMD5
                If ((BYAT != One))
                {
                    \_SB.I2C6.EAPQ ()
                    Return (DATA) /* \_SB_.I2C6.DATA */
                }

                Return (0xFF)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.I2C6._DSM._T_0 */
                    If ((_T_0 == ToUUID ("5792aa21-7727-443f-8ca2-e6b3be94b6b1") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Local0 = 0x0FFE
                                        Return (Local0)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Debug = "Temp to EC"
                                Name (CB20, Buffer (0x07){})
                                CreateByteField (CB20, Zero, B020)
                                CreateByteField (CB20, One, B120)
                                CreateByteField (CB20, 0x02, B220)
                                CreateByteField (CB20, 0x03, B320)
                                CreateByteField (CB20, 0x04, B420)
                                CreateField (CB20, 0x28, 0x10, B520)
                                B120 = 0x05
                                B220 = 0x20
                                B320 = DerefOf (Arg3 [One])
                                B420 = 0x02
                                B520 = DerefOf (Arg3 [Zero])
                                Debug = "buff"
                                Debug = CB20 /* \_SB_.I2C6._DSM.CB20 */
                                CB20 = \_SB.I2C6.FC20 = CB20 /* \_SB_.I2C6._DSM.CB20 */
                                If ((B020 != Zero))
                                {
                                    Debug = "Temp to EC failed"
                                    Debug = CB20 /* \_SB_.I2C6._DSM.CB20 */
                                    Return (B020) /* \_SB_.I2C6._DSM.B020 */
                                }

                                Debug = "buff post i2c"
                                Debug = CB20 /* \_SB_.I2C6._DSM.CB20 */
                                Return (B020) /* \_SB_.I2C6._DSM.B020 */
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (CB23, Buffer (0x03){})
                                CreateByteField (CB23, Zero, B023)
                                CreateByteField (CB23, One, B123)
                                CreateByteField (CB23, 0x02, B223)
                                B123 = One
                                B223 = Arg3
                                CB23 = \_SB.I2C6.FC23 = CB23 /* \_SB_.I2C6._DSM.CB23 */
                                If ((B023 != Zero))
                                {
                                    Debug = "MS status to EC failed"
                                    Debug = CB23 /* \_SB_.I2C6._DSM.CB23 */
                                    Return (B023) /* \_SB_.I2C6._DSM.B023 */
                                }

                                Debug = "MS status sent"
                                Debug = CB23 /* \_SB_.I2C6._DSM.CB23 */
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                Name (CB24, Buffer (0x03){})
                                CreateByteField (CB24, Zero, B024)
                                CreateByteField (CB24, One, B124)
                                CreateByteField (CB24, 0x02, B224)
                                B124 = One
                                B224 = Arg3
                                Debug = "Fan Proile"
                                Debug = CB24 /* \_SB_.I2C6._DSM.CB24 */
                                CB24 = \_SB.I2C6.FC24 = CB24 /* \_SB_.I2C6._DSM.CB24 */
                                If ((B024 != Zero))
                                {
                                    Debug = "Fan profile to EC failed"
                                    Debug = CB24 /* \_SB_.I2C6._DSM.CB24 */
                                    Return (B024) /* \_SB_.I2C6._DSM.B024 */
                                }

                                Debug = "Fan Proile sent"
                                Debug = CB24 /* \_SB_.I2C6._DSM.CB24 */
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    Debug = "Get Fan Trip points"
                                    Name (C25G, Buffer (0x07){})
                                    CreateByteField (C25G, Zero, G025)
                                    CreateByteField (C25G, One, G125)
                                    CreateByteField (C25G, 0x02, G225)
                                    CreateByteField (C25G, 0x03, G325)
                                    CreateByteField (C25G, 0x04, G425)
                                    CreateField (C25G, 0x28, 0x10, G525)
                                    G125 = 0x05
                                    G225 = 0x25
                                    G325 = DerefOf (Arg3 [One])
                                    Debug = "buff"
                                    Debug = C25G /* \_SB_.I2C6._DSM.C25G */
                                    C25G = \_SB.I2C6.F25G = C25G /* \_SB_.I2C6._DSM.C25G */
                                    If ((G025 != Zero))
                                    {
                                        Debug = "Get Fan trip point failed"
                                        Debug = C25G /* \_SB_.I2C6._DSM.C25G */
                                        Return (G025) /* \_SB_.I2C6._DSM.G025 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C25G /* \_SB_.I2C6._DSM.C25G */
                                    Local0 = (G325 | (G425 << 0x08))
                                    Return (Local0)
                                }
                                ElseIf ((DerefOf (Arg3 [Zero]) == 0x02))
                                {
                                    Debug = "Set Fan Trip points"
                                    Debug = Arg3
                                    Name (C25S, Buffer (0x07){})
                                    CreateByteField (C25S, Zero, S025)
                                    CreateByteField (C25S, One, S125)
                                    CreateByteField (C25S, 0x02, S225)
                                    CreateByteField (C25S, 0x03, S325)
                                    CreateByteField (C25S, 0x04, S425)
                                    CreateField (C25S, 0x28, 0x10, S525)
                                    S125 = 0x05
                                    S225 = 0x25
                                    S325 = DerefOf (Arg3 [One])
                                    S425 = 0x02
                                    S525 = DerefOf (Arg3 [0x02])
                                    Debug = "buff"
                                    Debug = C25S /* \_SB_.I2C6._DSM.C25S */
                                    C25S = \_SB.I2C6.F25S = C25S /* \_SB_.I2C6._DSM.C25S */
                                    If ((S025 != Zero))
                                    {
                                        Debug = "Set Fan Trip point to EC failed"
                                        Debug = C25S /* \_SB_.I2C6._DSM.C25S */
                                        Return (S025) /* \_SB_.I2C6._DSM.S025 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C25S /* \_SB_.I2C6._DSM.C25S */
                                    Return (S025) /* \_SB_.I2C6._DSM.S025 */
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x05))
                            {
                                Debug = "Fan Debug Mode"
                                Name (CB30, Buffer (0x09){})
                                CreateByteField (CB30, Zero, B030)
                                CreateByteField (CB30, One, B130)
                                CreateByteField (CB30, 0x02, B230)
                                CreateByteField (CB30, 0x03, B330)
                                CreateByteField (CB30, 0x04, B430)
                                CreateByteField (CB30, 0x05, B530)
                                CreateField (CB30, 0x30, 0x18, B630)
                                B130 = 0x07
                                B230 = 0x30
                                B330 = DerefOf (Arg3 [Zero])
                                B430 = 0x04
                                B530 = DerefOf (Arg3 [One])
                                B630 = DerefOf (Arg3 [0x02])
                                Debug = "buff"
                                Debug = CB30 /* \_SB_.I2C6._DSM.CB30 */
                                CB30 = \_SB.I2C6.FC30 = CB30 /* \_SB_.I2C6._DSM.CB30 */
                                If ((B030 != Zero))
                                {
                                    Debug = "Fan Debug Mode failed"
                                    Debug = CB30 /* \_SB_.I2C6._DSM.CB30 */
                                    Return (B030) /* \_SB_.I2C6._DSM.B030 */
                                }

                                Debug = "buff post i2c"
                                Debug = CB30 /* \_SB_.I2C6._DSM.CB30 */
                                Return (B030) /* \_SB_.I2C6._DSM.B030 */
                            }
                            ElseIf ((_T_1 == 0x06))
                            {
                                Debug = "Get LUT From EC"
                                Name (C28G, Buffer (0x44){})
                                CreateByteField (C28G, Zero, G028)
                                CreateByteField (C28G, One, G128)
                                CreateByteField (C28G, 0x02, G228)
                                CreateByteField (C28G, 0x03, G328)
                                CreateByteField (C28G, 0x04, G428)
                                G128 = 0x05
                                G228 = 0x28
                                G328 = DerefOf (Arg3 [Zero])
                                G428 = DerefOf (Arg3 [One])
                                Debug = "init buff"
                                Debug = C28G /* \_SB_.I2C6._DSM.C28G */
                                C28G = \_SB.I2C6.F28G = C28G /* \_SB_.I2C6._DSM.C28G */
                                Debug = "buff post i2c"
                                Debug = C28G /* \_SB_.I2C6._DSM.C28G */
                                If ((G028 != Zero))
                                {
                                    Debug = "get LUT failed"
                                    Debug = C28G /* \_SB_.I2C6._DSM.C28G */
                                    Return (G028) /* \_SB_.I2C6._DSM.G028 */
                                }

                                Return (C28G) /* \_SB_.I2C6._DSM.C28G */
                            }
                            ElseIf ((_T_1 == 0x07))
                            {
                                Debug = "Set LUT to EC"
                                Name (C28S, Buffer (0x46){})
                                CreateByteField (C28S, Zero, S028)
                                CreateByteField (C28S, One, S128)
                                CreateByteField (C28S, 0x02, S228)
                                CreateByteField (C28S, 0x03, S328)
                                CreateByteField (C28S, 0x04, S428)
                                CreateField (C28S, 0x28, 0x0208, S528)
                                S128 = 0x44
                                S228 = 0x28
                                S328 = DerefOf (Arg3 [Zero])
                                S428 = DerefOf (Arg3 [One])
                                S528 = DerefOf (Arg3 [0x02])
                                Debug = "init buff"
                                Debug = C28S /* \_SB_.I2C6._DSM.C28S */
                                C28S = \_SB.I2C6.F28S = C28S /* \_SB_.I2C6._DSM.C28S */
                                Debug = "buff post i2c"
                                Debug = C28S /* \_SB_.I2C6._DSM.C28S */
                                If ((S028 != Zero))
                                {
                                    Debug = "Set LUT failed"
                                    Debug = C28S /* \_SB_.I2C6._DSM.C28S */
                                    Return (S028) /* \_SB_.I2C6._DSM.S028 */
                                }

                                Return (S028) /* \_SB_.I2C6._DSM.S028 */
                            }
                            ElseIf ((_T_1 == 0x08))
                            {
                                Debug = "Query Num of profiles"
                                Debug = Arg3
                                Name (CB26, Buffer (0x05){})
                                CreateByteField (CB26, Zero, B026)
                                CreateByteField (CB26, One, B126)
                                CreateByteField (CB26, 0x02, B226)
                                CreateByteField (CB26, 0x03, B326)
                                CreateByteField (CB26, 0x04, B426)
                                B126 = 0x02
                                B226 = 0x26
                                B326 = DerefOf (Arg3 [Zero])
                                Debug = "init buff"
                                Debug = CB26 /* \_SB_.I2C6._DSM.CB26 */
                                CB26 = \_SB.I2C6.FC26 = CB26 /* \_SB_.I2C6._DSM.CB26 */
                                Debug = "buff post i2c"
                                Debug = CB26 /* \_SB_.I2C6._DSM.CB26 */
                                If ((B026 != Zero))
                                {
                                    Debug = "get num of profiles failed"
                                    Debug = CB26 /* \_SB_.I2C6._DSM.CB26 */
                                    B026 = 0xFF
                                    Return (B026) /* \_SB_.I2C6._DSM.B026 */
                                }

                                Return (B226) /* \_SB_.I2C6._DSM.B226 */
                            }
                            ElseIf ((_T_1 == 0x09))
                            {
                                Debug = "Query Num of LUTs defined"
                                Debug = Arg3
                                Name (CB27, Buffer (0x05){})
                                CreateByteField (CB27, Zero, B027)
                                CreateByteField (CB27, One, B127)
                                CreateByteField (CB27, 0x02, B227)
                                CreateByteField (CB27, 0x03, B327)
                                CreateByteField (CB27, 0x04, B427)
                                B127 = 0x02
                                B227 = 0x27
                                B327 = Arg3
                                Debug = "init buff"
                                Debug = CB27 /* \_SB_.I2C6._DSM.CB27 */
                                CB27 = \_SB.I2C6.FC27 = CB27 /* \_SB_.I2C6._DSM.CB27 */
                                Debug = "buff post i2c"
                                Debug = CB27 /* \_SB_.I2C6._DSM.CB27 */
                                If ((B027 != Zero))
                                {
                                    Debug = "get num of LUTs failed"
                                    Debug = CB27 /* \_SB_.I2C6._DSM.CB27 */
                                    B027 = 0xFF
                                    Return (B027) /* \_SB_.I2C6._DSM.B027 */
                                }

                                Return (B227) /* \_SB_.I2C6._DSM.B227 */
                            }
                            ElseIf ((_T_1 == 0x0A))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    Debug = "Set EC thermistor threshold"
                                    Debug = Arg3
                                    Name (C32S, Buffer (0x09){})
                                    CreateByteField (C32S, Zero, B032)
                                    CreateByteField (C32S, One, B132)
                                    CreateByteField (C32S, 0x02, B232)
                                    CreateByteField (C32S, 0x03, B332)
                                    CreateByteField (C32S, 0x04, B432)
                                    CreateField (C32S, 0x28, 0x20, B532)
                                    B132 = 0x07
                                    B232 = 0x32
                                    B332 = DerefOf (Arg3 [One])
                                    B432 = 0x04
                                    B532 = DerefOf (Arg3 [0x02])
                                    Debug = "buff"
                                    Debug = C32S /* \_SB_.I2C6._DSM.C32S */
                                    C32S = \_SB.I2C6.F32S = C32S /* \_SB_.I2C6._DSM.C32S */
                                    If ((B032 != Zero))
                                    {
                                        Debug = "Set EC thermistor threshold failed"
                                        Debug = C32S /* \_SB_.I2C6._DSM.C32S */
                                        Return (B032) /* \_SB_.I2C6._DSM.B032 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C32S /* \_SB_.I2C6._DSM.C32S */
                                    Return (B032) /* \_SB_.I2C6._DSM.B032 */
                                }
                                ElseIf ((DerefOf (Arg3 [Zero]) == 0x02))
                                {
                                    Debug = "Get EC thermistor threshold"
                                    Debug = Arg3
                                    Name (C32G, Buffer (0x09){})
                                    CreateByteField (C32G, Zero, G032)
                                    CreateByteField (C32G, One, G132)
                                    CreateByteField (C32G, 0x02, G232)
                                    CreateByteField (C32G, 0x03, G332)
                                    CreateByteField (C32G, 0x04, G432)
                                    CreateByteField (C32G, 0x05, G532)
                                    CreateByteField (C32G, 0x06, G632)
                                    G132 = 0x07
                                    G232 = 0x32
                                    G332 = DerefOf (Arg3 [One])
                                    Debug = "buff"
                                    Debug = C32G /* \_SB_.I2C6._DSM.C32G */
                                    C32G = \_SB.I2C6.F32G = C32G /* \_SB_.I2C6._DSM.C32G */
                                    If ((G032 != Zero))
                                    {
                                        Debug = "Get EC thermistor threshold failed"
                                        Debug = C32G /* \_SB_.I2C6._DSM.C32G */
                                        Return (G032) /* \_SB_.I2C6._DSM.G032 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C32G /* \_SB_.I2C6._DSM.C32G */
                                    Local0 = G532 /* \_SB_.I2C6._DSM.G532 */
                                    Local1 = G632 /* \_SB_.I2C6._DSM.G632 */
                                    Local2 = (((G332 | (G432 << 0x08)) | (Local0 << 
                                        0x10)) | (Local1 << 0x18))
                                    Debug = Local2
                                    Return (Local2)
                                }
                            }
                            ElseIf ((_T_1 == 0x0B))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    Debug = "Set EC thermistor sample rate"
                                    Name (C34S, Buffer (0x04){})
                                    CreateByteField (C34S, Zero, B034)
                                    CreateByteField (C34S, One, B134)
                                    CreateField (C34S, 0x10, 0x10, B234)
                                    B234 = DerefOf (Arg3 [One])
                                    Debug = "Buff"
                                    Debug = C34S /* \_SB_.I2C6._DSM.C34S */
                                    C34S = \_SB.I2C6.FC34 = C34S /* \_SB_.I2C6._DSM.C34S */
                                    If ((B034 != Zero))
                                    {
                                        Debug = "Set EC thermistor sample rate failed"
                                        Debug = C34S /* \_SB_.I2C6._DSM.C34S */
                                        Return (B034) /* \_SB_.I2C6._DSM.B034 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C34S /* \_SB_.I2C6._DSM.C34S */
                                    Return (B034) /* \_SB_.I2C6._DSM.B034 */
                                }
                                ElseIf ((DerefOf (Arg3 [Zero]) == 0x02))
                                {
                                    Debug = "Get EC thermistor sample rate"
                                    Name (C34G, Buffer (0x04){})
                                    CreateByteField (C34G, Zero, G034)
                                    CreateByteField (C34G, One, G134)
                                    CreateByteField (C34G, 0x02, G234)
                                    CreateByteField (C34G, 0x03, G334)
                                    Debug = "Buff"
                                    Debug = C34G /* \_SB_.I2C6._DSM.C34G */
                                    C34G = \_SB.I2C6.FC34
                                    If ((G034 != Zero))
                                    {
                                        Debug = "Set EC thermistor sample rate failed"
                                        Debug = C34G /* \_SB_.I2C6._DSM.C34G */
                                        Return (G034) /* \_SB_.I2C6._DSM.G034 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = C34G /* \_SB_.I2C6._DSM.C34G */
                                    Local0 = (G234 | (G334 << 0x08))
                                    Return (Local0)
                                }
                            }
                            ElseIf ((_T_1 == 0x0C))
                            {
                                Name (CB35, Buffer (0x03){})
                                CreateByteField (CB35, Zero, B035)
                                CreateByteField (CB35, One, B135)
                                CreateByteField (CB35, 0x02, B235)
                                B135 = One
                                B235 = Arg3
                                CB35 = \_SB.I2C6.FC35 = CB35 /* \_SB_.I2C6._DSM.CB35 */
                                If ((B035 != Zero))
                                {
                                    Debug = "EC enable/disable command failed"
                                    Debug = CB35 /* \_SB_.I2C6._DSM.CB35 */
                                    Return (B035) /* \_SB_.I2C6._DSM.B035 */
                                }

                                Debug = "EC enable/disable sent"
                                Debug = CB35 /* \_SB_.I2C6._DSM.CB35 */
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    ElseIf ((_T_0 == ToUUID ("62617bb4-a257-415d-ad2c-0f6bd849278a") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_3 = ToInteger (Arg2)
                            If ((_T_3 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_4 = ToInteger (Arg1)
                                    If ((_T_4 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x7E                                             // ~
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_3 == One))
                            {
                                Debug = "Query Fan status"
                                Debug = Arg3
                                Name (CB21, Buffer (0x05){})
                                CreateByteField (CB21, Zero, B021)
                                CreateByteField (CB21, One, B121)
                                CreateByteField (CB21, 0x02, B221)
                                CreateByteField (CB21, 0x03, B321)
                                CreateByteField (CB21, 0x04, B421)
                                B121 = 0x02
                                B221 = 0x21
                                B321 = (Arg3 & 0x0F)
                                Debug = " init buff"
                                Debug = CB21 /* \_SB_.I2C6._DSM.CB21 */
                                CB21 = \_SB.I2C6.FC21 = CB21 /* \_SB_.I2C6._DSM.CB21 */
                                If ((B021 != Zero))
                                {
                                    Debug = "Fan status read failed"
                                    Debug = CB21 /* \_SB_.I2C6._DSM.CB21 */
                                    Return (B021) /* \_SB_.I2C6._DSM.B021 */
                                }

                                Debug = "buff post i2c"
                                Debug = CB21 /* \_SB_.I2C6._DSM.CB21 */
                                Acquire (\_SB.FANL, 0xFFFF)
                                If (((Arg3 & 0x0F) == One))
                                {
                                    \_SB.FECI.F1ST = B221 /* \_SB_.I2C6._DSM.B221 */
                                    \_SB.FAN1._FST [One] = \_SB.FECI.F1ST
                                    \_SB.FAN1._FST [0x02] = \_SB.FECI.F1SP
                                }
                                ElseIf (((Arg3 & 0x0F) == 0x02))
                                {
                                    \_SB.FECI.F2ST = B221 /* \_SB_.I2C6._DSM.B221 */
                                    \_SB.FAN2._FST [One] = \_SB.FECI.F2ST
                                    \_SB.FAN2._FST [0x02] = \_SB.FECI.F2SP
                                }

                                Release (\_SB.FANL)
                                If (((Arg3 & 0x0F) == One))
                                {
                                    Notify (\_SB.FAN1, 0x80) // Status Change
                                    If (((Arg3 & 0xF0) == Zero))
                                    {
                                        Notify (\_SB.FECI, 0x80) // Status Change
                                    }
                                }
                                ElseIf (((Arg3 & 0x0F) == 0x02))
                                {
                                    Notify (\_SB.FAN2, 0x80) // Status Change
                                    If (((Arg3 & 0xF0) == Zero))
                                    {
                                        Notify (\_SB.FECI, 0x82) // Device-Specific Change
                                    }
                                }

                                Return (B021) /* \_SB_.I2C6._DSM.B021 */
                            }
                            ElseIf ((_T_3 == 0x02))
                            {
                                Debug = "Query Fan speed"
                                Debug = Arg3
                                Name (CB22, Buffer (0x08){})
                                CreateByteField (CB22, Zero, B022)
                                CreateByteField (CB22, One, B122)
                                CreateByteField (CB22, 0x02, B222)
                                CreateByteField (CB22, 0x03, B322)
                                CreateByteField (CB22, 0x04, B422)
                                CreateByteField (CB22, 0x05, B522)
                                CreateByteField (CB22, 0x06, B622)
                                B122 = 0x02
                                B222 = 0x22
                                B322 = (Arg3 & 0x0F)
                                Debug = "init buff"
                                Debug = CB22 /* \_SB_.I2C6._DSM.CB22 */
                                CB22 = \_SB.I2C6.FC22 = CB22 /* \_SB_.I2C6._DSM.CB22 */
                                Debug = "buff post i2c"
                                Debug = CB22 /* \_SB_.I2C6._DSM.CB22 */
                                If ((B022 != Zero))
                                {
                                    Debug = "Fan speed read failed"
                                    Debug = CB22 /* \_SB_.I2C6._DSM.CB22 */
                                    Return (B022) /* \_SB_.I2C6._DSM.B022 */
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                If (((Arg3 & 0x0F) == One))
                                {
                                    \_SB.FECI.F1SP = ((B422 << 0x08) | B322)
                                    \_SB.FAN1._FST [One] = \_SB.FECI.F1ST
                                    \_SB.FAN1._FST [0x02] = \_SB.FECI.F1SP
                                }
                                ElseIf (((Arg3 & 0x0F) == 0x02))
                                {
                                    \_SB.FECI.F2SP = ((B422 << 0x08) | B322)
                                    \_SB.FAN2._FST [One] = \_SB.FECI.F2ST
                                    \_SB.FAN2._FST [0x02] = \_SB.FECI.F2SP
                                }

                                Release (\_SB.FANL)
                                If (((Arg3 & 0x0F) == One))
                                {
                                    Notify (\_SB.FAN1, 0x80) // Status Change
                                    If (((Arg3 & 0xF0) == Zero))
                                    {
                                        Notify (\_SB.FECI, 0x81) // Information Change
                                    }
                                }
                                ElseIf (((Arg3 & 0x0F) == 0x02))
                                {
                                    Notify (\_SB.FAN2, 0x80) // Status Change
                                    If (((Arg3 & 0xF0) == Zero))
                                    {
                                        Notify (\_SB.FECI, 0x83) // Device-Specific Change
                                    }
                                }

                                Return (B022) /* \_SB_.I2C6._DSM.B022 */
                            }
                            ElseIf ((_T_3 == 0x03))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                \_SB.FECI.LUTC = Zero
                                Release (\_SB.FANL)
                                Notify (\_SB.FECI, 0x85) // Device-Specific
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_3 == 0x04))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                \_SB.FECI.LPSC = Zero
                                Release (\_SB.FANL)
                                Notify (\_SB.FECI, 0x85) // Device-Specific
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_3 == 0x05))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                \_SB.FECI.LUTC = Zero
                                \_SB.FECI.LPSC = Zero
                                Release (\_SB.FANL)
                                Notify (\_SB.FECI, 0x84) // Reserved
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_3 == 0x06))
                            {
                                Debug = "EC thermistor Read"
                                Debug = Arg3
                                If ((Arg3 == One))
                                {
                                    CB29 = \_SB.I2C6.FC29
                                    If ((B029 != Zero))
                                    {
                                        Debug = "EC thermistor1 read failed"
                                        Debug = CB29 /* \_SB_.I2C6.CB29 */
                                        B229 = 0xFF
                                        Return (B229) /* \_SB_.I2C6.B229 */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB29 /* \_SB_.I2C6.CB29 */
                                    Return (B229) /* \_SB_.I2C6.B229 */
                                }
                                ElseIf ((Arg3 == 0x02))
                                {
                                    CB2A = \_SB.I2C6.FC2A
                                    If ((B02A != Zero))
                                    {
                                        Debug = "EC thermistor2 read failed"
                                        Debug = CB2A /* \_SB_.I2C6.CB2A */
                                        B22A = 0xFF
                                        Return (B22A) /* \_SB_.I2C6.B22A */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2A /* \_SB_.I2C6.CB2A */
                                    Return (B22A) /* \_SB_.I2C6.B22A */
                                }
                                ElseIf ((Arg3 == 0x03))
                                {
                                    CB2B = \_SB.I2C6.FC2B
                                    If ((B02B != Zero))
                                    {
                                        Debug = "EC thermistor3 read failed"
                                        Debug = CB2B /* \_SB_.I2C6.CB2B */
                                        B22B = 0xFF
                                        Return (B22B) /* \_SB_.I2C6.B22B */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2B /* \_SB_.I2C6.CB2B */
                                    Return (B22B) /* \_SB_.I2C6.B22B */
                                }
                                ElseIf ((Arg3 == 0x04))
                                {
                                    CB2C = \_SB.I2C6.FC2C
                                    If ((B02C != Zero))
                                    {
                                        Debug = "EC thermistor4 read failed"
                                        Debug = CB2C /* \_SB_.I2C6.CB2C */
                                        B22C = 0xFF
                                        Return (B22C) /* \_SB_.I2C6.B22C */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2C /* \_SB_.I2C6.CB2C */
                                    Return (B22C) /* \_SB_.I2C6.B22C */
                                }
                                ElseIf ((Arg3 == 0x05))
                                {
                                    CB2D = \_SB.I2C6.FC2D
                                    If ((B02D != Zero))
                                    {
                                        Debug = "EC thermistor5 read failed"
                                        Debug = CB2D /* \_SB_.I2C6.CB2D */
                                        B22D = 0xFF
                                        Return (B22D) /* \_SB_.I2C6.B22D */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2D /* \_SB_.I2C6.CB2D */
                                    Return (B22D) /* \_SB_.I2C6.B22D */
                                }
                                ElseIf ((Arg3 == 0x06))
                                {
                                    CB2E = \_SB.I2C6.FC2E
                                    If ((B02E != Zero))
                                    {
                                        Debug = "EC thermistor6 read failed"
                                        Debug = CB2E /* \_SB_.I2C6.CB2E */
                                        B22E = 0xFF
                                        Return (B22E) /* \_SB_.I2C6.B22E */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2E /* \_SB_.I2C6.CB2E */
                                    Return (B22E) /* \_SB_.I2C6.B22E */
                                }
                                ElseIf ((Arg3 == 0x07))
                                {
                                    CB2F = \_SB.I2C6.FC2F
                                    If ((B02F != Zero))
                                    {
                                        Debug = "EC thermistor7 read failed"
                                        Debug = CB2F /* \_SB_.I2C6.CB2F */
                                        B22F = 0xFF
                                        Return (B22F) /* \_SB_.I2C6.B22F */
                                    }

                                    Debug = "buff post i2c"
                                    Debug = CB2F /* \_SB_.I2C6.CB2F */
                                    Return (B22F) /* \_SB_.I2C6.B22F */
                                }
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (FECI)
        {
            Name (_HID, "QCOM0D05")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (F1ST, Zero)
            Name (F1SP, Zero)
            Name (F2ST, Zero)
            Name (F2SP, Zero)
            Name (FAN1, Zero)
            Name (FAN2, Zero)
            Name (LUTC, Zero)
            Name (LPSC, Zero)
            Name (STAT, Zero)
            Name (BYT0, Zero)
            Name (BYT1, Zero)
            Name (BYT2, Zero)
            Name (GPKG, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.I2C6
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.FECI._DSM._T_0 */
                    If ((_T_0 == ToUUID ("8b1eee2f-491a-43aa-8082-783b867ead37") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Local0 = 0x0007FFFE
                                        Return (Local0)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                While ((CNTR < CNTM))
                                {
                                    Debug = "SoC Tj while loop"
                                    Debug = CNTR /* \_SB_.FECI._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.FECI._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.FECI.STAT */
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                If (CondRefOf (\_SB.FAN1._STA))
                                {
                                    If ((\_SB.FAN1._STA () >= One))
                                    {
                                        FAN1 = One
                                    }
                                }

                                If (CondRefOf (\_SB.FAN2._STA))
                                {
                                    If ((\_SB.FAN2._STA () >= One))
                                    {
                                        FAN2 = One
                                    }
                                }

                                Local0 = (FAN1 + FAN2) /* \_SB_.FECI.FAN2 */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF01, 0x11)
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                Local0 = F1ST /* \_SB_.FECI.F1ST */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF02, 0x11)
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                Local0 = F1SP /* \_SB_.FECI.F1SP */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x05))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF01, 0x12)
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                Local0 = F2ST /* \_SB_.FECI.F2ST */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x06))
                            {
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF02, 0x12)
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                Local0 = F2SP /* \_SB_.FECI.F2SP */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x07))
                            {
                                If (CondRefOf (\_SB.TZ98))
                                {
                                    Return (\_SB.TZ98.TAC0)
                                }
                                Else
                                {
                                    Debug = "TZ98 not present"
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }
                            }
                            ElseIf ((_T_1 == 0x08))
                            {
                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF05, Arg3))
                            }
                            ElseIf ((_T_1 == 0x09))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                Local0 = (LPSC + LUTC) /* \_SB_.FECI.LUTC */
                                Release (\_SB.FANL)
                                Return (Local0)
                            }
                            ElseIf ((_T_1 == 0x0A))
                            {
                                If (((\_SB.PSUB == "IDPS8380") || (\_SB.PSUB == "IDP08380")))
                                {
                                    Debug = "Fan profile not supported"
                                    Return (Buffer (One)
                                    {
                                         0xFF                                             // .
                                    })
                                }

                                Acquire (\_SB.FANL, 0xFFFF)
                                LPSC = One
                                Release (\_SB.FANL)
                                Name (FANP, Zero)
                                BYT0 = (DerefOf (Arg3 [Zero]) & 0xFF)
                                BYT1 = ((DerefOf (Arg3 [Zero]) >> 0x08) & 0xFF
                                    )
                                BYT2 = One
                                If ((BYT0 == Zero))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | One)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | One)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == One))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x02)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x03)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x02))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x04)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x05)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x03))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x04)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x05)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x04))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x06)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x07)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x05))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x06)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x07)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x06))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x06)
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        FANP = ((BYT2 << 0x04) | 0x07)
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0xFF                                             // .
                                    })
                                }

                                STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF03, FANP)
                                If ((STAT != Zero))
                                {
                                    Acquire (\_SB.FANL, 0xFFFF)
                                    LPSC = Zero
                                    Release (\_SB.FANL)
                                }

                                Return (STAT) /* \_SB_.FECI.STAT */
                            }
                            ElseIf ((_T_1 == 0x0B))
                            {
                                Name (GLUT, Package (0x02)
                                {
                                    Zero, 
                                    Zero
                                })
                                GLUT [One] = DerefOf (Arg3 [One])
                                BYT0 = (DerefOf (Arg3 [Zero]) & 0xFF)
                                BYT1 = ((DerefOf (Arg3 [Zero]) >> 0x08) & 0xFF
                                    )
                                BYT2 = ((DerefOf (Arg3 [Zero]) >> 0x10) & 0xFF
                                    )
                                If ((BYT0 == Zero))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (One << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (One << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == One))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x02 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x03 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x02))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x03))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x04))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x05))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x06))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        GLUT [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0xFF                                             // .
                                    })
                                }

                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF06, GLUT))
                            }
                            ElseIf ((_T_1 == 0x0C))
                            {
                                Acquire (\_SB.FANL, 0xFFFF)
                                LUTC = One
                                Release (\_SB.FANL)
                                Name (LUTS, Package (0x03)
                                {
                                    Zero, 
                                    Zero, 
                                    Zero
                                })
                                LUTS [One] = DerefOf (Arg3 [One])
                                LUTS [0x02] = DerefOf (Arg3 [0x02])
                                BYT0 = (DerefOf (Arg3 [Zero]) & 0xFF)
                                BYT1 = ((DerefOf (Arg3 [Zero]) >> 0x08) & 0xFF
                                    )
                                BYT2 = ((DerefOf (Arg3 [Zero]) >> 0x10) & 0xFF
                                    )
                                If ((BYT0 == Zero))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (One << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (One << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == One))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x02 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x03 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x02))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x03))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x04))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x05))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x06))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        LUTS [Zero] = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0xFF                                             // .
                                    })
                                }

                                STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF07, LUTS)
                                If ((STAT != Zero))
                                {
                                    Acquire (\_SB.FANL, 0xFFFF)
                                    LUTC = Zero
                                    Release (\_SB.FANL)
                                }

                                Return (STAT) /* \_SB_.FECI.STAT */
                            }
                            ElseIf ((_T_1 == 0x0D))
                            {
                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF08, Arg3))
                            }
                            ElseIf ((_T_1 == 0x0E))
                            {
                                Name (NLUT, Zero)
                                BYT0 = (DerefOf (Arg3 [Zero]) & 0xFF)
                                BYT1 = ((DerefOf (Arg3 [Zero]) >> 0x08) & 0xFF
                                    )
                                BYT2 = ((DerefOf (Arg3 [Zero]) >> 0x10) & 0xFF
                                    )
                                If ((BYT0 == Zero))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (One << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (One << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == One))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x02 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x03 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x02))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x03))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x04 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x05 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x04))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x05))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                ElseIf ((BYT0 == 0x06))
                                {
                                    If ((BYT1 == Zero))
                                    {
                                        NLUT = (BYT2 | (0x06 << 0x04))
                                    }
                                    ElseIf ((BYT1 == One))
                                    {
                                        NLUT = (BYT2 | (0x07 << 0x04))
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0xFF                                             // .
                                        })
                                    }
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0xFF                                             // .
                                    })
                                }

                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF09, NLUT))
                            }
                            ElseIf ((_T_1 == 0x0F))
                            {
                                Debug = "Get Fan Trip Points From TestApp"
                                Debug = Arg3
                                If ((DerefOf (Arg3 [One]) == Zero))
                                {
                                    If ((DerefOf (Arg3 [Zero]) == One))
                                    {
                                        Return (\_SB.FAN1.GRAN)
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x02))
                                    {
                                        Return (\_SB.FAN2.GRAN)
                                    }
                                }
                                Else
                                {
                                    GPKG [Zero] = One
                                    GPKG [One] = ((DerefOf (Arg3 [One]) << 0x04
                                        ) | DerefOf (Arg3 [Zero]))
                                    Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF04, GPKG))
                                }
                            }
                            ElseIf ((_T_1 == 0x10))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x11))
                            {
                                Debug = "SET EC Thermistor Threshold From Test App"
                                Debug = Arg3
                                GPKG [Zero] = One
                                GPKG [One] = DerefOf (Arg3 [Zero])
                                GPKG [0x02] = DerefOf (Arg3 [One])
                                STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF10, GPKG)
                                If ((STAT == Zero))
                                {
                                    Local0 = DerefOf (Arg3 [One])
                                    If ((DerefOf (Arg3 [Zero]) == One))
                                    {
                                        \_SB.TZ39.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ39.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ39.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ39.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ39, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x02))
                                    {
                                        \_SB.TZ40.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ40.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ40.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ40.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x03))
                                    {
                                        \_SB.TZ41.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ41.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ41.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ41.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ41, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x04))
                                    {
                                        \_SB.TZ42.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ42.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ42.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ42.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x05))
                                    {
                                        \_SB.TZ43.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ43.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ43.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ43.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ43, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x06))
                                    {
                                        \_SB.TZ44.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ44.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ44.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ44.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ44, 0x81) // Thermal Trip Point Change
                                    }
                                    ElseIf ((DerefOf (Arg3 [Zero]) == 0x07))
                                    {
                                        \_SB.TZ45.TPSV = (((Local0 & 0xFF) + 0x0111) * 0x0A)
                                        \_SB.TZ45.TCR3 = ((((Local0 >> 0x08) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ45.THOT = ((((Local0 >> 0x10) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        \_SB.TZ45.TCRT = ((((Local0 >> 0x18) & 0xFF) + 0x0111
                                            ) * 0x0A)
                                        Notify (\_SB.TZ45, 0x81) // Information Change
                                    }
                                }

                                Return (STAT) /* \_SB_.FECI.STAT */
                            }
                            ElseIf ((_T_1 == 0x12))
                            {
                                Debug = "Set EC Thermistor Sample Rate From Test App"
                                Debug = Arg3
                                GPKG [Zero] = One
                                GPKG [One] = DerefOf (Arg3 [Zero])
                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF11, GPKG))
                            }
                            ElseIf ((_T_1 == 0x13))
                            {
                                Debug = "Get EC Thermistor Threshold From Test App"
                                Debug = Arg3
                                GPKG [Zero] = 0x02
                                GPKG [One] = DerefOf (Arg3 [Zero])
                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF10, GPKG))
                            }
                            ElseIf ((_T_1 == 0x14))
                            {
                                Debug = "Get EC Thermistor Sample Rate From Test App"
                                Debug = Arg3
                                GPKG [Zero] = 0x02
                                Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF11, GPKG))
                            }
                            ElseIf ((_T_1 == 0x15))
                            {
                                Debug = "Send EC enable/disable functionalities"
                                Debug = Arg3
                                If ((DerefOf (Arg3 [Zero]) == One))
                                {
                                    Acquire (\_SB.ECMX, 0xFFFF)
                                    FNHB = Zero
                                    Release (\_SB.ECMX)
                                    Debug = "Send SCI EC enable"
                                    Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF12, One))
                                }
                                ElseIf ((DerefOf (Arg3 [Zero]) == Zero))
                                {
                                    Acquire (\_SB.ECMX, 0xFFFF)
                                    FNHB = One
                                    Release (\_SB.ECMX)
                                    Debug = "Send SCI EC Disable"
                                    Return (\_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF12, Zero))
                                }
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (FAN1)
        {
            Name (_HID, EisaId ("PNP0C0B") /* Fan (Thermal Solution) */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_FST, Package (0x03)  // _FST: Fan Status
            {
                Zero, 
                Zero, 
                Zero
            })
            Name (GRAN, Zero)
            Name (LRPM, 0xFFFF)
            Name (URPM, 0xFFFF)
            Name (CMDP, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a7611840-99fe-41ae-a488-35c75926c8eb") /* Unknown UUID */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Debug = "Update Fan 1 Granularity"
                            Return (\_SB.FAN1.GRAN)
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Debug = "Set Fan Trip Points FAN1"
                            Debug = Arg3
                            If ((DerefOf (Arg3 [Zero]) != \_SB.FAN1.LRPM))
                            {
                                \_SB.FAN1.LRPM = DerefOf (Arg3 [Zero])
                                CMDP [Zero] = 0x02
                                CMDP [One] = 0x11
                                CMDP [0x02] = \_SB.FAN1.LRPM
                                \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF04, CMDP)
                            }

                            If ((DerefOf (Arg3 [One]) != \_SB.FAN1.URPM))
                            {
                                \_SB.FAN1.URPM = DerefOf (Arg3 [One])
                                CMDP [Zero] = 0x02
                                CMDP [One] = 0x21
                                CMDP [0x02] = \_SB.FAN1.URPM
                                \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF04, CMDP)
                            }

                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Package (0x04)
                            {
                                0x03E8, 
                                0x07D0, 
                                0x0BB8, 
                                0x1770
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                        Break
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (FAN2)
        {
            Name (_HID, EisaId ("PNP0C0B") /* Fan (Thermal Solution) */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_FST, Package (0x03)  // _FST: Fan Status
            {
                Zero, 
                Zero, 
                Zero
            })
            Name (GRAN, Zero)
            Name (LRPM, 0xFFFF)
            Name (URPM, 0xFFFF)
            Name (CMDP, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.PSUB == "IDPS8380"))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a7611840-99fe-41ae-a488-35c75926c8eb") /* Unknown UUID */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Debug = "Update Fan 2 Granularity"
                            Return (\_SB.FAN2.GRAN)
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Debug = "Set Fan Trip Points FAN2"
                            Debug = Arg3
                            If ((DerefOf (Arg3 [Zero]) != \_SB.FAN2.LRPM))
                            {
                                \_SB.FAN2.LRPM = DerefOf (Arg3 [Zero])
                                CMDP [Zero] = 0x02
                                CMDP [One] = 0x12
                                CMDP [0x02] = \_SB.FAN2.LRPM
                                \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF04, CMDP)
                            }

                            If ((DerefOf (Arg3 [One]) != \_SB.FAN2.URPM))
                            {
                                \_SB.FAN2.URPM = DerefOf (Arg3 [One])
                                CMDP [Zero] = 0x02
                                CMDP [One] = 0x22
                                CMDP [0x02] = \_SB.FAN2.URPM
                                \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF04, CMDP)
                            }

                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }

                        Break
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (QDIG)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM0C13")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (SSM)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.TREE
            })
            Name (_HID, "QCOM0C14")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (SYSM)
        {
            Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
            Name (_UID, 0x00100000)  // _UID: Unique ID
            Method (_LPI, 0, NotSerialized)  // _LPI: Low Power Idle States
            {
                If (PEPI)
                {
                    Return (Package (0x06)
                    {
                        Zero, 
                        0x02000000, 
                        0x03, 
                        Package (0x0A)
                        {
                            0x1D4C, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            0x0100, 
                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "platform.SS1"
                        }, 

                        Package (0x0A)
                        {
                            0x1F40, 
                            0x0BB8, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            0x0200, 
                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "platform.SS2"
                        }, 

                        Package (0x0A)
                        {
                            0x2328, 
                            0x1388, 
                            One, 
                            0x20, 
                            Zero, 
                            Zero, 
                            0xC300, 
                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "platform.DRIPS"
                        }
                    })
                }
            }

            Device (CLS0)
            {
                Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
                Name (_UID, 0x10)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_LPI, 0, NotSerialized)  // _LPI: Low Power Idle States
                {
                    If (PEPI)
                    {
                        Return (Package (0x05)
                        {
                            Zero, 
                            0x01000000, 
                            0x02, 
                            Package (0x0A)
                            {
                                0x09C4, 
                                0x01F4, 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x40, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster0.CL4"
                            }, 

                            Package (0x0A)
                            {
                                0x1B58, 
                                0x0FA0, 
                                One, 
                                Zero, 
                                Zero, 
                                0x03, 
                                0x50, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster0.CL5"
                            }
                        })
                    }
                }

                Device (CPU0)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU1)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU2)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU3)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }
            }

            Device (CLS1)
            {
                Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
                Name (_UID, 0x11)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_LPI, 0, NotSerialized)  // _LPI: Low Power Idle States
                {
                    If (PEPI)
                    {
                        Return (Package (0x05)
                        {
                            Zero, 
                            0x01000000, 
                            0x02, 
                            Package (0x0A)
                            {
                                0x09C4, 
                                0x01F4, 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x40, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster1.CL4"
                            }, 

                            Package (0x0A)
                            {
                                0x1B58, 
                                0x0FA0, 
                                One, 
                                Zero, 
                                Zero, 
                                0x03, 
                                0x50, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster1.CL5"
                            }
                        })
                    }
                }

                Device (CPU0)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x04)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU1)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x05)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU2)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x06)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU3)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x07)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }
            }

            Device (CLS2)
            {
                Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
                Name (_UID, 0x12)  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_LPI, 0, NotSerialized)  // _LPI: Low Power Idle States
                {
                    If (PEPI)
                    {
                        Return (Package (0x05)
                        {
                            Zero, 
                            0x01000000, 
                            0x02, 
                            Package (0x0A)
                            {
                                0x09C4, 
                                0x01F4, 
                                One, 
                                Zero, 
                                Zero, 
                                Zero, 
                                0x40, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster2.CL4"
                            }, 

                            Package (0x0A)
                            {
                                0x1B58, 
                                0x0FA0, 
                                One, 
                                Zero, 
                                Zero, 
                                0x03, 
                                0x50, 
                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                ResourceTemplate ()
                                {
                                    Register (SystemMemory, 
                                        0x00,               // Bit Width
                                        0x00,               // Bit Offset
                                        0x0000000000000000, // Address
                                        ,)
                                }, 

                                "Cluster2.CL5"
                            }
                        })
                    }
                }

                Device (CPU0)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x08)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU1)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x09)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU2)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x0A)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }

                Device (CPU3)
                {
                    Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                    Name (_UID, 0x0B)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (_LPI, Package (0x05)  // _LPI: Low Power Idle States
                    {
                        Zero, 
                        Zero, 
                        0x02, 
                        Package (0x0A)
                        {
                            Zero, 
                            Zero, 
                            One, 
                            Zero, 
                            Zero, 
                            Zero, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x00000000FFFFFFFF, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C1"
                        }, 

                        Package (0x0A)
                        {
                            0x0258, 
                            0x01F4, 
                            One, 
                            Zero, 
                            Zero, 
                            0x02, 
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x20,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000004, // Address
                                    0x03,               // Access Size
                                    )
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            ResourceTemplate ()
                            {
                                Register (SystemMemory, 
                                    0x00,               // Bit Width
                                    0x00,               // Bit Offset
                                    0x0000000000000000, // Address
                                    ,)
                            }, 

                            "NCC.C4"
                        }
                    })
                }
            }
        }

        Device (QGP0)
        {
            Name (_HID, "QCOM0C88")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00B04000,         // Address Base
                        0x00058000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026C,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000026D,
                    }
                })
                Return (RBUF) /* \_SB_.QGP0._CRS.RBUF */
            }
        }

        Device (QGP1)
        {
            Name (_HID, "QCOM0C88")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00A04000,         // Address Base
                        0x00058000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000328,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000329,
                    }
                })
                Return (RBUF) /* \_SB_.QGP1._CRS.RBUF */
            }
        }

        Device (QGP2)
        {
            Name (_HID, "QCOM0C88")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00804000,         // Address Base
                        0x00058000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000334,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000335,
                    }
                })
                Return (RBUF) /* \_SB_.QGP2._CRS.RBUF */
            }
        }

        Device (CSEC)
        {
            Name (_HID, "QCOM0CA8")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (SOCP)
        {
            Name (_HID, "QCOM06DD")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.STOR, STOR)
        }

        Device (QCSP)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GLNK, 
                \_SB.SOCP, 
                \_SB.SPSS
            })
            Name (_HID, "QCOM0C87")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Alias (\_SB.STOR, STOR)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (SERB)
        {
            Name (_HID, "QCOM04B2")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (RMNT)
        {
            Name (_HID, "QCOM0C95")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (MBRG)
        {
            Name (_HID, "QCOM0C07")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (RMAT)
        {
            Name (_HID, "QCOM0C08")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Device (DPLB)
        {
            Name (_HID, "QCOM0C70")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
        }

        Scope (\_SB.SERB)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.RMNT)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.MBRG)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.RMAT)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Scope (\_SB.DPLB)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (SSVC)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.QDIG
            })
            Name (_HID, "QCOM06DB")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "ACPIQCOM06DB")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Name (HWNL, One)
        Device (HWN0)
        {
            Name (_HID, "QCOM0C68")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.HWNL == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (HWNL, 0, NotSerialized)
            {
                Name (CFG0, Package (0x10)
                {
                    0x02, 
                    0x03, 
                    0x019B, 
                    0x14, 
                    Zero, 
                    Zero, 
                    One, 
                    One, 
                    0x02, 
                    0x02, 
                    One, 
                    One, 
                    One, 
                    0x03, 
                    0x06, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN0.HWNL.CFG0 */
            }
        }

        Scope (\_SB)
        {
            Device (WLTM)
            {
                Name (_HID, "QCOM0CD5")  // _HID: Hardware ID
                Name (_CID, "QCOMFFE0")  // _CID: Compatible ID
                Alias (\_SB.PSUB, _SUB)
                Name (_DEP, Package (0x03)  // _DEP: Dependencies
                {
                    \_SB.PCI6, 
                    \_SB.SBTD, 
                    \_SB.IPC0
                })
            }
        }

        Device (SSGS)
        {
            Name (_HID, "QCOM06D8")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
        }

        Device (DCF)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.ADSP, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM06E7")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "QCOM06E7")  // _CID: Compatible ID
        }

        Device (HWDV)
        {
            Name (_HID, "QCOM0D0C")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
        }

        Device (CAMP)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.GIO0
            })
            Name (_HID, "QCOM0C32")  // _HID: Hardware ID
            Name (_UID, 0x1B)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AC13000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC19000,         // Address Base
                        0x0000C000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC15000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC16000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EC,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000012F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EB,
                    }
                    GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0063
                        }
                    GpioIo (Exclusive, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x006E
                        }
                })
                Return (RBUF) /* \_SB_.CAMP._CRS.RBUF */
            }
        }

        Device (CAMS)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0C26")  // _HID: Hardware ID
            Name (_UID, 0x15)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (CAMF)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0C06")  // _HID: Hardware ID
            Name (_UID, 0x1A)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {
                If ((BTI1 () == One))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (One)
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (CAMI)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0C99")  // _HID: Hardware ID
            Name (_UID, 0x1C)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((BTI3 () == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (CAMT)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0CCE")  // _HID: Hardware ID
            Name (_UID, 0x1D)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (CAMU)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.MPCS
            })
            Name (_HID, "QCOM0CCF")  // _HID: Hardware ID
            Name (_UID, 0x1E)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (FLSH)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.CAMP
            })
            Name (_HID, "QCOM0C27")  // _HID: Hardware ID
            Name (_UID, 0x19)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Return (RBUF) /* \_SB_.FLSH._CRS.RBUF */
            }
        }

        Device (MPCS)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.CAMP
            })
            Name (_HID, "QCOM0C98")  // _HID: Hardware ID
            Name (_UID, 0x18)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0ACE4000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACE6000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACE8000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACEC000,         // Address Base
                        0x00002000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF6000,         // Address Base
                        0x00000400,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF7000,         // Address Base
                        0x00000400,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0ACF8000,         // Address Base
                        0x00000400,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FE,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000009A,
                    }
                })
                Return (RBUF) /* \_SB_.MPCS._CRS.RBUF */
            }
        }

        Device (JPGE)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.CAMP, 
                \_SB.MMU0
            })
            Name (_HID, "QCOM0C33")  // _HID: Hardware ID
            Name (_UID, 0x17)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0AC2A000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x0AC2B000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FA,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001FB,
                    }
                })
                Return (RBUF) /* \_SB_.JPGE._CRS.RBUF */
            }
        }

        Device (VFE0)
        {
            Name (_DEP, Package (0x07)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.TREE, 
                \_SB.SCM0, 
                \_SB.CAMP, 
                \_SB.MPCS
            })
            Name (_HID, "QCOM0C25")  // _HID: Hardware ID
            Name (_UID, 0x16)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x04) == 0x04))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001E8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000013F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001EF,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F1,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F3,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F5,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F0,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F2,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000001F4,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x000002D1,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031C,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000031D,
                    }
                })
                Return (RBUF) /* \_SB_.VFE0._CRS.RBUF */
            }
        }

        Device (AONC)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.CAMF
            })
            Name (_HID, "QCOM0D06")  // _HID: Hardware ID
            Name (_UID, 0x1F)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.SVMJ == 0x02))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (SISP)
        {
            Name (_DEP, Package (0x06)  // _DEP: Dependencies
            {
                \_SB.MMU0, 
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.TREE, 
                \_SB.SCM0, 
                \_SB.CAMP
            })
            Name (_HID, "QCOM0CCC")  // _HID: Hardware ID
            Name (_UID, 0x19)  // _UID: Unique ID
            Alias (\_SB.ESUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x0ACCA000,         // Address Base
                        0x00004000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000188,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                    {
                        0x00000187,
                    }
                })
                Return (RBUF) /* \_SB_.SISP._CRS.RBUF */
            }
        }

        Device (EVA0)
        {
            Name (_DEP, Package (0x06)  // _DEP: Dependencies
            {
                \_SB.IMM0, 
                \_SB.MMU0, 
                \_SB.PEP0, 
                \_SB.PILC, 
                \_SB.TREE, 
                \_SB.PMIC
            })
            Name (_HID, "QCOM0CF1")  // _HID: Hardware ID
            Name (_UID, 0x1E)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Exclusive, ,, )
                    {
                        0x0000010A,
                    }
                    Memory32Fixed (ReadWrite,
                        0x0AB00000,         // Address Base
                        0x00100000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x000B0088,         // Address Base
                        0x00000000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x00400000,         // Address Base
                        0x00100000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x00110000,         // Address Base
                        0x00040000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.EVA0._CRS.RBUF */
            }
        }

        Device (SEN2)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.ADSP, 
                \_SB.ARPC
            })
            Name (_HID, "QCOM0693")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_CID, "QCOM0CE7")  // _CID: Compatible ID
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x0,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x1,
                    PLD_Panel              = "TOP",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "LEFT",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }

        Device (SEN3)
        {
            Name (_DEP, Package (0x04)  // _DEP: Dependencies
            {
                \_SB.IPC0, 
                \_SB.ADSP, 
                \_SB.ARPC, 
                \_SB.SEN2
            })
            Name (_HID, "QCOM0694")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
            Name (_CID, "QCOM0CE7")  // _CID: Compatible ID
            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
            {
                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x0,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x0,
                    PLD_Panel              = "TOP",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "LEFT",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }

        Device (LID0)
        {
            Name (_HID, "PNP0C0D" /* Lid Device */)  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.SCM0
            })
            Name (LIDB, One)
            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                Return (LIDB) /* \_SB_.LID0.LIDB */
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If (\_SB.GIO0.GABL)
                {
                    \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                    Notify (\_SB.LID0, 0x80) // Status Change
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If (\_SB.GIO0.GABL)
                {
                    \_SB.LID0.LIDB = \_SB.GIO0.LIDR
                    Notify (\_SB.LID0, 0x80) // Status Change
                }
            }
        }

        Device (SAR1)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C6, 
                \_SB.PEP0
            })
            Name (_HID, "STH0001")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (\_SB.WWAN._STA ())
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0028, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C6",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x001E
                        }
                })
                Return (RBUF) /* \_SB_.SAR1._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("7681541e-8827-4239-8d9d-36be7fe12542") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (Buffer (0x68)
                        {
                            /* 0000 */  0x10, 0x0A, 0x11, 0x21, 0x14, 0x00, 0x15, 0x00,  // ...!....
                            /* 0008 */  0x20, 0x20, 0x23, 0x01, 0x24, 0x44, 0x26, 0x00,  //   #.$D&.
                            /* 0010 */  0x27, 0x44, 0x28, 0x3D, 0x29, 0x04, 0x2A, 0x00,  // 'D(=).*.
                            /* 0018 */  0x2B, 0x00, 0x2C, 0x12, 0x2D, 0x0B, 0x30, 0x19,  // +.,.-.0.
                            /* 0020 */  0x31, 0x09, 0x32, 0x20, 0x33, 0x20, 0x34, 0x0C,  // 1.2 3 4.
                            /* 0028 */  0x35, 0x00, 0x36, 0x22, 0x37, 0x08, 0x40, 0x00,  // 5.6"7.@.
                            /* 0030 */  0x41, 0x00, 0x42, 0x00, 0x43, 0x00, 0x44, 0x00,  // A.B.C.D.
                            /* 0038 */  0x45, 0x05, 0x46, 0x00, 0x47, 0x00, 0x48, 0x00,  // E.F.G.H.
                            /* 0040 */  0x49, 0x00, 0x4A, 0xF0, 0x4B, 0x00, 0x4C, 0x00,  // I.J.K.L.
                            /* 0048 */  0x4D, 0x00, 0x4E, 0x80, 0x4F, 0x0C, 0x50, 0x16,  // M.N.O.P.
                            /* 0050 */  0x51, 0x70, 0x52, 0x34, 0x53, 0x00, 0x54, 0x00,  // QpR4S.T.
                            /* 0058 */  0x02, 0x00, 0x03, 0x00, 0x05, 0x62, 0x06, 0x00,  // .....b..
                            /* 0060 */  0x07, 0x80, 0x08, 0x00, 0x00, 0x00               // ......
                        })
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (Buffer (One)
                        {
                             0x01                                             // .
                        })
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (SAR2)
        {
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C6, 
                \_SB.PEP0
            })
            Name (_HID, "STH0002")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (\_SB.WWAN._STA ())
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C6",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Edge, ActiveLow, Exclusive, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x001F
                        }
                })
                Return (RBUF) /* \_SB_.SAR2._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("7681541e-8827-4239-8d9d-36be7fe12542") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }

                    If ((Arg2 == One))
                    {
                        Return (Buffer (0x68)
                        {
                            /* 0000 */  0x10, 0x0A, 0x11, 0x23, 0x14, 0x00, 0x15, 0x00,  // ...#....
                            /* 0008 */  0x20, 0x20, 0x23, 0x00, 0x24, 0x44, 0x26, 0x00,  //   #.$D&.
                            /* 0010 */  0x27, 0x44, 0x28, 0x3D, 0x29, 0x37, 0x2A, 0x00,  // 'D(=)7*.
                            /* 0018 */  0x2B, 0x00, 0x2C, 0x12, 0x2D, 0x08, 0x30, 0x11,  // +.,.-.0.
                            /* 0020 */  0x31, 0x09, 0x32, 0x20, 0x33, 0x20, 0x34, 0x0C,  // 1.2 3 4.
                            /* 0028 */  0x35, 0x00, 0x36, 0x23, 0x37, 0x08, 0x40, 0x00,  // 5.6#7.@.
                            /* 0030 */  0x41, 0x00, 0x42, 0x00, 0x43, 0x00, 0x44, 0x00,  // A.B.C.D.
                            /* 0038 */  0x45, 0x05, 0x46, 0x00, 0x47, 0x00, 0x48, 0x00,  // E.F.G.H.
                            /* 0040 */  0x49, 0x00, 0x4A, 0xF0, 0x4B, 0x00, 0x4C, 0x00,  // I.J.K.L.
                            /* 0048 */  0x4D, 0x00, 0x4E, 0x80, 0x4F, 0x0C, 0x50, 0x15,  // M.N.O.P.
                            /* 0050 */  0x51, 0x80, 0x52, 0x24, 0x53, 0x00, 0x54, 0x00,  // Q.R$S.T.
                            /* 0058 */  0x02, 0x00, 0x03, 0x00, 0x05, 0x6F, 0x06, 0x00,  // .....o..
                            /* 0060 */  0x07, 0x80, 0x08, 0x00, 0x00, 0x00               // ......
                        })
                    }

                    If ((Arg2 == 0x02))
                    {
                        Return (Buffer (One)
                        {
                             0x02                                             // .
                        })
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (SARM)
        {
            Name (_HID, "QCOM06E2")  // _HID: Hardware ID
            Alias (\_SB.ESUB, _SUB)
        }

        Scope (\_SB.I2C7)
        {
            Name (ECI7, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0028, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2C7",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {
                If ((Arg0 == 0x09))
                {
                    H8DR = Arg1
                }
            }

            Mutex (CFMX, 0x00)
            OperationRegion (ECRW, GenericSerialBus, Zero, 0x0100)
            Field (ECRW, BufferAcc, NoLock, Preserve)
            {
                Connection (ECI7), 
                AccessAs (BufferAcc, AttribRawBytes (0x01)), 
                IC7R,   8, 
                AccessAs (BufferAcc, AttribRawBytes (0x04)), 
                IC7W,   8, 
                AccessAs (BufferAcc, AttribRawBytes (0x05)), 
                I7WW,   8
            }

            Name (ECRB, Buffer (0x0A)
            {
                /* 0000 */  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00                                       // ..
            })
            CreateByteField (ECRB, Zero, RSTA)
            CreateByteField (ECRB, One, RLEN)
            CreateByteField (ECRB, 0x02, ECR0)
            Name (ECWB, Buffer (0x0A)
            {
                /* 0000 */  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00                                       // ..
            })
            CreateByteField (ECWB, Zero, WSTA)
            CreateByteField (ECWB, One, WLEN)
            CreateByteField (ECWB, 0x02, ECW0)
            CreateByteField (ECWB, 0x03, ECW1)
            CreateByteField (ECWB, 0x04, ECW2)
            CreateByteField (ECWB, 0x05, ECW3)
            CreateByteField (ECWB, 0x06, ECW4)
            Method (ECRD, 1, NotSerialized)
            {
                If ((H8DR == Zero))
                {
                    Return (Zero)
                }

                Acquire (CFMX, 0xFFFF)
                WLEN = 0x04
                ECW0 = 0x02
                ECW1 = Arg0
                ECW2 = Zero
                ECW3 = One
                ECWB = IC7W = ECWB /* \_SB_.I2C7.ECWB */
                If ((WSTA == Zero))
                {
                    ECRB = IC7R /* \_SB_.I2C7.IC7R */
                }

                Release (CFMX)
                Sleep (0x0A)
                Return (ECR0) /* \_SB_.I2C7.ECR0 */
            }

            Method (ECWR, 2, NotSerialized)
            {
                If (H8DR)
                {
                    Acquire (CFMX, 0xFFFF)
                    WLEN = 0x05
                    ECW0 = 0x03
                    ECW1 = Arg0
                    ECW2 = Zero
                    ECW3 = One
                    ECW4 = Arg1
                    I7WW = ECWB /* \_SB_.I2C7.ECWB */
                    Release (CFMX)
                    Sleep (0x0A)
                }
            }

            Method (ECWS, 3, NotSerialized)
            {
                If (H8DR)
                {
                    Acquire (CFMX, 0xFFFF)
                    Local1 = Arg2
                    While ((Local1 > One))
                    {
                        Local1 -= One
                        WLEN = 0x05
                        ECW0 = 0x03
                        ECW1 = Arg0
                        ECW2 = Zero
                        ECW3 = One
                        ECW4 = Arg1
                        ECWB = I7WW = ECWB /* \_SB_.I2C7.ECWB */
                        If ((WSTA == Zero))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    Release (CFMX)
                }
            }

            Method (QEVT, 0, NotSerialized)
            {
                If ((H8DR == Zero))
                {
                    Return (Zero)
                }

                Acquire (CFMX, 0xFFFF)
                ECW0 = 0xF0
                ECW1 = Zero
                ECW2 = Zero
                ECW3 = One
                ECWB = IC7W = ECWB /* \_SB_.I2C7.ECWB */
                If ((WSTA == Zero))
                {
                    ECRB = IC7R /* \_SB_.I2C7.IC7R */
                }

                Release (CFMX)
                Return (ECR0) /* \_SB_.I2C7.ECR0 */
            }

            Method (ECNT, 1, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == Zero))
                    {
                        If ((\_SB.I2C7.HKEY.MSCB == Zero))
                        {
                            \_SB.I2C7.ECWS (0x80, 0xBB, 0x03)
                            SCMS (0x21)
                            If (\_SB.I2C7.HKEY.MHKK (One, 0x00020000))
                            {
                                \_SB.I2C7.HKEY.MHKQ (0x1012)
                            }
                        }

                        Return (Zero)
                    }
                    ElseIf ((_T_0 == One))
                    {
                        If ((\_SB.I2C7.HKEY.MSCB == Zero))
                        {
                            \_SB.I2C7.ECWS (0x80, 0x66, 0x03)
                        }

                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        SGOV (0xB0, One)
                        Sleep (0x0A)
                        \_SB.I2C7.ECWS (0x80, 0xAA, 0x03)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        \_SB.I2C7.ECWS (0x80, 0x55, 0x03)
                        SGOV (0xB0, Zero)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        \_SB.I2C7.ECWS (0x80, 0xBB, 0x03)
                        Return (Zero)
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        \_SB.I2C7.ECWS (0x80, 0x66, 0x03)
                        Return (Zero)
                    }
                    Else
                    {
                        Return (0xFF)
                    }

                    Break
                }
            }

            Device (HKEY)
            {
                Name (KBCS, Zero)
                Name (_HID, EisaId ("LEN0268"))  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    ADBG ("HKEY _INI")
                    ADBG ("_INI0")
                    ADBG ("_INI1")
                }

                Method (MHKV, 0, NotSerialized)
                {
                    Return (0x0200)
                }

                Name (DHKC, Zero)
                Name (DHKB, One)
                Name (DHKH, Zero)
                Name (DHKW, Zero)
                Name (DHKS, Zero)
                Name (DHKD, Zero)
                Name (DHKN, 0x0808)
                Name (DHKE, Zero)
                Name (DHKF, 0x1FFF0000)
                Name (DHKT, Zero)
                Name (DHWW, Zero)
                Name (DHDF, Zero)
                Mutex (XDHK, 0x00)
                Method (MHKA, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf ((Arg0 == One))
                    {
                        Return (0xFFFFFFFB)
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        Return (Zero)
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        Return (0x1FFF0000)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKN, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf ((Arg0 == One))
                    {
                        Return (DHKN) /* \_SB_.I2C7.HKEY.DHKN */
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        Return (DHKE) /* \_SB_.I2C7.HKEY.DHKE */
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        Return (DHKF) /* \_SB_.I2C7.HKEY.DHKF */
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKK, 2, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Return (0x03)
                    }
                    ElseIf (DHKC)
                    {
                        If ((Arg0 == One))
                        {
                            Return ((DHKN & Arg1))
                        }
                        ElseIf ((Arg0 == 0x02))
                        {
                            Return ((DHKE & Arg1))
                        }
                        ElseIf ((Arg0 == 0x03))
                        {
                            Return ((DHKF & Arg1))
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Method (MHKM, 2, NotSerialized)
                {
                    Acquire (XDHK, 0xFFFF)
                    If ((Arg0 > 0x60))
                    {
                        Noop
                    }
                    ElseIf ((Arg0 <= 0x20))
                    {
                        Local0 = (One << Arg0--)
                        If ((Local0 & 0xFFFFFFFB))
                        {
                            If (Arg1)
                            {
                                DHKN |= Local0 /* \_SB_.I2C7.HKEY.DHKN */
                            }
                            Else
                            {
                                DHKN &= (Local0 ^ 0xFFFFFFFF)
                            }
                        }
                        Else
                        {
                            Noop
                        }
                    }
                    ElseIf ((Arg0 <= 0x40))
                    {
                        Noop
                    }
                    ElseIf ((Arg0 <= 0x60))
                    {
                        Arg0 -= 0x40
                        Local0 = (One << Arg0--)
                        If ((Local0 & 0x11FF0000))
                        {
                            If (Arg1)
                            {
                                DHKF |= Local0 /* \_SB_.I2C7.HKEY.DHKF */
                            }
                            Else
                            {
                                DHKF &= (Local0 ^ 0xFFFFFFFF)
                            }
                        }
                        Else
                        {
                            Noop
                        }
                    }

                    Release (XDHK)
                }

                Method (MHKS, 0, NotSerialized)
                {
                    Notify (\_SB.SLPB, 0x80) // Status Change
                }

                Method (MHKC, 1, NotSerialized)
                {
                    DHKC = Arg0
                }

                Method (MHKP, 0, NotSerialized)
                {
                    Acquire (XDHK, 0xFFFF)
                    If (DHWW)
                    {
                        Local1 = DHWW /* \_SB_.I2C7.HKEY.DHWW */
                        DHWW = Zero
                    }
                    ElseIf (DHDF)
                    {
                        Local1 = DHDF /* \_SB_.I2C7.HKEY.DHDF */
                        DHDF = Zero
                    }
                    ElseIf (DHKW)
                    {
                        Local1 = DHKW /* \_SB_.I2C7.HKEY.DHKW */
                        DHKW = Zero
                    }
                    ElseIf (DHKD)
                    {
                        Local1 = DHKD /* \_SB_.I2C7.HKEY.DHKD */
                        DHKD = Zero
                    }
                    ElseIf (DHKS)
                    {
                        Local1 = DHKS /* \_SB_.I2C7.HKEY.DHKS */
                        DHKS = Zero
                    }
                    ElseIf (DHKT)
                    {
                        Local1 = DHKT /* \_SB_.I2C7.HKEY.DHKT */
                        DHKT = Zero
                    }
                    Else
                    {
                        Local1 = DHKH /* \_SB_.I2C7.HKEY.DHKH */
                        DHKH = Zero
                    }

                    Release (XDHK)
                    Return (Local1)
                }

                Method (MHKE, 1, Serialized)
                {
                    DHKB = Arg0
                    Acquire (XDHK, 0xFFFF)
                    DHKH = Zero
                    DHKW = Zero
                    DHKS = Zero
                    DHKD = Zero
                    DHKT = Zero
                    DHWW = Zero
                    DHDF = Zero
                    Release (XDHK)
                }

                Method (MHKQ, 1, Serialized)
                {
                    If (DHKB)
                    {
                        If (DHKC)
                        {
                            Acquire (XDHK, 0xFFFF)
                            If ((Arg0 < 0x1000)){}
                            ElseIf ((Arg0 < 0x2000))
                            {
                                DHKH = Arg0
                            }
                            ElseIf ((Arg0 < 0x3000))
                            {
                                DHKW = Arg0
                            }
                            ElseIf ((Arg0 < 0x4000))
                            {
                                DHKS = Arg0
                            }
                            ElseIf ((Arg0 < 0x5000))
                            {
                                DHKD = Arg0
                            }
                            ElseIf ((Arg0 < 0x6000))
                            {
                                DHKH = Arg0
                            }
                            ElseIf ((Arg0 < 0x7000))
                            {
                                DHKT = Arg0
                            }
                            ElseIf ((Arg0 < 0x8000))
                            {
                                DHWW = Arg0
                            }
                            ElseIf ((Arg0 < 0x9000))
                            {
                                DHDF = Arg0
                            }
                            Else
                            {
                            }

                            Release (XDHK)
                            Notify (\_SB.I2C7.HKEY, 0x80) // Status Change
                        }
                        ElseIf ((Arg0 == 0x1004)){}
                    }
                }

                Method (MHKD, 0, NotSerialized)
                {
                }

                Method (MHQC, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (MHGC, 0, NotSerialized)
                {
                    Return (Zero)
                }

                Method (MHSC, 1, NotSerialized)
                {
                }

                Method (CKC4, 1, NotSerialized)
                {
                    Return (One)
                }

                Method (MHQE, 0, NotSerialized)
                {
                    Return (0xFF)
                }

                Method (MHGE, 0, NotSerialized)
                {
                    Return (0xFF)
                }

                Method (MHSE, 1, NotSerialized)
                {
                }

                Method (UAWO, 1, NotSerialized)
                {
                    Return (UAWS (Arg0))
                }

                Method (MLCG, 1, NotSerialized)
                {
                    If ((KBCS != Zero))
                    {
                        Local0 = KBCS /* \_SB_.I2C7.HKEY.KBCS */
                        Return (Local0)
                    }

                    Local1 = GECB (0x0D, 0x06, 0x02)
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = Local1
                        If ((_T_0 == Zero))
                        {
                            Local0 = 0x00050200
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Local0 = 0x00050201
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Local0 = 0x00050202
                        }
                        Else
                        {
                            Local0 = 0x00050200
                        }

                        Break
                    }

                    Local0 |= 0x00200000
                    Return (Local0)
                }

                Method (SKBS, 0, NotSerialized)
                {
                    Local1 = GECB (0x0D, 0x06, 0x02)
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = Local1
                        If ((_T_0 == Zero))
                        {
                            Local2 = 0x00050200
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Local2 = 0x00050201
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Local2 = 0x00050202
                        }
                        Else
                        {
                            Local2 = 0x00050200
                        }

                        Break
                    }

                    Local2 |= 0x00200000
                    \_SB.I2C7.HKEY.KBCS = Local2
                }

                Method (MLCS, 1, NotSerialized)
                {
                    Local0 = Arg0
                    If (!(Local0 & 0x80000000))
                    {
                        If ((Arg0 & 0x00010000))
                        {
                            \_SB.I2C7.HKEY.MHKQ (0x6001)
                        }
                        Else
                        {
                            If (((Arg0 & 0x0F) == Zero))
                            {
                                WECB (0x0D, 0x06, 0x02, Zero)
                                WECB (0xE1, 0x02, 0x02, Zero)
                                Local1 = 0x00050200
                            }
                            ElseIf (((Arg0 & 0x0F) == One))
                            {
                                WECB (0x0D, 0x06, 0x02, One)
                                WECB (0xE1, 0x02, 0x02, One)
                                Local1 = 0x00050201
                            }
                            ElseIf (((Arg0 & 0x0F) == 0x02))
                            {
                                WECB (0x0D, 0x06, 0x02, 0x02)
                                WECB (0xE1, 0x02, 0x02, 0x02)
                                Local1 = 0x00050202
                            }

                            Local1 |= 0x00200000
                            \_SB.I2C7.HKEY.KBCS = Local1
                            If (\_SB.I2C7.HKEY.MHKK (One, 0x00020000))
                            {
                                \_SB.I2C7.HKEY.MHKQ (0x1012)
                            }
                        }
                    }

                    Return (Local0)
                }

                Method (DSSG, 1, NotSerialized)
                {
                    Local0 = (0x0400 | PDCI) /* \_SB_.PDCI */
                    Return (Local0)
                }

                Method (DSSS, 1, NotSerialized)
                {
                    PDCI |= Arg0
                }

                Method (SBSG, 1, NotSerialized)
                {
                }

                Method (SBSS, 1, NotSerialized)
                {
                }

                Method (PBLG, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (PBLS, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (PMSG, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (PMSS, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (ISSG, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (ISSS, 1, NotSerialized)
                {
                    ISCG = Arg0
                    Return (Zero)
                }

                Method (FFSG, 1, NotSerialized)
                {
                    Return (Zero)
                }

                Method (FFSS, 1, NotSerialized)
                {
                    Return (0x80000000)
                }

                Method (GMKS, 0, NotSerialized)
                {
                    Return (FNSC (0x02, Zero))
                }

                Method (SMKS, 1, NotSerialized)
                {
                    Return (FNSC (0x03, (Arg0 & 0x00010001)))
                }

                Method (GSKL, 1, NotSerialized)
                {
                    Return (FNSC (0x04, (Arg0 & 0x0F000000)))
                }

                Method (SSKL, 1, NotSerialized)
                {
                    Return (FNSC (0x05, (Arg0 & 0x0F00FFFF)))
                }

                Method (INSG, 1, NotSerialized)
                {
                    Local0 = IOEN /* \_SB_.IOEN */
                    Local0 |= (IOST << 0x07)
                    Local0 |= (IOCP << 0x08)
                    Local0 |= 0x10000000
                    Return (Local0)
                }

                Method (INSS, 1, NotSerialized)
                {
                    If ((Arg0 & 0x10000000))
                    {
                        If (IOCP)
                        {
                            Local0 = ((Arg0 & 0x80) >> 0x07)
                            If (!EZRC (Local0))
                            {
                                IOST = Local0
                            }
                        }

                        Return (Zero)
                    }

                    If ((IOCP && (Arg0 & One)))
                    {
                        IOEN = One
                    }
                    Else
                    {
                        IOEN = Zero
                        If (IOST)
                        {
                            If (!ISOC (Zero))
                            {
                                IOST = Zero
                            }
                        }
                    }

                    Return (Zero)
                }

                Method (GMMS, 1, NotSerialized)
                {
                    Local0 = 0x00040000
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (PMMD)
                        If ((_T_0 == Zero))
                        {
                            Local0 |= One
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Local0 |= 0x04
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Local0 |= 0x05
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Local0 |= 0x03
                        }
                        Else
                        {
                            Local0 |= One
                        }

                        Break
                    }

                    Return (Local0)
                }

                Method (GTMS, 1, NotSerialized)
                {
                    Local0 = 0x00010000
                    Local0 |= LVMD /* \_SB_.LVMD */
                    Return (Local0)
                }

                Method (GTCS, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Return (One)
                    }
                }

                Method (STCS, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Return (One)
                    }
                    ElseIf ((Arg0 == 0x0101))
                    {
                        Return (One)
                    }
                }

                Method (SSPI, 1, NotSerialized)
                {
                    If ((Arg0 == Zero))
                    {
                        Local0 = 0x0100
                        Return (Local0)
                    }
                    ElseIf ((Arg0 == 0x0100))
                    {
                        Local0 = One
                        Return (Local0)
                    }
                }

                Method (GCES, 1, NotSerialized)
                {
                    If ((GGIV (0xAE) == Zero))
                    {
                        Return (Zero)
                    }
                    Else
                    {
                        Return (One)
                    }
                }

                Method (FPSW, 1, NotSerialized)
                {
                    Return (Zero)
                }
            }

            Scope (\_SB.I2C7)
            {
                Device (LHKF)
                {
                    Name (_HID, EisaId ("LEN0131"))  // _HID: Hardware ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }
            }

            Method (INGO, 2, Serialized)
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg0)
                    If ((_T_0 == 0x03))
                    {
                        Local0 = \_SB.I2C7.ECRD (0xC5)
                        Local1 = \_SB.I2C7.ECRD (0xCF)
                        If ((Arg1 == One))
                        {
                            If (((Local0 & 0x80) != 0x80))
                            {
                                Local0 |= 0x80
                                \_SB.I2C7.ECWR (0xC5, Local0)
                            }

                            If (((Local1 & One) != One))
                            {
                                Local1 |= One
                                \_SB.I2C7.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                        Else
                        {
                            If (((Local0 & 0x80) != Zero))
                            {
                                Local0 &= ~0x80
                                \_SB.I2C7.ECWR (0xC5, Local0)
                            }

                            If (((Local1 & One) != Zero))
                            {
                                Local1 &= ~One
                                \_SB.I2C7.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Local1 = \_SB.I2C7.ECRD (0xCF)
                        If ((Arg1 == One))
                        {
                            If (((Local1 & One) != One))
                            {
                                Local1 |= One
                                \_SB.I2C7.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                        Else
                        {
                            If (((Local1 & One) != Zero))
                            {
                                Local1 &= ~One
                                \_SB.I2C7.ECWR (0xCF, Local1)
                            }

                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (0xFFFF)
                    }

                    Break
                }

                Return (Zero)
            }

            Method (LED, 2, NotSerialized)
            {
                Local0 = (Arg0 | Arg1)
                \_SB.I2C7.ECWR (0x0C, Local0)
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Method (ICWR, 1, NotSerialized)
            {
                Return (\_SB.PMAP.ICWR ())
            }

            Method (ICRD, 1, NotSerialized)
            {
                Return (\_SB.PMAP.ICRD ())
            }

            Method (BCTG, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BCTG (Arg0))
            }

            Method (BCCS, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BCCS (Arg0))
            }

            Method (BCSG, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BCSG (Arg0))
            }

            Method (BDSS, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BDSS (Arg0))
            }

            Method (BICG, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BICG (Arg0))
            }

            Method (BICS, 1, NotSerialized)
            {
                Return (\_SB.PMAP.BICS (Arg0))
            }

            Method (SOCH, 1, NotSerialized)
            {
                Return (\_SB.PMAP.SOCH (Arg0))
            }

            Method (SOCT, 1, NotSerialized)
            {
                Return (\_SB.PMAP.SOCT (Arg0))
            }

            Method (SBIG, 1, NotSerialized)
            {
                Return (\_SB.PMAP.SBIG ())
            }
        }

        Device (ECKB)
        {
            Name (_HID, "ELAN06F1")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.GIO0, 
                \_SB.I2C1
            })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((TPDT == One))
                {
                    _HID = "ELAN06F1"
                }
                Else
                {
                    _HID = "SYNA06F2"
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x003A, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0180
                        }
                })
                Return (RBUF) /* \_SB_.ECKB._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.ECKB._DSM._T_0 */
                    If ((_T_0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == One))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }
                                    Else
                                    {
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (One)
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (TPD0)
        {
            Name (_HID, "ELAN06E2")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (HID2, One)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C1, 
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((TDVI == 0x04F3) && (TDPI == 0x3195)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0380
                        }
                })
                Return (RBUF) /* \_SB_.TPD0._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Method _DSM Function Query"
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Debug = "Method _DSM Function HID"
                        Return (HID2) /* \_SB_.TPD0.HID2 */
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (TPD1)
        {
            Name (_HID, "ELAN06E3")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (HID2, One)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C1, 
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((TDVI == 0x04F3) && (TDPI == 0x3196)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0380
                        }
                })
                Return (RBUF) /* \_SB_.TPD1._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Method _DSM Function Query"
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Debug = "Method _DSM Function HID"
                        Return (HID2) /* \_SB_.TPD1.HID2 */
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (TPD2)
        {
            Name (_HID, "SYNA8022")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (HID2, 0x20)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C1, 
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((TDVI == 0x06CB) && (TDPI == 0xCE67)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0380
                        }
                })
                Return (RBUF) /* \_SB_.TPD2._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Method _DSM Function Query"
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Debug = "Method _DSM Function HID"
                        Return (HID2) /* \_SB_.TPD2.HID2 */
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (TPD3)
        {
            Name (_HID, "SYNA8024")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (HID2, 0x20)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C1, 
                \_SB.PEP0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((TDVI == 0x06CB) && (TDPI == 0xCE68)))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0380
                        }
                })
                Return (RBUF) /* \_SB_.TPD3._CRS.RBUF */
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Method _DSM Function Query"
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Debug = "Method _DSM Function HID"
                        Return (HID2) /* \_SB_.TPD3.HID2 */
                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (TSC1)
        {
            Name (_HID, "MSFT0001")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_HRV, One)  // _HRV: Hardware Revision
            Name (_ADR, Zero)  // _ADR: Address
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.GIO0, 
                \_SB.I2C9, 
                \_SB.PEP0
            })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (((TLVI == 0x222A) && (TLPI == 0x54E7)))
                {
                    _HID = "ILIT2911"
                }
                Else
                {
                    _HID = "GTCH1563"
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If (((TLVI == 0x222A) && (TLPI == 0x54E7)))
                {
                    Name (SBFB, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0041, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.I2C9",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0033
                            }
                    })
                    Return (SBFB) /* \_SB_.TSC1._CRS.SBFB */
                }
                Else
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0010, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.I2C9",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                            "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0033
                            }
                    })
                    Return (RBUF) /* \_SB_.TSC1._CRS.RBUF */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((GGIV (0x5A) == Zero))
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TSC1._DSM._T_0 */
                    If ((_T_0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == One))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x03                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Debug = "Method _DSM Function HID"
                                Return (One)
                            }
                            Else
                            {
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        Device (HPS0)
        {
            Name (_HID, "QCOM06D9")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        OperationRegion (CP79, SystemMemory, 0x0F14F000, 0x10)
        Field (CP79, DWordAcc, NoLock, Preserve)
        {
            PI1C,   32, 
            PIN1,   32, 
            PI1N,   32, 
            PI1S,   32
        }

        OperationRegion (CP78, SystemMemory, 0x0F14E000, 0x10)
        Field (CP78, DWordAcc, NoLock, Preserve)
        {
            PI2C,   32, 
            PIN2,   32, 
            PI2N,   32, 
            PI2S,   32
        }

        OperationRegion (CP77, SystemMemory, 0x0F14D000, 0x10)
        Field (CP77, DWordAcc, NoLock, Preserve)
        {
            PI3C,   32, 
            PIN3,   32, 
            PI3N,   32, 
            PI3S,   32
        }

        OperationRegion (CP76, SystemMemory, 0x0F14C000, 0x10)
        Field (CP76, DWordAcc, NoLock, Preserve)
        {
            PI4C,   32, 
            PIN4,   32, 
            PI4N,   32, 
            PI4S,   32
        }

        Method (BTI1, 0, Serialized)
        {
            Name (GPP1, Zero)
            GPP1 = PIN1 /* \_SB_.PIN1 */
            Return (GPP1) /* \_SB_.BTI1.GPP1 */
        }

        Method (BTI2, 0, Serialized)
        {
            Name (GPP2, Zero)
            GPP2 = PIN2 /* \_SB_.PIN2 */
            Return (GPP2) /* \_SB_.BTI2.GPP2 */
        }

        Method (BTI3, 0, Serialized)
        {
            Name (GPP3, Zero)
            GPP3 = PIN3 /* \_SB_.PIN3 */
            Return (GPP3) /* \_SB_.BTI3.GPP3 */
        }

        Method (BTI4, 0, Serialized)
        {
            Name (GPP4, Zero)
            GPP4 = PIN4 /* \_SB_.PIN4 */
            Return (GPP4) /* \_SB_.BTI4.GPP4 */
        }

        Name (FMP, Buffer (One)
        {
             0x03                                             // .
        })
        Name (PORT, Buffer (One)
        {
             0x03                                             // .
        })
        Name (USBC, Buffer (One)
        {
             0x0B                                             // .
        })
        Device (UPLD)
        {
            Name (_HID, EisaId ("PNP0A05") /* Generic Container Device */)  // _HID: Hardware ID
            Name (_UID, "USB _PLD Object Container")  // _UID: Unique ID
            Name (PLD0, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x51, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Q.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
            Name (PLD1, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x51, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // Q.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
            Name (PLM0, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x51, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Q.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
            Name (PLM1, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x51, 0x90, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  // Q.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
            Name (PLM2, Package (0x01)
            {
                Buffer (0x14)
                {
                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x51, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,  // Q.......
                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                }
            })
        }

        Device (UUPC)
        {
            Name (_HID, EisaId ("PNP0A05") /* Generic Container Device */)  // _HID: Hardware ID
            Name (_UID, "USB _UPC Object Container")  // _UID: Unique ID
            Name (UPCC, Package (0x04)
            {
                One, 
                0x09, 
                0x3D, 
                Zero
            })
            Name (UPC2, Package (0x04)
            {
                One, 
                Zero, 
                Zero, 
                Zero
            })
            Name (UPC3, Package (0x04)
            {
                One, 
                0x03, 
                Zero, 
                Zero
            })
        }

        Device (URS0)
        {
            Name (_HID, "QCOM0C8B")  // _HID: Hardware ID
            Name (_CID, Package (0x02)  // _CID: Compatible ID
            {
                "PNP0CA1", 
                "QCOMFFE1"
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A600000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Device (USB0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000183,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000193,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000211,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020F,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000238,
                    }
                })
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD0)
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD0)
                        }

                        Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                        {
                            ToUUID ("daffd814-6eba-4d8c-8a91-bc9bbf4aa301") /* Device Properties for _DSD */, 
                            Package (0x02)
                            {
                                Package (0x02)
                                {
                                    "usb4-host-interface", 
                                    \_SB.UBF0.PRT0
                                }, 

                                Package (0x02)
                                {
                                    "usb4-port-number", 
                                    Zero
                                }
                            }
                        })
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC0)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS0.USB0._DSM._T_0 */
                        If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x1D                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == 0x02))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x03))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x04))
                                {
                                    Return (0x02)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS0.USB0.PHYC.CFG0 */
                }
            }

            Device (UFN0)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD0)
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD0)
                        }
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000183,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000193,
                    }
                })
                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC0)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS0.UFN0._DSM._T_0 */
                        If ((_T_0 == ToUUID ("fe56cfeb-49d5-4378-a8a2-2978dbe54ad2") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == One))
                                {
                                    Return (0x20)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        ElseIf ((_T_0 == ToUUID ("18de299f-9476-4fc9-b43b-8aeb713ed751") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_3 = ToInteger (Arg2)
                                If ((_T_3 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_4 = ToInteger (Arg1)
                                        If ((_T_4 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_3 == One))
                                {
                                    Return (0x39)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS0.UFN0.PHYC.CFG0 */
                }
            }
        }

        Device (URS1)
        {
            Name (_HID, "QCOM0C8C")  // _HID: Hardware ID
            Name (_CID, Package (0x02)  // _CID: Compatible ID
            {
                "PNP0CA1", 
                "QCOMFFE1"
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, One)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A800000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Device (USB1)
            {
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000185,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000194,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000022A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020B,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000237,
                    }
                })
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD1)
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD1)
                        }

                        Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                        {
                            ToUUID ("daffd814-6eba-4d8c-8a91-bc9bbf4aa301") /* Device Properties for _DSD */, 
                            Package (0x02)
                            {
                                Package (0x02)
                                {
                                    "usb4-host-interface", 
                                    \_SB.UBF0.PRT1
                                }, 

                                Package (0x02)
                                {
                                    "usb4-port-number", 
                                    Zero
                                }
                            }
                        })
                    }
                }

                Name (STVL, 0x0F)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC1)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS1.USB1._DSM._T_0 */
                        If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x1D                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == 0x02))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x03))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x04))
                                {
                                    Return (0x02)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {
                }

                Method (REMD, 0, NotSerialized)
                {
                    STVL = Zero
                    Notify (\_SB.URS1.USB1, One) // Device Check
                }

                Method (ADDD, 0, NotSerialized)
                {
                    STVL = 0x0F
                    Notify (\_SB.URS1.USB1, One) // Device Check
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS1.USB1.PHYC.CFG0 */
                }
            }

            Device (UFN1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD1)
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD1)
                        }
                    }
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000185,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000194,
                    }
                })
                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC1)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS1.UFN1._DSM._T_0 */
                        If ((_T_0 == ToUUID ("fe56cfeb-49d5-4378-a8a2-2978dbe54ad2") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == One))
                                {
                                    Return (0x20)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        ElseIf ((_T_0 == ToUUID ("18de299f-9476-4fc9-b43b-8aeb713ed751") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_3 = ToInteger (Arg2)
                                If ((_T_3 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_4 = ToInteger (Arg1)
                                        If ((_T_4 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_3 == One))
                                {
                                    Return (0x39)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS1.UFN1.PHYC.CFG0 */
                }
            }
        }

        Device (URS2)
        {
            Name (_HID, "QCOM0D07")  // _HID: Hardware ID
            Name (_CID, Package (0x02)  // _CID: Compatible ID
            {
                "PNP0CA1", 
                "QCOMFFE1"
            })
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A000000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }

            Device (USB2)
            {
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000181,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000192,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000020A,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000234,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000235,
                    }
                })
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD2) /* External reference */
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD2) /* External reference */
                        }
                    }
                }

                Name (STVL, 0x0F)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC2)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS2.USB2._DSM._T_0 */
                        If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x1D                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == 0x02))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x03))
                                {
                                    Return (Zero)
                                    Break
                                }
                                ElseIf ((_T_1 == 0x04))
                                {
                                    Return (0x02)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {
                }

                Method (REMD, 0, NotSerialized)
                {
                    STVL = Zero
                    Notify (\_SB.URS2.USB2, One) // Device Check
                }

                Method (ADDD, 0, NotSerialized)
                {
                    STVL = 0x0F
                    Notify (\_SB.URS2.USB2, One) // Device Check
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS2.USB2.PHYC.CFG0 */
                }
            }

            Device (UFN2)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Device (RHUB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Device (PRT0)
                    {
                        Name (_ADR, One)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD2) /* External reference */
                        }
                    }

                    Device (PRT1)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                        {
                            Return (\_SB.UUPC.UPCC)
                        }

                        Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                        {
                            Return (\_SB.UPLD.PLD2) /* External reference */
                        }
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000181,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000192,
                    }
                })
                Method (CCVL, 0, NotSerialized)
                {
                    Return (\_SB.UCS0.ECC2)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    While (One)
                    {
                        Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        {
                             0x00                                             // .
                        })
                        CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.URS2.UFN2._DSM._T_0 */
                        If ((_T_0 == ToUUID ("fe56cfeb-49d5-4378-a8a2-2978dbe54ad2") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_1 = ToInteger (Arg2)
                                If ((_T_1 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_2 = ToInteger (Arg1)
                                        If ((_T_2 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_1 == One))
                                {
                                    Return (0x20)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        ElseIf ((_T_0 == ToUUID ("18de299f-9476-4fc9-b43b-8aeb713ed751") /* Unknown UUID */))
                        {
                            While (One)
                            {
                                Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                _T_3 = ToInteger (Arg2)
                                If ((_T_3 == Zero))
                                {
                                    While (One)
                                    {
                                        Name (_T_4, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                        _T_4 = ToInteger (Arg1)
                                        If ((_T_4 == Zero))
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x03                                             // .
                                            })
                                            Break
                                        }
                                        Else
                                        {
                                            Return (Buffer (One)
                                            {
                                                 0x01                                             // .
                                            })
                                            Break
                                        }

                                        Break
                                    }

                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }
                                ElseIf ((_T_3 == One))
                                {
                                    Return (0x39)
                                    Break
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                    Break
                                }

                                Break
                            }
                        }
                        Else
                        {
                            Return (Buffer (One)
                            {
                                 0x00                                             // .
                            })
                            Break
                        }

                        Break
                    }
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.URS2.UFN2.PHYC.CFG0 */
                }
            }
        }

        Device (USB3)
        {
            Name (_HID, "QCOM0D08")  // _HID: Hardware ID
            Name (_CID, "PNP0D15" /* XHCI USB Controller without debug */)  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Method (GMP, 0, NotSerialized)
            {
                Return (\_SB.FMP)
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A400000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x00000153,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000159,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000232,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x0000015A,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000233,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x0000022E,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x0000022F,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000230,
                }
                Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000231,
                }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x0006
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B8
                    }
                GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0059
                    }
                GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0058
                    }
            })
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.USB3._DSM._T_0 */
                    If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x1D                                             // .
                                        })
                                        Break
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x01                                             // .
                                        })
                                        Break
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                Return (0x02)
                                Break
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                        Break
                    }

                    Break
                }
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Device (MP0)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UUPC.UPC3)
                    }

                    Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.UPLD.PLM0)
                    }
                }

                Device (MP1)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UUPC.UPC3)
                    }

                    Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.UPLD.PLM1)
                    }
                }

                Device (MP2)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UUPC.UPC3)
                    }

                    Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.UPLD.PLM0)
                    }
                }

                Device (MP3)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UUPC.UPC3)
                    }

                    Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.UPLD.PLM1)
                    }
                }
            }

            Name (STVL, 0x0F)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
            }

            Method (REMD, 0, NotSerialized)
            {
                STVL = Zero
                Notify (\_SB.USB3, One) // Device Check
            }

            Method (ADDD, 0, NotSerialized)
            {
                STVL = 0x0F
                Notify (\_SB.USB3, One) // Device Check
            }

            Method (PHYC, 0, NotSerialized)
            {
                Name (CFG0, Package (0x00){})
                Return (CFG0) /* \_SB_.USB3.PHYC.CFG0 */
            }
        }

        Device (USB4)
        {
            Name (_HID, "QCOM0D09")  // _HID: Hardware ID
            Name (_CID, "PNP0D15" /* XHCI USB Controller without debug */)  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x0A200000,         // Address Base
                    0x000FFFFF,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                {
                    0x00000110,
                }
                Interrupt (ResourceConsumer, Level, ActiveHigh, SharedAndWake, ,, )
                {
                    0x00000115,
                }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x0007
                    }
            })
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.USB4._DSM._T_0 */
                    If ((_T_0 == ToUUID ("ce2ee385-00e6-48cb-9f05-2edb927c4899") /* USB Controller */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x1D                                             // .
                                        })
                                        Break
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x01                                             // .
                                        })
                                        Break
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                Return (Zero)
                                Break
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                Return (0x02)
                                Break
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                                Break
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                        Break
                    }

                    Break
                }
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Device (PRT0)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                    {
                        Return (\_SB.UUPC.UPC2)
                    }

                    Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                    {
                        Return (\_SB.UPLD.PLM2)
                    }
                }
            }

            Name (STVL, 0x0F)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
            }

            Method (REMD, 0, NotSerialized)
            {
                STVL = Zero
                Notify (\_SB.USB4, One) // Device Check
            }

            Method (ADDD, 0, NotSerialized)
            {
                STVL = 0x0F
                Notify (\_SB.USB4, One) // Device Check
            }

            Method (PHYC, 0, NotSerialized)
            {
                Name (CFG0, Package (0x00){})
                Return (CFG0) /* \_SB_.USB4.PHYC.CFG0 */
            }
        }

        Device (UBF0)
        {
            Name (_HID, "QCOM0C6D")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_CCA, Zero)  // _CCA: Cache Coherency Attribute
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.UCS0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Device (PRT0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_CID, "ACPI0015" /* USB4 host interface device */)  // _CID: Compatible ID
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadWrite,
                        0x1563F000,         // Address Base
                        0x000BFFFF,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000001F8,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000011F,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x00000263,
                    }
                })
                Method (PHY0, 0, NotSerialized)
                {
                    Return (\_SB.PRS0) /* External reference */
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.UBF0.PRT0.PHYC.CFG0 */
                }
            }

            Device (PRT1)
            {
                Name (_ADR, One)  // _ADR: Address
                Name (_CID, "ACPI0015" /* USB4 host interface device */)  // _CID: Compatible ID
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadWrite,
                        0x1573F000,         // Address Base
                        0x000BFFFF,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x0000027D,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x0000022B,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x0000027F,
                    }
                })
                Method (PHY0, 0, NotSerialized)
                {
                    Return (\_SB.PRS0) /* External reference */
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.UBF0.PRT1.PHYC.CFG0 */
                }
            }

            Device (PRT2)
            {
                Name (_ADR, 0x02)  // _ADR: Address
                Name (_CID, "ACPI0015" /* USB4 host interface device */)  // _CID: Compatible ID
                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadWrite,
                        0x1553F000,         // Address Base
                        0x000BFFFF,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000001CD,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, SharedAndWake, ,, )
                    {
                        0x00000236,
                    }
                    Interrupt (ResourceConsumer, Level, ActiveHigh, Shared, ,, )
                    {
                        0x000001D6,
                    }
                })
                Method (PHY2, 0, NotSerialized)
                {
                    Return (\_SB.PRS2) /* External reference */
                }

                Method (PHYC, 0, NotSerialized)
                {
                    Name (CFG0, Package (0x00){})
                    Return (CFG0) /* \_SB_.UBF0.PRT2.PHYC.CFG0 */
                }
            }
        }

        Device (UCSI)
        {
            Name (_HID, EisaId ("USBC000"))  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0CA0"))  // _CID: Compatible ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_DDN, "USB Type-C")  // _DDN: DOS Device Name
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.ABD, 
                \_SB.PMGK, 
                \_SB.UCS0
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.PMGK.LKUP > Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    VERS = 0x0120
                    CCI = Zero
                    MSGI = Zero
                    Return (Zero)
                }
            }

            Device (UCN0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                {
                    Return (\_SB.UUPC.UPCC)
                }

                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                {
                    Return (\_SB.UPLD.PLD0)
                }
            }

            Device (UCN1)
            {
                Name (_ADR, One)  // _ADR: Address
                Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                {
                    Return (\_SB.UUPC.UPCC)
                }

                Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                {
                    Return (\_SB.UPLD.PLD1)
                }
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x81F20000,         // Address Base
                    0x00000030,         // Address Length
                    )
            })
            OperationRegion (USBC, SystemMemory, 0x81F20000, 0x30)
            Field (USBC, ByteAcc, Lock, Preserve)
            {
                VERS,   16, 
                RESV,   16, 
                CCI,    32, 
                CTRL,   64, 
                MSGI,   128, 
                MSGO,   128
            }

            Name (BUFF, Buffer (0x32){})
            CreateField (BUFF, Zero, 0x08, BSTA)
            CreateField (BUFF, 0x08, 0x08, BSIZ)
            CreateField (BUFF, 0x10, 0x10, BVER)
            CreateField (BUFF, 0x30, 0x20, BCCI)
            CreateField (BUFF, 0x50, 0x40, BCTL)
            CreateField (BUFF, 0x90, 0x80, BMGI)
            CreateField (BUFF, 0x0110, 0x80, BMGO)
            Method (OPMW, 0, NotSerialized)
            {
                BCTL = CTRL /* \_SB_.UCSI.CTRL */
                BMGO = MSGO /* \_SB_.UCSI.MSGO */
                \_SB.PMGK.UCSI = BUFF /* \_SB_.UCSI.BUFF */
                Return (Zero)
            }

            Method (OPMR, 0, NotSerialized)
            {
                BUFF = \_SB.PMGK.UCSI
                VERS = BVER /* \_SB_.UCSI.BVER */
                CCI = BCCI /* \_SB_.UCSI.BCCI */
                MSGI = BMGI /* \_SB_.UCSI.BMGI */
                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("6f8398c2-7ca4-11e4-ad36-631042b5008f") /* Unknown UUID */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x0F                                             // .
                            })
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Return (OPMW ())
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Return (OPMR ())
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Return (Zero)
                        }
                        ElseIf ((_T_0 == 0x04))
                        {
                            Return (One)
                        }

                        Break
                    }
                }
            }
        }

        Device (UCS0)
        {
            Name (_HID, "QCOM0CA4")  // _HID: Hardware ID
            Name (_CID, "QCOMFFE5")  // _CID: Compatible ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PEP0
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0x81F20040,         // Address Base
                    0x0000002F,         // Address Length
                    )
                GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x0079
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00A8
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00A7
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00A6
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00D9
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x00DA
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x01A1
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.PM01", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0217
                    }
                GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x007B
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B3
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B2
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B1
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B0
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00BA
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00BC
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00AF
                    }
                GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x007D
                    }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00AB
                    }
                GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00AA
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00A9
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00B9
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00BB
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x00BD
                    }
                GpioIo (Exclusive, PullUp, 0x0000, 0x0000, IoRestrictionOutputOnly,
                    "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                    RawDataBuffer (0x01)  // Vendor Data
                    {
                        0x01
                    })
                    {   // Pin list
                        0x007E
                    }
                I2cSerialBusV2 (0x0008, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2C4",
                    0x00, ResourceConsumer, , Exclusive,
                    )
                I2cSerialBusV2 (0x0008, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2C8",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.UCS0._DSM._T_0 */
                    If ((_T_0 == ToUUID ("fedcba98-0123-4567-89ab-76543210cdef") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x1F                                             // .
                                        })
                                        Break
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x01                                             // .
                                        })
                                        Break
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == One))
                            {
                                While (One)
                                {
                                    Name (_T_3, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_3 = ToInteger (Arg3)
                                    If ((_T_3 == Zero))
                                    {
                                        Return (RTM0) /* \_SB_.UCS0.RTM0 */
                                    }
                                    ElseIf ((_T_3 == One))
                                    {
                                        Return (RTM1) /* \_SB_.UCS0.RTM1 */
                                    }
                                    ElseIf ((_T_3 == 0x02))
                                    {
                                        Return (RTM2) /* \_SB_.UCS0.RTM2 */
                                    }

                                    Break
                                }
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                EUPD = UPDT /* \_SB_.UCS0.UPDT */
                                Notify (\_SB.PMGK, 0xF0) // Hardware-Specific
                                Return (Zero)
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                EUPD = UPDT /* \_SB_.UCS0.UPDT */
                                Notify (\_SB.PMGK, 0xF1) // Hardware-Specific
                                Return (Zero)
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                EUPD = UPDT /* \_SB_.UCS0.UPDT */
                                Notify (\_SB.PMGK, (0xF4 + ToInteger (Arg3)))
                                Return (Zero)
                            }

                            Break
                        }
                    }

                    Break
                }
            }

            OperationRegion (USBC, SystemMemory, 0x81F20040, 0x2F)
            Field (USBC, ByteAcc, Lock, Preserve)
            {
                INFO,   8, 
                UPDT,   8, 
                CCX0,   8, 
                MUX0,   8, 
                RES0,   8, 
                VID0,   16, 
                SID0,   16, 
                SVS0,   64, 
                CCX1,   8, 
                MUX1,   8, 
                RES1,   8, 
                VID1,   16, 
                SID1,   16, 
                SVS1,   64, 
                CCX2,   8, 
                MUX2,   8, 
                RES2,   8, 
                VID2,   16, 
                SID2,   16, 
                SVS2,   64
            }

            Name (PORT, Buffer (0x2F)
            {
                 0x03                                             // .
            })
            CreateByteField (PORT, Zero, EINF)
            CreateByteField (PORT, One, EUPD)
            CreateByteField (PORT, 0x02, ECC0)
            CreateByteField (PORT, 0x03, EMX0)
            CreateWordField (PORT, 0x05, EVI0)
            CreateWordField (PORT, 0x07, ESI0)
            CreateQWordField (PORT, 0x09, ESV0)
            CreateByteField (PORT, 0x11, ECC1)
            CreateByteField (PORT, 0x12, EMX1)
            CreateWordField (PORT, 0x14, EVI1)
            CreateWordField (PORT, 0x16, ESI1)
            CreateQWordField (PORT, 0x18, ESV1)
            CreateByteField (PORT, 0x20, ECC2)
            CreateByteField (PORT, 0x21, EMX2)
            CreateWordField (PORT, 0x23, EVI2)
            CreateWordField (PORT, 0x25, ESI2)
            CreateQWordField (PORT, 0x27, ESV2)
            Method (USBW, 0, NotSerialized)
            {
                EUPD = UPDT /* \_SB_.UCS0.UPDT */
                Notify (\_SB.PMGK, 0xF0) // Hardware-Specific
                Return (Zero)
            }

            Method (USBR, 0, NotSerialized)
            {
                INFO = EINF /* \_SB_.UCS0.EINF */
                UPDT = EUPD /* \_SB_.UCS0.EUPD */
                CCX0 = ECC0 /* \_SB_.UCS0.ECC0 */
                MUX0 = EMX0 /* \_SB_.UCS0.EMX0 */
                RES0 = Zero
                VID0 = EVI0 /* \_SB_.UCS0.EVI0 */
                SID0 = ESI0 /* \_SB_.UCS0.ESI0 */
                SVS0 = ESV0 /* \_SB_.UCS0.ESV0 */
                CCX1 = ECC1 /* \_SB_.UCS0.ECC1 */
                MUX1 = EMX1 /* \_SB_.UCS0.EMX1 */
                RES1 = Zero
                VID1 = EVI1 /* \_SB_.UCS0.EVI1 */
                SID1 = ESI1 /* \_SB_.UCS0.ESI1 */
                SVS1 = ESV1 /* \_SB_.UCS0.ESV1 */
                CCX2 = ECC2 /* \_SB_.UCS0.ECC2 */
                MUX2 = EMX2 /* \_SB_.UCS0.EMX2 */
                RES2 = Zero
                VID2 = EVI2 /* \_SB_.UCS0.EVI2 */
                SID2 = ESI2 /* \_SB_.UCS0.ESI2 */
                SVS2 = ESV2 /* \_SB_.UCS0.ESV2 */
                Notify (UCS0, 0xA0) // Device-Specific
                Return (Zero)
            }
        }

        Scope (\_SB.UCS0)
        {
            Name (RTM0, Buffer (0x07)
            {
                "PS8830"
            })
            Name (RTM1, Buffer (0x07)
            {
                "PS8830"
            })
            Name (RTM2, Buffer (0x07)
            {
                "PS8830"
            })
        }

        Device (AGR0)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Name (_PUR, Package (0x02)  // _PUR: Processor Utilization Request
            {
                One, 
                Zero
            })
            Method (_OST, 3, NotSerialized)  // _OST: OSPM Status Indication
            {
                \_SB.PEP0.ROST = Arg2
            }
        }

        ThermalZone (TZ0)
        {
            Name (_HID, "QCOM0C58")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ0.TTSP)
            }
        }

        ThermalZone (TZ1)
        {
            Name (_HID, "QCOM0C58")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ1.TPSV)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ1.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ1.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ1.TTC2)
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ1.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ2)
        {
            Name (_HID, "QCOM0C59")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ2.TTSP)
            }
        }

        ThermalZone (TZ3)
        {
            Name (_HID, "QCOM0C59")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ3.TPSV)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ3.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ3.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ3.TTC2)
            }

            Name (TTSP, One)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ3.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ4)
        {
            Name (_HID, "QCOM0D01")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }

            Name (TTSP, One)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ4.TTSP)
            }
        }

        ThermalZone (TZ5)
        {
            Name (_HID, "QCOM0D01")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ5.TPSV)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ5.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ5.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ5.TTC2)
            }

            Name (TTSP, One)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ5.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ6)
        {
            Name (_HID, "QCOM0C91")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.GPU0
            })
            Name (TPSV, 0x0E60)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ6.TPSV)
            }

            Name (TTC1, One)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ6.TTC1)
            }

            Name (TTC2, 0x02)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ6.TTC2)
            }

            Name (TTSP, 0x02)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ6.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ11)
        {
            Name (_HID, "QCOM0CBF")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.CSW0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ11.TPSV)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ11.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ11.TTC2)
            }

            Name (TTSP, 0x32)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ11.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ15)
        {
            Name (_HID, "QCOM0CF2")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ16)
        {
            Name (_HID, "QCOM0CF3")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x0C)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS0.CPU0, 
                \_SB.SYSM.CLS0.CPU1, 
                \_SB.SYSM.CLS0.CPU2, 
                \_SB.SYSM.CLS0.CPU3, 
                \_SB.SYSM.CLS1.CPU0, 
                \_SB.SYSM.CLS1.CPU1, 
                \_SB.SYSM.CLS1.CPU2, 
                \_SB.SYSM.CLS1.CPU3, 
                \_SB.SYSM.CLS2.CPU0, 
                \_SB.SYSM.CLS2.CPU1, 
                \_SB.SYSM.CLS2.CPU2, 
                \_SB.SYSM.CLS2.CPU3
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ17)
        {
            Name (_HID, "QCOM0CF4")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x04)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS0.CPU0, 
                \_SB.SYSM.CLS0.CPU1, 
                \_SB.SYSM.CLS0.CPU2, 
                \_SB.SYSM.CLS0.CPU3
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((\_SB.SDFE == 0x88))
                {
                    If ((\_SB.SJTG == 0x102690E1))
                    {
                        Return (ResourceTemplate ()
                        {
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0100
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0140
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0180
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0192
                                }
                        })
                    }
                    Else
                    {
                        Return (ResourceTemplate ()
                        {
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0100
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0140
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0180
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x0192
                                }
                            GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                                "\\_SB.PM01", 0x00, ResourceConsumer, ,
                                )
                                {   // Pin list
                                    0x01C0
                                }
                        })
                    }
                }

                If ((\_SB.SDFE == 0x9A))
                {
                    Return (ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                            "\\_SB.PM01", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0100
                            }
                        GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                            "\\_SB.PM01", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0140
                            }
                        GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                            "\\_SB.PM01", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0180
                            }
                        GpioInt (Edge, ActiveHigh, Exclusive, PullUp, 0x0000,
                            "\\_SB.PM01", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0192
                            }
                    })
                }
            }
        }

        ThermalZone (TZ18)
        {
            Name (_HID, "QCOM0CF5")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x04)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS1.CPU0, 
                \_SB.SYSM.CLS1.CPU1, 
                \_SB.SYSM.CLS1.CPU2, 
                \_SB.SYSM.CLS1.CPU3
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ19)
        {
            Name (_HID, "QCOM0CF6")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x04)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS2.CPU0, 
                \_SB.SYSM.CLS2.CPU1, 
                \_SB.SYSM.CLS2.CPU2, 
                \_SB.SYSM.CLS2.CPU3
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ20)
        {
            Name (_HID, "QCOM0CF7")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.GPU0
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ21)
        {
            Name (_HID, "QCOM0CF8")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.CSW0
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ22)
        {
            Name (_HID, "QCOM0CFB")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MBCL
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ23)
        {
            Name (_HID, "QCOM0CF9")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.MSKN
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ24)
        {
            Name (_HID, "QCOM0CFC")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.WLTM
            })
            Alias (\_SB.PHRV, _HRV)
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.PMIC
                })
            }
        }

        ThermalZone (TZ98)
        {
            Name (_HID, "QCOM0C5A")  // _HID: Hardware ID
            Name (_STR, Unicode ("SoCTj Thermal-zone for Fan Control"))  // _STR: Description String
            Name (_UID, One)  // _UID: Unique ID
            Name (TAC0, 0x0D84)
            Method (_AC0, 0, NotSerialized)  // _ACx: Active Cooling, x=0-9
            {
                Return (\_SB.TZ98.TAC0)
            }

            Name (_AL0, Package (0x01)  // _ALx: Active List, x=0-9
            {
                \_SB.FECI
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.FECI
                })
            }
        }

        ThermalZone (TZ99)
        {
            Name (_HID, "QCOM0C5A")  // _HID: Hardware ID
            Name (_UID, 0x64)  // _UID: Unique ID
            Name (_TZD, Package (0x12)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS0.CPU0, 
                \_SB.SYSM.CLS0.CPU1, 
                \_SB.SYSM.CLS0.CPU2, 
                \_SB.SYSM.CLS0.CPU3, 
                \_SB.SYSM.CLS1.CPU0, 
                \_SB.SYSM.CLS1.CPU1, 
                \_SB.SYSM.CLS1.CPU2, 
                \_SB.SYSM.CLS1.CPU3, 
                \_SB.SYSM.CLS2.CPU0, 
                \_SB.SYSM.CLS2.CPU1, 
                \_SB.SYSM.CLS2.CPU2, 
                \_SB.SYSM.CLS2.CPU3, 
                \_SB.PEP0, 
                \_SB.GPU0, 
                \_SB.WLTM, 
                \_SB.PMBM, 
                \_SB.CSW0, 
                \_SB.GPU0.MON0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ99.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ99.TCRT)
            }

            Name (TTC1, 0x04)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ99.TTC1)
            }

            Name (TTC2, 0x03)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ99.TTC2)
            }

            Name (TTSP, 0x0A)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ99.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.PEP0
                })
            }
        }

        ThermalZone (TZ31)
        {
            Name (_HID, "QCOM0C5E")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ31.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ31.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ31.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ31.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ31.TTC2)
            }

            Name (TTSP, 0x14)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ31.TTSP)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ31._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x1E                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x02
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 31 while loop"
                                    Debug = CNTR /* \_SB_.TZ31._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ31._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ31._DSM.STAT */
                            }
                            ElseIf ((_T_1 == 0x03))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                Name (BYT0, 0xFF)
                                BYT0 = (DerefOf (Arg3 [Zero]) & 0xFF)
                                Debug = BYT0 /* \_SB_.TZ31._DSM.BYT0 */
                                If ((BYT0 == Zero))
                                {
                                    \_SB.TZ31.TPSV = 0x0C9E
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == One))
                                {
                                    \_SB.TZ31.TPSV = 0x0CA8
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == 0x02))
                                {
                                    \_SB.TZ31.TPSV = 0x0CB2
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == 0x03))
                                {
                                    \_SB.TZ31.TPSV = 0x0CBC
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == 0x04))
                                {
                                    \_SB.TZ31.TPSV = 0x0CC6
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == 0x05))
                                {
                                    \_SB.TZ31.TPSV = 0x0CD0
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                ElseIf ((BYT0 == 0x06))
                                {
                                    \_SB.TZ31.TPSV = 0x0CDA
                                    Notify (\_SB.TZ31, 0x81) // Thermal Trip Point Change
                                }
                                Else
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ32)
        {
            Name (_HID, "QCOM0C5F")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ32.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ32.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ32.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ32.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ32.TTC2)
            }

            Name (TTSP, 0x14)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ32.TTSP)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ32._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x03
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 32 while loop"
                                    Debug = CNTR /* \_SB_.TZ32._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ32._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ32._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ33)
        {
            Name (_HID, "QCOM0C65")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ33.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ33.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ33.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ33.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ33.TTC2)
            }

            Name (TTSP, 0x14)
            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ33.TTSP)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ33._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x04
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 33 while loop"
                                    Debug = CNTR /* \_SB_.TZ33._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ33._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ33._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ34)
        {
            Name (_HID, "QCOM0C61")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ34.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ34.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ34.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ34.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ34.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ34.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ34._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x05
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 34 while loop"
                                    Debug = CNTR /* \_SB_.TZ34._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ34._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ34._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ71)
        {
            Name (_HID, "QCOM0C60")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ71.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ71.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ71.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ71.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ71.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ71.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ71._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x06
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 35 while loop"
                                    Debug = CNTR /* \_SB_.TZ71._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ71._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ71._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ72)
        {
            Name (_HID, "QCOM0C62")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ72.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ72.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ72.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ72.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ72.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ72.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ72._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x07
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 36 while loop"
                                    Debug = CNTR /* \_SB_.TZ72._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ72._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ72._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ73)
        {
            Name (_HID, "QCOM0C63")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ73.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ73.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ73.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ73.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ73.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ73.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                While (One)
                {
                    Name (_T_0, Buffer (0x01)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    {
                         0x00                                             // .
                    })
                    CopyObject (ToBuffer (Arg0), _T_0) /* \_SB_.TZ73._DSM._T_0 */
                    If ((_T_0 == ToUUID ("1585ba02-a75a-4cca-9e31-9b421001d9bb") /* Unknown UUID */))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg2)
                            If ((_T_1 == Zero))
                            {
                                While (One)
                                {
                                    Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                                    _T_2 = ToInteger (Arg1)
                                    If ((_T_2 == Zero))
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x06                                             // .
                                        })
                                    }
                                    Else
                                    {
                                        Return (Buffer (One)
                                        {
                                             0x00                                             // .
                                        })
                                    }

                                    Break
                                }

                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }
                            ElseIf ((_T_1 == 0x02))
                            {
                                Name (STAT, Zero)
                                Name (CNTR, Zero)
                                Name (CNTM, 0x05)
                                Arg3 [One] = 0x08
                                While ((CNTR < CNTM))
                                {
                                    Debug = "TZ 37 while loop"
                                    Debug = CNTR /* \_SB_.TZ73._DSM.CNTR */
                                    Debug = CNTM /* \_SB_.TZ73._DSM.CNTM */
                                    CNTR++
                                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF01, Arg3)
                                    If ((STAT == Zero))
                                    {
                                        Break
                                    }

                                    Sleep (0x32)
                                }

                                Return (STAT) /* \_SB_.TZ73._DSM.STAT */
                            }
                            Else
                            {
                                Return (Buffer (One)
                                {
                                     0x00                                             // .
                                })
                            }

                            Break
                        }
                    }
                    Else
                    {
                        Return (Buffer (One)
                        {
                             0x00                                             // .
                        })
                    }

                    Break
                }
            }
        }

        ThermalZone (TZ74)
        {
            Name (_HID, "QCOM0C64")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x02)
                {
                    \_SB.PEP0, 
                    \_SB.ADC1
                })
            }

            Name (_TZD, Package (0x02)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0, 
                \_SB.GPU0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ74.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ74.TCRT)
            }

            Name (TMTL, Zero)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ74.TMTL)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ74.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ74.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ74.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ39)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                If (\_SB.TZ39.GCRT)
                {
                    \_SB.TZ39.GCRT = Zero
                    Return (CTOK (0x7F))
                }
                Else
                {
                    While ((CNTR < CNTM))
                    {
                        Debug = "TZ 39 while loop"
                        Debug = CNTR /* \_SB_.TZ39.CNTR */
                        Debug = CNTM /* \_SB_.TZ39.CNTM */
                        CNTR++
                        TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, One)
                        If ((TEMP != 0xFF))
                        {
                            Break
                        }

                        TEMP = Zero
                        Sleep (0x32)
                        If ((TEMP == 0x80))
                        {
                            TEMP = 0x30
                        }
                    }

                    CNTR = Zero
                    TEMP = ((TEMP + 0x0111) * 0x0A)
                    Debug = "Tz 39 _TMP : Temperature = "
                    Debug = TEMP /* \_SB_.TZ39.TEMP */
                    Return (TEMP) /* \_SB_.TZ39.TEMP */
                }
            }

            Name (GCRT, Zero)
            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ39.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ39.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ39.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ39.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ39.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ40)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Name (THGP, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Name (THSF, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                While ((CNTR < CNTM))
                {
                    Debug = "TZ 40 while loop"
                    Debug = CNTR /* \_SB_.TZ40.CNTR */
                    Debug = CNTM /* \_SB_.TZ40.CNTM */
                    CNTR++
                    TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, 0x02)
                    If ((TEMP != 0xFF))
                    {
                        Break
                    }

                    TEMP = Zero
                    Sleep (0x32)
                    If ((TEMP == 0x80))
                    {
                        TEMP = 0x30
                    }
                }

                CNTR = Zero
                TEMP = ((TEMP + 0x0111) * 0x0A)
                Debug = "Tz 40 _TMP : Temperature = "
                Debug = TEMP /* \_SB_.TZ40.TEMP */
                If ((THSF == One))
                {
                    THSF = Zero
                    Debug = "Set Thresholds for TZ 40"
                    THGP [Zero] = One
                    THGP [One] = 0x02
                    THGP [0x02] = ((((((\_SB.TZ40.TCRT / 0x0A
                        ) - 0x0111) << 0x18) + (((\_SB.TZ40.THOT / 0x0A) - 0x0111) << 
                        0x10)) + (((\_SB.TZ40.TCR3 / 0x0A) - 0x0111) << 0x08)
                        ) + ((\_SB.TZ40.TPSV / 0x0A) - 0x0111))
                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF10, THGP)
                }

                Return (TEMP) /* \_SB_.TZ40.TEMP */
            }

            Name (_TZD, Package (0x0D)  // _TZD: Thermal Zone Devices
            {
                \_SB.SYSM.CLS0.CPU0, 
                \_SB.SYSM.CLS0.CPU1, 
                \_SB.SYSM.CLS0.CPU2, 
                \_SB.SYSM.CLS0.CPU3, 
                \_SB.SYSM.CLS1.CPU0, 
                \_SB.SYSM.CLS1.CPU1, 
                \_SB.SYSM.CLS1.CPU2, 
                \_SB.SYSM.CLS1.CPU3, 
                \_SB.SYSM.CLS2.CPU0, 
                \_SB.SYSM.CLS2.CPU1, 
                \_SB.SYSM.CLS2.CPU2, 
                \_SB.SYSM.CLS2.CPU3, 
                \_SB.GPU0
            })
            Name (TMTL, 0x32)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ40.TMTL)
            }

            Name (TPSV, 0x0CEE)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ40.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ40.TCRT)
            }

            Name (TTC1, 0x03)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ40.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ40.TTC2)
            }

            Name (TTSP, 0x28)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ40.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Name (THOT, 0x0D16)
            Name (TCR3, 0x0CD0)
        }

        ThermalZone (TZ41)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                While ((CNTR < CNTM))
                {
                    Debug = "TZ 41 while loop"
                    Debug = CNTR /* \_SB_.TZ41.CNTR */
                    Debug = CNTM /* \_SB_.TZ41.CNTM */
                    CNTR++
                    TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, 0x03)
                    If ((TEMP != 0xFF))
                    {
                        Break
                    }

                    TEMP = Zero
                    Sleep (0x32)
                    If ((TEMP == 0x80))
                    {
                        TEMP = 0x30
                    }
                }

                CNTR = Zero
                TEMP = ((TEMP + 0x0111) * 0x0A)
                Debug = "Tz 41 _TMP : Temperature = "
                Debug = TEMP /* \_SB_.TZ41.TEMP */
                Return (TEMP) /* \_SB_.TZ41.TEMP */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ41.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ41.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ41.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ41.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ41.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ42)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Name (THGP, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Name (THSF, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                While ((CNTR < CNTM))
                {
                    Debug = "TZ 42 while loop"
                    Debug = CNTR /* \_SB_.TZ42.CNTR */
                    Debug = CNTM /* \_SB_.TZ42.CNTM */
                    CNTR++
                    TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, 0x04)
                    If ((TEMP != 0xFF))
                    {
                        Break
                    }

                    TEMP = Zero
                    Sleep (0x32)
                    If ((TEMP == 0x80))
                    {
                        TEMP = 0x30
                    }
                }

                CNTR = Zero
                TEMP = ((TEMP + 0x0111) * 0x0A)
                Debug = "Tz 42 _TMP : Temperature = "
                Debug = TEMP /* \_SB_.TZ42.TEMP */
                If ((THSF == One))
                {
                    THSF = Zero
                    Debug = "Set Thresholds for TZ 42"
                    THGP [Zero] = One
                    THGP [One] = 0x04
                    THGP [0x02] = ((((((\_SB.TZ42.TCRT / 0x0A
                        ) - 0x0111) << 0x18) + (((\_SB.TZ42.THOT / 0x0A) - 0x0111) << 
                        0x10)) + (((\_SB.TZ42.TCR3 / 0x0A) - 0x0111) << 0x08)
                        ) + ((\_SB.TZ42.TPSV / 0x0A) - 0x0111))
                    STAT = \_SB.I2C6._DSM (\_SB.I2C6.DSMF, Zero, \_SB.I2C6.FF10, THGP)
                }

                Return (TEMP) /* \_SB_.TZ42.TEMP */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PMBM
            })
            Name (TMTL, 0x14)
            Method (_MTL, 0, NotSerialized)  // _MTL: Minimum Throttle Limit
            {
                Return (\_SB.TZ42.TMTL)
            }

            Name (TPSV, 0x0D02)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ42.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ42.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ42.TTC1)
            }

            Name (TTC2, 0x14)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ42.TTC2)
            }

            Name (TTSP, 0x1E)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ42.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
            Name (THOT, 0x0D16)
            Name (TCR3, 0x0CD0)
        }

        ThermalZone (TZ43)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                While ((CNTR < CNTM))
                {
                    Debug = "TZ 43 while loop"
                    Debug = CNTR /* \_SB_.TZ43.CNTR */
                    Debug = CNTM /* \_SB_.TZ43.CNTM */
                    CNTR++
                    TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, 0x05)
                    If ((TEMP != 0xFF))
                    {
                        Break
                    }

                    TEMP = Zero
                    Sleep (0x32)
                    If ((TEMP == 0x80))
                    {
                        TEMP = 0x30
                    }
                }

                CNTR = Zero
                TEMP = ((TEMP + 0x0111) * 0x0A)
                Debug = "Tz 43 _TMP : Temperature = "
                Debug = TEMP /* \_SB_.TZ43.TEMP */
                Return (TEMP) /* \_SB_.TZ43.TEMP */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ43.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ43.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ43.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ43.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ43.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        ThermalZone (TZ44)
        {
            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                Return (Package (0x01)
                {
                    \_SB.I2C6
                })
            }

            Name (CNTR, Zero)
            Name (CNTM, 0x05)
            Name (TEMP, Zero)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                While ((CNTR < CNTM))
                {
                    Debug = "TZ 44 while loop"
                    Debug = CNTR /* \_SB_.TZ44.CNTR */
                    Debug = CNTM /* \_SB_.TZ44.CNTM */
                    CNTR++
                    TEMP = \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF06, 0x06)
                    If ((TEMP != 0xFF))
                    {
                        Break
                    }

                    TEMP = Zero
                    Sleep (0x32)
                    If ((TEMP == 0x80))
                    {
                        TEMP = 0x30
                    }
                }

                CNTR = Zero
                TEMP = ((TEMP + 0x0111) * 0x0A)
                Debug = "Tz 44 _TMP : Temperature = "
                Debug = TEMP /* \_SB_.TZ44.TEMP */
                Return (TEMP) /* \_SB_.TZ44.TEMP */
            }

            Name (_TZD, Package (0x01)  // _TZD: Thermal Zone Devices
            {
                \_SB.PEP0
            })
            Name (TPSV, 0x0EC4)
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Return (\_SB.TZ44.TPSV)
            }

            Name (TCRT, 0x0F28)
            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Return (\_SB.TZ44.TCRT)
            }

            Name (TTC1, Zero)
            Method (_TC1, 0, NotSerialized)  // _TC1: Thermal Constant 1
            {
                Return (\_SB.TZ44.TTC1)
            }

            Name (TTC2, One)
            Method (_TC2, 0, NotSerialized)  // _TC2: Thermal Constant 2
            {
                Return (\_SB.TZ44.TTC2)
            }

            Name (TTSP, 0x14)
            Method (_TSP, 0, NotSerialized)  // _TSP: Thermal Sampling Period
            {
                Return (\_SB.TZ44.TTSP)
            }

            Name (_TZP, Zero)  // _TZP: Thermal Zone Polling
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q40, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Local1 = \_SB.I2C7.ECRD (0x8A)
                Local2 = \_SB.I2C7.ECRD (0x89)
                If ((Local2 & 0x76))
                {
                    \_SB.I2C7.HKEY.DYTC (0x001F4001)
                }
                Else
                {
                    \_SB.I2C7.HKEY.DYTC (0x000F4001)
                }

                If (Local1)
                {
                    \_SB.TZ39.GCRT = One
                    Notify (\_SB.TZ39, 0x80) // Thermal Status Change
                }
            }
        }

        Name (HWNH, Zero)
        Device (HWN1)
        {
            Name (_HID, "QCOM0C69")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((\_SB.HWNH == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.PMIC
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveHigh, Exclusive, PullNone, 0x0000,
                        "\\_SB.PM02", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0E00
                        }
                })
                Return (RBUF) /* \_SB_.HWN1._CRS.RBUF */
            }

            Method (HAPI, 0, NotSerialized)
            {
                Name (CFG0, Package (0x03)
                {
                    One, 
                    One, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN1.HAPI.CFG0 */
            }

            Method (HAPC, 0, NotSerialized)
            {
                Name (CFG0, Package (0x16)
                {
                    Zero, 
                    0x0984, 
                    Zero, 
                    One, 
                    One, 
                    One, 
                    One, 
                    Zero, 
                    0x04, 
                    One, 
                    0x03, 
                    0x14, 
                    One, 
                    0x03, 
                    Zero, 
                    Zero, 
                    0x06, 
                    Zero, 
                    Zero, 
                    0x0535, 
                    0x03, 
                    One
                })
                Return (CFG0) /* \_SB_.HWN1.HAPC.CFG0 */
            }
        }

        Device (BTNS)
        {
            Name (_HID, "ACPI0011" /* Generic Buttons Device */)  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveBoth, ExclusiveAndWake, PullDown, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0007
                        }
                    GpioInt (Edge, ActiveBoth, Exclusive, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x00D5
                        }
                    GpioInt (Edge, ActiveBoth, Exclusive, PullDown, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0006
                        }
                })
                Return (RBUF) /* \_SB_.BTNS._CRS.RBUF */
            }

            Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
            {
                ToUUID ("fa6bd625-9ce8-470d-a2c7-b3ca36c4282e") /* Generic Buttons Device */, 
                Package (0x04)
                {
                    Package (0x05)
                    {
                        Zero, 
                        One, 
                        Zero, 
                        One, 
                        0x0D
                    }, 

                    Package (0x05)
                    {
                        One, 
                        Zero, 
                        One, 
                        One, 
                        0x81
                    }, 

                    Package (0x05)
                    {
                        One, 
                        One, 
                        One, 
                        0x0C, 
                        0xE9
                    }, 

                    Package (0x05)
                    {
                        One, 
                        0x02, 
                        One, 
                        0x0C, 
                        0xEA
                    }
                }
            })
        }

        Device (QDCI)
        {
            Name (_DEP, Package (One)  // _DEP: Dependencies
            {
                \_SB.GLNK
            })
            Name (_HID, "QCOM0C12")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (Zero)
            }
        }

        Device (BTAT)
        {
            Name (_HID, "QCOM0D04")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((HPDD & 0x40) == 0x40))
                {
                    Return (Zero)
                }

                Return (0x0F)
            }
        }

        Device (BTH0)
        {
            Name (_HID, "QCOM0C6B")  // _HID: Hardware ID
            Alias (\_SB.PSUB, _SUB)
            Name (_DEP, Package (0x03)  // _DEP: Dependencies
            {
                \_SB.PEP0, 
                \_SB.PMIC, 
                \_SB.UR15
            })
            Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
            {
                Zero, 
                Zero
            })
            Name (_S4W, 0x02)  // _S4W: S4 Device Wake State
            Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (PBUF, ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.UR15",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDown, 0x0000, 0x0000, IoRestrictionNone,
                        "\\_SB.GIO0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0074
                        }
                })
                Return (PBUF) /* \_SB_.BTH0._CRS.PBUF */
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("07be7e46-14e3-49aa-946e-d5d21bf9beec") /* Unknown UUID */))
                {
                    While (One)
                    {
                        Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                        _T_0 = ToInteger (Arg2)
                        If ((_T_0 == Zero))
                        {
                            Return (0x1001)
                        }
                        ElseIf ((_T_0 == One))
                        {
                            Name (CNVM, "default")
                            Return (CNVM) /* \_SB_.BTH0._DSM.CNVM */
                        }
                        ElseIf ((_T_0 == 0x02))
                        {
                            Name (DIBF, Zero)
                            If (((WFCC & 0x02) == 0x02))
                            {
                                Return (One)
                            }
                            Else
                            {
                                Return (DIBF) /* \_SB_.BTH0._DSM.DIBF */
                            }
                        }
                        ElseIf ((_T_0 == 0x03))
                        {
                            Name (DQHS, Zero)
                            If (((WFCC & 0x04) == 0x04))
                            {
                                Return (One)
                            }
                            Else
                            {
                                Return (DQHS) /* \_SB_.BTH0._DSM.DQHS */
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }

                        Break
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (ADC1)
        {
            Name (_DEP, Package (0x02)  // _DEP: Dependencies
            {
                \_SB.SPMI, 
                \_SB.PMIC
            })
            Name (_HID, "QCOM0C11")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Alias (\_SB.PSUB, _SUB)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (INTB, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x02
                        })
                        {   // Pin list
                            0x009F
                        }
                    GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.PM01", 0x00, ResourceConsumer, ,
                        RawDataBuffer (0x01)  // Vendor Data
                        {
                            0x02
                        })
                        {   // Pin list
                            0x00A0
                        }
                })
                Name (NAM, Buffer (0x0A)
                {
                    "\\_SB.SPMI"
                })
                Name (VUSR, Buffer (0x0C)
                {
                    /* 0000 */  0x8E, 0x13, 0x00, 0x01, 0x00, 0xC1, 0x02, 0x00,  // ........
                    /* 0008 */  0x90, 0x01, 0x00, 0x00                           // ....
                })
                Name (VBTM, Buffer (0x0C)
                {
                    /* 0000 */  0x8E, 0x13, 0x00, 0x01, 0x00, 0xC1, 0x02, 0x00,  // ........
                    /* 0008 */  0x91, 0x01, 0x00, 0x00                           // ....
                })
                Concatenate (VUSR, NAM, Local1)
                Concatenate (VBTM, NAM, Local2)
                Concatenate (Local1, Local2, Local3)
                Concatenate (Local3, INTB, Local0)
                Return (Local0)
            }
        }

        Name (SUPP, Zero)
        Name (CTRL, Zero)
        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, Zero, CDW1)
            CreateDWordField (Arg3, 0x04, CDW2)
            CreateDWordField (Arg3, 0x08, CDW3)
            If ((Arg0 == ToUUID ("23a0d13a-26ab-486c-9c5f-0ffa525a575a") /* USB4 Capabilities */))
            {
                SUPP = CDW2 /* \_SB_._OSC.CDW2 */
                CTRL = CDW3 /* \_SB_._OSC.CDW3 */
                CTRL &= 0x0F
                If ((Arg1 != One))
                {
                    CDW1 |= 0x08
                }

                If ((CDW3 != CTRL))
                {
                    CDW1 |= 0x10
                }

                CDW3 = CTRL /* \_SB_.CTRL */
                Return (Arg3)
            }
            ElseIf ((Arg0 == ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {
                CTRL = CDW2 /* \_SB_._OSC.CDW2 */
                If (~(CDW1 & One))
                {
                    If ((CTRL & 0x12)){}
                    If ((CTRL & 0x00080000))
                    {
                        Debug = "OS supports battery charge limiting"
                    }
                }

                If ((Arg1 != One))
                {
                    CDW1 |= 0x08
                }

                CDW2 = CTRL /* \_SB_.CTRL */
                Return (Arg3)
            }
            Else
            {
                CDW1 |= 0x04
                Return (Arg3)
            }
        }
    }

    Scope (\)
    {
        Method (ADBG, 1, Serialized)
        {
            Return (Zero)
        }
    }

    Method (SCMP, 2, NotSerialized)
    {
        Local0 = SizeOf (Arg0)
        If ((Local0 != SizeOf (Arg1)))
        {
            Return (One)
        }

        Local0++
        Name (STR1, Buffer (Local0){})
        Name (STR2, Buffer (Local0){})
        STR1 = Arg0
        STR2 = Arg1
        Local1 = Zero
        While ((Local1 < Local0))
        {
            Local2 = DerefOf (STR1 [Local1])
            Local3 = DerefOf (STR2 [Local1])
            If ((Local2 != Local3))
            {
                Return (One)
            }

            Local1++
        }

        Return (Zero)
    }

    Method (GECB, 3, NotSerialized)
    {
        Local0 = \_SB.I2C7.ECRD (Arg0)
        Local1 = Zero
        While (Arg2)
        {
            Local1 <<= One
            Local1 |= One
            Arg2 -= One
        }

        Local1 <<= Arg1
        Local0 &= Local1
        Local0 >>= Arg1
        Return (Local0)
    }

    Method (WECB, 4, NotSerialized)
    {
        Local0 = \_SB.I2C7.ECRD (Arg0)
        Local1 = Zero
        While (Arg2)
        {
            Local1 <<= One
            Local1 |= One
            Arg2 -= One
        }

        Arg3 &= Local1
        Local0 &= ~Local1 <<= Arg1
        Arg3 <<= Arg1
        Local0 |= Arg3
        \_SB.I2C7.ECWR (Arg0, Local0)
    }

    Method (I2CM, 3, Serialized)
    {
        While (One)
        {
            Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
            _T_0 = ToInteger (Arg0)
            If ((_T_0 == One))
            {
                Name (IIC1, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC1, 0x2C, DAD1)
                CreateDWordField (IIC1, 0x28, DSP1)
                DAD1 = Arg1
                DSP1 = Arg2
                Return (IIC1) /* \I2CM.IIC1 */
            }
            ElseIf ((_T_0 == 0x02))
            {
                Name (IIC2, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C2",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC2, 0x2C, DAD2)
                CreateDWordField (IIC2, 0x28, DSP2)
                DAD2 = Arg1
                DSP2 = Arg2
                Return (IIC2) /* \I2CM.IIC2 */
            }
            ElseIf ((_T_0 == 0x03))
            {
                Name (IIC3, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C3",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC3, 0x2C, DAD3)
                CreateDWordField (IIC3, 0x28, DSP3)
                DAD3 = Arg1
                DSP3 = Arg2
                Return (IIC3) /* \I2CM.IIC3 */
            }
            ElseIf ((_T_0 == 0x04))
            {
                Name (IIC4, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C4",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC4, 0x2C, DAD4)
                CreateDWordField (IIC4, 0x28, DSP4)
                DAD4 = Arg1
                DSP4 = Arg2
                Return (IIC4) /* \I2CM.IIC4 */
            }
            ElseIf ((_T_0 == 0x05))
            {
                Name (IIC5, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.I2C5",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IIC5, 0x2C, DAD5)
                CreateDWordField (IIC5, 0x28, DSP5)
                DAD5 = Arg1
                DSP5 = Arg2
                Return (IIC5) /* \I2CM.IIC5 */
            }
            ElseIf ((_T_0 == 0x16))
            {
                Name (IC22, ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.IC22",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })
                CreateWordField (IC22, 0x2C, DA22)
                CreateDWordField (IC22, 0x28, DS22)
                DA22 = Arg1
                DS22 = Arg2
                Return (IC22) /* \I2CM.IC22 */
            }
            Else
            {
                Return (Zero)
            }

            Break
        }
    }

    Name (HIDG, ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */)
    Method (HIDD, 5, Serialized)
    {
        If ((Arg0 == HIDG))
        {
            If ((Arg2 == Zero))
            {
                If ((Arg1 == One))
                {
                    Return (Buffer (One)
                    {
                         0x03                                             // .
                    })
                }
            }

            If ((Arg2 == One))
            {
                Return (Arg4)
            }
        }

        Return (Buffer (One)
        {
             0x00                                             // .
        })
    }

    Method (CTOK, 1, Serialized)
    {
        Return (((Arg0 * 0x0A) + 0x0AAC))
    }

    Method (GGIV, 1, Serialized)
    {
        Local0 = (0x0F100000 + (Arg0 * 0x1000))
        OperationRegion (PDW0, SystemMemory, Local0, 0x20)
        Field (PDW0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            TEMP,   32
        }

        Local1 = (TEMP & One)
        Return (Local1)
    }

    Method (SGOV, 2, Serialized)
    {
        Local0 = (0x0F100000 + (Arg0 * 0x1000))
        OperationRegion (PDW0, SystemMemory, Local0, 0x20)
        Field (PDW0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            TEMP,   32
        }

        If ((Arg1 == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = One
        }

        TEMP = (Local0 << One)
    }

    Scope (\_SB)
    {
        Name (RID, Zero)
        Device (TTZE)
        {
            Name (_HID, EisaId ("WIS0A00"))  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (WMI1)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_WDG, Buffer (0x01E0)
            {
                /* 0000 */  0x0E, 0x23, 0xF5, 0x51, 0x77, 0x96, 0xCD, 0x46,  // .#.Qw..F
                /* 0008 */  0xA1, 0xCF, 0xC0, 0xB2, 0x3E, 0xE3, 0x4D, 0xB7,  // ....>.M.
                /* 0010 */  0x41, 0x30, 0xFF, 0x05, 0x64, 0x9A, 0x47, 0x98,  // A0..d.G.
                /* 0018 */  0xF5, 0x33, 0x33, 0x4E, 0xA7, 0x07, 0x8E, 0x25,  // .33N...%
                /* 0020 */  0x1E, 0xBB, 0xC3, 0xA1, 0x41, 0x31, 0x01, 0x06,  // ....A1..
                /* 0028 */  0xEF, 0x54, 0x4B, 0x6A, 0xED, 0xA5, 0x33, 0x4D,  // .TKj..3M
                /* 0030 */  0x94, 0x55, 0xB0, 0xD9, 0xB4, 0x8D, 0xF4, 0xB3,  // .U......
                /* 0038 */  0x41, 0x32, 0x01, 0x06, 0xB6, 0xEB, 0xF1, 0x74,  // A2.....t
                /* 0040 */  0x7A, 0x92, 0x7D, 0x4C, 0x95, 0xDF, 0x69, 0x8E,  // z.}L..i.
                /* 0048 */  0x21, 0xE8, 0x0E, 0xB5, 0x41, 0x33, 0x01, 0x06,  // !...A3..
                /* 0050 */  0xFF, 0x04, 0xEF, 0x7E, 0x28, 0x43, 0x7C, 0x44,  // ...~(C|D
                /* 0058 */  0xB5, 0xBB, 0xD4, 0x49, 0x92, 0x5D, 0x53, 0x8D,  // ...I.]S.
                /* 0060 */  0x41, 0x34, 0x01, 0x06, 0x9E, 0x15, 0xDB, 0x8A,  // A4......
                /* 0068 */  0x32, 0x1E, 0x5C, 0x45, 0xBC, 0x93, 0x30, 0x8A,  // 2.\E..0.
                /* 0070 */  0x7E, 0xD9, 0x82, 0x46, 0x41, 0x35, 0x01, 0x01,  // ~..FA5..
                /* 0078 */  0xFD, 0xD9, 0x51, 0x26, 0x1C, 0x91, 0x69, 0x4B,  // ..Q&..iK
                /* 0080 */  0xB9, 0x4E, 0xD0, 0xDE, 0xD5, 0x96, 0x3B, 0xD7,  // .N....;.
                /* 0088 */  0x41, 0x36, 0x01, 0x06, 0x1A, 0x65, 0x64, 0x73,  // A6...eds
                /* 0090 */  0x2F, 0x13, 0xE7, 0x4F, 0xAD, 0xAA, 0x40, 0xC6,  // /..O..@.
                /* 0098 */  0xC7, 0xEE, 0x2E, 0x3B, 0x41, 0x37, 0x01, 0x06,  // ...;A7..
                /* 00A0 */  0x2C, 0xEF, 0xDD, 0xDF, 0xD4, 0x57, 0xCE, 0x48,  // ,....W.H
                /* 00A8 */  0xB1, 0x96, 0x0F, 0xB7, 0x87, 0xD9, 0x08, 0x36,  // .......6
                /* 00B0 */  0x43, 0x30, 0x01, 0x06, 0xA6, 0xEB, 0x70, 0x73,  // C0....ps
                /* 00B8 */  0x73, 0x7E, 0x9C, 0x40, 0x9A, 0x89, 0x82, 0x97,  // s~.@....
                /* 00C0 */  0x95, 0x31, 0x3D, 0x78, 0x41, 0x38, 0x20, 0x05,  // .1=xA8 .
                /* 00C8 */  0x89, 0xA5, 0x94, 0x7E, 0x65, 0x46, 0xDE, 0x47,  // ...~eF.G
                /* 00D0 */  0xBE, 0x2B, 0xDD, 0xE4, 0xA2, 0x80, 0xAD, 0x47,  // .+.....G
                /* 00D8 */  0x41, 0x39, 0x01, 0x06, 0xCC, 0x08, 0xA0, 0x34,  // A9.....4
                /* 00E0 */  0x05, 0xD2, 0x62, 0x4B, 0x9E, 0x67, 0x31, 0xDF,  // ..bK.g1.
                /* 00E8 */  0xA8, 0xB9, 0x00, 0x03, 0x41, 0x41, 0x01, 0x06,  // ....AA..
                /* 00F0 */  0x9D, 0xFB, 0x50, 0xC0, 0x5F, 0xDF, 0x06, 0x46,  // ..P._..F
                /* 00F8 */  0xB0, 0x66, 0x9E, 0xFC, 0x40, 0x1B, 0x25, 0x51,  // .f..@.%Q
                /* 0100 */  0x41, 0x42, 0x01, 0x06, 0x95, 0xE9, 0x9C, 0x9B,  // AB......
                /* 0108 */  0xC3, 0xC2, 0xEE, 0x40, 0x81, 0xD5, 0x94, 0x68,  // ...@...h
                /* 0110 */  0x95, 0x37, 0x59, 0xBE, 0x41, 0x43, 0x01, 0x06,  // .7Y.AC..
                /* 0118 */  0x89, 0x78, 0x34, 0x98, 0x12, 0xE1, 0x14, 0x4F,  // .x4....O
                /* 0120 */  0xB4, 0x18, 0x27, 0x3A, 0x13, 0x67, 0xDE, 0x9C,  // ..':.g..
                /* 0128 */  0x41, 0x44, 0x01, 0x06, 0x3A, 0x25, 0x21, 0x34,  // AD..:%!4
                /* 0130 */  0x7C, 0xBD, 0x22, 0x42, 0x84, 0x7F, 0x1D, 0xA6,  // |."B....
                /* 0138 */  0x4E, 0x3E, 0x8F, 0xCF, 0x41, 0x45, 0x01, 0x06,  // N>..AE..
                /* 0140 */  0x35, 0xCE, 0x07, 0xF3, 0x39, 0xD5, 0xD6, 0x42,  // 5...9..B
                /* 0148 */  0x9E, 0x87, 0x55, 0x6D, 0x7D, 0xFF, 0x91, 0x64,  // ..Um}..d
                /* 0150 */  0x41, 0x46, 0x01, 0x06, 0x7F, 0x49, 0xBF, 0xC7,  // AF...I..
                /* 0158 */  0xE0, 0xEE, 0xD1, 0x4F, 0xB1, 0x1E, 0x8A, 0x71,  // ...O...q
                /* 0160 */  0xB1, 0x10, 0xF4, 0x16, 0x45, 0x30, 0x01, 0x06,  // ....E0..
                /* 0168 */  0x0D, 0x23, 0x47, 0x33, 0x96, 0x31, 0x73, 0x4E,  // .#G3.1sN
                /* 0170 */  0xA5, 0xF0, 0x5F, 0xE5, 0x37, 0xB8, 0xBC, 0x07,  // .._.7...
                /* 0178 */  0x45, 0x31, 0x01, 0x06, 0x55, 0x16, 0x31, 0x89,  // E1..U.1.
                /* 0180 */  0x91, 0xAD, 0x65, 0x46, 0x80, 0x1F, 0xAB, 0x16,  // ..eF....
                /* 0188 */  0x25, 0x0B, 0x19, 0x40, 0x45, 0x32, 0x01, 0x06,  // %..@E2..
                /* 0190 */  0x7F, 0x8B, 0x40, 0x4A, 0x31, 0x53, 0x1F, 0x46,  // ..@J1S.F
                /* 0198 */  0xA9, 0x3A, 0xB9, 0xFB, 0x61, 0x27, 0x6A, 0x4A,  // .:..a'jJ
                /* 01A0 */  0x45, 0x33, 0x01, 0x06, 0x50, 0xD5, 0xC9, 0x17,  // E3..P...
                /* 01A8 */  0xCC, 0xB6, 0x92, 0x41, 0x9C, 0x71, 0x4E, 0x3F,  // ...A.qN?
                /* 01B0 */  0x0B, 0x29, 0x6F, 0xD6, 0x45, 0x34, 0x01, 0x06,  // .)o.E4..
                /* 01B8 */  0xCA, 0x66, 0xC2, 0xCA, 0xD3, 0xB4, 0xF9, 0x49,  // .f.....I
                /* 01C0 */  0xA7, 0xD9, 0xD7, 0x31, 0xA1, 0xBF, 0x16, 0x78,  // ...1...x
                /* 01C8 */  0x45, 0x35, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // E5..!...
                /* 01D0 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 01D8 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   // ..).BA..
            })
            Name (RETN, Package (0x05)
            {
                "Success", 
                "Not Supported", 
                "Invalid Parameter", 
                "Access Denied", 
                "System Busy"
            })
            Name (ITEM, Package (0x62)
            {
                Package (0x02)
                {
                    Zero, 
                    "DashEnabled"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "USBBIOSSupport"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "AlwaysOnUSB"
                }, 

                Package (0x02)
                {
                    One, 
                    "TrackPoint"
                }, 

                Package (0x02)
                {
                    One, 
                    "TouchPad"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnSticky"
                }, 

                Package (0x02)
                {
                    0x05, 
                    "BootDisplayDevice"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PowerControlBeep"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "LowBatteryAlarm"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ExtendedMemoryTest"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "LockBIOSSetting"
                }, 

                Package (0x02)
                {
                    0x0B, 
                    "MinimumPasswordLength"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtUnattendedBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintPredesktopAuthentication"
                }, 

                Package (0x02)
                {
                    0x03, 
                    "FingerprintSecurityMode"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSUpdateByEndUsers"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessLANAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessWANAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BluetoothAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WirelessUSBAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ModemAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "USBPortAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IEEE1394Access"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ExpressCardAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PCIExpressSlotAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UltrabayAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntegratedCameraAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "MicrophoneAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "StartupOptionKeys"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BootDeviceListF12Option"
                }, 

                Package (0x02)
                {
                    0x64, 
                    "BootOrder"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiMAXAccess"
                }, 

                Package (0x02)
                {
                    0x0D, 
                    "GraphicsDevice"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintPasswordAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintReaderAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "OsDetectionForSwitchableGraphics"
                }, 

                Package (0x02)
                {
                    0x0F, 
                    "AbsolutePersistenceModuleActivation"
                }, 

                Package (0x02)
                {
                    One, 
                    "PCIExpressPowerManagement"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "eSATAPortAccess"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "HardwarePasswordManager"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnCtrlKeySwap"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtReboot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "OnByAcAttach"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BootOrderLock"
                }, 

                Package (0x02)
                {
                    0x11, 
                    "ExpressCardSpeed"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "RapidStartTechnology"
                }, 

                Package (0x02)
                {
                    0x12, 
                    "KeyboardIllumination"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IPv4NetworkStack"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IPv6NetworkStack"
                }, 

                Package (0x02)
                {
                    0x13, 
                    "UefiPxeBootPriority"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PhysicalPresenceForTpmClear"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SecureRollBackPrevention"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SecureBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BottomCoverTamperDetected"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PasswordCountExceededError"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSPasswordAtBootDeviceList"
                }, 

                Package (0x02)
                {
                    0x15, 
                    "BootTimeExtension"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FnKeyAsPrimary"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiGig"
                }, 

                Package (0x02)
                {
                    0x16, 
                    "SGXControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "MACAddressPassThrough"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WindowsUEFIFirmwareUpdate"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WakeOnLANDock"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "WiFiNetworkBoot"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "LenovoCloudServices"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntegratedAudioAccess"
                }, 

                Package (0x02)
                {
                    0x0F, 
                    "ComputraceModuleActivation"
                }, 

                Package (0x02)
                {
                    0x1C, 
                    "MaxPasswordAttempts"
                }, 

                Package (0x02)
                {
                    0x1D, 
                    "PasswordChangeTime"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SystemManagementPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PowerOnPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "HardDiskPasswordControl"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BIOSSetupConfigurations"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ThinkShieldsecurewipe"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ChargeInBatteryMode"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "StrongPassword"
                }, 

                Package (0x02)
                {
                    0x20, 
                    "KeyboardLayout"
                }, 

                Package (0x02)
                {
                    0x21, 
                    "WakeUponAlarm"
                }, 

                Package (0x02)
                {
                    0x22, 
                    "AlarmDate"
                }, 

                Package (0x02)
                {
                    0x23, 
                    "AlarmTime"
                }, 

                Package (0x02)
                {
                    0x24, 
                    "AlarmDayofWeek"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmSunday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmMonday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmTuesday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmWednesday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmThursday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmFriday"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "UserDefinedAlarmSaturday"
                }, 

                Package (0x02)
                {
                    0x23, 
                    "UserDefinedAlarmTime"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "BlockSIDAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "Allow3rdPartyUEFICA"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ThinkShieldPasswordlessPowerOnAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "IntelligentCoolingBoost"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ProxySupport"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "CustomUri"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PlutonSecurityProcessor"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "FingerprintSingleTouchAuthentication"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ReinstallWindowsFromCloud"
                }
            })
            Name (VSEL, Package (0x2D)
            {
                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Disable", 
                    "Automatic"
                }, 

                Package (0x04)
                {
                    "Active", 
                    "Inactive", 
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Normal", 
                    "High"
                }, 

                Package (0x02)
                {
                    "Independent", 
                    "Synchronized"
                }, 

                Package (0x02)
                {
                    "LCD", 
                    "ExternalDisplay"
                }, 

                Package (0x02)
                {
                    "dTPM", 
                    "Pluton"
                }, 

                Package (0x02)
                {
                    "Compatibility", 
                    "AHCI"
                }, 

                Package (0x02)
                {
                    "External", 
                    "InternalOnly"
                }, 

                Package (0x02)
                {
                    "MaximizePerformance", 
                    "Balanced"
                }, 

                Package (0x02)
                {
                    "Quick", 
                    "Diagnostics"
                }, 

                Package (0x0A)
                {
                    "Disable", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12"
                }, 

                Package (0x03)
                {
                    "Auto", 
                    "On", 
                    "Off"
                }, 

                Package (0x03)
                {
                    "IntegratedGfx", 
                    "DiscreteGfx", 
                    "SwitchableGfx"
                }, 

                Package (0x04)
                {
                    "Disable", 
                    "ACOnly", 
                    "ACandBattery", 
                    "Enable"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "PermanentlyDisable"
                }, 

                Package (0x02)
                {
                    "HDMI", 
                    "USBTypeC"
                }, 

                Package (0x02)
                {
                    "Generation1", 
                    "Automatic"
                }, 

                Package (0x03)
                {
                    "ThinkLightOnly", 
                    "BacklightOnly", 
                    "Both"
                }, 

                Package (0x02)
                {
                    "IPv6First", 
                    "IPv4First"
                }, 

                Package (0x02)
                {
                    "256MB", 
                    "512MB"
                }, 

                Package (0x0B)
                {
                    "Disable", 
                    "1", 
                    "2", 
                    "3", 
                    "", 
                    "5", 
                    "", 
                    "", 
                    "", 
                    "", 
                    "10"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "SoftwareControl"
                }, 

                Package (0x04)
                {
                    "NoSecurity", 
                    "UserAuthorization", 
                    "SecureConnect", 
                    "DisplayPortandUSB"
                }, 

                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x03)
                {
                    "Enable", 
                    "Disable", 
                    ""
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "Pre-BootACL"
                }, 

                Package (0x03)
                {
                    "Disable", 
                    "Enable", 
                    "Second"
                }, 

                Package (0x04)
                {
                    "Unlimited", 
                    "1", 
                    "3", 
                    "100"
                }, 

                Package (0x02)
                {
                    "Immediately", 
                    "AfterReboot"
                }, 

                Package (0x02)
                {
                    "SimpleText", 
                    "Graphical"
                }, 

                Package (0x02)
                {
                    "Linux", 
                    "Windows10"
                }, 

                Package (0x1B)
                {
                    "English_US", 
                    "CanadianFrenchMultilingual", 
                    "CanadianFrench", 
                    "Spanish_LA", 
                    "Portuguese_BR", 
                    "Belgian", 
                    "Danish", 
                    "Spanish", 
                    "French", 
                    "German", 
                    "Hungarian", 
                    "Icelandic", 
                    "Italian", 
                    "Norwegian", 
                    "Portuguese", 
                    "Slovenian", 
                    "Swedish", 
                    "Swiss", 
                    "Turkish", 
                    "English_UK", 
                    "Japanese", 
                    "Korean", 
                    "TraditionalChinese", 
                    "Turkish-F", 
                    "Estonian", 
                    "Finnish", 
                    "Czech"
                }, 

                Package (0x05)
                {
                    "Disable", 
                    "UserDefined", 
                    "WeeklyEvent", 
                    "DailyEvent", 
                    "SingleEvent"
                }, 

                Package (0x01)
                {
                    "MM/DD/YYYY"
                }, 

                Package (0x01)
                {
                    "HH/MM/SS"
                }, 

                Package (0x07)
                {
                    "Sunday", 
                    "Monday", 
                    "Tuesday", 
                    "Wednesday", 
                    "Thursday", 
                    "Friday", 
                    "Saturday"
                }, 

                Package (0x03)
                {
                    "Near", 
                    "Middle", 
                    "Far"
                }, 

                Package (0x03)
                {
                    "Fast", 
                    "Medium", 
                    "Slow"
                }, 

                Package (0x02)
                {
                    "No", 
                    "Yes"
                }, 

                Package (0x02)
                {
                    "Off", 
                    "On"
                }, 

                Package (0x01)
                {
                    Buffer (0x01FF){}
                }, 

                Package (0x01)
                {
                    Buffer (0x01FF){}
                }, 

                Package (0x01)
                {
                    Buffer (0xFF){}
                }, 

                Package (0x01)
                {
                    Buffer (0x0800){}
                }
            })
            Name (VLST, Package (0x15)
            {
                "HDD0", 
                "HDD1", 
                "HDD2", 
                "HDD3", 
                "HDD4", 
                "PXEBOOT", 
                "ATAPICD0", 
                "ATAPICD1", 
                "ATAPICD2", 
                "USBFDD", 
                "USBCD", 
                "USBHDD", 
                "OtherHDD", 
                "OtherCD", 
                "NVMe0", 
                "NVMe1", 
                "HTTPSBOOT", 
                "LENOVOCLOUD", 
                "ON-PREMISE", 
                "DASHSERVER", 
                "NODEV"
            })
            Name (VR01, Package (0x67)
            {
                "0000", 
                "1998", 
                "1999", 
                "2000", 
                "2001", 
                "2002", 
                "2003", 
                "2004", 
                "2005", 
                "2006", 
                "2007", 
                "2008", 
                "2009", 
                "2010", 
                "2011", 
                "2012", 
                "2013", 
                "2014", 
                "2015", 
                "2016", 
                "2017", 
                "2018", 
                "2019", 
                "2020", 
                "2021", 
                "2022", 
                "2023", 
                "2024", 
                "2025", 
                "2026", 
                "2027", 
                "2028", 
                "2029", 
                "2030", 
                "2031", 
                "2032", 
                "2033", 
                "2034", 
                "2035", 
                "2036", 
                "2037", 
                "2038", 
                "2039", 
                "2040", 
                "2041", 
                "2042", 
                "2043", 
                "2044", 
                "2045", 
                "2046", 
                "2047", 
                "2048", 
                "2049", 
                "2050", 
                "2051", 
                "2052", 
                "2053", 
                "2054", 
                "2055", 
                "2056", 
                "2057", 
                "2058", 
                "2059", 
                "2060", 
                "2061", 
                "2062", 
                "2063", 
                "2064", 
                "2065", 
                "2066", 
                "2067", 
                "2068", 
                "2069", 
                "2070", 
                "2071", 
                "2072", 
                "2073", 
                "2074", 
                "2075", 
                "2076", 
                "2077", 
                "2078", 
                "2079", 
                "2080", 
                "2081", 
                "2082", 
                "2083", 
                "2084", 
                "2085", 
                "2086", 
                "2087", 
                "2088", 
                "2089", 
                "2090", 
                "2091", 
                "2092", 
                "2093", 
                "2094", 
                "2095", 
                "2096", 
                "2097", 
                "2098", 
                "2099"
            })
            Name (VR02, Package (0x0D)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12"
            })
            Name (VR03, Package (0x20)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23", 
                "24", 
                "25", 
                "26", 
                "27", 
                "28", 
                "29", 
                "30", 
                "31"
            })
            Name (VR04, Package (0x18)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23"
            })
            Name (VR05, Package (0x3C)
            {
                "00", 
                "01", 
                "02", 
                "03", 
                "04", 
                "05", 
                "06", 
                "07", 
                "08", 
                "09", 
                "10", 
                "11", 
                "12", 
                "13", 
                "14", 
                "15", 
                "16", 
                "17", 
                "18", 
                "19", 
                "20", 
                "21", 
                "22", 
                "23", 
                "24", 
                "25", 
                "26", 
                "27", 
                "28", 
                "29", 
                "30", 
                "31", 
                "32", 
                "33", 
                "34", 
                "35", 
                "36", 
                "37", 
                "38", 
                "39", 
                "40", 
                "41", 
                "42", 
                "43", 
                "44", 
                "45", 
                "46", 
                "47", 
                "48", 
                "49", 
                "50", 
                "51", 
                "52", 
                "53", 
                "54", 
                "55", 
                "56", 
                "57", 
                "58", 
                "59"
            })
            Name (PENC, Package (0x02)
            {
                "ascii", 
                "scancode"
            })
            Name (PKBD, Package (0x03)
            {
                "us", 
                "fr", 
                "gr"
            })
            Name (PTYP, Package (0x13)
            {
                "pap", 
                "pop", 
                "uhdp1", 
                "mhdp1", 
                "uhdp2", 
                "mhdp2", 
                "uhdp3", 
                "mhdp3", 
                "uhdp4", 
                "mhdp4", 
                "udrp1", 
                "adrp1", 
                "udrp2", 
                "adrp2", 
                "udrp3", 
                "adrp3", 
                "udrp4", 
                "adrp4", 
                "smp"
            })
            Name (OPCD, Package (0x0E)
            {
                "WmiOpcodePasswordType", 
                "WmiOpcodePasswordCurrent01", 
                "WmiOpcodePasswordCurrent02", 
                "WmiOpcodePasswordCurrent03", 
                "WmiOpcodePasswordCurrent04", 
                "WmiOpcodePasswordNew01", 
                "WmiOpcodePasswordNew02", 
                "WmiOpcodePasswordNew03", 
                "WmiOpcodePasswordNew04", 
                "WmiOpcodePasswordEncode", 
                "WmiOpcodePasswordSetUpdate", 
                "WmiOpcodePasswordAdmin", 
                "WmiOpcodeTPM", 
                "WmiOpcodePasswordFree"
            })
            Name (FUNC, Package (0x0A)
            {
                Package (0x02)
                {
                    0x27, 
                    "ClearSecurityChip"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResetFingerprintData"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResettoSetupMode"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "RestoreFactoryKeys"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ClearAllSecureBootKeys"
                }, 

                Package (0x02)
                {
                    0x27, 
                    "ResetSystemToFactoryDefaults"
                }, 

                Package (0x02)
                {
                    0x2B, 
                    "SetHttpsDescAndURL"
                }, 

                Package (0x02)
                {
                    0x2C, 
                    "DelHttpsDescAndURL"
                }, 

                Package (0x02)
                {
                    0x2D, 
                    "SetHttpProxyURL"
                }, 

                Package (0x02)
                {
                    0x2E, 
                    "SetHttpsServerCA"
                }
            })
            Mutex (MWMI, 0x00)
            Name (PCFG, Buffer (0x18){})
            Name (IBUF, Buffer (0x1000){})
            Name (ILEN, Zero)
            Name (PSTR, Buffer (0x81){})
            Name (ALEN, Zero)
            Name (DSUR, Buffer (0x01FF){})
            Name (CERT, Buffer (0x0800){})
            Method (WQA0, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((WMIS (Zero, Arg0) != Zero))
                {
                    Release (MWMI)
                    Return ("")
                }

                Local0 = DerefOf (ITEM [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                If ((Local1 == 0x22))
                {
                    Concatenate (Local2, ",", Local6)
                    Concatenate (Local6, DerefOf (VR02 [RTC1]), Local7)
                    Concatenate (Local7, "/", Local6)
                    Concatenate (Local6, DerefOf (VR03 [RTC2]), Local7)
                    Concatenate (Local7, "/", Local6)
                    Concatenate (Local6, DerefOf (VR01 [RTC0]), Local7)
                }
                ElseIf ((Local1 == 0x23))
                {
                    Concatenate (Local2, ",", Local6)
                    Concatenate (Local6, DerefOf (VR04 [RTC0]), Local7)
                    Concatenate (Local7, ":", Local6)
                    Concatenate (Local6, DerefOf (VR05 [RTC1]), Local7)
                    Concatenate (Local7, ":", Local6)
                    Concatenate (Local6, DerefOf (VR05 [RTC2]), Local7)
                }
                ElseIf ((Local1 < 0x64))
                {
                    Concatenate (Local2, ",", Local6)
                    Local3 = DerefOf (VSEL [Local1])
                    Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                }
                Else
                {
                    Local3 = SizeOf (VLST)
                    If ((WLS0 <= Local3))
                    {
                        Concatenate (Local2, ",", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS0]), Local2)
                    }

                    If ((WLS1 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS1]), Local2)
                    }

                    If ((WLS2 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS2]), Local2)
                    }

                    If ((WLS3 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS3]), Local2)
                    }

                    If ((WLS4 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS4]), Local2)
                    }

                    If ((WLS5 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS5]), Local2)
                    }

                    If ((WLS6 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS6]), Local2)
                    }

                    If ((WLS7 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS7]), Local2)
                    }

                    If ((WLS8 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS8]), Local2)
                    }

                    If ((WLS9 <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLS9]), Local2)
                    }

                    If ((WLSA <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSA]), Local2)
                    }

                    If ((WLSB <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSB]), Local2)
                    }

                    If ((WLSC <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSC]), Local2)
                    }

                    If ((WLSD <= Local3))
                    {
                        Concatenate (Local2, ":", Local7)
                        Concatenate (Local7, DerefOf (VLST [WLSD]), Local2)
                    }

                    Local7 = Local2
                }

                Release (MWMI)
                Return (Local7)
            }

            Method (WMA1, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (One, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA2, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x02, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA3, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x03, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA4, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x04, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WQA5, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = WMIS (0x05, Zero)
                PCFG [Zero] = WSPM /* \_SB_.WSPM */
                PCFG [0x04] = WSPS /* \_SB_.WSPS */
                PCFG [0x08] = WSMN /* \_SB_.WSMN */
                PCFG [0x0C] = WSMX /* \_SB_.WSMX */
                PCFG [0x10] = WSEN /* \_SB_.WSEN */
                PCFG [0x14] = WSKB /* \_SB_.WSKB */
                Release (MWMI)
                Return (PCFG) /* \_SB_.WMI1.PCFG */
            }

            Method (WMA6, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        If ((ILEN != Zero))
                        {
                            Local0 = SPAS (IBUF)
                        }

                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x06, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMA7, 3, NotSerialized)
            {
                If ((SizeOf (Arg2) == Zero))
                {
                    Return ("")
                }

                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    Local1 = GITM (IBUF, ITEM)
                    If ((Local1 == Ones))
                    {
                        Return ("")
                    }

                    Local0 = DerefOf (ITEM [Local1])
                    Local1 = DerefOf (Local0 [Zero])
                    If ((Local1 < 0x64))
                    {
                        Local3 = DerefOf (VSEL [Local1])
                        Local2 = DerefOf (Local3 [Zero])
                        Local4 = SizeOf (Local3)
                        Local5 = One
                        While ((Local5 < Local4))
                        {
                            Local6 = DerefOf (Local3 [Local5])
                            If ((SizeOf (Local6) != Zero))
                            {
                                Concatenate (Local2, ",", Local7)
                                Concatenate (Local7, Local6, Local2)
                            }

                            Local5++
                        }
                    }
                    Else
                    {
                        Local2 = DerefOf (VLST [Zero])
                        Local4 = SizeOf (VLST)
                        Local5 = One
                        While ((Local5 < Local4))
                        {
                            Local6 = DerefOf (VLST [Local5])
                            Concatenate (Local2, ",", Local7)
                            Concatenate (Local7, Local6, Local2)
                            Local5++
                        }
                    }
                }

                Return (Local2)
            }

            Method (WQA8, 1, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((WMIS (0x10, Arg0) != Zero))
                {
                    Release (MWMI)
                    Return ("")
                }

                Local0 = DerefOf (FUNC [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Local3 = DerefOf (VSEL [Local1])
                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                Release (MWMI)
                Return (Local7)
            }

            Method (WMA9, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = WSET (FUNC, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WITM /* \_SB_.WITM */
                            Local0 = WSEL /* \_SB_.WSEL */
                            Local0 = WMIS (0x11, Zero)
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMC0, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local6 = GSEL (OPCD, IBUF, Zero, One)
                        If ((Local6 != Ones))
                        {
                            Local4 = DerefOf (OPCD [Local6])
                            Local2 = SizeOf (Local4)
                            Local3 = DerefOf (IBUF [Local2])
                            If (((Local3 == 0x2C) || (Local3 == 0x3A)))
                            {
                                Local2++
                            }

                            Local5 = (SizeOf (Arg2) - Local2)
                            Local0 = Zero
                            If ((Local6 == Zero))
                            {
                                WPTY = 0xFF
                                Local7 = GSEL (PTYP, IBUF, Local2, One)
                                If ((Local7 != Ones))
                                {
                                    WPTY = Local7
                                }
                                Else
                                {
                                    Local0 = 0x02
                                }
                            }
                            ElseIf ((Local6 == One))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local0 == Zero))
                                {
                                    WPAS = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            ElseIf ((Local6 == 0x05))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local1 == Zero))
                                {
                                    PSTR = Zero
                                }

                                If ((Local0 == Zero))
                                {
                                    WPNW = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            ElseIf ((Local6 == 0x0A))
                            {
                                Local0 = Zero
                            }
                            ElseIf ((Local6 == 0x0B))
                            {
                                PSTR = Zero
                                Local1 = GPAO (IBUF, Local2)
                                If ((Local1 == Ones))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local1 == Zero))
                                {
                                    Local0 = 0x02
                                }

                                If ((Local0 == Zero))
                                {
                                    WPAS = PSTR /* \_SB_.WMI1.PSTR */
                                }
                            }
                            Else
                            {
                                Local0 = 0x02
                            }

                            If ((Local0 == Zero))
                            {
                                Local0 = WMIS (0x0F, Local6)
                            }
                        }
                        Else
                        {
                            Local0 = 0x02
                        }
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAA, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        CBFF = Zero
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (One, Zero)
                        }

                        CBFF = Zero
                    }
                }

                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAB, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = Zero
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x02, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAC, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x03, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAD, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x04, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAE, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        If ((ILEN != Zero))
                        {
                            CBFF = IBUF /* \_SB_.WMI1.IBUF */
                            Local0 = WMIS (0x06, Zero)
                        }
                        Else
                        {
                            Local0 = 0x02
                        }
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WMAF, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    CBFF = IBUF /* \_SB_.WMI1.IBUF */
                    Local0 = CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WSET (FUNC, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x11, Zero)
                        }
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (CARG, 1, NotSerialized)
            {
                Local0 = SizeOf (Arg0)
                If ((Local0 == Zero))
                {
                    IBUF = Zero
                    ILEN = Zero
                    Return (Zero)
                }

                If ((ObjectType (Arg0) != 0x02))
                {
                    Return (0x02)
                }

                If ((WEXF == One))
                {
                    If ((Local0 >= ((((((0x0400 + 0x40
                        ) + 0x0800) + 0x0200) + 0x80) + 0x08) + 0x02)))
                    {
                        Return (0x02)
                    }
                }
                ElseIf ((Local0 >= (((((0x40 + 0x0800
                    ) + 0x0200) + 0x80) + 0x08) + 0x02)))
                {
                    Return (0x02)
                }

                IBUF = Arg0
                Local0--
                Local1 = DerefOf (IBUF [Local0])
                If (((Local1 == 0x3B) || (Local1 == 0x2A)))
                {
                    IBUF [Local0] = Zero
                    ILEN = Local0
                }
                Else
                {
                    ILEN = SizeOf (Arg0)
                }

                Return (Zero)
            }

            Method (SCMP, 4, NotSerialized)
            {
                Local0 = SizeOf (Arg0)
                If ((Local0 == Zero))
                {
                    Return (Zero)
                }

                Local0++
                Name (STR1, Buffer (Local0){})
                STR1 = Arg0
                Local0--
                If ((ALEN != Zero))
                {
                    Local0 = ALEN /* \_SB_.WMI1.ALEN */
                }

                Local1 = Zero
                Local2 = Arg2
                While ((Local1 < Local0))
                {
                    Local3 = DerefOf (STR1 [Local1])
                    Local4 = DerefOf (Arg1 [Local2])
                    If ((Arg3 == One))
                    {
                        If ((Local3 >= 0x41))
                        {
                            If ((Local3 <= 0x5A))
                            {
                                Local3 += 0x20
                            }
                        }

                        If ((Local4 >= 0x41))
                        {
                            If ((Local4 <= 0x5A))
                            {
                                Local4 += 0x20
                            }
                        }
                    }

                    If ((Local3 != Local4))
                    {
                        Return (Zero)
                    }

                    Local1++
                    Local2++
                }

                If ((ALEN != Zero))
                {
                    Return (One)
                }

                Local4 = DerefOf (Arg1 [Local2])
                If ((Local4 == Zero))
                {
                    Return (One)
                }

                If (((Local4 == 0x2C) || (Local4 == 0x3A)))
                {
                    Return (One)
                }

                Return (Zero)
            }

            Method (GITM, 2, NotSerialized)
            {
                Local0 = Zero
                Local1 = SizeOf (Arg1)
                While ((Local0 < Local1))
                {
                    Local3 = DerefOf (DerefOf (Arg1 [Local0]) [One])
                    If (SCMP (Local3, Arg0, Zero, Zero))
                    {
                        Return (Local0)
                    }

                    Local0++
                }

                Return (Ones)
            }

            Method (GSEL, 4, NotSerialized)
            {
                Local0 = Zero
                Local1 = SizeOf (Arg0)
                While ((Local0 < Local1))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If (SCMP (Local2, Arg1, Arg2, Arg3))
                    {
                        Return (Local0)
                    }

                    Local0++
                }

                Return (Ones)
            }

            Method (SLEN, 2, NotSerialized)
            {
                Local0 = DerefOf (Arg0 [Arg1])
                Return (SizeOf (Local0))
            }

            Method (CLRP, 0, NotSerialized)
            {
                WPAS = Zero
                WPNW = Zero
            }

            Method (GPAS, 2, NotSerialized)
            {
                Local0 = Arg1
                Local1 = Zero
                While ((Local1 <= 0x80))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If (((Local2 == 0x2C) || (Local2 == Zero)))
                    {
                        PSTR [Local1] = Zero
                        Return (Local1)
                    }

                    PSTR [Local1] = Local2
                    Local0++
                    Local1++
                }

                PSTR [Local1] = Zero
                Return (Ones)
            }

            Method (GPAO, 2, NotSerialized)
            {
                Local0 = Arg1
                Local1 = Zero
                While ((Local1 <= 0x80))
                {
                    Local2 = DerefOf (Arg0 [Local0])
                    If ((Local2 == Zero))
                    {
                        PSTR [Local1] = Zero
                        Return (Local1)
                    }

                    PSTR [Local1] = Local2
                    Local0++
                    Local1++
                }

                Local1--
                PSTR [Local1] = Zero
                Return (Ones)
            }

            Method (CPAS, 2, NotSerialized)
            {
                CLRP ()
                Local0 = Arg1
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    Return (0x02)
                }

                WPAS = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                Local0++
                Local6 = GSEL (PENC, Arg0, Local0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WENC = Local6
                If ((Local6 == Zero))
                {
                    Local0 += SLEN (PENC, Zero)
                    If ((DerefOf (Arg0 [Local0]) != 0x2C))
                    {
                        Return (0x02)
                    }

                    Local0++
                    Local6 = GSEL (PKBD, Arg0, Local0, Zero)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WKBD = Local6
                }

                Return (Zero)
            }

            Method (SPAS, 1, NotSerialized)
            {
                CLRP ()
                Local6 = GSEL (PTYP, Arg0, Zero, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WPTY = Local6
                Local0 = SLEN (PTYP, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                WPAS = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = GPAS (Arg0, Local0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                If ((Local1 == Zero))
                {
                    PSTR = Zero
                }

                WPNW = PSTR /* \_SB_.WMI1.PSTR */
                Local0 += Local1
                Local0++
                Local6 = GSEL (PENC, Arg0, Local0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WENC = Local6
                If ((Local6 == Zero))
                {
                    Local0 += SLEN (PENC, Zero)
                    If ((DerefOf (Arg0 [Local0]) != 0x2C))
                    {
                        Return (0x02)
                    }

                    Local0++
                    Local6 = GSEL (PKBD, Arg0, Local0, Zero)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WKBD = Local6
                }

                Return (Zero)
            }

            Method (WSET, 2, NotSerialized)
            {
                Local0 = ILEN /* \_SB_.WMI1.ILEN */
                Local0++
                Local1 = GITM (IBUF, Arg0)
                If ((Local1 == Ones))
                {
                    Return (0x02)
                }

                WITM = Local1
                Local3 = DerefOf (Arg0 [Local1])
                Local4 = DerefOf (Local3 [One])
                Local2 = SizeOf (Local4)
                Local2++
                Local4 = DerefOf (Local3 [Zero])
                If ((Local4 == 0x22))
                {
                    If ((ALMD (Local2) != Zero))
                    {
                        Return (0x02)
                    }

                    Local2 += 0x0A
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 == 0x23))
                {
                    If ((ALMT (Local2) != Zero))
                    {
                        Return (0x02)
                    }

                    Local2 += 0x08
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf (((Local4 == 0x2B) || (Local4 == 0x2C)))
                {
                    Local5 = DESC (IBUF, Local2, 0x01FF)
                    If ((Local5 == Ones))
                    {
                        Return (0x02)
                    }

                    ADBG (ToHexString (DSUR))
                    WDSC = Zero
                    WDSC = DSUR /* \_SB_.WMI1.DSUR */
                    Local2 += Local5
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 == 0x2D))
                {
                    Local5 = DESC (IBUF, Local2, 0xFF)
                    If ((Local5 == Ones))
                    {
                        Return (0x02)
                    }

                    ADBG (ToHexString (DSUR))
                    WDSC = Zero
                    WDSC = DSUR /* \_SB_.WMI1.DSUR */
                    Local2 += Local5
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 == 0x2E))
                {
                    Local5 = DESC (IBUF, Local2, 0x0800)
                    If ((Local5 == Ones))
                    {
                        Return (0x02)
                    }

                    WCER = Zero
                    WCER = CERT /* \_SB_.WMI1.CERT */
                    Local2 += Local5
                    Local4 = DerefOf (IBUF [Local2])
                }
                ElseIf ((Local4 < 0x64))
                {
                    Local5 = DerefOf (Arg1 [Local4])
                    Local6 = GSEL (Local5, IBUF, Local2, Zero)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WSEL = Local6
                    Local2 += SLEN (Local5, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }
                Else
                {
                    WLS0 = 0x3F
                    WLS1 = 0x3F
                    WLS2 = 0x3F
                    WLS3 = 0x3F
                    WLS4 = 0x3F
                    WLS5 = 0x3F
                    WLS6 = 0x3F
                    WLS7 = 0x3F
                    WLS8 = 0x3F
                    WLS9 = 0x3F
                    WLSA = 0x3F
                    WLSB = 0x3F
                    WLSC = 0x3F
                    WLSD = 0x3F
                    Local6 = GSEL (VLST, IBUF, Local2, Zero)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS0 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS1 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS2 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS3 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS4 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS5 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS6 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS7 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS8 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLS9 = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSA = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSB = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSC = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }

                    If (((Local2 < Local0) && (Local4 == 0x3A)))
                    {
                        Local2++
                        Local6 = GSEL (VLST, IBUF, Local2, Zero)
                        If ((Local6 == Ones))
                        {
                            Return (0x02)
                        }

                        WLSD = Local6
                        Local2 += SLEN (VLST, Local6)
                        Local4 = DerefOf (IBUF [Local2])
                    }
                }

                If ((WEXF == Zero))
                {
                    If (((Local4 == 0x2C) && (Local2 < Local0)))
                    {
                        Local2++
                        Local0 = CPAS (IBUF, Local2)
                        If ((Local0 != Zero))
                        {
                            Return (Local0)
                        }
                    }
                }

                Return (Zero)
            }

            Method (ALMD, 1, NotSerialized)
            {
                Local0 = Arg0
                Local1 = VR02 /* \_SB_.WMI1.VR02 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC1 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x2F))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR03 /* \_SB_.WMI1.VR03 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC2 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x2F))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR01 /* \_SB_.WMI1.VR01 */
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC0 = Local2
                Return (Zero)
            }

            Method (DESC, 3, NotSerialized)
            {
                Local0 = Arg1
                Local1 = Zero
                If ((Arg2 == 0x0800))
                {
                    While ((Local1 < Arg2))
                    {
                        Local2 = DerefOf (Arg0 [Local0])
                        If ((Local2 == 0x2C))
                        {
                            CERT [Local1] = Zero
                            Return (Local1)
                        }

                        CERT [Local1] = Local2
                        Local0++
                        Local1++
                    }

                    Return (Ones)
                }

                Local1 = Zero
                Local0 = Arg1
                If ((Arg2 <= 0x01FF))
                {
                    While ((Local1 < Arg2))
                    {
                        Local2 = DerefOf (Arg0 [Local0])
                        If ((Local2 == 0x2C))
                        {
                            DSUR [Local1] = Zero
                            Return (Local1)
                        }

                        DSUR [Local1] = Local2
                        Local0++
                        Local1++
                    }

                    Return (Ones)
                }

                DSUR [Local1] = Zero
                CERT [Local1] = Zero
                Return (Ones)
            }

            Method (ALMT, 1, NotSerialized)
            {
                Local0 = Arg0
                Local1 = VR04 /* \_SB_.WMI1.VR04 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC0 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x3A))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR05 /* \_SB_.WMI1.VR05 */
                ALEN = 0x02
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                ALEN = Zero
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC1 = Local2
                Local0++
                Local0++
                Local3 = DerefOf (IBUF [Local0])
                If ((Local3 != 0x3A))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = VR05 /* \_SB_.WMI1.VR05 */
                Local2 = GSEL (Local1, IBUF, Local0, Zero)
                If ((Local2 == Ones))
                {
                    Return (0x02)
                }

                RTC2 = Local2
                Return (Zero)
            }

            Method (WME0, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x13, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WME1, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x14, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WME2, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        Local0 = CPAS (IBUF, Zero)
                    }

                    If ((Local0 == Zero))
                    {
                        Local0 = WMIS (0x15, Zero)
                    }
                }

                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WME3, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x13, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WME4, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x14, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WME5, 3, NotSerialized)
            {
                Acquire (MWMI, 0xFFFF)
                WEXF = One
                Local0 = CARG (Arg2)
                If ((Local0 == Zero))
                {
                    If ((ILEN != Zero))
                    {
                        CBFF = IBUF /* \_SB_.WMI1.IBUF */
                        Local0 = WMIS (0x15, Zero)
                    }
                    Else
                    {
                        Local0 = 0x02
                    }
                }

                CBFF = Zero
                WEXF = Zero
                Release (MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Name (WQBA, Buffer (0x121F)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x0F, 0x12, 0x00, 0x00, 0x4E, 0x9E, 0x00, 0x00,  // ....N...
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0xA8, 0xB4, 0x8C, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x31, 0x10, 0x0A, 0x0D, 0x21, 0x02, 0x0B,  // .1...!..
                /* 0028 */  0x83, 0x50, 0x4C, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PL...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x0E, 0x88, 0x14, 0x40, 0x48, 0x26, 0x84,  // 1...@H&.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0xA2, 0xC9, 0xA0, 0x00, 0xA7,  // ........
                /* 0060 */  0x08, 0x82, 0xB4, 0x65, 0x01, 0xBA, 0x05, 0xF8,  // ...e....
                /* 0068 */  0x16, 0xA0, 0x1D, 0x42, 0x68, 0x15, 0x0A, 0x30,  // ...Bh..0
                /* 0070 */  0x29, 0xC0, 0x27, 0x98, 0x2C, 0x0A, 0x90, 0x0D,  // ).'.,...
                /* 0078 */  0x26, 0xDB, 0x70, 0x64, 0x18, 0x4C, 0xE4, 0x18,  // &.pd.L..
                /* 0080 */  0x50, 0x43, 0xF3, 0x18, 0xB8, 0xCE, 0x29, 0xC8,  // PC....).
                /* 0088 */  0x26, 0xB0, 0xA0, 0x0B, 0x45, 0xD1, 0x34, 0xA2,  // &...E.4.
                /* 0090 */  0x24, 0x38, 0xA8, 0x63, 0x88, 0x10, 0xBC, 0x5C,  // $8.c...\
                /* 0098 */  0x01, 0x92, 0x27, 0x20, 0xCD, 0xF3, 0x92, 0xF5,  // ..' ....
                /* 00A0 */  0x41, 0x68, 0x08, 0x6C, 0x04, 0x3C, 0x8A, 0x04,  // Ah.l.<..
                /* 00A8 */  0x10, 0x16, 0x63, 0x99, 0x12, 0x0F, 0x83, 0xF2,  // ..c.....
                /* 00B0 */  0x00, 0x22, 0x39, 0x43, 0x45, 0x01, 0xDB, 0xEB,  // ."9CE...
                /* 00B8 */  0x44, 0x34, 0xAC, 0xE3, 0x64, 0x92, 0xE0, 0x50,  // D4..d..P
                /* 00C0 */  0xA3, 0xB4, 0x44, 0x01, 0xE6, 0x47, 0xA6, 0x89,  // ..D..G..
                /* 00C8 */  0x1C, 0x5B, 0xD3, 0x23, 0x16, 0x24, 0x93, 0x36,  // .[.#.$.6
                /* 00D0 */  0x14, 0xD4, 0xD0, 0x3D, 0xAD, 0x93, 0xF2, 0x44,  // ...=...D
                /* 00D8 */  0x23, 0x1E, 0x94, 0x61, 0x12, 0x78, 0x14, 0x0C,  // #..a.x..
                /* 00E0 */  0x8D, 0x13, 0x94, 0x05, 0x21, 0x07, 0x03, 0x45,  // ....!..E
                /* 00E8 */  0x01, 0x9E, 0x84, 0xE7, 0x58, 0xBC, 0x00, 0xE1,  // ....X...
                /* 00F0 */  0x33, 0x26, 0x47, 0x81, 0x18, 0x09, 0x7C, 0x24,  // 3&G...|$
                /* 00F8 */  0xF0, 0x68, 0x8E, 0x19, 0x0B, 0x14, 0x2E, 0xE0,  // .h......
                /* 0100 */  0xF9, 0x1C, 0x43, 0xE4, 0xB8, 0x87, 0x1A, 0xE3,  // ..C.....
                /* 0108 */  0x28, 0x22, 0x27, 0x78, 0x07, 0x88, 0x62, 0xB4,  // ("'x..b.
                /* 0110 */  0x82, 0xE6, 0x2D, 0xC4, 0x60, 0xD1, 0x0C, 0xD6,  // ..-.`...
                /* 0118 */  0x33, 0x38, 0x19, 0x74, 0x82, 0xFF, 0xFF, 0x11,  // 38.t....
                /* 0120 */  0x70, 0x19, 0x10, 0xF2, 0x28, 0xC0, 0xEA, 0xA0,  // p...(...
                /* 0128 */  0x34, 0x0D, 0x13, 0x74, 0x2F, 0xC0, 0x9A, 0x00,  // 4..t/...
                /* 0130 */  0x63, 0x02, 0x34, 0x62, 0x48, 0x99, 0x00, 0x67,  // c.4bH..g
                /* 0138 */  0xF7, 0x05, 0xCD, 0xA8, 0x2D, 0x01, 0xE6, 0x04,  // ....-...
                /* 0140 */  0x68, 0x13, 0xE0, 0x0D, 0x41, 0x28, 0xE7, 0x19,  // h...A(..
                /* 0148 */  0xE5, 0x58, 0x4E, 0x31, 0xCA, 0xC3, 0x40, 0xCC,  // .XN1..@.
                /* 0150 */  0x97, 0x81, 0xA0, 0x51, 0x62, 0xC4, 0x3C, 0x97,  // ...Qb.<.
                /* 0158 */  0xB8, 0x86, 0x8D, 0x10, 0x23, 0xE4, 0x29, 0x04,  // ....#.).
                /* 0160 */  0x8A, 0xDB, 0xFE, 0x20, 0xC8, 0xA0, 0x71, 0xA3,  // ... ..q.
                /* 0168 */  0xF7, 0x69, 0xE1, 0xAC, 0x4E, 0xE0, 0xE8, 0x9F,  // .i..N...
                /* 0170 */  0x14, 0x4C, 0xE0, 0x29, 0x1F, 0xD8, 0xB3, 0xC1,  // .L.)....
                /* 0178 */  0x09, 0x1C, 0x6B, 0xD4, 0x18, 0xA7, 0x92, 0xC0,  // ..k.....
                /* 0180 */  0xB1, 0x1F, 0x10, 0xD2, 0x00, 0xA2, 0x48, 0xF0,  // ......H.
                /* 0188 */  0xA8, 0xD3, 0x82, 0xCF, 0x05, 0x1E, 0xDA, 0x41,  // .......A
                /* 0190 */  0x7B, 0x8E, 0x27, 0x10, 0xE4, 0x10, 0x8E, 0xE0,  // {.'.....
                /* 0198 */  0x89, 0xE1, 0x81, 0xC0, 0x63, 0x60, 0x37, 0x05,  // ....c`7.
                /* 01A0 */  0x1F, 0x01, 0x7C, 0x42, 0xC0, 0xBB, 0x06, 0xD4,  // ..|B....
                /* 01A8 */  0xD5, 0xE0, 0xC1, 0x80, 0x0D, 0x3A, 0x1C, 0x66,  // .....:.f
                /* 01B0 */  0xBC, 0x1E, 0x7E, 0xB8, 0x13, 0x38, 0xC9, 0x07,  // ..~..8..
                /* 01B8 */  0x0C, 0x7E, 0xD8, 0xF0, 0xE0, 0x70, 0xF3, 0x3C,  // .~...p.<
                /* 01C0 */  0x99, 0x23, 0x2B, 0x55, 0x80, 0xD9, 0xC3, 0x81,  // .#+U....
                /* 01C8 */  0x0E, 0x12, 0x3E, 0x6D, 0xB0, 0x33, 0x00, 0x46,  // ..>m.3.F
                /* 01D0 */  0xFE, 0x20, 0x50, 0x23, 0x33, 0xB4, 0xC7, 0xFD,  // . P#3...
                /* 01D8 */  0xD2, 0x61, 0xC8, 0xE7, 0x84, 0xC3, 0x62, 0x62,  // .a....bb
                /* 01E0 */  0x4F, 0x1D, 0x74, 0x3C, 0xE0, 0xBF, 0x8C, 0x3C,  // O.t<...<
                /* 01E8 */  0x67, 0x78, 0xFA, 0x9E, 0xAF, 0x09, 0x86, 0x1D,  // gx......
                /* 01F0 */  0x38, 0x7A, 0x20, 0x86, 0x7E, 0xD8, 0x38, 0x8C,  // 8z .~.8.
                /* 01F8 */  0xD3, 0xF0, 0xFD, 0xC3, 0xE7, 0x05, 0x18, 0xA7,  // ........
                /* 0200 */  0x00, 0x8F, 0xDC, 0xFF, 0xFF, 0x43, 0x8A, 0x4F,  // .....C.O
                /* 0208 */  0x13, 0xFC, 0x68, 0xE1, 0xD3, 0x04, 0xBB, 0x1E,  // ..h.....
                /* 0210 */  0x9C, 0xC6, 0x73, 0x80, 0x87, 0x73, 0x56, 0x3E,  // ..s..sV>
                /* 0218 */  0x4C, 0x80, 0xED, 0x7E, 0xC2, 0x46, 0xF4, 0x6E,  // L..~.F.n
                /* 0220 */  0xE1, 0xD1, 0x60, 0x4F, 0x01, 0xE0, 0x3B, 0xBF,  // ..`O..;.
                /* 0228 */  0x80, 0xF3, 0xAE, 0xC1, 0x06, 0x0B, 0xE3, 0xFC,  // ........
                /* 0230 */  0x02, 0x3C, 0x4E, 0x08, 0x1E, 0x02, 0x3F, 0x48,  // .<N...?H
                /* 0238 */  0x78, 0x08, 0x7C, 0x00, 0xCF, 0x1F, 0x67, 0x68,  // x.|...gh
                /* 0240 */  0xA5, 0xF3, 0x42, 0x0E, 0x0C, 0xDE, 0x39, 0x07,  // ..B...9.
                /* 0248 */  0xC6, 0x28, 0x78, 0x9E, 0xC7, 0x86, 0x09, 0x14,  // .(x.....
                /* 0250 */  0xE4, 0x35, 0xA0, 0x50, 0xCF, 0x02, 0x0A, 0xE3,  // .5.P....
                /* 0258 */  0x53, 0x0D, 0xF0, 0xFA, 0xFF, 0x9F, 0x6A, 0x80,  // S.....j.
                /* 0260 */  0xCB, 0xE1, 0x00, 0x77, 0x72, 0x80, 0x7B, 0x2F,  // ...wr.{/
                /* 0268 */  0x60, 0x17, 0x87, 0xE7, 0x1A, 0xB8, 0xA2, 0xCF,  // `.......
                /* 0270 */  0x35, 0x50, 0xEF, 0x2D, 0xC5, 0x8D, 0x51, 0xD7,  // 5P.-..Q.
                /* 0278 */  0x98, 0x20, 0x8F, 0x02, 0x8F, 0x34, 0x51, 0x9E,  // . ...4Q.
                /* 0280 */  0x67, 0xDE, 0x65, 0x22, 0x3C, 0xDB, 0xF8, 0x5A,  // g.e"<..Z
                /* 0288 */  0xE3, 0x29, 0xC4, 0xF1, 0xB5, 0xC6, 0x88, 0x2F,  // .)...../
                /* 0290 */  0x13, 0xEF, 0x36, 0xC6, 0x3D, 0xB8, 0xC7, 0x9A,  // ..6.=...
                /* 0298 */  0x87, 0x1C, 0x83, 0x1C, 0x4D, 0x84, 0x17, 0x83,  // ....M...
                /* 02A0 */  0x80, 0x8F, 0x37, 0x3E, 0xD6, 0x80, 0x57, 0xCC,  // ..7>..W.
                /* 02A8 */  0x0B, 0x45, 0x16, 0x8E, 0x35, 0x80, 0xC6, 0xFF,  // .E..5...
                /* 02B0 */  0xFF, 0xB1, 0x06, 0xB8, 0x61, 0x3D, 0xA0, 0x80,  // ....a=..
                /* 02B8 */  0xEF, 0xC8, 0xC0, 0x6E, 0x28, 0xF0, 0x4E, 0x28,  // ...n(.N(
                /* 02C0 */  0x80, 0x9F, 0xC4, 0x2F, 0x00, 0x1D, 0x39, 0x9C,  // .../..9.
                /* 02C8 */  0x16, 0x44, 0x36, 0xDE, 0x00, 0x3E, 0x05, 0x50,  // .D6..>.P
                /* 02D0 */  0x35, 0x40, 0x9A, 0x26, 0x6C, 0x82, 0xE9, 0xC9,  // 5@.&l...
                /* 02D8 */  0x05, 0xEF, 0x23, 0x81, 0x73, 0x93, 0x28, 0xF9,  // ..#.s.(.
                /* 02E0 */  0xB0, 0x28, 0x9C, 0xB3, 0x1E, 0x44, 0x28, 0x88,  // .(...D(.
                /* 02E8 */  0x01, 0x1D, 0xE4, 0x38, 0x81, 0x3E, 0xA3, 0xF8,  // ...8.>..
                /* 02F0 */  0x20, 0x72, 0xA2, 0x4F, 0x84, 0x1E, 0x94, 0x87,  //  r.O....
                /* 02F8 */  0xF1, 0x8E, 0xC2, 0x4E, 0x20, 0x3E, 0x4C, 0x78,  // ...N >Lx
                /* 0300 */  0xEC, 0x3E, 0x26, 0xF0, 0x7F, 0x8C, 0x67, 0x63,  // .>&...gc
                /* 0308 */  0x74, 0xAB, 0xC1, 0xD0, 0xFF, 0xFF, 0x9C, 0xC2,  // t.......
                /* 0310 */  0xC1, 0x7C, 0x10, 0xE1, 0x04, 0x75, 0xDD, 0x24,  // .|...u.$
                /* 0318 */  0x40, 0xA6, 0xEF, 0xA8, 0x00, 0x0A, 0x20, 0xDF,  // @..... .
                /* 0320 */  0x0B, 0x7C, 0x0E, 0x78, 0x36, 0x60, 0x63, 0x78,  // .|.x6`cx
                /* 0328 */  0x14, 0x30, 0x9A, 0xD1, 0x79, 0xF8, 0xC9, 0xA2,  // .0..y...
                /* 0330 */  0xE2, 0x4E, 0x96, 0x82, 0x78, 0xB2, 0x8E, 0x32,  // .N..x..2
                /* 0338 */  0x59, 0xF4, 0x4C, 0x7C, 0xAF, 0xF0, 0x8C, 0xDE,  // Y.L|....
                /* 0340 */  0xB4, 0x3C, 0x47, 0x4F, 0xD8, 0xF7, 0x10, 0x58,  // .<GO...X
                /* 0348 */  0x87, 0x81, 0x90, 0x0F, 0x06, 0x9E, 0x86, 0xE1,  // ........
                /* 0350 */  0x3C, 0x59, 0x0E, 0xE7, 0xC9, 0xF2, 0xB1, 0xF8,  // <Y......
                /* 0358 */  0x1A, 0x02, 0x3E, 0x81, 0xB3, 0x05, 0x39, 0x3C,  // ..>...9<
                /* 0360 */  0x26, 0xD6, 0xA8, 0xE8, 0x55, 0xC8, 0xC3, 0xE3,  // &...U...
                /* 0368 */  0x97, 0x03, 0xCF, 0xE7, 0x19, 0xE1, 0x28, 0x9F,  // ......(.
                /* 0370 */  0x24, 0x70, 0x18, 0xCF, 0x24, 0x1E, 0xA2, 0x6F,  // $p..$..o
                /* 0378 */  0x45, 0xB0, 0x26, 0x72, 0xD2, 0xBE, 0x2D, 0x9C,  // E.&r..-.
                /* 0380 */  0x6C, 0xD0, 0xD7, 0x33, 0xCC, 0xAD, 0x08, 0xF6,  // l..3....
                /* 0388 */  0xFF, 0xFF, 0x56, 0x04, 0xE7, 0x82, 0x06, 0x33,  // ..V....3
                /* 0390 */  0xD3, 0xBD, 0x0A, 0x15, 0xEB, 0x5E, 0x05, 0x88,  // .....^..
                /* 0398 */  0x1D, 0xD6, 0x6B, 0x8F, 0x0F, 0x56, 0x70, 0xEF,  // ..k..Vp.
                /* 03A0 */  0x55, 0x70, 0x2F, 0x55, 0xCF, 0x0A, 0xC7, 0x18,  // Up/U....
                /* 03A8 */  0xFE, 0x61, 0x2A, 0xC6, 0x29, 0xBD, 0x76, 0x1A,  // .a*.).v.
                /* 03B0 */  0x28, 0x4C, 0x94, 0x78, 0xEF, 0x55, 0x1E, 0xE3,  // (L.x.U..
                /* 03B8 */  0x7B, 0x15, 0xBB, 0x42, 0x85, 0x89, 0xF5, 0x72,  // {..B...r
                /* 03C0 */  0x65, 0xD4, 0xD7, 0x89, 0x70, 0x81, 0x82, 0x44,  // e...p..D
                /* 03C8 */  0x7A, 0xB5, 0x8A, 0x12, 0x39, 0xBE, 0x21, 0xDF,  // z...9.!.
                /* 03D0 */  0xAB, 0xC0, 0x2B, 0xE7, 0x5E, 0x05, 0xB2, 0xFF,  // ..+.^...
                /* 03D8 */  0xFF, 0xBD, 0x0A, 0x30, 0x8F, 0xF6, 0x5E, 0x05,  // ...0..^.
                /* 03E0 */  0xC6, 0x6B, 0x03, 0xBB, 0x21, 0xC1, 0x02, 0x7A,  // .k..!..z
                /* 03E8 */  0xB1, 0x02, 0x0C, 0x65, 0xBE, 0x58, 0xD1, 0xBC,  // ...e.X..
                /* 03F0 */  0x17, 0x2B, 0xC4, 0xFF, 0xFF, 0x5C, 0xC2, 0xF4,  // .+...\..
                /* 03F8 */  0x5C, 0xAC, 0xC8, 0x3C, 0xE1, 0xDF, 0xAC, 0x00,  // \..<....
                /* 0400 */  0x4E, 0xFF, 0xFF, 0x6F, 0x56, 0x80, 0xB1, 0x7B,  // N..oV..{
                /* 0408 */  0x11, 0xE6, 0x68, 0x05, 0x2F, 0xE5, 0xCD, 0x8A,  // ..h./...
                /* 0410 */  0xC6, 0x59, 0x86, 0x02, 0x2E, 0x88, 0xC2, 0xF8,  // .Y......
                /* 0418 */  0x66, 0x05, 0x38, 0xBA, 0xAE, 0xE0, 0x86, 0x0C,  // f.8.....
                /* 0420 */  0x17, 0x2C, 0x4A, 0x30, 0x1F, 0x42, 0x3C, 0x9D,  // .,J0.B<.
                /* 0428 */  0x23, 0x7E, 0x48, 0x78, 0x09, 0x78, 0xCC, 0xF1,  // #~Hx.x..
                /* 0430 */  0x80, 0x1F, 0x08, 0x7C, 0xB9, 0x02, 0xD3, 0xFF,  // ...|....
                /* 0438 */  0x9F, 0xC0, 0x27, 0xDF, 0xB3, 0x7C, 0x9B, 0x7A,  // ..'..|.z
                /* 0440 */  0xEF, 0xE5, 0x07, 0xAC, 0xF7, 0x2A, 0x1F, 0x7E,  // .....*.~
                /* 0448 */  0x63, 0xBD, 0x33, 0xBC, 0x5C, 0x79, 0x24, 0x51,  // c.3.\y$Q
                /* 0450 */  0x4E, 0x22, 0x94, 0xEF, 0x56, 0xEF, 0x55, 0x46,  // N"..V.UF
                /* 0458 */  0x89, 0xF8, 0x42, 0xEC, 0x53, 0xB0, 0xA1, 0x8D,  // ..B.S...
                /* 0460 */  0xF2, 0x54, 0x11, 0xDD, 0x78, 0x2F, 0x57, 0xE0,  // .T..x/W.
                /* 0468 */  0x95, 0x74, 0xB9, 0x02, 0x68, 0x32, 0xFC, 0x97,  // .t..h2..
                /* 0470 */  0x2B, 0xF0, 0xDD, 0x1C, 0xB0, 0xD7, 0x24, 0x38,  // +.....$8
                /* 0478 */  0xFF, 0xFF, 0x6B, 0x12, 0xBF, 0x5E, 0x01, 0x7E,  // ..k..^.~
                /* 0480 */  0xB2, 0x5F, 0xAF, 0x68, 0xEE, 0xEB, 0x15, 0x4A,  // ._.h...J
                /* 0488 */  0x14, 0x84, 0x14, 0x01, 0x69, 0xA6, 0xE0, 0xB9,  // ....i...
                /* 0490 */  0x5F, 0x01, 0x9C, 0xF8, 0xFF, 0xDF, 0xAF, 0x00,  // _.......
                /* 0498 */  0xCB, 0xE1, 0xEE, 0x57, 0x40, 0xEF, 0x76, 0x04,  // ...W@.v.
                /* 04A0 */  0x5E, 0x94, 0xB7, 0x23, 0xEC, 0x15, 0x0B, 0x9F,  // ^..#....
                /* 04A8 */  0xF1, 0x8A, 0x45, 0xC3, 0xAC, 0x44, 0xF1, 0xD6,  // ..E..D..
                /* 04B0 */  0x44, 0x61, 0x7C, 0xC5, 0x02, 0x26, 0xFF, 0xFF,  // Da|..&..
                /* 04B8 */  0x2B, 0x16, 0x30, 0x3B, 0x88, 0xE2, 0x46, 0x0D,  // +.0;..F.
                /* 04C0 */  0xF7, 0xE2, 0xE4, 0x5B, 0x8F, 0xE7, 0x1B, 0xD1,  // ...[....
                /* 04C8 */  0x77, 0x18, 0xCC, 0x09, 0x0B, 0xC6, 0x0D, 0x0B,  // w.......
                /* 04D0 */  0xFE, 0x90, 0x1E, 0x86, 0x7D, 0x92, 0x78, 0xC7,  // ....}.x.
                /* 04D8 */  0xF2, 0xD1, 0xCA, 0x20, 0x6F, 0xC0, 0x4F, 0x56,  // ... o.OV
                /* 04E0 */  0x0F, 0x56, 0x51, 0x8C, 0x10, 0xF0, 0x78, 0xDE,  // .VQ...x.
                /* 04E8 */  0x85, 0x7D, 0xB4, 0x7A, 0xD3, 0x32, 0x4A, 0xEC,  // .}.z.2J.
                /* 04F0 */  0x58, 0xBE, 0x50, 0x3D, 0x6B, 0xF9, 0x9A, 0x65,  // X.P=k..e
                /* 04F8 */  0x88, 0xB8, 0x0F, 0xC4, 0xBE, 0x61, 0x01, 0xB6,  // .....a..
                /* 0500 */  0xFF, 0xFF, 0x37, 0x2C, 0xC0, 0xD1, 0xC5, 0x81,  // ..7,....
                /* 0508 */  0x1F, 0x1C, 0xB0, 0x37, 0x2C, 0xC0, 0xE7, 0x4C,  // ...7,..L
                /* 0510 */  0xC1, 0x73, 0xC3, 0x02, 0x36, 0xFF, 0xFF, 0x1B,  // .s..6...
                /* 0518 */  0x16, 0xC0, 0xFF, 0xFF, 0xFF, 0x0D, 0x0B, 0x38,  // .......8
                /* 0520 */  0xDC, 0xAE, 0xB0, 0xB7, 0x2C, 0xEC, 0xED, 0x85,  // ....,...
                /* 0528 */  0xAC, 0x82, 0x86, 0x5A, 0x89, 0x82, 0x7F, 0xAF,  // ...Z....
                /* 0530 */  0x0C, 0x43, 0x6F, 0x58, 0x80, 0xA3, 0x71, 0x7B,  // .CoX..q{
                /* 0538 */  0xD4, 0xE0, 0x38, 0x1B, 0x3C, 0x49, 0x60, 0xCE,  // ..8.<I`.
                /* 0540 */  0xD5, 0xB8, 0xD9, 0x1C, 0x5C, 0xE0, 0x08, 0xBD,  // ....\...
                /* 0548 */  0x83, 0x6A, 0xEE, 0xEC, 0x92, 0x02, 0xE3, 0x96,  // .j......
                /* 0550 */  0x05, 0xF7, 0x52, 0xF5, 0xD0, 0x10, 0xE5, 0x20,  // ..R.... 
                /* 0558 */  0x5E, 0x85, 0x1F, 0xAC, 0x1E, 0xA5, 0x8E, 0xEC,  // ^.......
                /* 0560 */  0xF1, 0xEA, 0x69, 0xD8, 0xC7, 0x2C, 0xDF, 0xB2,  // ..i..,..
                /* 0568 */  0x0C, 0x15, 0xE1, 0x2D, 0x8B, 0x9D, 0x21, 0xE2,  // ...-..!.
                /* 0570 */  0xC5, 0x8A, 0x12, 0xE2, 0xBD, 0x22, 0xB4, 0xEF,  // ....."..
                /* 0578 */  0x5C, 0x06, 0x7F, 0x34, 0x36, 0x6A, 0xD0, 0x97,  // \..46j..
                /* 0580 */  0xE3, 0xB7, 0x2C, 0x78, 0xFF, 0xFF, 0x5B, 0x16,  // ..,x..[.
                /* 0588 */  0x7C, 0x91, 0x7F, 0x15, 0x9D, 0x08, 0x7C, 0xCB,  // |.....|.
                /* 0590 */  0x02, 0xF8, 0x11, 0x0C, 0x42, 0x4E, 0x06, 0x8E,  // ....BN..
                /* 0598 */  0x3E, 0x2F, 0xE0, 0x07, 0xF0, 0x30, 0xE2, 0x21,  // >/...0.!
                /* 05A0 */  0xB1, 0x00, 0x03, 0xA7, 0xF7, 0x25, 0x9F, 0x29,  // .....%.)
                /* 05A8 */  0xF8, 0x01, 0xC3, 0x67, 0x0A, 0x76, 0x3D, 0x88,  // ...g.v=.
                /* 05B0 */  0xFE, 0x18, 0xE0, 0x73, 0x09, 0x66, 0x70, 0xE0,  // ...s.fp.
                /* 05B8 */  0xBF, 0x56, 0x1C, 0xBA, 0x47, 0xF1, 0xFA, 0x60,  // .V..G..`
                /* 05C0 */  0x02, 0x0F, 0x8E, 0xFF, 0xFF, 0x07, 0x07, 0xF7,  // ........
                /* 05C8 */  0xCE, 0x70, 0x44, 0xBE, 0xC3, 0x78, 0x70, 0x60,  // .pD..xp`
                /* 05D0 */  0x3B, 0x08, 0x00, 0x87, 0xC1, 0xE1, 0x43, 0x0D,  // ;.....C.
                /* 05D8 */  0x0E, 0x3D, 0x1E, 0x03, 0x87, 0xF4, 0x79, 0x8C,  // .=....y.
                /* 05E0 */  0x5D, 0x18, 0x1E, 0x72, 0x3C, 0x34, 0xB0, 0x01,  // ]..r<4..
                /* 05E8 */  0x7A, 0x68, 0xC0, 0x72, 0x12, 0x4F, 0x21, 0x87,  // zh.r.O!.
                /* 05F0 */  0x06, 0x66, 0x09, 0x43, 0x03, 0x4A, 0xF1, 0x86,  // .f.C.J..
                /* 05F8 */  0x46, 0xFF, 0xFF, 0x43, 0xE3, 0x43, 0xF2, 0x61,  // F..C.C.a
                /* 0600 */  0x21, 0xE6, 0x53, 0x4E, 0x84, 0xF7, 0x05, 0x9F,  // !.SN....
                /* 0608 */  0xA0, 0x18, 0xFA, 0x6B, 0x8A, 0x6F, 0x17, 0xBE,  // ...k.o..
                /* 0610 */  0x09, 0xE2, 0xC6, 0x07, 0xAE, 0x4B, 0xA7, 0xC7,  // .....K..
                /* 0618 */  0x07, 0x7C, 0x8E, 0x5C, 0x1E, 0x1F, 0xEE, 0xE8,  // .|.\....
                /* 0620 */  0xE4, 0xF1, 0xC1, 0x70, 0x79, 0x95, 0x21, 0x47,  // ...py.!G
                /* 0628 */  0x13, 0x1F, 0xAD, 0xD8, 0xF0, 0xC0, 0x76, 0xD3,  // ......v.
                /* 0630 */  0xF3, 0xF0, 0x80, 0xCF, 0x75, 0x13, 0x8C, 0x57,  // ....u..W
                /* 0638 */  0x48, 0x7E, 0x2D, 0x81, 0x71, 0x82, 0xC2, 0x5F,  // H~-.q.._
                /* 0640 */  0x37, 0xC1, 0xFB, 0xFF, 0xBF, 0x6E, 0x02, 0xCF,  // 7....n..
                /* 0648 */  0x51, 0x70, 0xAD, 0x97, 0x6C, 0x1A, 0xE4, 0x95,  // Qp..l...
                /* 0650 */  0xA3, 0x58, 0x2F, 0x02, 0x0A, 0xE3, 0x33, 0x1B,  // .X/...3.
                /* 0658 */  0xE0, 0x68, 0xAC, 0xCF, 0x6C, 0x60, 0xB9, 0x17,  // .h..l`..
                /* 0660 */  0xB0, 0x1B, 0x1B, 0xDC, 0xD3, 0x1A, 0xEC, 0xBB,  // ........
                /* 0668 */  0xC3, 0xC3, 0xD9, 0x63, 0xDA, 0xA3, 0xDA, 0x03,  // ...c....
                /* 0670 */  0x9A, 0x8F, 0xD8, 0x31, 0xDE, 0xD2, 0x82, 0xC4,  // ...1....
                /* 0678 */  0x89, 0xF0, 0x3A, 0xF0, 0xB4, 0xE6, 0x4B, 0x46,  // ..:...KF
                /* 0680 */  0xBC, 0x40, 0x4F, 0x6B, 0xC6, 0x88, 0xF3, 0xD2,  // .@Ok....
                /* 0688 */  0x66, 0xC4, 0x57, 0x8A, 0x10, 0x0F, 0x6B, 0x3E,  // f.W...k>
                /* 0690 */  0xB9, 0x19, 0xEF, 0x61, 0x22, 0x5C, 0x98, 0x17,  // ...a"\..
                /* 0698 */  0xB6, 0xA7, 0x35, 0x70, 0xFC, 0xFF, 0x4F, 0x6B,  // ..5p..Ok
                /* 06A0 */  0x70, 0xE4, 0x5C, 0xB1, 0x01, 0x9A, 0x5C, 0xF4,  // p.\...\.
                /* 06A8 */  0x71, 0x87, 0x14, 0xB0, 0x5C, 0x1B, 0xD8, 0x2D,  // q...\..-
                /* 06B0 */  0x05, 0xDE, 0x05, 0x1B, 0x38, 0xFF, 0xFF, 0x8F,  // ....8...
                /* 06B8 */  0x28, 0xE0, 0xCB, 0x72, 0xC1, 0xA6, 0x39, 0x2E,  // (..r..9.
                /* 06C0 */  0xD8, 0x28, 0x0E, 0xAB, 0x01, 0xD2, 0x3C, 0xE1,  // .(....<.
                /* 06C8 */  0x5F, 0xAF, 0xC1, 0x3F, 0x09, 0x5F, 0xAF, 0x01,  // _..?._..
                /* 06D0 */  0xDB, 0xB7, 0x58, 0xDC, 0xF5, 0x1A, 0x58, 0xFD,  // ..X...X.
                /* 06D8 */  0xFF, 0xAF, 0xD7, 0xC0, 0x52, 0xF0, 0x48, 0xE9,  // ....R.H.
                /* 06E0 */  0x9D, 0x1A, 0x5C, 0x37, 0x6D, 0x3C, 0xE8, 0x9B,  // ..\7m<..
                /* 06E8 */  0x36, 0x4C, 0xC1, 0xB7, 0x28, 0x1A, 0x85, 0x5C,  // 6L..(..\
                /* 06F0 */  0xD1, 0x16, 0x42, 0x61, 0x7C, 0x8B, 0x02, 0x1C,  // ..Ba|...
                /* 06F8 */  0x61, 0xBF, 0x45, 0x81, 0xE5, 0xE2, 0xF4, 0x16,  // a.E.....
                /* 0700 */  0x85, 0x9F, 0x81, 0x07, 0xED, 0xBB, 0x0E, 0xC3,  // ........
                /* 0708 */  0xF4, 0x1D, 0x1A, 0xFE, 0xA9, 0xE9, 0xB9, 0xE9,  // ........
                /* 0710 */  0xC1, 0xE9, 0xA1, 0xD9, 0x07, 0x29, 0x1F, 0x0E,  // .....)..
                /* 0718 */  0x9E, 0x9F, 0xFE, 0xFF, 0x31, 0xDE, 0xEB, 0x7C,  // ....1..|
                /* 0720 */  0x93, 0x7A, 0x8D, 0xF2, 0x05, 0xE6, 0x18, 0x22,  // .z....."
                /* 0728 */  0x46, 0x79, 0x99, 0x36, 0x44, 0x3C, 0x9F, 0x9A,  // Fy.6D<..
                /* 0730 */  0x7C, 0x56, 0x88, 0x1B, 0xE2, 0x21, 0xDA, 0x08,  // |V...!..
                /* 0738 */  0x51, 0x9F, 0xA7, 0x3D, 0xA1, 0xD7, 0x28, 0xF0,  // Q..=..(.
                /* 0740 */  0x0A, 0xBA, 0x46, 0x01, 0x34, 0xB9, 0x1F, 0xE1,  // ..F.4...
                /* 0748 */  0xAE, 0x51, 0x60, 0xB9, 0x37, 0xB0, 0xF3, 0x10,  // .Q`.7...
                /* 0750 */  0xBF, 0x12, 0xF9, 0xDA, 0x00, 0xE3, 0x1E, 0x05,  // ........
                /* 0758 */  0xE7, 0xFF, 0x7F, 0x8F, 0x02, 0x6C, 0x84, 0xB9,  // .....l..
                /* 0760 */  0x47, 0xD1, 0x20, 0xF7, 0x28, 0xD4, 0xC9, 0xC4,  // G. .(...
                /* 0768 */  0x97, 0x3A, 0x4F, 0x14, 0x1C, 0xE1, 0x2F, 0x52,  // .:O.../R
                /* 0770 */  0xA8, 0xD8, 0x24, 0x0A, 0x7D, 0x18, 0x42, 0xC5,  // ..$.}.B.
                /* 0778 */  0x3C, 0x8C, 0x50, 0x10, 0x03, 0x3A, 0xC3, 0x89,  // <.P..:..
                /* 0780 */  0x02, 0xAD, 0xE2, 0x44, 0x41, 0x6E, 0x31, 0x9E,  // ...DAn1.
                /* 0788 */  0xD4, 0x63, 0x14, 0xE0, 0x6B, 0x99, 0x1E, 0x2A,  // .c..k..*
                /* 0790 */  0x8F, 0x3C, 0x54, 0x0A, 0xE2, 0xA1, 0x3A, 0xCE,  // .<T...:.
                /* 0798 */  0x50, 0xD1, 0x93, 0xF4, 0xFC, 0x31, 0xFF, 0xFF,  // P....1..
                /* 07A0 */  0x83, 0x03, 0xF6, 0x20, 0x05, 0xF0, 0x42, 0xF5,  // ... ..B.
                /* 07A8 */  0x41, 0x8A, 0x86, 0x21, 0x57, 0xB8, 0x85, 0x50,  // A..!W..P
                /* 07B0 */  0x18, 0x1F, 0xA4, 0x00, 0x47, 0x37, 0x4B, 0xDC,  // ....G7K.
                /* 07B8 */  0x41, 0x0A, 0xC6, 0xFF, 0xFF, 0x20, 0x85, 0x19,  // A.... ..
                /* 07C0 */  0x01, 0x7B, 0x8D, 0x3C, 0x47, 0xC5, 0x7A, 0x5A,  // .{.<G.zZ
                /* 07C8 */  0x67, 0xA0, 0x71, 0xDE, 0x8A, 0x7C, 0x16, 0x64,  // g.q..|.d
                /* 07D0 */  0x17, 0x16, 0x1F, 0x8B, 0x4C, 0xE0, 0x93, 0x14,  // ....L...
                /* 07D8 */  0x5C, 0x8C, 0xA7, 0x5B, 0x1F, 0x6A, 0x0D, 0xF2,  // \..[.j..
                /* 07E0 */  0xF0, 0xF4, 0x74, 0xEB, 0xB3, 0xD4, 0xFB, 0x53,  // ..t....S
                /* 07E8 */  0xA0, 0x43, 0x7D, 0x88, 0xB2, 0xB8, 0x11, 0x90,  // .C}.....
                /* 07F0 */  0xFB, 0xAD, 0xAF, 0x53, 0xCF, 0xB6, 0x46, 0x79,  // ...S..Fy
                /* 07F8 */  0x7A, 0x08, 0x1A, 0x27, 0x62, 0xB4, 0x98, 0x86,  // z..'b...
                /* 0800 */  0x0A, 0x14, 0xE5, 0xCD, 0xCA, 0x27, 0x29, 0x80,  // .....').
                /* 0808 */  0x65, 0xFF, 0xFF, 0x93, 0x14, 0xB8, 0x2E, 0x0E,  // e.......
                /* 0810 */  0xEC, 0xE0, 0x80, 0xBB, 0x37, 0xC0, 0x39, 0x49,  // ....7.9I
                /* 0818 */  0x01, 0x7E, 0xF2, 0x9C, 0xA4, 0xE8, 0x15, 0xD7,  // .~......
                /* 0820 */  0x27, 0x29, 0x2E, 0x0A, 0x42, 0x8A, 0x80, 0x34,  // ')..B..4
                /* 0828 */  0x51, 0xB0, 0x5C, 0x71, 0x01, 0x97, 0xFF, 0xFF,  // Q.\q....
                /* 0830 */  0x2B, 0x2E, 0xC0, 0xC7, 0x58, 0x12, 0xEE, 0xB7,  // +...X...
                /* 0838 */  0x98, 0x20, 0x30, 0xA8, 0xAB, 0x14, 0xF0, 0xFA,  // . 0.....
                /* 0840 */  0xFF, 0x5F, 0xA5, 0x80, 0xCB, 0x15, 0xE0, 0x55,  // ._.....U
                /* 0848 */  0x0A, 0x2C, 0x87, 0xA5, 0x27, 0x85, 0x07, 0x22,  // .,..'.."
                /* 0850 */  0x23, 0xF1, 0x17, 0xC9, 0x7B, 0x83, 0x8D, 0x63,  // #...{..c
                /* 0858 */  0x09, 0xD8, 0x37, 0x13, 0x36, 0xEF, 0x17, 0x29,  // ..7.6..)
                /* 0860 */  0x98, 0xEE, 0x8F, 0xB8, 0x04, 0xE2, 0x89, 0x21,  // .......!
                /* 0868 */  0xF0, 0x5B, 0xCE, 0x91, 0xBE, 0x41, 0x19, 0xE7,  // .[...A..
                /* 0870 */  0xF9, 0xD6, 0x58, 0x4F, 0xB7, 0xEC, 0xCA, 0x74,  // ..XO...t
                /* 0878 */  0x1E, 0x51, 0x62, 0x84, 0x7B, 0x86, 0x8A, 0x11,  // .Qb.{...
                /* 0880 */  0x25, 0xC6, 0x2B, 0x55, 0x90, 0x80, 0x21, 0x9E,  // %.+U..!.
                /* 0888 */  0xA9, 0x42, 0x3E, 0xED, 0x7A, 0xB2, 0x2F, 0x53,  // .B>.z./S
                /* 0890 */  0xB6, 0x7F, 0x93, 0x02, 0x71, 0xFC, 0x17, 0x83,  // ....q...
                /* 0898 */  0x6E, 0x24, 0xBE, 0x49, 0x01, 0xFE, 0xFE, 0xFF,  // n$.I....
                /* 08A0 */  0x37, 0x29, 0xE0, 0x17, 0x78, 0xE0, 0xE8, 0x81,  // 7)..x...
                /* 08A8 */  0x18, 0xFA, 0x91, 0xC5, 0xD3, 0xF0, 0x79, 0xC3,  // ......y.
                /* 08B0 */  0x67, 0x4A, 0x63, 0x1C, 0x93, 0x07, 0xC7, 0x63,  // gJc....c
                /* 08B8 */  0x8D, 0x9C, 0xDE, 0x8A, 0x7C, 0x9E, 0xE0, 0x87,  // ....|...
                /* 08C0 */  0x0B, 0x9F, 0x27, 0xD8, 0x89, 0xE1, 0x34, 0x9E,  // ..'...4.
                /* 08C8 */  0x03, 0x7C, 0x10, 0xC1, 0x1C, 0x27, 0x80, 0xCB,  // .|...'..
                /* 08D0 */  0x39, 0x00, 0x7C, 0xF7, 0x40, 0xDC, 0x0D, 0x0C,  // 9.|.@...
                /* 08D8 */  0x2C, 0x33, 0xC2, 0x8F, 0x08, 0xC6, 0x05, 0x0C,  // ,3......
                /* 08E0 */  0xB8, 0xFE, 0xFF, 0x2F, 0x60, 0xE0, 0x1C, 0x05,  // .../`...
                /* 08E8 */  0xCF, 0x77, 0xEB, 0x04, 0x14, 0xDF, 0x2B, 0xD8,  // .w....+.
                /* 08F0 */  0xD5, 0xE1, 0xF9, 0x01, 0x1C, 0xB7, 0x4E, 0xB8,  // ......N.
                /* 08F8 */  0x07, 0x1B, 0x5F, 0x5F, 0xCE, 0xF2, 0x4C, 0x5F,  // ..__..L_
                /* 0900 */  0x68, 0x9E, 0x6A, 0x18, 0xCC, 0xE3, 0x4D, 0x84,  // h.j...M.
                /* 0908 */  0x38, 0x51, 0x8C, 0x77, 0x96, 0x46, 0x79, 0xFF,  // 8Q.w.Fy.
                /* 0910 */  0x88, 0xF1, 0x6A, 0x13, 0x23, 0x4A, 0xA0, 0x48,  // ..j.#J.H
                /* 0918 */  0x06, 0x36, 0x50, 0xE0, 0xB7, 0x8A, 0x27, 0x12,  // .6P...'.
                /* 0920 */  0x83, 0xFA, 0xD6, 0x09, 0x7C, 0xFE, 0xFF, 0xB7,  // ....|...
                /* 0928 */  0x4E, 0x80, 0x41, 0x17, 0x07, 0x76, 0x4B, 0x81,  // N.A..vK.
                /* 0930 */  0x7F, 0x4A, 0x01, 0xBC, 0xFC, 0xFF, 0x4F, 0x29,  // .J....O)
                /* 0938 */  0x3C, 0xF9, 0xAD, 0x93, 0xA6, 0xBE, 0x75, 0x42,  // <.....uB
                /* 0940 */  0x99, 0x28, 0x58, 0x6E, 0x9D, 0xC0, 0xE0, 0x38,  // .(Xn...8
                /* 0948 */  0xF2, 0xD6, 0x09, 0xF8, 0xBE, 0x5B, 0xF8, 0xD6,  // .....[..
                /* 0950 */  0x09, 0xEC, 0xFF, 0xFF, 0xB7, 0x4E, 0x60, 0x11,  // .....N`.
                /* 0958 */  0x6D, 0x54, 0xF4, 0xAA, 0x89, 0x9F, 0xCF, 0xAB,  // mT......
                /* 0960 */  0x26, 0xCC, 0x0B, 0x28, 0xB8, 0xEE, 0x46, 0xC0,  // &..(..F.
                /* 0968 */  0x29, 0xD7, 0xFD, 0x8A, 0xDE, 0x43, 0x1D, 0x6C,  // )....C.l
                /* 0970 */  0x49, 0xF4, 0x2A, 0x0A, 0x78, 0xC2, 0x3E, 0x68,  // I.*.x.>h
                /* 0978 */  0xB0, 0x1D, 0x57, 0x38, 0xCA, 0xBB, 0x20, 0x16,  // ..W8.. .
                /* 0980 */  0xE8, 0xFF, 0x7F, 0x20, 0xBE, 0x5E, 0xC1, 0x3E,  // ... .^.>
                /* 0988 */  0x7B, 0x9E, 0xE3, 0xEB, 0xC2, 0x6B, 0x44, 0x84,  // {....kD.
                /* 0990 */  0x47, 0xAA, 0xC7, 0x86, 0x08, 0xCF, 0x55, 0xC1,  // G.....U.
                /* 0998 */  0x9E, 0xAA, 0xE2, 0xBC, 0x5E, 0xB1, 0x69, 0x3C,  // ....^.i<
                /* 09A0 */  0x61, 0xC5, 0x79, 0x16, 0xF5, 0x14, 0xA2, 0x3C,  // a.y....<
                /* 09A8 */  0x58, 0x45, 0x79, 0x10, 0x35, 0xE2, 0x0B, 0x41,  // XEy.5..A
                /* 09B0 */  0xE8, 0xC0, 0xF1, 0x82, 0x45, 0x37, 0x42, 0xAC,  // ....E7B.
                /* 09B8 */  0xD7, 0x2B, 0xF0, 0xCA, 0xB9, 0x5E, 0x01, 0x34,  // .+...^.4
                /* 09C0 */  0xB9, 0x52, 0x82, 0xF1, 0xCC, 0xE0, 0xFF, 0xFF,  // .R......
                /* 09C8 */  0xB4, 0x9E, 0x1B, 0xF8, 0xB5, 0x01, 0x7B, 0x6C,  // ......{l
                /* 09D0 */  0x60, 0xB7, 0x2B, 0xC0, 0xCF, 0xDD, 0xCA, 0x87,  // `.+.....
                /* 09D8 */  0x0E, 0x27, 0xBE, 0x5D, 0xA1, 0x0E, 0x26, 0xD6,  // .'.]..&.
                /* 09E0 */  0x73, 0xBB, 0x42, 0xCC, 0x13, 0xEE, 0xE5, 0x0A,  // s.B.....
                /* 09E8 */  0xE0, 0xC0, 0xFF, 0xFF, 0x72, 0x05, 0x78, 0x0F,  // ....r.x.
                /* 09F0 */  0x76, 0xB9, 0x02, 0x7A, 0x17, 0x23, 0x30, 0xC2,  // v..z.#0.
                /* 09F8 */  0xF7, 0x89, 0x23, 0x94, 0x47, 0x25, 0x5F, 0x8C,  // ..#.G%_.
                /* 0A00 */  0x60, 0x9C, 0x85, 0x81, 0xD7, 0xFF, 0xFF, 0x2C,  // `......,
                /* 0A08 */  0x0C, 0xD8, 0x18, 0xD6, 0x9B, 0x8F, 0x0F, 0x57,  // .......W
                /* 0A10 */  0x60, 0xB8, 0x5C, 0xC1, 0x3E, 0x33, 0xBC, 0x57,  // `.\.>3.W
                /* 0A18 */  0x19, 0xE2, 0x89, 0xEA, 0x81, 0xCA, 0x50, 0x2F,  // ......P/
                /* 0A20 */  0x57, 0x86, 0x89, 0x14, 0xE2, 0x6D, 0x98, 0xA1,  // W....m..
                /* 0A28 */  0x85, 0x88, 0x12, 0x2E, 0x88, 0x51, 0x7C, 0xBE,  // .....Q|.
                /* 0A30 */  0x32, 0x5C, 0xEC, 0xA7, 0x29, 0x9F, 0xAF, 0x82,  // 2\..)...
                /* 0A38 */  0x3D, 0x64, 0x85, 0x8D, 0x10, 0xE5, 0x59, 0x18,  // =d....Y.
                /* 0A40 */  0x70, 0xFC, 0xFF, 0x3F, 0x0B, 0x03, 0xBE, 0x2E,  // p..?....
                /* 0A48 */  0x0E, 0xEC, 0x96, 0x04, 0xEB, 0xE2, 0xE4, 0xDB,  // ........
                /* 0A50 */  0x15, 0xE0, 0xE8, 0x2C, 0x0C, 0x7B, 0xA2, 0xE0,  // ...,.{..
                /* 0A58 */  0xB8, 0x5E, 0x01, 0x93, 0xFF, 0xFF, 0x59, 0x18,  // .^....Y.
                /* 0A60 */  0xE0, 0xFF, 0xFF, 0xFF, 0x2C, 0x0C, 0xEE, 0xBB,  // ....,...
                /* 0A68 */  0x11, 0xE6, 0x7C, 0x05, 0xFB, 0x60, 0xA8, 0xFB,  // ..|..`..
                /* 0A70 */  0x15, 0x8D, 0xB4, 0x10, 0xC5, 0x5C, 0x12, 0x85,  // .....\..
                /* 0A78 */  0xF1, 0xFD, 0x0A, 0x70, 0x24, 0x78, 0xD0, 0xA0,  // ...p$x..
                /* 0A80 */  0x01, 0x8B, 0x12, 0xCC, 0xC7, 0x10, 0x4F, 0xE7,  // ......O.
                /* 0A88 */  0x78, 0x1F, 0x13, 0x5E, 0x03, 0x1E, 0x75, 0x3C,  // x..^..u<
                /* 0A90 */  0xE4, 0x47, 0x02, 0x5F, 0xB1, 0xC0, 0x7A, 0x88,  // .G._..z.
                /* 0A98 */  0x7A, 0xC1, 0xF2, 0xD5, 0xC6, 0x18, 0x11, 0x5E,  // z......^
                /* 0AA0 */  0x86, 0x0D, 0xF3, 0x5E, 0x15, 0xE2, 0x1D, 0xF8,  // ...^....
                /* 0AA8 */  0x15, 0xCB, 0x17, 0x8A, 0x60, 0x11, 0xA2, 0x3C,  // ....`..<
                /* 0AB0 */  0x0A, 0xBF, 0x0C, 0x1B, 0xCF, 0x90, 0x0F, 0x5A,  // .......Z
                /* 0AB8 */  0x06, 0x0A, 0x6B, 0xC8, 0x77, 0xE2, 0x18, 0x27,  // ..k.w..'
                /* 0AC0 */  0xE0, 0x3B, 0x85, 0xAF, 0x58, 0xF0, 0xFE, 0xFF,  // .;..X...
                /* 0AC8 */  0x57, 0x2C, 0xD8, 0xA2, 0xAE, 0x58, 0x00, 0x4D,  // W,...X.M
                /* 0AD0 */  0x4E, 0x0E, 0xB8, 0x2B, 0x16, 0x58, 0xEE, 0x0E,  // N..+.X..
                /* 0AD8 */  0xD8, 0xBB, 0x12, 0xFC, 0x4B, 0x16, 0x30, 0xFB,  // ....K.0.
                /* 0AE0 */  0xFF, 0x5F, 0xB2, 0x80, 0x85, 0x82, 0xB7, 0x82,  // ._......
                /* 0AE8 */  0xCE, 0x1E, 0x4E, 0x7F, 0xC9, 0x42, 0x9D, 0x44,  // ..N..B.D
                /* 0AF0 */  0xAC, 0x09, 0x48, 0x53, 0x05, 0xD7, 0x2D, 0x0B,  // ..HS..-.
                /* 0AF8 */  0x60, 0xDC, 0xFF, 0xFF, 0x96, 0x05, 0x78, 0x08,  // `.....x.
                /* 0B00 */  0x78, 0xCB, 0x02, 0x7A, 0x37, 0x24, 0xF0, 0xA2,  // x..z7$..
                /* 0B08 */  0xBC, 0x21, 0x61, 0x2F, 0x5A, 0xF0, 0x92, 0x5E,  // .!a/Z..^
                /* 0B10 */  0xB4, 0x68, 0x9C, 0xB5, 0x28, 0xE2, 0xAA, 0x28,  // .h..(..(
                /* 0B18 */  0x8C, 0x2F, 0x5A, 0x80, 0x9F, 0xFF, 0xFF, 0xB8,  // ./Z.....
                /* 0B20 */  0x7D, 0x6B, 0xC1, 0x8D, 0x1B, 0xEE, 0xE5, 0xC9,  // }k......
                /* 0B28 */  0x37, 0x1F, 0xCF, 0x36, 0xA2, 0xAF, 0x31, 0x98,  // 7..6..1.
                /* 0B30 */  0x73, 0x16, 0xBC, 0x6B, 0x16, 0xEC, 0x9B, 0xD5,  // s..k....
                /* 0B38 */  0x8B, 0xD5, 0x69, 0x3E, 0x59, 0x05, 0x79, 0xB8,  // ..i>Y.y.
                /* 0B40 */  0xF2, 0xF9, 0x2A, 0xF4, 0x1B, 0x56, 0x84, 0xF7,  // ..*..V..
                /* 0B48 */  0xAC, 0xD7, 0x2C, 0xDF, 0x89, 0xA3, 0xC4, 0x78,  // ..,....x
                /* 0B50 */  0x32, 0x36, 0x46, 0x94, 0x80, 0x51, 0x82, 0x45,  // 26F..Q.E
                /* 0B58 */  0x0D, 0xFC, 0x00, 0x11, 0x27, 0xC6, 0x8B, 0x56,  // ....'..V
                /* 0B60 */  0x98, 0x33, 0x78, 0xEA, 0xF2, 0x4D, 0xE2, 0x35,  // .3x..M.5
                /* 0B68 */  0x0B, 0xE0, 0xCF, 0xFF, 0xFF, 0x9A, 0x05, 0x8C,  // ........
                /* 0B70 */  0x6E, 0x0E, 0xFC, 0xE4, 0x80, 0xBD, 0x66, 0x01,  // n.....f.
                /* 0B78 */  0xDE, 0x2E, 0x59, 0x3E, 0x79, 0xF8, 0x74, 0xEC,  // ..Y>y.t.
                /* 0B80 */  0x6B, 0x16, 0x7E, 0xAA, 0xE0, 0xBA, 0x66, 0x01,  // k.~...f.
                /* 0B88 */  0x5E, 0xFE, 0xFF, 0xD7, 0x2C, 0x80, 0x61, 0xE1,  // ^...,.a.
                /* 0B90 */  0xAE, 0x59, 0x40, 0xEF, 0x7E, 0x04, 0xF6, 0xFF,  // .Y@.~...
                /* 0B98 */  0xFF, 0xFD, 0x08, 0xA6, 0xE6, 0x4B, 0x16, 0x0D,  // .....K..
                /* 0BA0 */  0xB3, 0x12, 0x85, 0x5B, 0x13, 0x85, 0xF1, 0x25,  // ...[...%
                /* 0BA8 */  0x0B, 0x70, 0x74, 0xC2, 0x06, 0xD3, 0x74, 0x7D,  // .pt...t}
                /* 0BB0 */  0xC1, 0xC6, 0x0D, 0xE6, 0xD4, 0xA2, 0x46, 0xE8,  // ......F.
                /* 0BB8 */  0x1D, 0x51, 0x17, 0x36, 0x76, 0x34, 0x06, 0xC7,  // .Q.6v4..
                /* 0BC0 */  0x15, 0xCB, 0x17, 0xAB, 0xF7, 0x2B, 0x1F, 0x87,  // .....+..
                /* 0BC8 */  0x7D, 0x66, 0x78, 0xBD, 0x32, 0xDA, 0x9B, 0xD5,  // }fx.2...
                /* 0BD0 */  0xB3, 0xC3, 0x3B, 0x96, 0xB1, 0x22, 0xF8, 0x68,  // ..;..".h
                /* 0BD8 */  0xEC, 0xC3, 0x96, 0xCF, 0x59, 0x51, 0x1E, 0x8E,  // ....YQ..
                /* 0BE0 */  0x8D, 0xF9, 0x88, 0x15, 0xE8, 0x3C, 0x02, 0x87,  // .....<..
                /* 0BE8 */  0x88, 0x16, 0x2B, 0x6C, 0x88, 0x77, 0x2C, 0xF0,  // ..+l.w,.
                /* 0BF0 */  0x0A, 0xBA, 0x63, 0x81, 0xF8, 0xFF, 0x7F, 0xC7,  // ..c.....
                /* 0BF8 */  0x02, 0x6C, 0x9F, 0x3D, 0x70, 0x77, 0x2C, 0xB0,  // .l.=pw,.
                /* 0C00 */  0x5C, 0x1C, 0xD8, 0xC1, 0x89, 0xDF, 0x1B, 0xF0,  // \.......
                /* 0C08 */  0x37, 0x2C, 0xC0, 0x53, 0x9A, 0x1B, 0x16, 0x4D,  // 7,.S...M
                /* 0C10 */  0x72, 0xC3, 0x42, 0x1D, 0x4D, 0xAC, 0x47, 0xC1,  // r.B.M.G.
                /* 0C18 */  0xFF, 0xFF, 0xC4, 0xC1, 0x27, 0x0A, 0xFB, 0x7E,  // ....'..~
                /* 0C20 */  0x05, 0xFE, 0x59, 0xF8, 0x7E, 0x05, 0xD8, 0xC6,  // ..Y.~...
                /* 0C28 */  0x7F, 0xBF, 0x02, 0x2C, 0xFD, 0xFF, 0xEF, 0x57,  // ...,...W
                /* 0C30 */  0xF0, 0x0F, 0x8C, 0x1E, 0xA9, 0x2F, 0x55, 0xE0,  // ...../U.
                /* 0C38 */  0xBA, 0x6A, 0xE1, 0x41, 0x5F, 0xB5, 0x60, 0xE6,  // .j.A_.`.
                /* 0C40 */  0x3C, 0xFE, 0xA2, 0x02, 0x1E, 0x7F, 0x01, 0xAD,  // <.......
                /* 0C48 */  0x37, 0x29, 0x7E, 0x50, 0x7A, 0x56, 0x78, 0x22,  // 7)~PzVx"
                /* 0C50 */  0x32, 0x1A, 0x47, 0x7A, 0x73, 0xB0, 0x71, 0x2C,  // 2.Gzs.q,
                /* 0C58 */  0x81, 0x1B, 0xD1, 0xC7, 0x5F, 0x30, 0x8C, 0xE0,  // ...._0..
                /* 0C60 */  0xE1, 0xE9, 0x99, 0xE1, 0x35, 0xCA, 0xD7, 0x27,  // ....5..'
                /* 0C68 */  0xDF, 0xA5, 0x9E, 0xA1, 0x82, 0x3D, 0x4D, 0xF9,  // .....=M.
                /* 0C70 */  0x02, 0xEC, 0xAB, 0x94, 0x71, 0xDE, 0xA2, 0xA2,  // ....q...
                /* 0C78 */  0xC4, 0x79, 0x8A, 0x32, 0x66, 0x94, 0x70, 0x11,  // .y.2f.p.
                /* 0C80 */  0x22, 0x3D, 0x53, 0x19, 0x22, 0x7C, 0x84, 0x68,  // "=S."|.h
                /* 0C88 */  0xCF, 0x53, 0x8F, 0x53, 0xBE, 0x4A, 0xF1, 0xFF,  // .S.S.J..
                /* 0C90 */  0xFF, 0x55, 0x0A, 0x7C, 0x92, 0xAE, 0x52, 0x00,  // .U.|..R.
                /* 0C98 */  0x4D, 0x86, 0xFF, 0x2A, 0x05, 0xD6, 0x93, 0x03,  // M..*....
                /* 0CA0 */  0xFE, 0xE2, 0x80, 0x3D, 0x38, 0xB0, 0xBB, 0x14,  // ...=8...
                /* 0CA8 */  0x70, 0xF9, 0xFF, 0x9F, 0x7E, 0x81, 0xEF, 0x4C,  // p...~..L
                /* 0CB0 */  0xC1, 0x74, 0xFA, 0x05, 0x58, 0xF6, 0xFF, 0x3F,  // .t..X..?
                /* 0CB8 */  0xFD, 0x02, 0xEC, 0xB8, 0x1E, 0x81, 0x2F, 0xF9,  // ....../.
                /* 0CC0 */  0x1D, 0x8B, 0x46, 0x5A, 0x89, 0xA2, 0xAE, 0x89,  // ..FZ....
                /* 0CC8 */  0xC2, 0xF8, 0x8E, 0x05, 0x98, 0xF9, 0xFF, 0xDF,  // ........
                /* 0CD0 */  0xB1, 0x30, 0x57, 0x35, 0x8F, 0x1A, 0x2C, 0xC3,  // .0W5..,.
                /* 0CD8 */  0x7A, 0xFF, 0xF1, 0x68, 0xDF, 0x12, 0x0E, 0xF8,  // z..h....
                /* 0CE0 */  0x7C, 0x0D, 0x76, 0x16, 0x6F, 0xD1, 0xF0, 0x6F,  // |.v.o..o
                /* 0CE8 */  0x59, 0xB0, 0xA7, 0xF0, 0x60, 0xF5, 0x10, 0xF3,  // Y...`...
                /* 0CF0 */  0x26, 0x70, 0xA4, 0x6F, 0x52, 0x2F, 0xBE, 0x6C,  // &p.oR/.l
                /* 0CF8 */  0x64, 0x11, 0x7C, 0xA0, 0x78, 0xCB, 0x32, 0x50,  // d.|.x.2P
                /* 0D00 */  0xCC, 0xB7, 0xAB, 0xA7, 0x60, 0x63, 0x44, 0x88,  // ....`cD.
                /* 0D08 */  0xF5, 0x0A, 0xEC, 0xF3, 0x43, 0xD0, 0x30, 0x91,  // ....C.0.
                /* 0D10 */  0x18, 0x66, 0x74, 0x1F, 0xB3, 0x7C, 0xCB, 0x02,  // .ft..|..
                /* 0D18 */  0xAF, 0xB0, 0x5B, 0x16, 0x20, 0xFE, 0xFF, 0x7F,  // ..[. ...
                /* 0D20 */  0xCB, 0x02, 0xDB, 0x09, 0x01, 0x77, 0xCB, 0x02,  // .....w..
                /* 0D28 */  0xCF, 0xDD, 0x81, 0x9D, 0x1D, 0x70, 0x57, 0x07,  // .....pW.
                /* 0D30 */  0xEC, 0xD1, 0x01, 0x0B, 0xF9, 0x10, 0x0C, 0x38,  // .......8
                /* 0D38 */  0x52, 0xF1, 0x5A, 0xD0, 0xB5, 0x8A, 0x80, 0xE8,  // R.Z.....
                /* 0D40 */  0xA2, 0xC5, 0x8F, 0x13, 0xD6, 0x75, 0xD1, 0x22,  // .....u."
                /* 0D48 */  0x93, 0x05, 0xE3, 0x55, 0x0B, 0x98, 0xFF, 0xFF,  // ...U....
                /* 0D50 */  0xAF, 0x5A, 0x00, 0xFF, 0x02, 0x5E, 0xB5, 0x80,  // .Z...^..
                /* 0D58 */  0xDE, 0x2D, 0x09, 0xFE, 0xFF, 0xFF, 0x96, 0x04,  // .-......
                /* 0D60 */  0xFE, 0xCB, 0x16, 0xE0, 0xF8, 0x02, 0xE5, 0xDB,  // ........
                /* 0D68 */  0x8F, 0x2F, 0x5B, 0xC0, 0xE5, 0x72, 0x1C, 0xE1,  // ./[..r..
                /* 0D70 */  0x40, 0x9F, 0xB0, 0x5E, 0x8E, 0x1F, 0x92, 0x0D,  // @..^....
                /* 0D78 */  0xF5, 0x94, 0x15, 0xE4, 0x05, 0xEB, 0x9D, 0xEA,  // ........
                /* 0D80 */  0xFD, 0xD8, 0x60, 0x07, 0x17, 0x2D, 0x50, 0x94,  // ..`..-P.
                /* 0D88 */  0xC7, 0x87, 0xF7, 0xE3, 0xE7, 0xAC, 0x37, 0x2E,  // ......7.
                /* 0D90 */  0x83, 0x18, 0xEB, 0x55, 0xD9, 0x57, 0x2F, 0x1F,  // ...U.W/.
                /* 0D98 */  0xB8, 0x42, 0x1C, 0xD3, 0x23, 0xB3, 0x2F, 0x5B,  // .B..#./[
                /* 0DA0 */  0xE0, 0xFF, 0xFF, 0x5F, 0xB6, 0x00, 0x46, 0xDD,  // ..._..F.
                /* 0DA8 */  0x1D, 0xF8, 0x65, 0x0B, 0xB0, 0xF4, 0xFF, 0xBF,  // ..e.....
                /* 0DB0 */  0x6C, 0x01, 0x87, 0xC9, 0x82, 0xF3, 0xB2, 0x05,  // l.......
                /* 0DB8 */  0xF0, 0xF0, 0xFF, 0x7F, 0xD9, 0x02, 0xCC, 0xDF,  // ........
                /* 0DC0 */  0x92, 0xC0, 0x9B, 0xFF, 0xB2, 0x45, 0x43, 0xAD,  // .....EC.
                /* 0DC8 */  0x45, 0x61, 0x57, 0x45, 0x61, 0x7C, 0xD9, 0x02,  // EaWEa|..
                /* 0DD0 */  0x1C, 0x8D, 0xDC, 0xE3, 0xC6, 0xFE, 0xFF, 0xC7,  // ........
                /* 0DD8 */  0x0D, 0xFF, 0x36, 0x15, 0xE4, 0x55, 0xC8, 0x40,  // ..6..U.@
                /* 0DE0 */  0x21, 0x0F, 0xEE, 0xBC, 0xC1, 0x70, 0xDB, 0x82,  // !....p..
                /* 0DE8 */  0x7D, 0xBC, 0x7A, 0x9F, 0x7A, 0xD4, 0xF2, 0xD9,  // }.z.z...
                /* 0DF0 */  0xD8, 0x67, 0xAC, 0x08, 0x2F, 0x5A, 0x46, 0x0B,  // .g../ZF.
                /* 0DF8 */  0xF5, 0x9E, 0xEC, 0xF1, 0x86, 0x8A, 0xE5, 0x7B,  // .......{
                /* 0E00 */  0xB2, 0xCF, 0x15, 0x91, 0xDE, 0x98, 0x8D, 0xF7,  // ........
                /* 0E08 */  0xA2, 0x6C, 0xAC, 0x37, 0xAF, 0x60, 0xA1, 0xC2,  // .l.7.`..
                /* 0E10 */  0x18, 0xF6, 0x09, 0xCB, 0xB7, 0x2D, 0x80, 0x49,  // .....-.I
                /* 0E18 */  0xFF, 0xFF, 0xDB, 0x16, 0xF0, 0x39, 0x3C, 0x60,  // .....9<`
                /* 0E20 */  0x6F, 0x4C, 0xF0, 0x6F, 0x5B, 0x80, 0x1F, 0x25,  // oL.o[..%
                /* 0E28 */  0xB7, 0x2D, 0x7A, 0xDF, 0xF2, 0x6D, 0x8B, 0xDF,  // .-z..m..
                /* 0E30 */  0x2B, 0x12, 0x54, 0x76, 0xDB, 0x42, 0x4D, 0x16,  // +.Tv.BM.
                /* 0E38 */  0x6C, 0xD7, 0x2D, 0xC0, 0xC7, 0xFF, 0xFF, 0xBA,  // l.-.....
                /* 0E40 */  0x05, 0x70, 0x2D, 0xE2, 0x75, 0x0B, 0xE8, 0xDD,  // .p-.u...
                /* 0E48 */  0x93, 0xC0, 0xF9, 0xFF, 0xBF, 0x27, 0x81, 0x4F,  // .....'.O
                /* 0E50 */  0xC5, 0x4F, 0xCB, 0x04, 0x8A, 0xB5, 0x18, 0x05,  // .O......
                /* 0E58 */  0x5E, 0x16, 0x85, 0xF1, 0x7D, 0x0B, 0x70, 0x74,  // ^...}.pt
                /* 0E60 */  0xCB, 0xC1, 0x9D, 0xB9, 0x81, 0x11, 0xD0, 0xD9,  // ........
                /* 0E68 */  0xF8, 0xC2, 0x05, 0x7F, 0xA4, 0x0F, 0x0E, 0x0F,  // ........
                /* 0E70 */  0x55, 0xBE, 0x20, 0xFB, 0x7E, 0xFC, 0xA4, 0xE5,  // U. .~...
                /* 0E78 */  0x53, 0xB2, 0x4F, 0x5D, 0xBE, 0x70, 0xB1, 0xE3,  // S.O].p..
                /* 0E80 */  0x16, 0x3F, 0x7A, 0x19, 0x23, 0x4A, 0xCC, 0x28,  // .?z.#J.(
                /* 0E88 */  0x91, 0x62, 0x44, 0xF3, 0x8D, 0x2B, 0x72, 0x90,  // .bD..+r.
                /* 0E90 */  0x03, 0x30, 0xC4, 0x0B, 0x17, 0x78, 0xA5, 0x5D,  // .0...x.]
                /* 0E98 */  0xB8, 0xD0, 0xFF, 0xFF, 0x0B, 0x17, 0xC0, 0x0B,  // ........
                /* 0EA0 */  0x94, 0x17, 0x2E, 0xF0, 0xDD, 0x1E, 0xF8, 0x8D,  // ........
                /* 0EA8 */  0x17, 0x4C, 0x87, 0x07, 0x7E, 0xE3, 0x02, 0xEE,  // .L..~...
                /* 0EB0 */  0xFF, 0xFF, 0x1B, 0x17, 0x38, 0xB4, 0xDC, 0xB8,  // ....8...
                /* 0EB8 */  0xA8, 0x8E, 0x1B, 0x17, 0x94, 0xD9, 0x82, 0xF7,  // ........
                /* 0EC0 */  0xC6, 0x05, 0xF0, 0xF0, 0xFF, 0x7F, 0xE3, 0x02,  // ........
                /* 0EC8 */  0xC6, 0x21, 0x6F, 0x5C, 0x40, 0xEF, 0xA6, 0x04,  // .!o\@...
                /* 0ED0 */  0x3C, 0xAF, 0x5C, 0x80, 0xC5, 0xFF, 0xFF, 0xC9,  // <.\.....
                /* 0ED8 */  0x1B, 0x38, 0x5D, 0xB9, 0xC0, 0x72, 0xC8, 0x7A,  // .8]..r.z
                /* 0EE0 */  0xC7, 0x3A, 0x8B, 0xB7, 0xAA, 0x38, 0xAF, 0xCC,  // .:...8..
                /* 0EE8 */  0xBE, 0x53, 0x3C, 0x6B, 0xF9, 0x9E, 0x15, 0x29,  // .S<k...)
                /* 0EF0 */  0xC2, 0x2B, 0x97, 0xAF, 0xCA, 0x3E, 0x6C, 0x45,  // .+...>lE
                /* 0EF8 */  0x89, 0x11, 0x28, 0xE8, 0x7B, 0x17, 0x9B, 0xC5,  // ..(.{...
                /* 0F00 */  0x53, 0xD7, 0x33, 0xD7, 0x23, 0xB3, 0xD1, 0x82,  // S.3.#...
                /* 0F08 */  0x85, 0x0D, 0x13, 0x3E, 0xC6, 0x2B, 0x17, 0xC0,  // ...>.+..
                /* 0F10 */  0x9E, 0xFF, 0xFF, 0x95, 0x0B, 0x38, 0xDD, 0x1E,  // .....8..
                /* 0F18 */  0xF8, 0x95, 0x0B, 0xB0, 0x3D, 0x5B, 0xF0, 0x5E,  // ....=[.^
                /* 0F20 */  0xB9, 0x80, 0xFD, 0xFF, 0xFF, 0xCA, 0x05, 0xF0,  // ........
                /* 0F28 */  0xFF, 0xFF, 0x7F, 0x53, 0x02, 0x0E, 0x3A, 0xAE,  // ...S..:.
                /* 0F30 */  0x5C, 0x80, 0xEC, 0xD3, 0x37, 0xD8, 0x66, 0xCE,  // \...7.f.
                /* 0F38 */  0xAF, 0x5C, 0x70, 0x6F, 0x03, 0x4F, 0x39, 0x3E,  // .\po.O9>
                /* 0F40 */  0x65, 0x3D, 0x63, 0x3D, 0x70, 0xF9, 0xB6, 0xCC,  // e=c=p...
                /* 0F48 */  0x86, 0x1B, 0xEE, 0x5D, 0xEB, 0x6D, 0xCB, 0x07,  // ...].m..
                /* 0F50 */  0x66, 0x43, 0x3C, 0x35, 0xFB, 0xC8, 0x15, 0x2A,  // fC<5...*
                /* 0F58 */  0x8A, 0x31, 0xA2, 0xBC, 0x3C, 0x1B, 0x29, 0x44,  // .1..<.)D
                /* 0F60 */  0xD4, 0x78, 0x31, 0x82, 0x47, 0x7A, 0xA4, 0xF1,  // .x1.Gz..
                /* 0F68 */  0x95, 0x0B, 0x8C, 0xFF, 0xFF, 0x2B, 0x17, 0xC0,  // .....+..
                /* 0F70 */  0xB2, 0xD3, 0x03, 0xF6, 0xD6, 0x04, 0x8E, 0x2B,  // .......+
                /* 0F78 */  0x17, 0xF0, 0xFC, 0xFF, 0x5F, 0xB9, 0xC0, 0xAB,  // ...._...
                /* 0F80 */  0xE6, 0xCA, 0x45, 0x95, 0x5C, 0xB9, 0x50, 0xF2,  // ..E.\.P.
                /* 0F88 */  0x20, 0xA4, 0xED, 0xCA, 0x85, 0x9A, 0x2D, 0x18,  //  .....-.
                /* 0F90 */  0xEF, 0x5C, 0x00, 0xE3, 0xFE, 0xFF, 0x77, 0x2E,  // .\....w.
                /* 0F98 */  0x80, 0x1B, 0x57, 0x25, 0xB0, 0x2A, 0xB4, 0xE9,  // ..W%.*..
                /* 0FA0 */  0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65, 0x6A, 0x94,  // S.Q..ej.
                /* 0FA8 */  0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6, 0x8C, 0xD5,  // iP.O....
                /* 0FB0 */  0xB9, 0x08, 0xF9, 0x96, 0x41, 0xC5, 0xAC, 0x4D,  // ....A..M
                /* 0FB8 */  0x83, 0x73, 0x14, 0x10, 0x2A, 0x5B, 0x02, 0x08,  // .s..*[..
                /* 0FC0 */  0x0B, 0xF9, 0x1F, 0x12, 0xA0, 0x83, 0x7D, 0xBE,  // ......}.
                /* 0FC8 */  0x34, 0x62, 0xB2, 0x34, 0x81, 0x38, 0xBE, 0x09,  // 4b.4.8..
                /* 0FD0 */  0x88, 0x46, 0x8E, 0x93, 0x56, 0x01, 0xC4, 0x72,  // .F..V..r
                /* 0FD8 */  0x83, 0x08, 0xC8, 0x2A, 0x16, 0x2E, 0x20, 0x6B,  // ...*.. k
                /* 0FE0 */  0xFE, 0xE5, 0x08, 0xDC, 0x3A, 0x75, 0x00, 0xB1,  // ....:u..
                /* 0FE8 */  0x94, 0x20, 0x34, 0xD1, 0x93, 0x40, 0xA0, 0x8E,  // . 4..@..
                /* 0FF0 */  0x07, 0xA2, 0xC1, 0x10, 0x1A, 0x01, 0x39, 0x18,  // ......9.
                /* 0FF8 */  0x85, 0x80, 0x2C, 0xC3, 0x09, 0x38, 0x13, 0x60,  // ..,..8.`
                /* 1000 */  0xE5, 0xFF, 0x0F, 0xC4, 0xE4, 0x83, 0x50, 0xC1,  // ......P.
                /* 1008 */  0x5E, 0x40, 0x99, 0x7A, 0x10, 0x01, 0x59, 0xE9,  // ^@.z..Y.
                /* 1010 */  0xD2, 0x05, 0x64, 0xDD, 0x20, 0x02, 0x72, 0x56,  // ..d. .rV
                /* 1018 */  0x33, 0xE0, 0x2C, 0xA3, 0x1B, 0x20, 0xA6, 0xF0,  // 3.,.. ..
                /* 1020 */  0x09, 0x21, 0x10, 0x6B, 0xD2, 0x03, 0xCA, 0x04,  // .!.k....
                /* 1028 */  0x82, 0xE8, 0x2A, 0x42, 0xFC, 0x00, 0x31, 0x69,  // ..*B..1i
                /* 1030 */  0x20, 0x02, 0x72, 0x9C, 0x8B, 0x8B, 0xC0, 0x1D,  //  .r.....
                /* 1038 */  0x47, 0x11, 0x20, 0x75, 0x34, 0x5C, 0x0A, 0x42,  // G. u4\.B
                /* 1040 */  0xC5, 0x7F, 0xD9, 0x04, 0x62, 0x41, 0x96, 0xC0,  // ....bA..
                /* 1048 */  0x28, 0x08, 0x8D, 0xA0, 0x09, 0x84, 0xC9, 0xF3,  // (.......
                /* 1050 */  0x04, 0xC2, 0x42, 0x89, 0x1A, 0x02, 0x0B, 0xA2,  // ..B.....
                /* 1058 */  0x6A, 0x88, 0xD4, 0x15, 0x08, 0x0B, 0xFC, 0x64,  // j......d
                /* 1060 */  0xD0, 0x60, 0x9C, 0x1E, 0x44, 0x40, 0x4E, 0xFA,  // .`..D@N.
                /* 1068 */  0xF2, 0x0A, 0x44, 0x72, 0x83, 0x08, 0xC8, 0xF9,  // ..Dr....
                /* 1070 */  0x9F, 0x28, 0x02, 0x77, 0xEA, 0x77, 0x86, 0x86,  // .(.w.w..
                /* 1078 */  0x4F, 0x3E, 0x5F, 0x41, 0x88, 0xB8, 0x1F, 0x58,  // O>_A...X
                /* 1080 */  0x50, 0xA2, 0x14, 0x44, 0x40, 0x56, 0xF6, 0xFF,  // P..D@V..
                /* 1088 */  0x12, 0x90, 0x75, 0x82, 0x08, 0xC8, 0x7A, 0x9F,  // ..u...z.
                /* 1090 */  0xD5, 0x0F, 0x02, 0xEC, 0x1F, 0xF6, 0x20, 0xC0,  // ...... .
                /* 1098 */  0x40, 0x68, 0xAA, 0xE7, 0x97, 0x40, 0x1D, 0x11,  // @h...@..
                /* 10A0 */  0x44, 0x03, 0x25, 0xEA, 0x80, 0x58, 0x38, 0x10,  // D.%..X8.
                /* 10A8 */  0x0D, 0x90, 0xB8, 0x03, 0x67, 0xD1, 0xEC, 0x01,  // ....g...
                /* 10B0 */  0x31, 0x61, 0xDF, 0x16, 0x81, 0x58, 0x88, 0x3F,  // 1a...X.?
                /* 10B8 */  0x10, 0x26, 0xFD, 0xF5, 0x21, 0x40, 0x4B, 0x7E,  // .&..!@K~
                /* 10C0 */  0x08, 0x1D, 0x20, 0x03, 0xA1, 0x01, 0x7F, 0x24,  // .. ....$
                /* 10C8 */  0x1A, 0x82, 0xD3, 0x82, 0x08, 0xC8, 0xC9, 0x1E,  // ........
                /* 10D0 */  0x23, 0x02, 0x72, 0x4E, 0x10, 0x0D, 0x8C, 0xFC,  // #.rN....
                /* 10D8 */  0xDE, 0x82, 0x13, 0x3D, 0x1F, 0x40, 0x01, 0x39,  // ...=.@.9
                /* 10E0 */  0x0D, 0x08, 0x55, 0xEE, 0x12, 0x94, 0xC5, 0x00,  // ..U.....
                /* 10E8 */  0x11, 0x90, 0x25, 0xBF, 0x30, 0x02, 0x91, 0x00,  // ..%.0...
                /* 10F0 */  0x20, 0x1A, 0x08, 0xF9, 0x74, 0x04, 0x27, 0x41,  //  ...t.'A
                /* 10F8 */  0x7D, 0x02, 0x31, 0x99, 0x6F, 0x92, 0x47, 0x09,  // }.1.o.G.
                /* 1100 */  0xA6, 0xF4, 0xFF, 0x0F, 0xCA, 0x34, 0x82, 0x08,  // .....4..
                /* 1108 */  0xC8, 0x7A, 0x3E, 0x25, 0x02, 0xB2, 0x3A, 0x10,  // .z>%..:.
                /* 1110 */  0x01, 0x39, 0xCF, 0xD3, 0x24, 0x38, 0x49, 0xA3,  // .9..$8I.
                /* 1118 */  0x15, 0x88, 0x69, 0x79, 0x88, 0x04, 0x21, 0x0A,  // ..iy..!.
                /* 1120 */  0xDE, 0x2C, 0x41, 0x89, 0x1C, 0x10, 0x01, 0x39,  // .,A....9
                /* 1128 */  0x3A, 0x10, 0x15, 0xA2, 0x16, 0x88, 0x05, 0x70,  // :......p
                /* 1130 */  0x0B, 0xCE, 0xA4, 0xDB, 0x05, 0x62, 0xC1, 0x41,  // .....b.A
                /* 1138 */  0x68, 0xDC, 0x1F, 0x4B, 0x50, 0x92, 0x1D, 0x44,  // h..KP..D
                /* 1140 */  0x40, 0xCE, 0x29, 0x18, 0x88, 0xA5, 0x06, 0xD1,  // @.).....
                /* 1148 */  0x61, 0x82, 0x7C, 0xC6, 0x82, 0x13, 0x85, 0xAF,  // a.|.....
                /* 1150 */  0x13, 0x01, 0x39, 0x1F, 0x08, 0x4D, 0xF3, 0x1B,  // ..9..M..
                /* 1158 */  0x09, 0x4A, 0xA2, 0x81, 0x08, 0xC8, 0x31, 0xBE,  // .J....1.
                /* 1160 */  0x33, 0x02, 0x72, 0x28, 0x10, 0x01, 0x39, 0xDC,  // 3.r(..9.
                /* 1168 */  0x3B, 0x45, 0xE0, 0x8E, 0xA5, 0x1A, 0x88, 0x89,  // ;E......
                /* 1170 */  0xFA, 0xD0, 0x3D, 0x0C, 0xB0, 0x3F, 0x4B, 0x50,  // ..=..?KP
                /* 1178 */  0xA2, 0x0A, 0x44, 0xC3, 0x23, 0x0F, 0x15, 0x01,  // ..D.#...
                /* 1180 */  0x59, 0x0F, 0x88, 0x80, 0x9C, 0xE1, 0x9B, 0x12,  // Y.......
                /* 1188 */  0x9C, 0x24, 0x30, 0x7E, 0x74, 0xA0, 0x20, 0x34,  // .$0~t. 4
                /* 1190 */  0xFD, 0xB3, 0x25, 0x28, 0x91, 0xF2, 0xF8, 0x11,  // ..%(....
                /* 1198 */  0x90, 0x63, 0x83, 0x08, 0xC8, 0x22, 0xBE, 0x2B,  // .c...".+
                /* 11A0 */  0x0F, 0x17, 0xEC, 0x27, 0xA9, 0x81, 0x92, 0xC7,  // ...'....
                /* 11A8 */  0x8A, 0x06, 0x4A, 0x40, 0x68, 0x6C, 0xF5, 0xA0,  // ..J@hl..
                /* 11B0 */  0x4C, 0x83, 0x7B, 0x20, 0x96, 0x17, 0x44, 0xC7,  // L.{ ..D.
                /* 11B8 */  0x0A, 0x02, 0x44, 0x55, 0xDB, 0x07, 0x67, 0xAA,  // ..DU..g.
                /* 11C0 */  0xFD, 0x03, 0xB1, 0xCC, 0x20, 0xBC, 0x00, 0x28,  // .... ..(
                /* 11C8 */  0x5B, 0x52, 0x20, 0x16, 0x16, 0x44, 0x40, 0x8E,  // [R ..D@.
                /* 11D0 */  0x0E, 0x44, 0x45, 0x47, 0x00, 0x67, 0xB2, 0x33,  // .DEG.g.3
                /* 11D8 */  0x00, 0xB1, 0xD0, 0x20, 0x34, 0x76, 0x88, 0xC1,  // ... 4v..
                /* 11E0 */  0xD0, 0x12, 0x83, 0xA1, 0x20, 0x1A, 0x0C, 0x01,  // .... ...
                /* 11E8 */  0xA2, 0xCA, 0x5B, 0x80, 0x33, 0xED, 0x35, 0x80,  // ..[.3.5.
                /* 11F0 */  0x58, 0x72, 0x10, 0x9A, 0xBD, 0xC7, 0xE1, 0x80,  // Xr......
                /* 11F8 */  0x06, 0xF9, 0xFF, 0x0F, 0x82, 0x82, 0x08, 0xC8,  // ........
                /* 1200 */  0x12, 0x8A, 0x1C, 0x5A, 0x68, 0x12, 0x70, 0x16,  // ...Zh.p.
                /* 1208 */  0xE0, 0x31, 0xA5, 0x23, 0x0D, 0x01, 0xA1, 0x12,  // .1.#....
                /* 1210 */  0xBA, 0x1C, 0x00, 0x28, 0x88, 0x86, 0x40, 0x80,  // ...(..@.
                /* 1218 */  0xA8, 0x92, 0x30, 0x40, 0xEC, 0xFF, 0x0F         // ..0@...
            })
        }

        Device (WMI2)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_WDG, Buffer (0x78)
            {
                /* 0000 */  0xF1, 0x24, 0xB4, 0xFC, 0x5A, 0x07, 0x0E, 0x4E,  // .$..Z..N
                /* 0008 */  0xBF, 0xC4, 0x62, 0xF3, 0xE7, 0x17, 0x71, 0xFA,  // ..b...q.
                /* 0010 */  0x41, 0x37, 0x01, 0x01, 0xE3, 0x5E, 0xBE, 0xE2,  // A7...^..
                /* 0018 */  0xDA, 0x42, 0xDB, 0x49, 0x83, 0x78, 0x1F, 0x52,  // .B.I.x.R
                /* 0020 */  0x47, 0x38, 0x82, 0x02, 0x41, 0x38, 0x01, 0x02,  // G8..A8..
                /* 0028 */  0x9A, 0x01, 0x30, 0x74, 0xE9, 0xDC, 0x48, 0x45,  // ..0t..HE
                /* 0030 */  0xBA, 0xB0, 0x9F, 0xDE, 0x09, 0x35, 0xCA, 0xFF,  // .....5..
                /* 0038 */  0x41, 0x39, 0x14, 0x05, 0x03, 0x70, 0xF4, 0x7F,  // A9...p..
                /* 0040 */  0x6C, 0x3B, 0x5E, 0x4E, 0xA2, 0x27, 0xE9, 0x79,  // l;^N.'.y
                /* 0048 */  0x82, 0x4A, 0x85, 0xD1, 0x41, 0x41, 0x01, 0x06,  // .J..AA..
                /* 0050 */  0x20, 0x63, 0x11, 0x91, 0x7E, 0x59, 0x98, 0x45,  //  c..~Y.E
                /* 0058 */  0xA1, 0x02, 0x4A, 0xEC, 0x83, 0x75, 0xC6, 0x49,  // ..J..u.I
                /* 0060 */  0x41, 0x42, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // AB..!...
                /* 0068 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0070 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x42, 0x01, 0x00   // ..).BB..
            })
            Name (PREL, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Method (WQA7, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WMIS (0x07, Zero)
                PREL [Zero] = WLS0 /* \_SB_.WLS0 */
                PREL [One] = WLS1 /* \_SB_.WLS1 */
                PREL [0x02] = WLS2 /* \_SB_.WLS2 */
                PREL [0x03] = WLS3 /* \_SB_.WLS3 */
                PREL [0x04] = WLS4 /* \_SB_.WLS4 */
                PREL [0x05] = WLS5 /* \_SB_.WLS5 */
                PREL [0x06] = WLS6 /* \_SB_.WLS6 */
                PREL [0x07] = WLS7 /* \_SB_.WLS7 */
                Release (\_SB.WMI1.MWMI)
                Return (PREL) /* \_SB_.WMI2.PREL */
            }

            Method (WMA8, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, PRE0)
                CreateByteField (Arg2, One, PRE1)
                CreateByteField (Arg2, 0x02, PRE2)
                CreateByteField (Arg2, 0x03, PRE3)
                CreateByteField (Arg2, 0x04, PRE4)
                CreateByteField (Arg2, 0x05, PRE5)
                CreateByteField (Arg2, 0x06, PRE6)
                CreateByteField (Arg2, 0x07, PRE7)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WLS0 = PRE0 /* \_SB_.WMI2.WMA8.PRE0 */
                WLS1 = PRE1 /* \_SB_.WMI2.WMA8.PRE1 */
                WLS2 = PRE2 /* \_SB_.WMI2.WMA8.PRE2 */
                WLS3 = PRE3 /* \_SB_.WMI2.WMA8.PRE3 */
                WLS4 = PRE4 /* \_SB_.WMI2.WMA8.PRE4 */
                WLS5 = PRE5 /* \_SB_.WMI2.WMA8.PRE5 */
                WLS6 = PRE6 /* \_SB_.WMI2.WMA8.PRE6 */
                WLS7 = PRE7 /* \_SB_.WMI2.WMA8.PRE7 */
                WMIS (0x08, Zero)
                Release (\_SB.WMI1.MWMI)
            }

            Name (ITEM, Package (0x0D)
            {
                Package (0x02)
                {
                    Zero, 
                    "InhibitEnteringThinkPadSetup"
                }, 

                Package (0x02)
                {
                    0x03, 
                    "MTMSerialConcatenation"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "SwapProductName"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ComputraceMsgDisable"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "CpuDebugEnable"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "PasswordAfterBootDeviceList"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "Reserved"
                }, 

                Package (0x02)
                {
                    0x02, 
                    "SpecialCharForPassword"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "Reserved"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "CustomPasswordMode"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "AbsoluteFree"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "ShutdownByBottomCoverTamper"
                }, 

                Package (0x02)
                {
                    Zero, 
                    "TpmClearByBottomCoverTamper"
                }
            })
            Name (VSEL, Package (0x04)
            {
                Package (0x02)
                {
                    "Disable", 
                    "Enable"
                }, 

                Package (0x02)
                {
                    "Off", 
                    "On"
                }, 

                Package (0x25)
                {
                    "409", 
                    "c0c", 
                    "1009", 
                    "80a", 
                    "416", 
                    "813", 
                    "406", 
                    "40a", 
                    "40c", 
                    "407", 
                    "40e", 
                    "40f", 
                    "410", 
                    "414", 
                    "816", 
                    "424", 
                    "40b", 
                    "807", 
                    "41f", 
                    "809", 
                    "411", 
                    "412", 
                    "404", 
                    "841f", 
                    "425", 
                    "8406", 
                    "405", 
                    "401", 
                    "402", 
                    "408", 
                    "40d", 
                    "419", 
                    "8409", 
                    "41e", 
                    "4009", 
                    "9009", 
                    "422"
                }, 

                Package (0x06)
                {
                    "Disable", 
                    "Enable", 
                    "Default", 
                    "MTMSN", 
                    "1SMTMSN", 
                    "MTSN"
                }
            })
            Method (WQA9, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((WMIS (0x09, Arg0) != Zero))
                {
                    Release (\_SB.WMI1.MWMI)
                    Return ("")
                }

                Local0 = DerefOf (ITEM [WITM])
                Local1 = DerefOf (Local0 [Zero])
                Local2 = DerefOf (Local0 [One])
                Concatenate (Local2, ",", Local6)
                Local3 = DerefOf (VSEL [Local1])
                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
                Release (\_SB.WMI1.MWMI)
                Return (Local7)
            }

            Method (WMAA, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = \_SB.WMI1.CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        Local0 = \_SB.WMI1.WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x0A, Zero)
                        }
                    }
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (WMAB, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WEXF = One
                PMON ("SetPlatformSettinEx %x\n", Zero)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = \_SB.WMI1.CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        CBFF = Zero
                        CBFF = \_SB.WMI1.IBUF
                        Local0 = \_SB.WMI1.WSET (ITEM, VSEL)
                        If ((Local0 == Zero))
                        {
                            Local0 = WMIS (0x0A, Zero)
                        }

                        CBFF = Zero
                    }
                }

                WEXF = Zero
                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Name (WQBB, Buffer (0x05DD)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xCD, 0x05, 0x00, 0x00, 0xBC, 0x1F, 0x00, 0x00,  // ........
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0x54, 0x8F, 0x00, 0x01, 0x06, 0x18, 0x42,  // .T.....B
                /* 0020 */  0x10, 0x0F, 0x10, 0x8A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x50, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PP...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x10, 0x88, 0x14, 0x40, 0x48, 0x28, 0x84,  // 1...@H(.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0xC8, 0x95, 0x0A, 0xB0, 0x08, 0x25, 0x9F, 0x80,  // .....%..
                /* 0078 */  0x92, 0x88, 0x22, 0xD9, 0x78, 0xB2, 0x8D, 0x48,  // ..".x..H
                /* 0080 */  0xE6, 0x61, 0x91, 0x83, 0x40, 0x89, 0x19, 0x04,  // .a..@...
                /* 0088 */  0x4A, 0x27, 0xAE, 0x6C, 0xE2, 0x6A, 0x10, 0x07,  // J'.l.j..
                /* 0090 */  0x10, 0xE5, 0x3C, 0xA2, 0x24, 0x38, 0xAA, 0x83,  // ..<.$8..
                /* 0098 */  0x88, 0x10, 0xBB, 0x5C, 0x01, 0x92, 0x07, 0x20,  // ...\... 
                /* 00A0 */  0xCD, 0x13, 0x93, 0xF5, 0x39, 0x68, 0x64, 0x6C,  // ....9hdl
                /* 00A8 */  0x04, 0x3C, 0x98, 0x04, 0x10, 0x16, 0x65, 0x9D,  // .<....e.
                /* 00B0 */  0x8A, 0x02, 0x83, 0x1A, 0xB2, 0xE5, 0x8C, 0x15,  // ........
                /* 00B8 */  0x05, 0x6C, 0xAF, 0x13, 0x91, 0xC9, 0x81, 0x52,  // .l.....R
                /* 00C0 */  0x49, 0x70, 0xA8, 0x61, 0x7A, 0x6A, 0xCD, 0x4F,  // Ip.azj.O
                /* 00C8 */  0x4C, 0x13, 0x39, 0xB5, 0xA6, 0x87, 0x2C, 0x48,  // L.9...,H
                /* 00D0 */  0x26, 0x6D, 0x28, 0xA8, 0xB1, 0x7B, 0x5A, 0x27,  // &m(..{Z'
                /* 00D8 */  0xE5, 0x99, 0x46, 0x3C, 0x28, 0xC3, 0x24, 0xF0,  // ..F<(.$.
                /* 00E0 */  0x28, 0x18, 0x1A, 0x27, 0x28, 0x0B, 0x42, 0x0E,  // (..'(.B.
                /* 00E8 */  0x06, 0x8A, 0x02, 0x3C, 0x09, 0xCF, 0xB1, 0x78,  // ...<...x
                /* 00F0 */  0x01, 0xC2, 0x47, 0x4C, 0xCE, 0x02, 0x31, 0x12,  // ..GL..1.
                /* 00F8 */  0xF8, 0x4C, 0xE0, 0x91, 0x1F, 0x33, 0x76, 0x44,  // .L...3vD
                /* 0100 */  0xE1, 0x02, 0x9E, 0xCF, 0x31, 0x44, 0x8E, 0x7B,  // ....1D.{
                /* 0108 */  0xA8, 0x31, 0x8E, 0x22, 0xF2, 0xE1, 0x30, 0xB4,  // .1."..0.
                /* 0110 */  0xD3, 0x8D, 0x73, 0x60, 0xA7, 0x53, 0x10, 0xB8,  // ..s`.S..
                /* 0118 */  0x40, 0x82, 0xF5, 0x3C, 0x67, 0x81, 0xFC, 0xFF,  // @..<g...
                /* 0120 */  0x63, 0x1C, 0x04, 0xC3, 0x3B, 0x06, 0x8C, 0x0C,  // c...;...
                /* 0128 */  0x08, 0x79, 0x14, 0x60, 0x75, 0x58, 0x9A, 0x44,  // .y.`uX.D
                /* 0130 */  0x02, 0xBB, 0x17, 0xA0, 0xF1, 0x12, 0x20, 0x85,  // ...... .
                /* 0138 */  0x83, 0x94, 0x32, 0x08, 0xC1, 0x34, 0x26, 0xC0,  // ..2..4&.
                /* 0140 */  0xD6, 0xA1, 0x41, 0xDE, 0x04, 0x58, 0xBB, 0x0A,  // ..A..X..
                /* 0148 */  0x08, 0x25, 0xD2, 0x09, 0xC4, 0x09, 0x11, 0x25,  // .%.....%
                /* 0150 */  0x62, 0x50, 0x03, 0x45, 0xA9, 0x0D, 0x55, 0x30,  // bP.E..U0
                /* 0158 */  0x9D, 0x0D, 0x4F, 0x98, 0x71, 0x43, 0xC4, 0x30,  // ..O.qC.0
                /* 0160 */  0x50, 0xDC, 0xF6, 0x07, 0x41, 0x86, 0x8D, 0x1B,  // P...A...
                /* 0168 */  0xBF, 0x07, 0x75, 0x5A, 0x67, 0x77, 0x4C, 0xAF,  // ..uZgwL.
                /* 0170 */  0x0A, 0x26, 0xF0, 0xA4, 0xDF, 0x10, 0x9E, 0x0E,  // .&......
                /* 0178 */  0x8E, 0xE2, 0x68, 0xA3, 0xC6, 0x68, 0x8E, 0x94,  // ..h..h..
                /* 0180 */  0xAD, 0x5A, 0x1A, 0x38, 0x14, 0x09, 0x1E, 0x75,  // .Z.8...u
                /* 0188 */  0x5E, 0xF0, 0xC9, 0xC0, 0x43, 0x3B, 0x6C, 0x0F,  // ^...C;l.
                /* 0190 */  0xF6, 0x2C, 0x3D, 0x84, 0x23, 0x78, 0x66, 0x78,  // .,=.#xfx
                /* 0198 */  0x24, 0xF0, 0x18, 0xD8, 0x5D, 0xC1, 0x87, 0x00,  // $...]...
                /* 01A0 */  0x9F, 0x11, 0xF0, 0xAE, 0x01, 0x75, 0x39, 0x78,  // .....u9x
                /* 01A8 */  0x34, 0x60, 0x93, 0x0E, 0x87, 0x19, 0xAF, 0xE7,  // 4`......
                /* 01B0 */  0xEE, 0xA9, 0xFB, 0x8C, 0xC1, 0xCF, 0x1B, 0x1E,  // ........
                /* 01B8 */  0x1C, 0x6E, 0xA4, 0x27, 0x73, 0x64, 0xA5, 0x0A,  // .n.'sd..
                /* 01C0 */  0x30, 0x7B, 0x0D, 0xD0, 0x51, 0xC2, 0x07, 0x0E,  // 0{..Q...
                /* 01C8 */  0x76, 0x17, 0x78, 0x0A, 0x30, 0x81, 0xE5, 0x0F,  // v.x.0...
                /* 01D0 */  0x02, 0x35, 0x32, 0x43, 0x7B, 0xBC, 0xEF, 0x1D,  // .52C{...
                /* 01D8 */  0x86, 0x7C, 0x52, 0x38, 0x2C, 0x26, 0xF6, 0xE0,  // .|R8,&..
                /* 01E0 */  0x41, 0xC7, 0x03, 0xFE, 0xFB, 0xC8, 0x93, 0x86,  // A.......
                /* 01E8 */  0xA7, 0xEF, 0xF9, 0x9A, 0x60, 0x60, 0x08, 0x59,  // ....``.Y
                /* 01F0 */  0x19, 0x0F, 0x6A, 0x20, 0x86, 0x7E, 0x55, 0x38,  // ..j .~U8
                /* 01F8 */  0x8C, 0xD3, 0xF0, 0x09, 0xC4, 0xE7, 0x80, 0x20,  // ....... 
                /* 0200 */  0x31, 0x8E, 0xC9, 0x83, 0xF3, 0xFF, 0x9F, 0xC0,  // 1.......
                /* 0208 */  0xB1, 0x46, 0x4E, 0xCF, 0x29, 0x3E, 0x4F, 0xF0,  // .FN.)>O.
                /* 0210 */  0xC3, 0x85, 0xCF, 0x13, 0xEC, 0xC4, 0x70, 0x1A,  // ......p.
                /* 0218 */  0xCF, 0x01, 0x1E, 0xCE, 0x59, 0xF9, 0x38, 0x01,  // ....Y.8.
                /* 0220 */  0x2C, 0x20, 0x5E, 0x27, 0xF8, 0x40, 0xE1, 0xC3,  // , ^'.@..
                /* 0228 */  0x1E, 0x9A, 0x47, 0xF1, 0x12, 0xF1, 0xF6, 0x60,  // ..G....`
                /* 0230 */  0x82, 0x68, 0x0F, 0x31, 0x60, 0x9C, 0x11, 0xEE,  // .h.1`...
                /* 0238 */  0xBC, 0x01, 0xE7, 0x14, 0x03, 0x3C, 0xA0, 0x0E,  // .....<..
                /* 0240 */  0x01, 0x73, 0x98, 0xF0, 0x10, 0xF8, 0x00, 0x9E,  // .s......
                /* 0248 */  0x41, 0xCE, 0xD1, 0xC7, 0x9C, 0x33, 0xC3, 0x1D,  // A....3..
                /* 0250 */  0x77, 0xC0, 0x36, 0x0C, 0x1E, 0xD9, 0x02, 0x08,  // w.6.....
                /* 0258 */  0x8B, 0xF3, 0x24, 0x50, 0xC0, 0xB7, 0x01, 0x85,  // ..$P....
                /* 0260 */  0xF1, 0xE1, 0x06, 0xBC, 0xFF, 0xFF, 0xC3, 0x0D,  // ........
                /* 0268 */  0x70, 0x3D, 0x1F, 0xE0, 0x8E, 0x0F, 0x70, 0x2F,  // p=....p/
                /* 0270 */  0x16, 0xEC, 0xF0, 0xF0, 0x78, 0x03, 0x0C, 0x86,  // ....x...
                /* 0278 */  0xF4, 0x48, 0xF3, 0x56, 0x13, 0xE3, 0xD5, 0x26,  // .H.V...&
                /* 0280 */  0x44, 0x84, 0x87, 0x9A, 0x77, 0x1B, 0x23, 0xC5,  // D...w.#.
                /* 0288 */  0x7B, 0xBC, 0x61, 0xD7, 0x98, 0xB3, 0x78, 0x00,  // {.a...x.
                /* 0290 */  0x89, 0x52, 0x1C, 0x9A, 0x2E, 0x36, 0x31, 0xA2,  // .R...61.
                /* 0298 */  0xBC, 0xD9, 0x18, 0xF6, 0x4D, 0xC7, 0x40, 0xA1,  // ....M.@.
                /* 02A0 */  0x22, 0x45, 0x08, 0xF3, 0x62, 0x11, 0xE2, 0xF1,  // "E..b...
                /* 02A8 */  0x06, 0xCC, 0x92, 0x5E, 0x2A, 0xFA, 0x1C, 0xF8,  // ...^*...
                /* 02B0 */  0x78, 0x03, 0x78, 0xF9, 0xFF, 0x1F, 0x6F, 0x00,  // x.x...o.
                /* 02B8 */  0x0F, 0xC3, 0xF0, 0x31, 0x05, 0x6C, 0x37, 0x07,  // ...1.l7.
                /* 02C0 */  0x76, 0x4F, 0x81, 0x7F, 0x4E, 0x01, 0x1C, 0x09,  // vO..N...
                /* 02C8 */  0x79, 0x04, 0xE8, 0xE0, 0x61, 0x11, 0x20, 0xB2,  // y...a. .
                /* 02D0 */  0xF1, 0x0C, 0xF0, 0x99, 0x88, 0x0A, 0xA4, 0xD2,  // ........
                /* 02D8 */  0x4C, 0xC1, 0x32, 0x4E, 0xC1, 0xEA, 0x84, 0xC8,  // L.2N....
                /* 02E0 */  0x65, 0x50, 0x48, 0x04, 0x84, 0x46, 0x66, 0x38,  // ePH..Ff8
                /* 02E8 */  0x1F, 0x12, 0x0D, 0x66, 0x10, 0x9F, 0x0F, 0x7C,  // ...f...|
                /* 02F0 */  0xA6, 0xF0, 0xC9, 0x89, 0xFF, 0xFF, 0x4F, 0x4E,  // ......ON
                /* 02F8 */  0xE0, 0x39, 0x98, 0x3C, 0x54, 0xC0, 0x42, 0xF4,  // .9.<T.B.
                /* 0300 */  0x69, 0x81, 0xC3, 0xF9, 0xCC, 0xC2, 0xE1, 0x7C,  // i......|
                /* 0308 */  0x24, 0xE1, 0x07, 0x48, 0x7E, 0x54, 0x02, 0x97,  // $..H~T..
                /* 0310 */  0xC0, 0x43, 0x03, 0x28, 0x80, 0x7C, 0x3F, 0xF0,  // .C.(.|?.
                /* 0318 */  0x39, 0xE0, 0x19, 0x81, 0xCD, 0xE1, 0x91, 0xC0,  // 9.......
                /* 0320 */  0x07, 0x02, 0x06, 0xCF, 0xA3, 0x8D, 0x8A, 0x1E,  // ........
                /* 0328 */  0x6D, 0x3C, 0x3C, 0x7E, 0x64, 0xF0, 0x7C, 0x1E,  // m<<~d.|.
                /* 0330 */  0x08, 0x8E, 0xF2, 0x91, 0x00, 0x87, 0xF1, 0x7E,  // .......~
                /* 0338 */  0xE1, 0x21, 0xFA, 0x94, 0x03, 0x6B, 0x22, 0x47,  // .!...k"G
                /* 0340 */  0x6D, 0xD1, 0x27, 0x02, 0x81, 0x3E, 0x73, 0x61,  // m.'..>sa
                /* 0348 */  0x4E, 0x39, 0xC0, 0x29, 0xF8, 0xE8, 0x51, 0x51,  // N9.)..QQ
                /* 0350 */  0x0F, 0xA4, 0xA0, 0x3D, 0x29, 0xF8, 0xAC, 0xE0,  // ...=)...
                /* 0358 */  0xC3, 0x17, 0xFC, 0xFF, 0xFF, 0xE1, 0x0B, 0xCE,  // ........
                /* 0360 */  0xBC, 0x5E, 0xD6, 0x7C, 0xE0, 0x88, 0x73, 0x16,  // .^.|..s.
                /* 0368 */  0xA7, 0xFB, 0x6E, 0x81, 0x3F, 0x91, 0x02, 0xB3,  // ..n.?...
                /* 0370 */  0x20, 0x27, 0x52, 0x14, 0x8C, 0x4F, 0xA4, 0x80,  //  'R..O..
                /* 0378 */  0xCD, 0x5B, 0x00, 0xF6, 0xBA, 0xF0, 0x24, 0x02,  // .[....$.
                /* 0380 */  0xE3, 0x1C, 0xF1, 0x8C, 0x05, 0xF3, 0x50, 0x75,  // ......Pu
                /* 0388 */  0x8A, 0x2F, 0x55, 0x6F, 0x0C, 0x11, 0x9E, 0xAC,  // ./Uo....
                /* 0390 */  0x5E, 0xA3, 0x1E, 0xB0, 0x0C, 0xF6, 0x22, 0x60,  // ^....."`
                /* 0398 */  0x98, 0x57, 0x2C, 0x9F, 0xAE, 0x42, 0x3C, 0x60,  // .W,..B<`
                /* 03A0 */  0xF9, 0xAC, 0x15, 0x2D, 0x44, 0xC8, 0x28, 0xC1,  // ...-D.(.
                /* 03A8 */  0x5E, 0xB1, 0x5E, 0x65, 0x7C, 0xA4, 0x32, 0x78,  // ^.^e|.2x
                /* 03B0 */  0xC0, 0xB0, 0xD1, 0x22, 0x45, 0x78, 0xC4, 0xC2,  // ..."Ex..
                /* 03B8 */  0xFF, 0xFF, 0x8F, 0x58, 0xE0, 0x91, 0x70, 0x20,  // ...X..p 
                /* 03C0 */  0x05, 0xA8, 0x32, 0x70, 0xDC, 0x81, 0x14, 0xD8,  // ..2p....
                /* 03C8 */  0x9F, 0x26, 0xF0, 0xD7, 0x0B, 0x8F, 0x07, 0xFB,  // .&......
                /* 03D0 */  0xFF, 0x3F, 0x07, 0x80, 0xEF, 0x10, 0x03, 0x0C,  // .?......
                /* 03D8 */  0x06, 0x0C, 0xE3, 0x10, 0x03, 0x3C, 0x04, 0x9F,  // .....<..
                /* 03E0 */  0xCC, 0x40, 0x7F, 0xDC, 0x81, 0x3F, 0x0E, 0x9E,  // .@...?..
                /* 03E8 */  0xF1, 0xC9, 0x61, 0x02, 0x85, 0x39, 0x91, 0xA2,  // ..a..9..
                /* 03F0 */  0x60, 0x7C, 0x22, 0x05, 0x9C, 0xFD, 0xFF, 0x0F,  // `|".....
                /* 03F8 */  0x57, 0x60, 0x38, 0xDE, 0x80, 0xFF, 0x36, 0xE3,  // W`8...6.
                /* 0400 */  0x43, 0xA8, 0xCF, 0x37, 0xBE, 0x90, 0x1A, 0xE2,  // C..7....
                /* 0408 */  0xC5, 0xE6, 0x4D, 0xED, 0x95, 0xE0, 0xF5, 0x9D,  // ..M.....
                /* 0410 */  0x5D, 0x6B, 0x5E, 0xDF, 0x7D, 0x2A, 0x78, 0x12,  // ]k^.}*x.
                /* 0418 */  0x8D, 0x10, 0x32, 0xCA, 0x4B, 0x8E, 0x41, 0x42,  // ..2.K.AB
                /* 0420 */  0xBC, 0x8E, 0x1A, 0x30, 0x58, 0x90, 0x88, 0xA7,  // ...0X...
                /* 0428 */  0xF0, 0xB4, 0xF3, 0x78, 0x03, 0x5E, 0x51, 0x07,  // ...x.^Q.
                /* 0430 */  0x52, 0x80, 0x1E, 0xFF, 0xFF, 0x03, 0x29, 0x30,  // R.....)0
                /* 0438 */  0xB8, 0xA7, 0xC0, 0x3E, 0xA7, 0x00, 0x9E, 0x92,  // ...>....
                /* 0440 */  0x9F, 0x48, 0x69, 0xEA, 0x13, 0x29, 0x5A, 0x11,  // .Hi..)Z.
                /* 0448 */  0x90, 0xA6, 0x0A, 0x16, 0x82, 0xE9, 0x4F, 0xA4,  // ......O.
                /* 0450 */  0xF4, 0x60, 0xE0, 0xDC, 0x24, 0x4A, 0x3E, 0x34,  // .`..$J>4
                /* 0458 */  0x0A, 0xE7, 0xAC, 0x07, 0x12, 0x0A, 0x62, 0x40,  // ......b@
                /* 0460 */  0x07, 0x39, 0x54, 0xA0, 0xCF, 0x2A, 0x3E, 0x90,  // .9T..*>.
                /* 0468 */  0x1C, 0xC8, 0x23, 0xA2, 0x87, 0xE5, 0x43, 0xA5,  // ..#...C.
                /* 0470 */  0xEF, 0x2A, 0x3E, 0x87, 0xF8, 0x48, 0xE1, 0xF1,  // .*>..H..
                /* 0478 */  0xFB, 0xB0, 0xC0, 0xFF, 0x33, 0x3E, 0x8E, 0x32,  // ....3>.2
                /* 0480 */  0xF0, 0x6A, 0xCE, 0x2B, 0x28, 0x30, 0x9F, 0x46,  // .j.+(0.F
                /* 0488 */  0x31, 0xBA, 0xEE, 0x13, 0x20, 0xF9, 0xFF, 0xCF,  // 1... ...
                /* 0490 */  0x8F, 0xEB, 0x3B, 0x8C, 0x82, 0x1C, 0x9D, 0x87,  // ..;.....
                /* 0498 */  0x9F, 0x2C, 0x2A, 0xEE, 0x64, 0x29, 0x88, 0x27,  // .,*.d).'
                /* 04A0 */  0xEB, 0x28, 0x93, 0x45, 0xCF, 0xC4, 0xB7, 0x0B,  // .(.E....
                /* 04A8 */  0xCF, 0xE8, 0xBD, 0xCB, 0x37, 0x58, 0x76, 0x93,  // ....7Xv.
                /* 04B0 */  0x85, 0x77, 0x19, 0x08, 0xF9, 0x68, 0xE0, 0x9B,  // .w...h..
                /* 04B8 */  0x2C, 0xDC, 0xB1, 0xF8, 0x32, 0x02, 0xBE, 0x9B,  // ,...2...
                /* 04C0 */  0x2C, 0xE0, 0x75, 0x34, 0x3E, 0x5B, 0xB0, 0x53,  // ,.u4>[.S
                /* 04C8 */  0x88, 0xAF, 0x6B, 0xB0, 0xB2, 0xDE, 0xB0, 0xC8,  // ..k.....
                /* 04D0 */  0xFF, 0x9F, 0x60, 0x9C, 0x85, 0x28, 0xE4, 0x92,  // ..`..(..
                /* 04D8 */  0x28, 0x8C, 0x6F, 0x58, 0x80, 0xA3, 0xBB, 0x0D,  // (.oX....
                /* 04E0 */  0xEE, 0x86, 0x05, 0x1C, 0x80, 0x0E, 0xC5, 0x57,  // .......W
                /* 04E8 */  0x2C, 0xD8, 0x87, 0xA8, 0x37, 0xAA, 0x08, 0x3E,  // ,...7..>
                /* 04F0 */  0x5F, 0xBD, 0x60, 0x3D, 0x57, 0x3D, 0x89, 0xFA,  // _.`=W=..
                /* 04F8 */  0x5A, 0xF5, 0x6C, 0x65, 0xF4, 0x17, 0x52, 0x76,  // Z.le..Rv
                /* 0500 */  0xBA, 0xF2, 0x15, 0xCB, 0x88, 0xE1, 0x02, 0x86,  // ........
                /* 0508 */  0x32, 0x4C, 0xB8, 0x57, 0x88, 0x58, 0x81, 0x63,  // 2L.W.X.c
                /* 0510 */  0xBE, 0x90, 0xFA, 0x9C, 0xED, 0x5B, 0x15, 0xBB,  // .....[..
                /* 0518 */  0x62, 0x81, 0x53, 0xD6, 0x15, 0x0B, 0x48, 0xFD,  // b.S...H.
                /* 0520 */  0xFF, 0xAF, 0x58, 0x80, 0xD1, 0xE1, 0xBF, 0x62,  // ..X....b
                /* 0528 */  0x01, 0xA7, 0x83, 0x03, 0xBB, 0x63, 0x01, 0x9E,  // .....c..
                /* 0530 */  0xD2, 0xDF, 0xB1, 0xE8, 0x2D, 0xCB, 0x77, 0x2C,  // ....-.w,
                /* 0538 */  0x7E, 0x10, 0xB1, 0xA6, 0x3B, 0x16, 0x84, 0xFF,  // ~...;...
                /* 0540 */  0xFF, 0x5C, 0xE1, 0x5E, 0xB2, 0x00, 0x8E, 0xFF,  // .\.^....
                /* 0548 */  0xFF, 0x2F, 0x59, 0xF0, 0xC2, 0x5D, 0xB2, 0x80,  // ./Y..]..
                /* 0550 */  0xDE, 0x05, 0x09, 0x7C, 0x97, 0x2C, 0xF8, 0x17,  // ...|.,..
                /* 0558 */  0x24, 0xAE, 0xD0, 0xA6, 0x4F, 0x8D, 0x46, 0xAD,  // $...O.F.
                /* 0560 */  0x1A, 0x94, 0xA9, 0x51, 0xA6, 0x41, 0xAD, 0x3E,  // ...Q.A.>
                /* 0568 */  0x95, 0x1A, 0x33, 0xE6, 0x06, 0x4A, 0xE2, 0x6E,  // ..3..J.n
                /* 0570 */  0x18, 0x54, 0xD2, 0xBA, 0x34, 0x30, 0x07, 0x02,  // .T..40..
                /* 0578 */  0xA1, 0x01, 0x24, 0x80, 0xB0, 0xD0, 0xBF, 0x20,  // ..$.... 
                /* 0580 */  0x1D, 0x13, 0xC8, 0x77, 0x4B, 0x40, 0x16, 0xBB,  // ...wK@..
                /* 0588 */  0x2C, 0x81, 0x58, 0xA6, 0x0A, 0x88, 0x46, 0x2E,  // ,.X...F.
                /* 0590 */  0x17, 0x06, 0x11, 0x90, 0xE3, 0xFD, 0x6B, 0x04,  // ......k.
                /* 0598 */  0xEA, 0x48, 0x3A, 0x80, 0x98, 0x20, 0x1F, 0x83,  // .H:.. ..
                /* 05A0 */  0xA5, 0x4F, 0x01, 0x81, 0x58, 0x36, 0xAD, 0x00,  // .O..X6..
                /* 05A8 */  0x2D, 0xD7, 0x09, 0x10, 0x0B, 0x0B, 0x42, 0x03,  // -.....B.
                /* 05B0 */  0x5A, 0x19, 0x02, 0x4B, 0x0B, 0x22, 0x20, 0x27,  // Z..K." '
                /* 05B8 */  0xD3, 0x02, 0xC4, 0x72, 0x82, 0x08, 0xC8, 0xCA,  // ...r....
                /* 05C0 */  0x16, 0x2C, 0x70, 0x6B, 0xFA, 0x6E, 0x08, 0xC8,  // .,pk.n..
                /* 05C8 */  0x89, 0x40, 0x68, 0x92, 0x67, 0x83, 0x40, 0x1D,  // .@h.g.@.
                /* 05D0 */  0x0B, 0x44, 0x40, 0x8E, 0x60, 0x07, 0x88, 0x05,  // .D@.`...
                /* 05D8 */  0x02, 0x11, 0x90, 0xFF, 0xFF                     // .....
            })
        }

        Device (WMI3)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_WDG, /**** Is ResourceTemplate, but EndTag not at buffer end ****/ Buffer (0x3C)
            {
                /* 0000 */  0x79, 0x36, 0x4D, 0x8F, 0x9E, 0x74, 0x79, 0x44,  // y6M..tyD
                /* 0008 */  0x9B, 0x16, 0xC6, 0x26, 0x01, 0xFD, 0x25, 0xF0,  // ...&..%.
                /* 0010 */  0x41, 0x42, 0x01, 0x02, 0x69, 0xE8, 0xD2, 0x85,  // AB..i...
                /* 0018 */  0x5A, 0x36, 0xCE, 0x4A, 0xA4, 0xD3, 0xCD, 0x69,  // Z6.J...i
                /* 0020 */  0x2B, 0x16, 0x98, 0xA0, 0x41, 0x43, 0x01, 0x02,  // +...AC..
                /* 0028 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
                /* 0030 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
                /* 0038 */  0x42, 0x43, 0x01, 0x00                           // BC..
            })
            Method (WMAB, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, ASS0)
                CreateWordField (Arg2, One, ASS1)
                CreateByteField (Arg2, 0x03, ASS2)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WASB = ASS0 /* \_SB_.WMI3.WMAB.ASS0 */
                WASI = ASS1 /* \_SB_.WMI3.WMAB.ASS1 */
                WASD = ASS2 /* \_SB_.WMI3.WMAB.ASS2 */
                WMIS (0x0B, Zero)
                Local0 = WASS /* \_SB_.WASS */
                Release (\_SB.WMI1.MWMI)
                Return (Local0)
            }

            Method (WMAC, 3, NotSerialized)
            {
                CreateByteField (Arg2, Zero, ASS0)
                CreateWordField (Arg2, One, ASS1)
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WASB = ASS0 /* \_SB_.WMI3.WMAC.ASS0 */
                WASI = ASS1 /* \_SB_.WMI3.WMAC.ASS1 */
                WMIS (0x0C, Arg1)
                Local0 = WASS /* \_SB_.WASS */
                Release (\_SB.WMI1.MWMI)
                Return (Local0)
            }

            Name (WQBC, Buffer (0x040A)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xFA, 0x03, 0x00, 0x00, 0x32, 0x12, 0x00, 0x00,  // ....2...
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xC3, 0x88, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x07, 0x10, 0x8A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x50, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PP...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x10, 0x88, 0x14, 0x40, 0x48, 0x28, 0x84,  // 1...@H(.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0x58, 0x07, 0x11, 0x21, 0xD2, 0x31, 0x34, 0x29,  // X..!.14)
                /* 0078 */  0x40, 0xA2, 0x00, 0x8B, 0x02, 0x64, 0xC3, 0xC8,  // @....d..
                /* 0080 */  0x36, 0x22, 0x99, 0x87, 0x45, 0x0E, 0x02, 0x25,  // 6"..E..%
                /* 0088 */  0x66, 0x10, 0x28, 0x9D, 0xE0, 0xB2, 0x89, 0xAB,  // f.(.....
                /* 0090 */  0x41, 0x9C, 0x4C, 0x94, 0xF3, 0x88, 0x92, 0xE0,  // A.L.....
                /* 0098 */  0xA8, 0x0E, 0x22, 0x42, 0xEC, 0x72, 0x05, 0x48,  // .."B.r.H
                /* 00A0 */  0x1E, 0x80, 0x34, 0x4F, 0x4C, 0xD6, 0xE7, 0xA0,  // ..4OL...
                /* 00A8 */  0x91, 0xB1, 0x11, 0xF0, 0x94, 0x1A, 0x40, 0x58,  // ......@X
                /* 00B0 */  0xA0, 0x75, 0x2A, 0xE0, 0x7A, 0x0D, 0x43, 0x3D,  // .u*.z.C=
                /* 00B8 */  0x80, 0x48, 0xCE, 0x58, 0x51, 0xC0, 0xF6, 0x3A,  // .H.XQ..:
                /* 00C0 */  0x11, 0x8D, 0xEA, 0x40, 0x99, 0x24, 0x38, 0xD4,  // ...@.$8.
                /* 00C8 */  0x30, 0x3D, 0xB5, 0xE6, 0x27, 0xA6, 0x89, 0x9C,  // 0=..'...
                /* 00D0 */  0x5A, 0xD3, 0x43, 0x16, 0x24, 0x93, 0x36, 0x14,  // Z.C.$.6.
                /* 00D8 */  0xD4, 0xD8, 0x3D, 0xAD, 0x93, 0xF2, 0x4C, 0x23,  // ..=...L#
                /* 00E0 */  0x1E, 0x94, 0x61, 0x12, 0x78, 0x14, 0x0C, 0x8D,  // ..a.x...
                /* 00E8 */  0x13, 0x94, 0x75, 0x22, 0xA0, 0x03, 0xE5, 0x80,  // ..u"....
                /* 00F0 */  0x27, 0xE1, 0x39, 0x16, 0x2F, 0x40, 0xF8, 0x88,  // '.9./@..
                /* 00F8 */  0xC9, 0xB4, 0x4D, 0xE0, 0x33, 0x81, 0x87, 0x79,  // ..M.3..y
                /* 0100 */  0xCC, 0xD8, 0x11, 0x85, 0x0B, 0x78, 0x3E, 0xC7,  // .....x>.
                /* 0108 */  0x10, 0x39, 0xEE, 0xA1, 0xC6, 0x38, 0x8A, 0xC8,  // .9...8..
                /* 0110 */  0x47, 0x60, 0x24, 0x03, 0xC5, 0x2B, 0x08, 0x89,  // G`$..+..
                /* 0118 */  0x80, 0xF8, 0x76, 0x70, 0x70, 0x91, 0xFC, 0xFF,  // ..vpp...
                /* 0120 */  0x47, 0x89, 0x11, 0x2A, 0xC6, 0xDB, 0x00, 0x6E,  // G..*...n
                /* 0128 */  0x5E, 0x09, 0x8A, 0x1E, 0x07, 0x4A, 0x06, 0x84,  // ^....J..
                /* 0130 */  0x3C, 0x0A, 0xB0, 0x7A, 0x28, 0x20, 0x04, 0x16,  // <..z( ..
                /* 0138 */  0x27, 0x40, 0xE3, 0x38, 0x05, 0xD3, 0x99, 0x00,  // '@.8....
                /* 0140 */  0x6D, 0x02, 0xBC, 0x09, 0x30, 0x27, 0xC0, 0x16,  // m...0'..
                /* 0148 */  0x86, 0x80, 0x82, 0x9C, 0x59, 0x94, 0x20, 0x11,  // ....Y. .
                /* 0150 */  0x42, 0x31, 0x88, 0x0A, 0x05, 0x18, 0x43, 0x14,  // B1....C.
                /* 0158 */  0xCA, 0x3B, 0x41, 0x8C, 0xCA, 0x20, 0x74, 0x82,  // .;A.. t.
                /* 0160 */  0x08, 0x14, 0x3D, 0x78, 0x98, 0xD6, 0x40, 0x74,  // ..=x..@t
                /* 0168 */  0x89, 0xF0, 0xC8, 0xB1, 0x47, 0x00, 0x9F, 0x19,  // ....G...
                /* 0170 */  0xCE, 0xE9, 0x04, 0x1F, 0x01, 0xDE, 0x16, 0x4C,  // .......L
                /* 0178 */  0xE0, 0x79, 0xBF, 0x24, 0x1C, 0x6A, 0xD8, 0x03,  // .y.$.j..
                /* 0180 */  0x8E, 0x1A, 0xE3, 0x28, 0x12, 0x58, 0xD0, 0x33,  // ...(.X.3
                /* 0188 */  0x42, 0x16, 0x40, 0x14, 0x09, 0x1E, 0x75, 0x64,  // B.@...ud
                /* 0190 */  0xF0, 0xE1, 0xC0, 0x23, 0x3B, 0x72, 0xCF, 0xF0,  // ...#;r..
                /* 0198 */  0x04, 0x82, 0x1C, 0xC2, 0x11, 0x3C, 0x36, 0x3C,  // .....<6<
                /* 01A0 */  0x15, 0x78, 0x0C, 0xEC, 0xBA, 0xE0, 0x73, 0x80,  // .x....s.
                /* 01A8 */  0x8F, 0x09, 0x78, 0xD7, 0x80, 0x9A, 0xF3, 0xD3,  // ..x.....
                /* 01B0 */  0x01, 0x9B, 0x72, 0x38, 0xCC, 0x70, 0x3D, 0xFD,  // ..r8.p=.
                /* 01B8 */  0x70, 0x27, 0x70, 0xD2, 0x06, 0x64, 0xB3, 0xF3,  // p'p..d..
                /* 01C0 */  0xE0, 0x70, 0xE3, 0x3C, 0x99, 0x23, 0x2B, 0x55,  // .p.<.#+U
                /* 01C8 */  0x80, 0xD9, 0x13, 0x82, 0x4E, 0x13, 0x3E, 0x73,  // ....N.>s
                /* 01D0 */  0xB0, 0xBB, 0xC0, 0xF9, 0xF4, 0x0C, 0x49, 0xE4,  // ......I.
                /* 01D8 */  0x0F, 0x02, 0x35, 0x32, 0x43, 0xFB, 0x2C, 0xF0,  // ..52C.,.
                /* 01E0 */  0xEA, 0x61, 0xC8, 0x87, 0x85, 0xC3, 0x62, 0x62,  // .a....bb
                /* 01E8 */  0xCF, 0x1E, 0x74, 0x3C, 0xE0, 0x3F, 0x25, 0x3C,  // ..t<.?%<
                /* 01F0 */  0x6C, 0x78, 0xFA, 0x9E, 0xAF, 0x09, 0xA2, 0x3D,  // lx.....=
                /* 01F8 */  0x8F, 0x80, 0xE1, 0xFF, 0x7F, 0x1E, 0x81, 0x39,  // .......9
                /* 0200 */  0x9C, 0x07, 0x84, 0x27, 0x07, 0x76, 0x80, 0xC0,  // ...'.v..
                /* 0208 */  0x1C, 0x48, 0x80, 0xC9, 0xF9, 0x02, 0x77, 0x28,  // .H....w(
                /* 0210 */  0xF0, 0x10, 0xF8, 0x00, 0x1E, 0x25, 0xCE, 0xD1,  // .....%..
                /* 0218 */  0x4A, 0x67, 0x86, 0x3C, 0xB9, 0x80, 0x2D, 0xFB,  // Jg.<..-.
                /* 0220 */  0x1B, 0x40, 0x07, 0x0F, 0xE7, 0x06, 0x91, 0x8D,  // .@......
                /* 0228 */  0x57, 0x80, 0x09, 0x74, 0x38, 0xB1, 0x1E, 0x20,  // W..t8.. 
                /* 0230 */  0x4D, 0x14, 0x0C, 0x04, 0xD3, 0xD3, 0x6B, 0x00,  // M.....k.
                /* 0238 */  0x3E, 0x15, 0x38, 0x37, 0x89, 0x92, 0x0F, 0x8C,  // >.87....
                /* 0240 */  0xC2, 0x39, 0xEB, 0x79, 0x84, 0x82, 0x18, 0xD0,  // .9.y....
                /* 0248 */  0x41, 0x20, 0xE4, 0xE4, 0xA0, 0x80, 0x3A, 0xAA,  // A ....:.
                /* 0250 */  0xF8, 0x3C, 0x72, 0xAA, 0x0F, 0x3D, 0x9E, 0x94,  // .<r..=..
                /* 0258 */  0x47, 0xE1, 0xAB, 0x8A, 0x0F, 0x21, 0x3E, 0x4F,  // G....!>O
                /* 0260 */  0x78, 0xF4, 0x3E, 0x29, 0xF0, 0xEF, 0x8C, 0xAF,  // x.>)....
                /* 0268 */  0x0E, 0x46, 0xB7, 0x9A, 0xE3, 0x0A, 0x0A, 0xCC,  // .F......
                /* 0270 */  0x67, 0x11, 0x4E, 0x50, 0xD7, 0x6D, 0x01, 0xFA,  // g.NP.m..
                /* 0278 */  0x29, 0xE0, 0x08, 0x3C, 0x94, 0x77, 0x92, 0xC7,  // )..<.w..
                /* 0280 */  0x90, 0x04, 0xF5, 0x9D, 0x16, 0x40, 0x01, 0xE4,  // .....@..
                /* 0288 */  0x9B, 0x81, 0x4F, 0x02, 0x21, 0xFE, 0xFF, 0x4F,  // ..O.!..O
                /* 0290 */  0x07, 0x1E, 0xC3, 0xC3, 0x80, 0xD1, 0x8C, 0xCE,  // ........
                /* 0298 */  0xC3, 0x4F, 0x16, 0x15, 0x77, 0xB2, 0x14, 0xC4,  // .O..w...
                /* 02A0 */  0x93, 0x75, 0x94, 0xC9, 0xA2, 0x67, 0xE2, 0xAB,  // .u...g..
                /* 02A8 */  0x85, 0x27, 0x74, 0x4A, 0x41, 0xCE, 0xD1, 0x13,  // .'tJA...
                /* 02B0 */  0xF6, 0x55, 0x04, 0xD6, 0xF9, 0x20, 0xE4, 0x8B,  // .U... ..
                /* 02B8 */  0x81, 0xA7, 0x61, 0x38, 0x4F, 0x96, 0xC3, 0x79,  // ..a8O..y
                /* 02C0 */  0xB2, 0x7C, 0x2C, 0xBE, 0x6A, 0xC0, 0x1F, 0x2D,  // .|,.j..-
                /* 02C8 */  0x96, 0xA0, 0xC0, 0xD9, 0x82, 0x1C, 0x1E, 0x13,  // ........
                /* 02D0 */  0x6F, 0x54, 0xF4, 0x46, 0xE4, 0xE1, 0xF1, 0xCB,  // oT.F....
                /* 02D8 */  0x81, 0xE7, 0xF3, 0x8C, 0x70, 0x94, 0x6F, 0x12,  // ....p.o.
                /* 02E0 */  0x38, 0x8C, 0xC7, 0x12, 0x0F, 0xD1, 0x97, 0x23,  // 8......#
                /* 02E8 */  0x58, 0x13, 0x39, 0x69, 0xDF, 0x16, 0x4E, 0x36,  // X.9i..N6
                /* 02F0 */  0xE8, 0x4B, 0x10, 0xBB, 0x1C, 0x01, 0xBF, 0x88,  // .K......
                /* 02F8 */  0x26, 0x86, 0xC1, 0x22, 0x2D, 0x45, 0x11, 0x17,  // &.."-E..
                /* 0300 */  0x45, 0x61, 0x7C, 0xC5, 0x82, 0xFD, 0xFF, 0xBF,  // Ea|.....
                /* 0308 */  0x62, 0x01, 0x16, 0x04, 0x0F, 0x1B, 0x34, 0x87,  // b.....4.
                /* 0310 */  0x83, 0x97, 0x1E, 0x36, 0x6B, 0x38, 0x07, 0x99,  // ...6k8..
                /* 0318 */  0xD3, 0xF1, 0x48, 0x4E, 0x1B, 0xC6, 0x1D, 0x0B,  // ..HN....
                /* 0320 */  0xFE, 0x9D, 0xEA, 0xA9, 0xCA, 0xD3, 0x8A, 0xF2,  // ........
                /* 0328 */  0x64, 0xF5, 0x7A, 0xE5, 0x63, 0x96, 0xA1, 0xCE,  // d.z.c...
                /* 0330 */  0xE0, 0x1D, 0xCB, 0xB7, 0x3C, 0x4F, 0x21, 0x4A,  // ....<O!J
                /* 0338 */  0x9C, 0x97, 0x2D, 0x76, 0xC7, 0x32, 0x48, 0x50,  // ..-v.2HP
                /* 0340 */  0x23, 0x3F, 0x68, 0x31, 0x94, 0xE0, 0xF1, 0xDE,  // #?h1....
                /* 0348 */  0xB1, 0x00, 0x6F, 0xFF, 0xFF, 0x3B, 0x16, 0x60,  // ..o..;.`
                /* 0350 */  0xFC, 0x04, 0xC1, 0x09, 0x7C, 0xC7, 0x02, 0x1C,  // ....|...
                /* 0358 */  0xC5, 0x7E, 0x37, 0xE8, 0x4A, 0x45, 0xEE, 0x58,  // .~7.JE.X
                /* 0360 */  0x28, 0x0E, 0xAB, 0xB9, 0x63, 0x41, 0x9C, 0x28,  // (...cA.(
                /* 0368 */  0xE6, 0x8A, 0x05, 0x86, 0xFF, 0xFF, 0x15, 0x0B,  // ........
                /* 0370 */  0xE0, 0x75, 0xC0, 0x2B, 0x16, 0x68, 0xFE, 0xFF,  // .u.+.h..
                /* 0378 */  0x57, 0x2C, 0xF0, 0x5E, 0x8E, 0x80, 0xDF, 0x09,  // W,.^....
                /* 0380 */  0xD1, 0x77, 0x0D, 0x7E, 0x9A, 0xB6, 0xA2, 0xBB,  // .w.~....
                /* 0388 */  0x06, 0x94, 0x19, 0xBE, 0x07, 0xF9, 0xB0, 0x13,  // ........
                /* 0390 */  0x2C, 0xD2, 0xA3, 0x8D, 0x6F, 0x49, 0xE1, 0x7C,  // ,...oI.|
                /* 0398 */  0xDB, 0x00, 0xD8, 0xF2, 0xFF, 0xBF, 0x6D, 0x00,  // ......m.
                /* 03A0 */  0x4C, 0x19, 0xBF, 0x6F, 0x1B, 0xC0, 0x4F, 0xA1,  // L..o..O.
                /* 03A8 */  0x4D, 0x9F, 0x1A, 0x8D, 0x5A, 0x35, 0x28, 0x53,  // M...Z5(S
                /* 03B0 */  0xA3, 0x4C, 0x83, 0x5A, 0x7D, 0x2A, 0x35, 0x66,  // .L.Z}*5f
                /* 03B8 */  0x4C, 0xC9, 0xC1, 0xCE, 0x77, 0x0C, 0x2A, 0x6C,  // L...w.*l
                /* 03C0 */  0x65, 0x1A, 0x9A, 0x63, 0x81, 0xD0, 0x10, 0xC7,  // e..c....
                /* 03C8 */  0x26, 0x19, 0x01, 0x51, 0x22, 0x10, 0x01, 0x59,  // &..Q"..Y
                /* 03D0 */  0xFD, 0x6F, 0x42, 0x40, 0xCE, 0x02, 0x22, 0x20,  // .oB@.." 
                /* 03D8 */  0x2B, 0x58, 0x9A, 0xC0, 0x9D, 0xFF, 0xD8, 0x28,  // +X.....(
                /* 03E0 */  0x40, 0xA2, 0x02, 0x84, 0x29, 0x7D, 0x93, 0x09,  // @...)}..
                /* 03E8 */  0xD4, 0xB2, 0x41, 0x04, 0xF4, 0xFF, 0x3F, 0x42,  // ..A...?B
                /* 03F0 */  0xD9, 0x00, 0x62, 0x82, 0x41, 0x04, 0x64, 0x91,  // ..b.A.d.
                /* 03F8 */  0x3E, 0x80, 0x98, 0x62, 0x10, 0x01, 0x59, 0xDD,  // >..b..Y.
                /* 0400 */  0xA3, 0x40, 0x40, 0xD6, 0x0A, 0x22, 0x20, 0xFF,  // .@@.." .
                /* 0408 */  0xFF, 0x01                                       // ..
            })
        }

        Device (WMI4)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x57, 0xBB, 0x84, 0x85, 0x31, 0x5E, 0xC4, 0x46,  // W...1^.F
                /* 0008 */  0xBC, 0x8E, 0x5E, 0x94, 0x56, 0x3A, 0xE4, 0x15,  // ..^.V:..
                /* 0010 */  0x41, 0x44, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // AD..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x44, 0x01, 0x00   // ..).BD..
            })
            Name (TDRV, Package (0x08)
            {
                "Drv1", 
                "Drv2", 
                "Drv3", 
                "Drv4", 
                "Drv5", 
                "Drv6", 
                "Drv7", 
                "Drv8"
            })
            Name (PTYP, Package (0x07)
            {
                "POP", 
                "SVP", 
                "SMP", 
                "UHDP", 
                "MHDP", 
                "UDRP", 
                "ADRP"
            })
            Name (EMTH, Package (0x0C)
            {
                "ATAN", 
                "ATAC", 
                "OPALPASS", 
                "DOD", 
                "SPZ", 
                "USNAF", 
                "CCI6", 
                "BHI5", 
                "GV", 
                "RGP1", 
                "RGP4", 
                "RTOII"
            })
            Method (WMAD, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                If ((SizeOf (Arg2) == Zero))
                {
                    Local0 = 0x02
                }
                Else
                {
                    Local0 = \_SB.WMI1.CARG (Arg2)
                    If ((Local0 == Zero))
                    {
                        If ((\_SB.WMI1.ILEN != Zero))
                        {
                            \_SB.WMI1.CLRP ()
                            Local0 = SWIP (\_SB.WMI1.IBUF)
                            If ((Local0 == Zero))
                            {
                                Local0 = WMIS (0x0D, Zero)
                            }

                            \_SB.WMI1.CLRP ()
                        }
                    }
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (SWIP, 1, NotSerialized)
            {
                Local6 = \_SB.WMI1.GSEL (TDRV, Arg0, Zero, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WDRV = Local6
                Local0 = \_SB.WMI1.SLEN (TDRV, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = \_SB.WMI1.GSEL (EMTH, Arg0, Local0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WMTH = Local6
                Local0 += \_SB.WMI1.SLEN (EMTH, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = \_SB.WMI1.GSEL (PTYP, Arg0, Local0, Zero)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WPTY = Local6
                Local0 += \_SB.WMI1.SLEN (PTYP, Local6)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local1 = \_SB.WMI1.GPAS (Arg0, Local0)
                If (((Local1 == Ones) || (Local1 == Zero)))
                {
                    Return (0x02)
                }

                WPAS = \_SB.WMI1.PSTR
                Return (Zero)
            }

            Name (WQBD, Buffer (0x0322)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x12, 0x03, 0x00, 0x00, 0x36, 0x08, 0x00, 0x00,  // ....6...
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xDA, 0x83, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x05, 0x10, 0x8A, 0x0E, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x58, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PX...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0xD4, 0x18, 0xA8, 0x58, 0x08, 0x89, 0x00,  // 1...X...
                /* 0050 */  0xA6, 0x42, 0xE0, 0x08, 0x41, 0xBF, 0x02, 0x10,  // .B..A...
                /* 0058 */  0x3A, 0x14, 0x20, 0x53, 0x80, 0x41, 0x01, 0x4E,  // :. S.A.N
                /* 0060 */  0x11, 0x44, 0x10, 0xA5, 0x65, 0x01, 0xBA, 0x05,  // .D..e...
                /* 0068 */  0xF8, 0x16, 0xA0, 0x1D, 0x42, 0x68, 0x91, 0xE2,  // ....Bh..
                /* 0070 */  0x9C, 0x42, 0xEB, 0x93, 0x10, 0x48, 0xAF, 0x02,  // .B...H..
                /* 0078 */  0x4C, 0x0B, 0x10, 0x0E, 0x22, 0x8B, 0x02, 0x64,  // L..."..d
                /* 0080 */  0x63, 0xC8, 0x36, 0x28, 0x19, 0x09, 0x13, 0x39,  // c.6(...9
                /* 0088 */  0x0C, 0x94, 0x98, 0x61, 0xA0, 0x74, 0xCE, 0x42,  // ...a.t.B
                /* 0090 */  0x36, 0x81, 0x35, 0x83, 0x42, 0x51, 0x34, 0x93,  // 6.5.BQ4.
                /* 0098 */  0x28, 0x09, 0x4E, 0xE1, 0x30, 0x22, 0x04, 0x2F,  // (.N.0"./
                /* 00A0 */  0x57, 0x80, 0xE4, 0x09, 0x48, 0xF3, 0xD4, 0x34,  // W...H..4
                /* 00A8 */  0x8F, 0x83, 0x38, 0x04, 0x36, 0x02, 0x9E, 0x58,  // ..8.6..X
                /* 00B0 */  0x03, 0x08, 0x8B, 0xB5, 0x52, 0x05, 0x75, 0x00,  // ....R.u.
                /* 00B8 */  0x83, 0xD9, 0xB6, 0x04, 0xC8, 0x19, 0x2D, 0x0A,  // ......-.
                /* 00C0 */  0xD8, 0xB3, 0x3A, 0x91, 0x26, 0x87, 0x4A, 0x25,  // ..:.&.J%
                /* 00C8 */  0xC1, 0xA1, 0x06, 0x6A, 0x89, 0x02, 0xCC, 0x8F,  // ...j....
                /* 00D0 */  0x4C, 0x13, 0x39, 0xB6, 0xD3, 0x3B, 0xC3, 0x90,  // L.9..;..
                /* 00D8 */  0x4C, 0xDA, 0x50, 0x50, 0xA3, 0xF7, 0xB4, 0x4E,  // L.PP...N
                /* 00E0 */  0xCA, 0x73, 0x8D, 0x78, 0x50, 0x86, 0x49, 0xE0,  // .s.xP.I.
                /* 00E8 */  0x51, 0x30, 0x34, 0x4E, 0x50, 0x16, 0x84, 0x76,  // Q04NP..v
                /* 00F0 */  0x44, 0x07, 0x4A, 0x00, 0x4F, 0xC2, 0x73, 0x2C,  // D.J.O.s,
                /* 00F8 */  0x7E, 0xD0, 0x64, 0x22, 0x4F, 0x03, 0x31, 0x12,  // ~.d"O.1.
                /* 0100 */  0xF8, 0x54, 0x60, 0xD1, 0x63, 0x46, 0x8F, 0x28,  // .T`.cF.(
                /* 0108 */  0x5C, 0xC0, 0xF3, 0x39, 0x86, 0xF3, 0xF7, 0x50,  // \..9...P
                /* 0110 */  0x63, 0x1C, 0x45, 0xE4, 0x04, 0xF1, 0x7D, 0x0E,  // c.E...}.
                /* 0118 */  0x60, 0x50, 0x41, 0x0A, 0x12, 0x20, 0x15, 0x5D,  // `PA.. .]
                /* 0120 */  0xFF, 0x7F, 0xB8, 0x68, 0x5D, 0xCF, 0x5D, 0x28,  // ...h].](
                /* 0128 */  0x86, 0x3A, 0xEB, 0x93, 0x0A, 0x76, 0x1C, 0xBE,  // .:...v..
                /* 0130 */  0x10, 0x70, 0x9C, 0xDE, 0x4F, 0x04, 0x74, 0x28,  // .p..O.t(
                /* 0138 */  0x58, 0x19, 0x10, 0xF2, 0x28, 0xC0, 0xEA, 0xE8,  // X...(...
                /* 0140 */  0x34, 0x97, 0x04, 0x16, 0x27, 0xC0, 0x1A, 0x84,  // 4...'...
                /* 0148 */  0xA6, 0x5A, 0x21, 0x82, 0x50, 0x7A, 0x13, 0x60,  // .Z!.Pz.`
                /* 0150 */  0x0B, 0x43, 0x83, 0xE9, 0x4C, 0x80, 0x31, 0x14,  // .C..L.1.
                /* 0158 */  0x61, 0xD5, 0x76, 0x25, 0x10, 0x46, 0x94, 0x70,  // a.v%.F.p
                /* 0160 */  0x41, 0x62, 0x06, 0x8B, 0xC7, 0xCC, 0x41, 0x09,  // Ab....A.
                /* 0168 */  0x24, 0x5C, 0xCC, 0x57, 0x83, 0x38, 0x61, 0xC2,  // $\.W.8a.
                /* 0170 */  0xC6, 0x49, 0xE0, 0xC1, 0xE3, 0x4E, 0x01, 0x3E,  // .I...N.>
                /* 0178 */  0x38, 0x1C, 0xE0, 0x41, 0x3D, 0x05, 0x3C, 0x31,  // 8..A=.<1
                /* 0180 */  0x98, 0xC0, 0x53, 0x3F, 0xB8, 0x67, 0x84, 0x97,  // ..S?.g..
                /* 0188 */  0x8A, 0x73, 0x8C, 0x1A, 0xE3, 0x0C, 0x12, 0x58,  // .s.....X
                /* 0190 */  0xD2, 0x5B, 0x42, 0x16, 0x40, 0x14, 0x09, 0x1E,  // .[B.@...
                /* 0198 */  0x75, 0x6A, 0xF0, 0xF9, 0xC0, 0x23, 0x3B, 0x78,  // uj...#;x
                /* 01A0 */  0x8F, 0xF6, 0x04, 0x82, 0x1C, 0xC2, 0x11, 0x3C,  // .......<
                /* 01A8 */  0x39, 0x3C, 0x18, 0x78, 0x0C, 0xEC, 0xC6, 0xE0,  // 9<.x....
                /* 01B0 */  0xA3, 0x80, 0x4F, 0x0A, 0xF8, 0x51, 0x07, 0x7C,  // ..O..Q.|
                /* 01B8 */  0x45, 0x78, 0x40, 0x60, 0x23, 0x0E, 0x87, 0x19,  // Ex@`#...
                /* 01C0 */  0xAE, 0x87, 0xED, 0x09, 0x9C, 0xFA, 0xB3, 0x06,  // ........
                /* 01C8 */  0x3F, 0x77, 0x78, 0x70, 0xB8, 0x91, 0x9E, 0xCC,  // ?wxp....
                /* 01D0 */  0x91, 0xBD, 0x07, 0x34, 0x7B, 0x48, 0xD0, 0x81,  // ...4{H..
                /* 01D8 */  0xC2, 0x07, 0x0F, 0x76, 0x15, 0xB0, 0x67, 0x48,  // ...v..gH
                /* 01E0 */  0x22, 0x7F, 0x10, 0xA8, 0x91, 0x19, 0xDA, 0x13,  // ".......
                /* 01E8 */  0x7E, 0xFF, 0x30, 0xE4, 0xF3, 0xC2, 0x61, 0xB1,  // ~.0...a.
                /* 01F0 */  0xE3, 0x87, 0x0F, 0x20, 0x1E, 0x0F, 0xF8, 0xEF,  // ... ....
                /* 01F8 */  0x25, 0xCF, 0x1B, 0x9E, 0xBE, 0xE7, 0xEB, 0xF3,  // %.......
                /* 0200 */  0x84, 0x81, 0xB1, 0xFF, 0xFF, 0x43, 0x09, 0x18,  // .....C..
                /* 0208 */  0x6E, 0x0F, 0xFC, 0x58, 0x02, 0xE7, 0x48, 0x02,  // n..X..H.
                /* 0210 */  0x4C, 0x26, 0xE9, 0x21, 0xF0, 0x33, 0x81, 0x87,  // L&.!.3..
                /* 0218 */  0xC0, 0x07, 0xF0, 0x24, 0x71, 0x8A, 0x56, 0x3A,  // ...$q.V:
                /* 0220 */  0x31, 0xE4, 0xE9, 0x05, 0xAC, 0xF9, 0x1F, 0x01,  // 1.......
                /* 0228 */  0x3A, 0x7C, 0x38, 0x3B, 0x88, 0x6C, 0x3C, 0x03,  // :|8;.l<.
                /* 0230 */  0x7C, 0x10, 0xA0, 0x6A, 0x80, 0x34, 0x53, 0xD8,  // |..j.4S.
                /* 0238 */  0x04, 0xD3, 0x93, 0xEB, 0xE0, 0xC3, 0x73, 0x93,  // ......s.
                /* 0240 */  0x28, 0xF9, 0xC8, 0x28, 0x9C, 0xB3, 0x1E, 0x49,  // (..(...I
                /* 0248 */  0x28, 0x88, 0x01, 0x1D, 0xE4, 0x44, 0x81, 0x3E,  // (....D.>
                /* 0250 */  0xAD, 0x78, 0x08, 0xE7, 0xFA, 0xE4, 0xE3, 0x41,  // .x.....A
                /* 0258 */  0xF9, 0x3E, 0xE2, 0xDB, 0x8A, 0x0F, 0x21, 0x3E,  // .>....!>
                /* 0260 */  0x4F, 0x78, 0xF8, 0x3E, 0x29, 0xF0, 0x1F, 0x8D,  // Ox.>)...
                /* 0268 */  0xAF, 0x0E, 0x46, 0xB7, 0x9A, 0x13, 0x0B, 0x0A,  // ..F.....
                /* 0270 */  0xCC, 0x67, 0x11, 0x4E, 0x50, 0xD7, 0x65, 0x02,  // .g.NP.e.
                /* 0278 */  0x64, 0xFA, 0x4E, 0x0B, 0x50, 0xFF, 0xFF, 0x97,  // d.N.P...
                /* 0280 */  0x00, 0x0E, 0xE4, 0xAB, 0x81, 0x8F, 0x02, 0x8F,  // ........
                /* 0288 */  0x07, 0x6C, 0x0C, 0x4F, 0x03, 0x46, 0x33, 0x3A,  // .l.O.F3:
                /* 0290 */  0x0F, 0x3F, 0x59, 0x54, 0xDC, 0xC9, 0x52, 0x10,  // .?YT..R.
                /* 0298 */  0x4F, 0xD6, 0x51, 0x26, 0x8B, 0x9E, 0x89, 0x2F,  // O.Q&.../
                /* 02A0 */  0x00, 0x9E, 0xD1, 0x2B, 0x80, 0xE7, 0xE8, 0x09,  // ...+....
                /* 02A8 */  0xFB, 0x2A, 0x02, 0xEB, 0x80, 0xF0, 0x50, 0xE3,  // .*....P.
                /* 02B0 */  0x3B, 0x06, 0x83, 0xF3, 0x64, 0x39, 0x9C, 0x27,  // ;...d9.'
                /* 02B8 */  0xCB, 0xC7, 0xE2, 0x9B, 0x08, 0xF8, 0x04, 0xCE,  // ........
                /* 02C0 */  0x16, 0xE4, 0xF0, 0x98, 0x90, 0xA3, 0xA2, 0x97,  // ........
                /* 02C8 */  0x22, 0x0F, 0x8F, 0x5F, 0x0E, 0x3C, 0x9F, 0x67,  // ".._.<.g
                /* 02D0 */  0x84, 0xA3, 0x7C, 0x92, 0xC0, 0x61, 0xBC, 0x61,  // ..|..a.a
                /* 02D8 */  0x78, 0x88, 0xBE, 0x1F, 0xC1, 0x9A, 0xC8, 0x49,  // x......I
                /* 02E0 */  0xFB, 0xB6, 0x70, 0xB2, 0x41, 0xE3, 0x87, 0xF5,  // ..p.A...
                /* 02E8 */  0xFD, 0x08, 0xB8, 0x2A, 0xB4, 0xE9, 0x53, 0xA3,  // ...*..S.
                /* 02F0 */  0x51, 0xAB, 0x06, 0x65, 0x6A, 0x94, 0x69, 0x50,  // Q..ej.iP
                /* 02F8 */  0xAB, 0x4F, 0xA5, 0xC6, 0x8C, 0x5D, 0xB3, 0x2C,  // .O...].,
                /* 0300 */  0xD0, 0xC0, 0xFF, 0x7F, 0x44, 0x4C, 0xE2, 0xDA,  // ....DL..
                /* 0308 */  0x34, 0x38, 0x07, 0x04, 0xA1, 0x71, 0xBE, 0x40,  // 48...q.@
                /* 0310 */  0x32, 0x02, 0xA2, 0x6C, 0x20, 0x02, 0x72, 0x8E,  // 2..l .r.
                /* 0318 */  0xFF, 0x84, 0x80, 0x9C, 0x0A, 0x44, 0x40, 0xFE,  // .....D@.
                /* 0320 */  0xFF, 0x03                                       // ..
            })
        }

        Device (WMI5)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_WDG, Buffer (0xDC)
            {
                /* 0000 */  0xBF, 0xEF, 0x42, 0x20, 0xF9, 0x9A, 0xDF, 0x47,  // ..B ...G
                /* 0008 */  0xB7, 0x1A, 0x28, 0x7C, 0x03, 0x0C, 0x91, 0xCF,  // ..(|....
                /* 0010 */  0x47, 0x4E, 0x01, 0x01, 0x5E, 0xB4, 0x9E, 0xB7,  // GN..^...
                /* 0018 */  0xB3, 0x85, 0xD5, 0x41, 0xA9, 0x65, 0xCC, 0x17,  // ...A.e..
                /* 0020 */  0xD2, 0x2A, 0x6D, 0x8B, 0x47, 0x4D, 0x01, 0x01,  // .*m.GM..
                /* 0028 */  0x77, 0x80, 0x92, 0x02, 0x0A, 0xAD, 0xC7, 0x4C,  // w......L
                /* 0030 */  0x96, 0xB4, 0x2B, 0x89, 0x83, 0xC4, 0x38, 0x04,  // ..+...8.
                /* 0038 */  0x53, 0x43, 0x01, 0x02, 0x61, 0x57, 0x50, 0x1F,  // SC..aWP.
                /* 0040 */  0x4A, 0x1F, 0x78, 0x4B, 0x8B, 0xD7, 0xBB, 0x52,  // J.xK...R
                /* 0048 */  0xFA, 0x7E, 0x4F, 0x37, 0x47, 0x43, 0x01, 0x02,  // .~O7GC..
                /* 0050 */  0x84, 0xC2, 0x95, 0x28, 0x84, 0x00, 0x9E, 0x41,  // ...(...A
                /* 0058 */  0xAE, 0xF6, 0x8D, 0xCB, 0xBB, 0x55, 0xB0, 0xB1,  // .....U..
                /* 0060 */  0x45, 0x43, 0x01, 0x01, 0xCF, 0xB4, 0x31, 0xD9,  // EC....1.
                /* 0068 */  0x4E, 0xF5, 0x07, 0x4D, 0x94, 0x20, 0x42, 0x85,  // N..M. B.
                /* 0070 */  0x8C, 0xC6, 0xA2, 0x34, 0x4E, 0x53, 0x01, 0x01,  // ...4NS..
                /* 0078 */  0xCC, 0xAD, 0x11, 0xBE, 0x23, 0x99, 0xAD, 0x45,  // ....#..E
                /* 0080 */  0x9E, 0x74, 0xCB, 0x5F, 0xB1, 0x04, 0xBE, 0x9D,  // .t._....
                /* 0088 */  0x57, 0x44, 0x01, 0x02, 0xC2, 0x81, 0xE0, 0x48,  // WD.....H
                /* 0090 */  0x7E, 0x18, 0xE1, 0x43, 0x8B, 0xB1, 0x62, 0xF4,  // ~..C..b.
                /* 0098 */  0x82, 0xCC, 0x66, 0x9C, 0x52, 0x44, 0x01, 0x02,  // ..f.RD..
                /* 00A0 */  0xB8, 0xE2, 0x02, 0xE7, 0x12, 0x41, 0x76, 0x47,  // .....AvG
                /* 00A8 */  0x98, 0xB3, 0xCC, 0x1B, 0x0C, 0x73, 0x92, 0xB4,  // .....s..
                /* 00B0 */  0x57, 0x50, 0x01, 0x02, 0xED, 0xD2, 0x94, 0x2B,  // WP.....+
                /* 00B8 */  0x48, 0x25, 0xDE, 0x4F, 0xAC, 0x72, 0x96, 0xCA,  // H%.O.r..
                /* 00C0 */  0x99, 0xC6, 0xBF, 0xE6, 0x52, 0x50, 0x01, 0x01,  // ....RP..
                /* 00C8 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
                /* 00D0 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
                /* 00D8 */  0x42, 0x45, 0x01, 0x00                           // BE..
            })
            Name (RETN, Package (0x0A)
            {
                "SUCCESS", 
                "ERROR: NOT_SUPPORTED", 
                "ERROR: INVALID_PARAMETER", 
                "ERROR: ACCESS_DENIED", 
                "ERROR: SYSTEM_BUSY", 
                "ERROR: OUT_OF_RESOURCES", 
                "ERROR: NOT_FOUND", 
                "ERROR: SECURITY_VIORATION", 
                "ERROR: ABORTED", 
                "ERROR: BUFFERTOOSMALL"
            })
            Method (CARU, 2, NotSerialized)
            {
                Local0 = Arg1
                If ((Local0 == Zero))
                {
                    \_SB.WMI1.IBUF = Zero
                    \_SB.WMI1.ILEN = Zero
                    Return (Zero)
                }

                Local1 = SizeOf (\_SB.WMI1.IBUF)
                Local1--
                If ((Local0 >= Local1))
                {
                    Return (0x02)
                }

                \_SB.WMI1.IBUF = Zero
                Local2 = Zero
                While ((Local2 < Local0))
                {
                    Local3 = (Local2 * 0x02)
                    \_SB.WMI1.IBUF [Local2] = DerefOf (Arg0 [Local3])
                    Local2++
                }

                Local0--
                Local1 = DerefOf (\_SB.WMI1.IBUF [Local0])
                If (((Local1 == 0x3B) || (Local1 == 0x2A)))
                {
                    \_SB.WMI1.IBUF [Local0] = Zero
                    \_SB.WMI1.ILEN = Local0
                }
                Else
                {
                    \_SB.WMI1.ILEN = Arg1
                }

                Return (Zero)
            }

            Method (WQGN, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WMIS (0x0E, Zero)
                Release (\_SB.WMI1.MWMI)
                Return (SNMA) /* \_SB_.SNMA */
            }

            Method (WQGM, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WMIS (0x0E, One)
                Release (\_SB.WMI1.MWMI)
                Return (SNMA) /* \_SB_.SNMA */
            }

            Method (WMSC, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                SCSB = Arg2
                Local0 = SSPL /* \_SB_.SSPL */
                If ((Local0 == Zero))
                {
                    SSPB = Zero
                }
                Else
                {
                    Local0 /= 0x02
                }

                Local1 = CARU (SSPB, Local0)
                SSPB = Zero
                SSPL = Zero
                If ((Local1 == Zero))
                {
                    If ((\_SB.WMI1.ILEN != Zero))
                    {
                        Local1 = \_SB.WMI1.CPAS (\_SB.WMI1.IBUF, Zero)
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = WMIS (0x0E, 0x02)
                    }
                }

                If ((Local1 != Zero))
                {
                    SCSB = Zero
                    \_SB.WMI1.CLRP ()
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (RETN [Local1]))
            }

            Method (WMGC, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                SCSB = Arg2
                Local0 = SGPL /* \_SB_.SGPL */
                If ((SGPL == Zero))
                {
                    SGPB = Zero
                }
                Else
                {
                    Local0 /= 0x02
                }

                Local1 = CARU (SGPB, Local0)
                SGPB = Zero
                SGPL = Zero
                If ((Local1 == Zero))
                {
                    If ((\_SB.WMI1.ILEN != Zero))
                    {
                        Local1 = \_SB.WMI1.CPAS (\_SB.WMI1.IBUF, Zero)
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = WMIS (0x0E, 0x03)
                    }
                }

                If ((Local1 != Zero))
                {
                    SCSB = Zero
                    \_SB.WMI1.CLRP ()
                }

                Release (\_SB.WMI1.MWMI)
                Return (SGSB) /* \_SB_.SGSB */
            }

            Method (WQEC, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = WMIS (0x0E, 0x04)
                If ((Local0 != Zero))
                {
                    SCSB = Zero
                }

                Release (\_SB.WMI1.MWMI)
                Return (SEDL) /* \_SB_.SEDL */
            }

            Method (WQNS, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = WMIS (0x0E, 0x04)
                If ((Local0 != Zero))
                {
                    SCSB = Zero
                }

                Release (\_SB.WMI1.MWMI)
                Return (SENS) /* \_SB_.SENS */
            }

            Method (WMWD, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                SCSB = Arg2
                Local0 = SWAL /* \_SB_.SWAL */
                If ((Local0 == Zero))
                {
                    SWAB = Zero
                }
                Else
                {
                    Local0 /= 0x02
                }

                Local1 = CARU (SWAB, Local0)
                SWAL = Zero
                SWAB = Zero
                If ((Local1 == Zero))
                {
                    If ((\_SB.WMI1.ILEN != Zero))
                    {
                        Local1 = \_SB.WMI1.CPAS (\_SB.WMI1.IBUF, Zero)
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = WMIS (0x0E, 0x05)
                    }
                }

                If ((Local1 != Zero))
                {
                    SCSB = Zero
                    \_SB.WMI1.CLRP ()
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (RETN [Local1]))
            }

            Method (WMRD, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                SCSB = Arg2
                Local1 = WMIS (0x0E, 0x08)
                If ((Local1 != Zero))
                {
                    SCSB = Zero
                    \_SB.WMI1.CLRP ()
                }

                Release (\_SB.WMI1.MWMI)
                Return (GWMB) /* \_SB_.GWMB */
            }

            Method (WMWP, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                SCSB = Arg2
                Local0 = WMIS (0x0E, 0x06)
                If ((Local0 != Zero))
                {
                    SCSB = Zero
                    \_SB.WMI1.CLRP ()
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (RETN [Local0]))
            }

            Method (WQRP, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = WMIS (0x0E, 0x07)
                If ((Local0 != Zero))
                {
                    SCSB = Zero
                }

                Release (\_SB.WMI1.MWMI)
                Return (GPMB) /* \_SB_.GPMB */
            }

            Name (WQBE, Buffer (0x1019)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x09, 0x10, 0x00, 0x00, 0x0C, 0x5C, 0x00, 0x00,  // .....\..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x28, 0xC4, 0xAC, 0x00, 0x01, 0x06, 0x18, 0x42,  // (......B
                /* 0020 */  0x10, 0x1B, 0x10, 0x92, 0x40, 0x62, 0x02, 0x09,  // ....@b..
                /* 0028 */  0x83, 0x50, 0x68, 0x16, 0x06, 0x43, 0xB8, 0x2C,  // .Ph..C.,
                /* 0030 */  0x0A, 0x42, 0x2E, 0xA0, 0xA8, 0x14, 0x08, 0x19,  // .B......
                /* 0038 */  0x16, 0xA0, 0x58, 0x80, 0x73, 0x01, 0xD2, 0x05,  // ..X.s...
                /* 0040 */  0x28, 0x47, 0x91, 0x63, 0x10, 0x11, 0xB8, 0x7F,  // (G.c....
                /* 0048 */  0x7F, 0x88, 0xE1, 0x40, 0xA4, 0x00, 0x42, 0xA2,  // ...@..B.
                /* 0050 */  0x21, 0x24, 0x02, 0x98, 0x0A, 0x81, 0x23, 0x04,  // !$....#.
                /* 0058 */  0xFD, 0x0A, 0x40, 0xE8, 0x50, 0x80, 0x4C, 0x01,  // ..@.P.L.
                /* 0060 */  0x06, 0x05, 0x38, 0x45, 0x10, 0x41, 0x94, 0x96,  // ..8E.A..
                /* 0068 */  0x05, 0xE8, 0x16, 0xE0, 0x5B, 0x80, 0x76, 0x08,  // ....[.v.
                /* 0070 */  0xA1, 0x19, 0xE7, 0x1C, 0x4E, 0xA1, 0x69, 0x01,  // ....N.i.
                /* 0078 */  0x9A, 0x21, 0x34, 0x8A, 0xC3, 0x08, 0x13, 0x29,  // .!4....)
                /* 0080 */  0x68, 0x8C, 0x78, 0x67, 0x62, 0xCF, 0x38, 0xB2,  // h.xgb.8.
                /* 0088 */  0x28, 0x40, 0x36, 0x86, 0x6C, 0x83, 0x93, 0xD1,  // (@6.l...
                /* 0090 */  0x30, 0x91, 0x43, 0x41, 0x89, 0x19, 0x0A, 0x4A,  // 0.CA...J
                /* 0098 */  0xE7, 0x4C, 0x64, 0x13, 0x58, 0x03, 0x28, 0x14,  // .Ld.X.(.
                /* 00A0 */  0x45, 0xE3, 0x88, 0x92, 0xE0, 0x0C, 0x4E, 0x21,  // E.....N!
                /* 00A8 */  0x42, 0xF0, 0x72, 0x05, 0x48, 0x9E, 0x80, 0x66,  // B.r.H..f
                /* 00B0 */  0x72, 0x14, 0xAD, 0x0F, 0x42, 0x43, 0x60, 0x23,  // r...BC`#
                /* 00B8 */  0xE0, 0x92, 0x2D, 0x80, 0x30, 0x51, 0xAB, 0x95,  // ..-.0Q..
                /* 00C0 */  0x48, 0x18, 0x94, 0x04, 0x10, 0xC9, 0x19, 0x31,  // H......1
                /* 00C8 */  0x0A, 0xD8, 0x5E, 0x27, 0x22, 0x93, 0xC3, 0xA5,  // ..^'"...
                /* 00D0 */  0xD2, 0x06, 0x8B, 0x1E, 0xE7, 0xA9, 0x1C, 0xA1,  // ........
                /* 00D8 */  0x07, 0x67, 0x02, 0xA3, 0x9E, 0xD2, 0xE1, 0xBC,  // .g......
                /* 00E0 */  0x03, 0x14, 0x8F, 0x2A, 0x8C, 0xE6, 0xA0, 0xC8,  // ...*....
                /* 00E8 */  0xC8, 0x71, 0xE3, 0xB3, 0x44, 0x58, 0x9D, 0x02,  // .q..DX..
                /* 00F0 */  0x62, 0x1F, 0xDA, 0x01, 0x17, 0x3E, 0x65, 0x32,  // b....>e2
                /* 00F8 */  0x82, 0x43, 0x4D, 0x70, 0x7C, 0x31, 0x4E, 0xED,  // .CMp|1N.
                /* 0100 */  0x6C, 0x3D, 0x64, 0xCF, 0xDA, 0x03, 0x2C, 0x08,  // l=d...,.
                /* 0108 */  0x54, 0x83, 0x87, 0x03, 0x16, 0x2E, 0x8A, 0x21,  // T......!
                /* 0110 */  0xA2, 0x1C, 0x43, 0xA0, 0xF3, 0xF4, 0x50, 0x70,  // ..C...Pp
                /* 0118 */  0x32, 0x20, 0xE4, 0x51, 0x80, 0x55, 0x01, 0xFF,  // 2 .Q.U..
                /* 0120 */  0xFF, 0xE1, 0x9D, 0x4B, 0x02, 0xCF, 0xC0, 0x93,  // ...K....
                /* 0128 */  0x6A, 0x4C, 0x80, 0x32, 0x04, 0x89, 0x1B, 0x96,  // jL.2....
                /* 0130 */  0x6C, 0x1D, 0x13, 0x34, 0xB0, 0xDA, 0x90, 0x84,  // l..4....
                /* 0138 */  0x12, 0x2C, 0x50, 0x94, 0x60, 0x51, 0xA2, 0xC5,  // .,P.`Q..
                /* 0140 */  0x8A, 0x74, 0x28, 0xA1, 0x0C, 0x6A, 0xAC, 0x40,  // .t(..j.@
                /* 0148 */  0xAD, 0x41, 0x68, 0x2C, 0x31, 0x02, 0xC5, 0x78,  // .Ah,1..x
                /* 0150 */  0x73, 0x30, 0x41, 0x41, 0x2B, 0x97, 0x86, 0x91,  // s0AA+...
                /* 0158 */  0x78, 0xF0, 0x32, 0xB2, 0x9F, 0xA7, 0x06, 0x4A,  // x.2....J
                /* 0160 */  0x70, 0x34, 0x6C, 0x82, 0x67, 0x16, 0x35, 0x81,  // p4l.g.5.
                /* 0168 */  0x63, 0x43, 0x08, 0xD4, 0xA7, 0x08, 0x3B, 0x38,  // cC....;8
                /* 0170 */  0x45, 0xA0, 0x0E, 0x01, 0x47, 0x1A, 0xF2, 0xB0,  // E...G...
                /* 0178 */  0x0E, 0x90, 0x4D, 0x2C, 0xAE, 0xCF, 0x13, 0xDE,  // ..M,....
                /* 0180 */  0x82, 0x8F, 0x03, 0x7C, 0x0C, 0x9E, 0xED, 0xD1,  // ...|....
                /* 0188 */  0x05, 0x3C, 0x06, 0x76, 0x1E, 0x30, 0x20, 0xDE,  // .<.v.0 .
                /* 0190 */  0xFB, 0x05, 0x80, 0xCC, 0xD9, 0xE7, 0x02, 0x18,  // ........
                /* 0198 */  0x47, 0x01, 0xB8, 0x23, 0xC3, 0x9D, 0x15, 0x3C,  // G..#...<
                /* 01A0 */  0x2E, 0x0E, 0xEF, 0x03, 0xC2, 0x1B, 0x44, 0xB1,  // ......D.
                /* 01A8 */  0xE7, 0x04, 0x2A, 0xEB, 0xAC, 0x80, 0xBE, 0x47,  // ..*....G
                /* 01B0 */  0x1C, 0x5B, 0xC0, 0x52, 0x05, 0xFC, 0x41, 0x9E,  // .[.R..A.
                /* 01B8 */  0x25, 0x1E, 0x25, 0x3C, 0x03, 0x1F, 0x2C, 0x3C,  // %.%<..,<
                /* 01C0 */  0xF4, 0x04, 0xA3, 0x43, 0xC8, 0x09, 0x2C, 0x1D,  // ...C..,.
                /* 01C8 */  0x33, 0x47, 0x6D, 0x7E, 0x38, 0x3A, 0x36, 0xB0,  // 3Gm~8:6.
                /* 01D0 */  0xA8, 0x10, 0xFA, 0x49, 0x78, 0xCC, 0xE0, 0x38,  // ...Ix..8
                /* 01D8 */  0x86, 0x78, 0xCC, 0xC0, 0xE3, 0xFF, 0x3F, 0x66,  // .x....?f
                /* 01E0 */  0xF8, 0x23, 0xC3, 0xDD, 0x13, 0x3C, 0x58, 0x70,  // .#...<Xp
                /* 01E8 */  0x38, 0x3B, 0x33, 0x88, 0xC0, 0x47, 0x18, 0x8F,  // 8;3..G..
                /* 01F0 */  0x16, 0x37, 0x48, 0x4F, 0x91, 0xDF, 0x38, 0xC2,  // .7HO..8.
                /* 01F8 */  0x56, 0x3F, 0x0C, 0x1A, 0x77, 0xBC, 0xA0, 0x02,  // V?..w...
                /* 0200 */  0xF4, 0x78, 0xC1, 0x2F, 0x6F, 0xBC, 0xA0, 0x19,  // .x./o...
                /* 0208 */  0x1B, 0x9C, 0x11, 0x83, 0xEF, 0xEC, 0xE0, 0x03,  // ........
                /* 0210 */  0x0F, 0x70, 0x18, 0x13, 0xE6, 0x8C, 0xC2, 0x0E,  // .p......
                /* 0218 */  0x3B, 0xC0, 0xE3, 0xFF, 0x8F, 0xE1, 0x21, 0xF0,  // ;.....!.
                /* 0220 */  0xB3, 0x86, 0x87, 0xC0, 0x07, 0xF0, 0xDC, 0x72,  // .......r
                /* 0228 */  0x92, 0x56, 0x3A, 0x35, 0xE4, 0xD9, 0x08, 0x58,  // .V:5...X
                /* 0230 */  0x0C, 0x86, 0x07, 0x7C, 0x03, 0x99, 0x40, 0x51,  // ...|..@Q
                /* 0238 */  0x8E, 0x0E, 0x8A, 0x04, 0x83, 0xF2, 0x70, 0x12,  // ......p.
                /* 0240 */  0x82, 0x2E, 0x09, 0x0E, 0x75, 0x0A, 0xF0, 0xB8,  // ....u...
                /* 0248 */  0x9F, 0x2C, 0x8E, 0xE3, 0x5C, 0xDE, 0x1D, 0x3C,  // .,..\..<
                /* 0250 */  0xA2, 0x07, 0x0D, 0x18, 0x67, 0x08, 0x8F, 0xF1,  // ....g...
                /* 0258 */  0x8C, 0x3D, 0xBB, 0xC7, 0x14, 0x8F, 0xCE, 0x04,  // .=......
                /* 0260 */  0x1E, 0x05, 0x43, 0xE3, 0x87, 0x14, 0x76, 0xA0,  // ..C...v.
                /* 0268 */  0xE0, 0xA7, 0x00, 0x1F, 0x28, 0xD8, 0x00, 0x9F,  // ....(...
                /* 0270 */  0x8D, 0x5E, 0x38, 0x3C, 0x91, 0x47, 0x20, 0x13,  // .^8<.G .
                /* 0278 */  0xF8, 0x4C, 0x63, 0xEC, 0x67, 0x18, 0xF0, 0x1C,  // .Lc.g...
                /* 0280 */  0x0E, 0x7C, 0xA9, 0x78, 0x3D, 0x62, 0x57, 0x9F,  // .|.x=bW.
                /* 0288 */  0xE3, 0x31, 0x4E, 0xB8, 0x83, 0x7F, 0x2C, 0xF2,  // .1N...,.
                /* 0290 */  0xB4, 0x1F, 0x0B, 0x0C, 0xF2, 0x5C, 0x04, 0xFB,  // .....\..
                /* 0298 */  0x0A, 0xF1, 0x36, 0xF1, 0x30, 0xE4, 0xF3, 0x81,  // ..6.0...
                /* 02A0 */  0x27, 0xF0, 0x3E, 0xE4, 0x43, 0xD1, 0xB9, 0x06,  // '.>.C...
                /* 02A8 */  0x79, 0x33, 0x32, 0x58, 0x6F, 0x93, 0x14, 0x94,  // y32Xo...
                /* 02B0 */  0xD1, 0xA2, 0x3C, 0x17, 0x05, 0x8B, 0xF2, 0x5A,  // ..<....Z
                /* 02B8 */  0x64, 0x98, 0x63, 0x8A, 0xFD, 0x46, 0x11, 0x22,  // d.c..F."
                /* 02C0 */  0x48, 0xD0, 0x60, 0x31, 0x42, 0x26, 0xF0, 0xC1,  // H.`1B&..
                /* 02C8 */  0x0A, 0xFF, 0xFF, 0x3F, 0x58, 0x81, 0x43, 0xC8,  // ...?X.C.
                /* 02D0 */  0xAA, 0x75, 0x34, 0x72, 0x24, 0x78, 0xD4, 0xD1,  // .u4r$x..
                /* 02D8 */  0xC1, 0x27, 0x03, 0x8F, 0xEC, 0xB0, 0x7D, 0xAD,  // .'....}.
                /* 02E0 */  0x30, 0xC8, 0x13, 0x94, 0x0F, 0x14, 0x8F, 0x04,  // 0.......
                /* 02E8 */  0x1E, 0x03, 0xBB, 0x2B, 0xF8, 0x10, 0xE0, 0x33,  // ...+...3
                /* 02F0 */  0x02, 0xDE, 0x35, 0xA0, 0x2E, 0x07, 0xCF, 0x26,  // ..5....&
                /* 02F8 */  0xB0, 0xCE, 0x28, 0xF8, 0xC3, 0x08, 0xFC, 0xF3,  // ..(.....
                /* 0300 */  0x1C, 0x3B, 0x8D, 0xF8, 0x2C, 0x91, 0xC0, 0xF2,  // .;..,...
                /* 0308 */  0x07, 0x81, 0x1A, 0x99, 0xA1, 0x7D, 0xBF, 0x78,  // .....}.x
                /* 0310 */  0xAD, 0x33, 0xE4, 0x93, 0xC2, 0x61, 0xB1, 0x53,  // .3...a.S
                /* 0318 */  0x89, 0x4F, 0x40, 0xE0, 0x18, 0x0F, 0xFC, 0xCB,  // .O@.....
                /* 0320 */  0xC0, 0x63, 0x88, 0xA7, 0xEF, 0xF9, 0x9A, 0x60,  // .c.....`
                /* 0328 */  0xD8, 0x93, 0x12, 0x7A, 0xB8, 0x1E, 0xF4, 0xE3,  // ...z....
                /* 0330 */  0x02, 0xC6, 0xE7, 0x89, 0x40, 0xF7, 0x80, 0xA7,  // ....@...
                /* 0338 */  0x05, 0x4C, 0xA8, 0x81, 0xD3, 0x03, 0x17, 0x78,  // .L.....x
                /* 0340 */  0x4E, 0x2B, 0xF8, 0xD3, 0x04, 0xBC, 0xD1, 0xE0,  // N+......
                /* 0348 */  0xCE, 0x12, 0x70, 0x86, 0x89, 0xFB, 0xFF, 0x9F,  // ..p.....
                /* 0350 */  0x70, 0xC0, 0x81, 0xF6, 0x84, 0x03, 0xBE, 0xDB,  // p.......
                /* 0358 */  0x06, 0x1B, 0x2F, 0xDC, 0x03, 0x0E, 0xE0, 0x50,  // ../....P
                /* 0360 */  0xC8, 0xB1, 0x91, 0xC6, 0x7A, 0x17, 0x28, 0xFA,  // ....z.(.
                /* 0368 */  0x01, 0x87, 0xC2, 0xF8, 0x80, 0x03, 0x38, 0x3A,  // ......8:
                /* 0370 */  0xCC, 0xF0, 0xFF, 0xFF, 0x01, 0x07, 0x3C, 0x53,  // ......<S
                /* 0378 */  0x38, 0xB0, 0x43, 0x88, 0x15, 0xE4, 0x29, 0xC1,  // 8.C...).
                /* 0380 */  0xB7, 0x49, 0x98, 0x63, 0xF7, 0x99, 0xC4, 0x38,  // .I.c...8
                /* 0388 */  0x27, 0xE2, 0x63, 0x0E, 0xEC, 0xCB, 0x8D, 0x2F,  // '.c..../
                /* 0390 */  0x32, 0x81, 0x83, 0x9C, 0xEB, 0x03, 0x64, 0x90,  // 2.....d.
                /* 0398 */  0x07, 0x49, 0xDF, 0x21, 0x7D, 0x9C, 0x78, 0xCC,  // .I.!}.x.
                /* 03A0 */  0xF1, 0xE9, 0xE6, 0x2D, 0xD2, 0x28, 0xA7, 0xF1,  // ...-.(..
                /* 03A8 */  0x3E, 0x69, 0x14, 0xCF, 0x24, 0x42, 0xAC, 0x87,  // >i..$B..
                /* 03B0 */  0x1D, 0xDF, 0x2C, 0x0D, 0x16, 0x2B, 0xCA, 0x4B,  // ..,..+.K
                /* 03B8 */  0xA5, 0x8F, 0x39, 0xE0, 0x15, 0x79, 0xCC, 0x01,  // ..9..y..
                /* 03C0 */  0x28, 0xF0, 0xFF, 0x3F, 0xE6, 0x80, 0xE3, 0xF1,  // (..?....
                /* 03C8 */  0xE0, 0x63, 0x0E, 0xEE, 0x28, 0x61, 0xE0, 0x87,  // .c..(a..
                /* 03D0 */  0x06, 0x1F, 0x40, 0x60, 0x9D, 0x44, 0xD8, 0x89,  // ..@`.D..
                /* 03D8 */  0x01, 0x13, 0xF0, 0xA8, 0x03, 0x3A, 0xC1, 0xE7,  // .....:..
                /* 03E0 */  0x0A, 0xD0, 0x8C, 0x88, 0x9D, 0x2A, 0xC0, 0x78,  // .....*.x
                /* 03E8 */  0xE0, 0x01, 0xDF, 0xB0, 0x7C, 0xE0, 0x01, 0xE7,  // ....|...
                /* 03F0 */  0xC8, 0xC1, 0x75, 0xE8, 0x01, 0xDE, 0xFF, 0xFF,  // ..u.....
                /* 03F8 */  0x43, 0x0F, 0x70, 0xD1, 0x69, 0x02, 0x84, 0x05,  // C.p.i...
                /* 0400 */  0x7B, 0x21, 0x28, 0xF2, 0x53, 0x81, 0xC2, 0xF8,  // {!(.S...
                /* 0408 */  0xD0, 0x03, 0x38, 0x1A, 0xE5, 0xD3, 0x04, 0x58,  // ..8....X
                /* 0410 */  0x0E, 0xA4, 0xEC, 0x16, 0xE6, 0x73, 0x98, 0xC7,  // .....s..
                /* 0418 */  0xE3, 0x39, 0xFB, 0x28, 0xC1, 0xCE, 0xE2, 0xBE,  // .9.(....
                /* 0420 */  0x93, 0xC3, 0x3F, 0xF5, 0xC0, 0x3F, 0x57, 0x3C,  // ..?..?W<
                /* 0428 */  0x4D, 0xBC, 0xD7, 0xBC, 0x20, 0x1A, 0xE5, 0x55,  // M... ..U
                /* 0430 */  0x27, 0xC2, 0x03, 0x8F, 0x8F, 0xE1, 0x3E, 0x26,  // '.....>&
                /* 0438 */  0x7A, 0xC4, 0x2F, 0x3C, 0x86, 0xF2, 0xA5, 0xC7,  // z./<....
                /* 0440 */  0xB7, 0x1F, 0x9F, 0x15, 0x0D, 0xF2, 0x70, 0x6E,  // ......pn
                /* 0448 */  0x88, 0x77, 0x8B, 0x70, 0x91, 0x62, 0x44, 0xF7,  // .w.p.bD.
                /* 0450 */  0xDC, 0x7D, 0xEA, 0x01, 0xCB, 0xFF, 0xFF, 0xD4,  // .}......
                /* 0458 */  0x83, 0x97, 0xF6, 0x80, 0xD1, 0x2F, 0xCB, 0xA7,  // ...../..
                /* 0460 */  0x1E, 0x80, 0x1F, 0x07, 0x56, 0xDC, 0xA9, 0x05,  // ....V...
                /* 0468 */  0x2C, 0xD7, 0x07, 0x76, 0x11, 0x81, 0x75, 0x60,  // ,..v..u`
                /* 0470 */  0x01, 0xE6, 0xFF, 0xFF, 0x03, 0x0B, 0x70, 0xD0,  // ......p.
                /* 0478 */  0xFA, 0x78, 0xD0, 0x09, 0xC4, 0x3A, 0x41, 0x64,  // .x...:Ad
                /* 0480 */  0xE3, 0x29, 0xE0, 0xC3, 0x00, 0xD5, 0x7D, 0xEA,  // .)....}.
                /* 0488 */  0xD3, 0x6C, 0x61, 0x43, 0x0B, 0x52, 0xF0, 0x3E,  // .laC.R.>
                /* 0490 */  0x19, 0x58, 0x21, 0x8C, 0x34, 0xBE, 0x20, 0x34,  // .X!.4. 4
                /* 0498 */  0x3A, 0xC3, 0x59, 0x15, 0x8C, 0xE0, 0x0C, 0xE2,  // :.Y.....
                /* 04A0 */  0xA3, 0x99, 0x03, 0x41, 0xC8, 0xC8, 0x40, 0x28,  // ...A..@(
                /* 04A8 */  0xA4, 0x55, 0x9C, 0x3F, 0xC8, 0xDD, 0xC8, 0x47,  // .U.?...G
                /* 04B0 */  0x04, 0x27, 0xB8, 0xCC, 0x7B, 0xFE, 0xF4, 0xAA,  // .'..{...
                /* 04B8 */  0xC0, 0xB1, 0x7D, 0x78, 0x30, 0xB0, 0xE7, 0xEC,  // ..}x0...
                /* 04C0 */  0x3B, 0x0B, 0x9F, 0xB8, 0x6F, 0x01, 0x67, 0xFC,  // ;...o.g.
                /* 04C8 */  0xDE, 0xE0, 0xFB, 0x81, 0xD5, 0xC0, 0xA1, 0xA0,  // ........
                /* 04D0 */  0x7D, 0x27, 0xE1, 0x27, 0x18, 0x76, 0x76, 0x02,  // }'.'.vv.
                /* 04D8 */  0xC7, 0x6D, 0x24, 0xC1, 0x0C, 0x07, 0x56, 0xF4,  // .m$...V.
                /* 04E0 */  0xC0, 0x8C, 0xFA, 0xBE, 0xF1, 0x2E, 0xE3, 0xDB,  // ........
                /* 04E8 */  0x0A, 0x1B, 0x89, 0x07, 0x06, 0x6F, 0x44, 0xB0,  // .....oD.
                /* 04F0 */  0x06, 0x6C, 0x5D, 0x87, 0x2B, 0x90, 0xE5, 0x98,  // .l].+...
                /* 04F8 */  0x11, 0x5A, 0xC9, 0x15, 0x1F, 0xD2, 0x9C, 0xF8,  // .Z......
                /* 0500 */  0xFF, 0x7F, 0x4E, 0x60, 0xBB, 0x19, 0x78, 0x4E,  // ..N`..xN
                /* 0508 */  0x60, 0x3B, 0x1D, 0xC0, 0x99, 0x13, 0x3F, 0x1D,  // `;....?.
                /* 0510 */  0x80, 0xF9, 0x83, 0xE2, 0x89, 0xC1, 0x42, 0xF2,  // ......B.
                /* 0518 */  0xE9, 0x00, 0x5C, 0x41, 0x8E, 0x3A, 0xE8, 0x73,  // ..\A.:.s
                /* 0520 */  0x14, 0x1B, 0xD7, 0xBB, 0x86, 0x4F, 0x1A, 0x3E,  // .....O.>
                /* 0528 */  0x5A, 0xF8, 0x1E, 0xE5, 0xC1, 0x83, 0x75, 0x9C,  // Z.....u.
                /* 0530 */  0x1E, 0x3C, 0xFC, 0x5B, 0x0E, 0x56, 0xDF, 0x31,  // .<.[.V.1
                /* 0538 */  0x06, 0x14, 0x40, 0xBE, 0xB3, 0xF8, 0x8C, 0xF2,  // ..@.....
                /* 0540 */  0xDC, 0xC2, 0xC6, 0xF0, 0x98, 0x62, 0x34, 0xA3,  // .....b4.
                /* 0548 */  0xF3, 0xF0, 0xE8, 0x14, 0xC6, 0x71, 0x6F, 0x10,  // .....qo.
                /* 0550 */  0x14, 0xC4, 0x07, 0x04, 0x47, 0x99, 0x2C, 0xF2,  // ....G.,.
                /* 0558 */  0xFF, 0x7F, 0xFB, 0x61, 0x77, 0x1E, 0xCF, 0xE8,  // ...aw...
                /* 0560 */  0xB0, 0x83, 0x3C, 0x2C, 0x92, 0xCB, 0x85, 0xEE,  // ..<,....
                /* 0568 */  0x48, 0xB0, 0x6E, 0x2C, 0x21, 0x9F, 0x56, 0x3C,  // H.n,!.V<
                /* 0570 */  0x0D, 0x9F, 0x0B, 0xF0, 0xA7, 0x0F, 0x7E, 0x7F,  // ......~.
                /* 0578 */  0xF2, 0x15, 0x09, 0x7C, 0x02, 0x67, 0x0B, 0x72,  // ...|.g.r
                /* 0580 */  0x78, 0x4C, 0xCC, 0x0B, 0x03, 0x6A, 0x78, 0xFC,  // xL...jx.
                /* 0588 */  0x72, 0xE0, 0xF9, 0x3C, 0x23, 0x1C, 0xE5, 0xE3,  // r..<#...
                /* 0590 */  0x0D, 0x0E, 0xE3, 0xE9, 0xC5, 0x43, 0xF4, 0xCD,  // .....C..
                /* 0598 */  0x0D, 0xD6, 0x44, 0x4E, 0xDA, 0xB7, 0x85, 0x93,  // ..DN....
                /* 05A0 */  0x0D, 0xFA, 0x5A, 0x89, 0xB9, 0xB9, 0x01, 0x57,  // ..Z....W
                /* 05A8 */  0x4D, 0x4B, 0xA1, 0x81, 0x96, 0xA3, 0xA8, 0x0B,  // MK......
                /* 05B0 */  0xA3, 0x30, 0xBE, 0x03, 0x02, 0x9B, 0xFF, 0xFF,  // .0......
                /* 05B8 */  0x1D, 0x10, 0x58, 0x5D, 0xAB, 0x0E, 0x1D, 0x2C,  // ..X]...,
                /* 05C0 */  0x07, 0x84, 0xC7, 0x09, 0xCC, 0xB4, 0xC1, 0x73,  // .......s
                /* 05C8 */  0xFF, 0x83, 0x7B, 0x6F, 0x8E, 0xFD, 0xEA, 0xFC,  // ..{o....
                /* 05D0 */  0x3E, 0x11, 0xE2, 0xCD, 0xEF, 0xC5, 0x2F, 0xCE,  // >...../.
                /* 05D8 */  0x83, 0x5F, 0x24, 0xCF, 0xF5, 0xFD, 0x8F, 0x1D,  // ._$.....
                /* 05E0 */  0xA6, 0x7D, 0x5A, 0x79, 0x93, 0x36, 0xCA, 0x41,  // .}Zy.6.A
                /* 05E8 */  0x3C, 0x02, 0x1A, 0x24, 0x42, 0xD8, 0x47, 0x9B,  // <..$B.G.
                /* 05F0 */  0x27, 0x30, 0x03, 0x1D, 0x4A, 0xC8, 0x28, 0x8F,  // '0..J.(.
                /* 05F8 */  0x37, 0x51, 0xDE, 0xFF, 0x00, 0xD3, 0xFF, 0xFF,  // 7Q......
                /* 0600 */  0xFB, 0x1F, 0xE0, 0xE9, 0x12, 0xCC, 0xEE, 0x7F,  // ........
                /* 0608 */  0x80, 0x53, 0x7D, 0x17, 0x3E, 0xAA, 0x0D, 0x44,  // .S}.>..D
                /* 0610 */  0xF7, 0x3F, 0x9C, 0xE6, 0x47, 0x83, 0x66, 0x0B,  // .?..G.f.
                /* 0618 */  0xFB, 0xEE, 0xC7, 0xEE, 0x7F, 0x5C, 0x1D, 0x8C,  // .....\..
                /* 0620 */  0x92, 0xD0, 0xE8, 0xB8, 0xC4, 0xB5, 0xC3, 0x08,  // ........
                /* 0628 */  0xCE, 0x20, 0x3E, 0x47, 0xF8, 0xFE, 0x07, 0xEB,  // . >G....
                /* 0630 */  0xFF, 0x7F, 0xFF, 0x03, 0x4C, 0x5C, 0xC9, 0x80,  // ....L\..
                /* 0638 */  0xDD, 0x11, 0x10, 0x1C, 0x57, 0x32, 0xE0, 0x14,  // ....W2..
                /* 0640 */  0xE9, 0x52, 0x80, 0x0A, 0x71, 0x29, 0xA0, 0x20,  // .R..q). 
                /* 0648 */  0x9E, 0x98, 0xC3, 0x5C, 0x0D, 0xD1, 0x93, 0xF5,  // ...\....
                /* 0650 */  0xD5, 0x10, 0xC6, 0x9D, 0x0C, 0xEC, 0xD7, 0x06,  // ........
                /* 0658 */  0xDF, 0x4B, 0xE0, 0xFE, 0xFF, 0x0F, 0xFB, 0x70,  // .K.....p
                /* 0660 */  0x42, 0x5D, 0x1D, 0xD0, 0x97, 0x15, 0x9F, 0x0E,  // B]......
                /* 0668 */  0x31, 0x03, 0xD4, 0xD9, 0x81, 0x0E, 0x0A, 0x5C,  // 1......\
                /* 0670 */  0xD7, 0x43, 0xDC, 0xD8, 0xE0, 0x9D, 0x0F, 0xC1,  // .C......
                /* 0678 */  0x77, 0x7B, 0x03, 0x1E, 0xF1, 0x6E, 0x6F, 0x40,  // w{...no@
                /* 0680 */  0xEF, 0xCE, 0x05, 0xDC, 0x04, 0xFE, 0xA5, 0x4C,  // .......L
                /* 0688 */  0xA0, 0x38, 0x4B, 0x91, 0x24, 0x18, 0xD4, 0xCD,  // .8K.$...
                /* 0690 */  0x0D, 0x3C, 0xFF, 0xFF, 0x9B, 0x1B, 0x70, 0x3F,  // .<....p?
                /* 0698 */  0x34, 0x78, 0xD8, 0xE0, 0xC0, 0x8F, 0x71, 0xD6,  // 4x....q.
                /* 06A0 */  0x4F, 0x04, 0x3E, 0xB3, 0x78, 0xC2, 0x6C, 0xDA,  // O.>.x.l.
                /* 06A8 */  0xB0, 0xF0, 0x13, 0xF8, 0xE2, 0x06, 0xF7, 0xA2,  // ........
                /* 06B0 */  0xF1, 0xEE, 0xEF, 0xD3, 0x5A, 0xE4, 0x28, 0x9E,  // ....Z.(.
                /* 06B8 */  0xE8, 0x13, 0xDB, 0x7B, 0x47, 0x84, 0x28, 0x0C,  // ...{G.(.
                /* 06C0 */  0xE2, 0xDD, 0x2D, 0xDC, 0x19, 0x44, 0x39, 0x87,  // ..-..D9.
                /* 06C8 */  0xD7, 0x26, 0x5F, 0xE0, 0x9E, 0xDD, 0x3C, 0xD6,  // .&_...<.
                /* 06D0 */  0xB0, 0x8F, 0x6E, 0xBE, 0xBA, 0x19, 0x21, 0x46,  // ..n...!F
                /* 06D8 */  0xDC, 0x10, 0x41, 0x5F, 0xDC, 0xC0, 0x1B, 0xE2,  // ..A_....
                /* 06E0 */  0x8C, 0x4D, 0x2F, 0x6E, 0x80, 0x87, 0xFF, 0xFF,  // .M/n....
                /* 06E8 */  0xC5, 0x0D, 0xF0, 0x22, 0xF1, 0xE1, 0xA0, 0x3B,  // ..."...;
                /* 06F0 */  0x17, 0x1F, 0x8F, 0x45, 0x41, 0x93, 0xD3, 0x02,  // ...EA...
                /* 06F8 */  0x9C, 0xCB, 0x0F, 0xE6, 0xFE, 0xE1, 0x0B, 0x83,  // ........
                /* 0700 */  0x45, 0xC0, 0xEB, 0x60, 0x63, 0x68, 0x9F, 0x29,  // E..`ch.)
                /* 0708 */  0xF8, 0x01, 0xC3, 0x67, 0x0A, 0x06, 0xCC, 0x0F,  // ...g....
                /* 0710 */  0x26, 0x98, 0x23, 0x05, 0xF0, 0x3A, 0xF1, 0xC0,  // &.#..:..
                /* 0718 */  0x1B, 0x97, 0xC7, 0xE3, 0x41, 0xC3, 0x9D, 0xCC,  // ....A...
                /* 0720 */  0x49, 0x57, 0x3D, 0x05, 0xDD, 0x05, 0xAC, 0xEE,  // IW=.....
                /* 0728 */  0x28, 0x07, 0x92, 0x21, 0x63, 0x09, 0x2C, 0xF8,  // (..!c.,.
                /* 0730 */  0xE0, 0x03, 0x8A, 0xFF, 0xFF, 0x34, 0xB0, 0x13,  // .....4..
                /* 0738 */  0x85, 0x31, 0x16, 0x58, 0x03, 0x65, 0xB7, 0x41,  // .1.X.e.A
                /* 0740 */  0xC0, 0xDD, 0x60, 0xB8, 0x84, 0xD3, 0x0F, 0x2A,  // ..`....*
                /* 0748 */  0xF4, 0xB3, 0xC0, 0x07, 0x20, 0x40, 0xF7, 0xFF,  // .... @..
                /* 0750 */  0xFF, 0x00, 0x04, 0xBE, 0xE9, 0x3D, 0xE2, 0x3C,  // .....=.<
                /* 0758 */  0xBA, 0x3D, 0xF0, 0xBC, 0x57, 0x9C, 0x67, 0xEC,  // .=..W.g.
                /* 0760 */  0xF0, 0x2F, 0x3E, 0x2F, 0xC3, 0x86, 0x79, 0xFB,  // ./>/..y.
                /* 0768 */  0x31, 0x46, 0xBC, 0x47, 0x95, 0xC7, 0x60, 0x43,  // 1F.G..`C
                /* 0770 */  0x86, 0x79, 0x10, 0x0A, 0x13, 0xCA, 0x47, 0x21,  // .y....G!
                /* 0778 */  0x23, 0x86, 0x88, 0x1B, 0xE1, 0x25, 0xE8, 0x50,  // #....%.P
                /* 0780 */  0x02, 0x1D, 0xC0, 0x69, 0xFB, 0x00, 0x04, 0x56,  // ...i...V
                /* 0788 */  0x99, 0x07, 0x20, 0x80, 0x26, 0x0F, 0x07, 0x9F,  // .. .&...
                /* 0790 */  0x23, 0x71, 0x03, 0xF0, 0xA0, 0xDF, 0x18, 0x8C,  // #q......
                /* 0798 */  0xFA, 0xBA, 0x60, 0x9F, 0xC7, 0x03, 0x8D, 0xE9,  // ..`.....
                /* 07A0 */  0x8C, 0xFE, 0xFF, 0x71, 0x8F, 0x29, 0x76, 0x8C,  // ...q.)v.
                /* 07A8 */  0x58, 0xE1, 0x7D, 0x18, 0x88, 0xF1, 0x66, 0xE2,  // X.}...f.
                /* 07B0 */  0x23, 0x03, 0x3B, 0xF6, 0xF1, 0x23, 0x10, 0x78,  // #.;..#.x
                /* 07B8 */  0x8E, 0x7A, 0xE0, 0x19, 0x12, 0xEE, 0xE4, 0xEF,  // .z......
                /* 07C0 */  0x29, 0xBD, 0xEB, 0x79, 0x4C, 0x78, 0xA8, 0xF0,  // )..yLx..
                /* 07C8 */  0xE7, 0x84, 0x39, 0x61, 0x82, 0xEF, 0x84, 0x81,  // ..9a....
                /* 07D0 */  0xBB, 0x48, 0x83, 0x6B, 0xE4, 0xE0, 0x3B, 0xF1,  // .H.k..;.
                /* 07D8 */  0x00, 0xFE, 0xFE, 0xFF, 0x04, 0x8E, 0xA5, 0x03,  // ........
                /* 07E0 */  0x84, 0x49, 0x7B, 0x21, 0x28, 0x08, 0x0C, 0xEA,  // .I{!(...
                /* 07E8 */  0xA4, 0x0A, 0xE7, 0xC4, 0x83, 0x3B, 0xA0, 0x80,  // .....;..
                /* 07F0 */  0x73, 0xA8, 0xB8, 0x93, 0x03, 0xDC, 0xA1, 0x1C,  // s.......
                /* 07F8 */  0x23, 0xBB, 0x31, 0xC4, 0x3A, 0x7C, 0xC3, 0xF8,  // #.1.:|..
                /* 0800 */  0xD6, 0xC0, 0x8E, 0x0A, 0xC6, 0x39, 0x4C, 0x8F,  // .....9L.
                /* 0808 */  0xF1, 0x50, 0x8D, 0xCC, 0x4E, 0x9D, 0x98, 0xE3,  // .P..N...
                /* 0810 */  0x83, 0x8F, 0x24, 0x3E, 0x07, 0xBC, 0x8A, 0xF8,  // ..$>....
                /* 0818 */  0x90, 0x03, 0xFF, 0x92, 0xEA, 0x5B, 0xCD, 0x79,  // .....[.y
                /* 0820 */  0x3D, 0x36, 0xB2, 0x1B, 0xA3, 0x0F, 0x38, 0x91,  // =6....8.
                /* 0828 */  0x82, 0x3C, 0x34, 0x62, 0xC0, 0x1E, 0x72, 0x7C,  // .<4b..r|
                /* 0830 */  0x8C, 0x78, 0xC2, 0x79, 0xC8, 0x31, 0x6C, 0xD4,  // .x.y.1l.
                /* 0838 */  0xF7, 0x1D, 0xE3, 0x9C, 0xCA, 0xB3, 0x84, 0x21,  // .......!
                /* 0840 */  0x62, 0xBD, 0xEF, 0x98, 0xC0, 0x72, 0x6D, 0x40,  // b....rm@
                /* 0848 */  0xDC, 0xBF, 0x65, 0x8C, 0x5F, 0x07, 0x60, 0xFC,  // ..e._.`.
                /* 0850 */  0xF1, 0xC0, 0xA3, 0xE1, 0xB1, 0xAF, 0xD5, 0xF4,  // ........
                /* 0858 */  0x18, 0x02, 0x9E, 0x73, 0x0B, 0x7C, 0x40, 0xBC,  // ...s.|@.
                /* 0860 */  0xF7, 0x3B, 0x00, 0x39, 0xB9, 0xB3, 0xA3, 0x01,  // .;.9....
                /* 0868 */  0xFE, 0x34, 0x80, 0xFF, 0xFF, 0x9F, 0x06, 0x70,  // .4.....p
                /* 0870 */  0x23, 0xC3, 0x9D, 0xEF, 0xE0, 0x19, 0x3A, 0x19,  // #.....:.
                /* 0878 */  0x83, 0x4E, 0xC8, 0x98, 0x7D, 0x34, 0x42, 0x5F,  // .N..}4B_
                /* 0880 */  0xEC, 0x3C, 0x9F, 0x47, 0x5D, 0xCF, 0xCC, 0xF7,  // .<.G]...
                /* 0888 */  0xA1, 0xE8, 0x21, 0xDE, 0xB3, 0x4C, 0xE0, 0xC0,  // ..!..L..
                /* 0890 */  0x10, 0xFA, 0x94, 0x79, 0xDC, 0xE0, 0x38, 0xFE,  // ...y..8.
                /* 0898 */  0x80, 0x63, 0xDC, 0xF0, 0xE7, 0xEA, 0x71, 0x83,  // .c....q.
                /* 08A0 */  0x65, 0x74, 0x30, 0x07, 0x0D, 0x7E, 0xC8, 0x93,  // et0..~..
                /* 08A8 */  0x3B, 0x86, 0x07, 0x81, 0xF7, 0x6F, 0x9F, 0x2D,  // ;....o.-
                /* 08B0 */  0x9E, 0xA0, 0x71, 0x83, 0x06, 0x1B, 0xA0, 0x07,  // ..q.....
                /* 08B8 */  0x0D, 0xBE, 0xFF, 0xFF, 0xA0, 0xC1, 0x3B, 0x3A,  // ......;:
                /* 08C0 */  0xB8, 0x83, 0x06, 0x97, 0xA0, 0x41, 0xA3, 0x8F,  // .....A..
                /* 08C8 */  0x81, 0x1E, 0x07, 0xBB, 0x0C, 0xB0, 0x89, 0xC0,  // ........
                /* 08D0 */  0x3A, 0x1B, 0x6A, 0xD8, 0xA0, 0x3A, 0xE2, 0x78,  // :.j..:.x
                /* 08D8 */  0xD8, 0xE0, 0x3F, 0xE7, 0x1C, 0x36, 0xB8, 0xC6,  // ..?..6..
                /* 08E0 */  0x07, 0x7B, 0xE0, 0xE0, 0x3A, 0xE3, 0x7A, 0xE0,  // .{..:.z.
                /* 08E8 */  0xB8, 0xF1, 0x78, 0x1E, 0x6F, 0x42, 0x46, 0x3C,  // ..x.oBF<
                /* 08F0 */  0x90, 0x10, 0x6F, 0x14, 0x27, 0x1B, 0xE6, 0x05,  // ..o.'...
                /* 08F8 */  0xCF, 0x04, 0xE3, 0x8E, 0x1A, 0x54, 0xA0, 0x1E,  // .....T..
                /* 0900 */  0xAD, 0xFF, 0xFF, 0xA3, 0x06, 0xB7, 0xC0, 0xF3,  // ........
                /* 0908 */  0x07, 0x88, 0x06, 0x07, 0x6B, 0xC8, 0xE0, 0x92,  // ....k...
                /* 0910 */  0x74, 0x0A, 0x42, 0x0F, 0xC6, 0x67, 0x01, 0x36,  // t.B..g.6
                /* 0918 */  0x48, 0x9F, 0xB2, 0xD8, 0xB5, 0x84, 0x11, 0x0C,  // H.......
                /* 0920 */  0x7F, 0x10, 0x02, 0x15, 0xA8, 0x87, 0x0C, 0x3C,  // .......<
                /* 0928 */  0x07, 0x07, 0xEF, 0x2C, 0x04, 0xCF, 0xCA, 0xC8,  // ...,....
                /* 0930 */  0x81, 0x02, 0xF0, 0xD1, 0xBC, 0xB7, 0xF1, 0xE3,  // ........
                /* 0938 */  0x56, 0x5C, 0x0F, 0x93, 0x8D, 0x9C, 0xFF, 0xFF,  // V\......
                /* 0940 */  0x47, 0x0E, 0x8E, 0x33, 0xAF, 0x47, 0x0E, 0x3C,  // G..3.G.<
                /* 0948 */  0x07, 0x07, 0x6F, 0xE4, 0xF0, 0x46, 0xED, 0x91,  // ..o..F..
                /* 0950 */  0x83, 0xEB, 0x98, 0xE7, 0x91, 0xE3, 0x58, 0x0C,  // ......X.
                /* 0958 */  0xFC, 0x1A, 0x17, 0xF1, 0xA9, 0x80, 0x8D, 0x07,  // ........
                /* 0960 */  0xCE, 0x8B, 0xCC, 0x63, 0x07, 0xCF, 0x90, 0x3C,  // ...c...<
                /* 0968 */  0x76, 0xF0, 0x9F, 0x22, 0xF1, 0x63, 0x87, 0x39,  // v..".c.9
                /* 0970 */  0x3C, 0xD8, 0xA3, 0x07, 0xC7, 0xFF, 0x7F, 0xF4,  // <.......
                /* 0978 */  0xE0, 0x90, 0x35, 0x7A, 0xF4, 0x30, 0x3C, 0x1E,  // ..5z.0<.
                /* 0980 */  0x1C, 0x72, 0x97, 0xC3, 0x41, 0xC6, 0x3F, 0x47,  // .r..A.?G
                /* 0988 */  0x80, 0xCA, 0xC4, 0xE9, 0x0A, 0xA8, 0x8E, 0x0E,  // ........
                /* 0990 */  0xEE, 0xD8, 0x81, 0xC7, 0xD1, 0x06, 0x26, 0xEC,  // ......&.
                /* 0998 */  0xE1, 0x1D, 0xCB, 0x13, 0x09, 0x78, 0x55, 0x9C,  // .....xU.
                /* 09A0 */  0x48, 0x80, 0xD6, 0xFF, 0xFF, 0x68, 0x03, 0x73,  // H....h.s
                /* 09A8 */  0x70, 0x30, 0x46, 0x0E, 0xDC, 0x30, 0x4F, 0xE9,  // p0F..0O.
                /* 09B0 */  0x99, 0xFC, 0xC8, 0xC1, 0x3E, 0x5E, 0x8F, 0x1C,  // ....>^..
                /* 09B8 */  0x78, 0x0E, 0x0E, 0xDE, 0xC8, 0x81, 0x07, 0xD6,  // x.......
                /* 09C0 */  0x03, 0x36, 0xF8, 0x2E, 0xBF, 0x7C, 0x0C, 0x0F,  // .6...|..
                /* 09C8 */  0xBF, 0xB8, 0x53, 0xBF, 0xEF, 0xBE, 0x3E, 0x5B,  // ..S...>[
                /* 09D0 */  0xC3, 0xFB, 0xFF, 0x9F, 0xAD, 0x01, 0x5F, 0x09,  // ......_.
                /* 09D8 */  0x1E, 0x2F, 0x26, 0x50, 0xC8, 0x13, 0x84, 0xC2,  // ./&P....
                /* 09E0 */  0x3F, 0x05, 0x28, 0x8C, 0x4F, 0x56, 0x3E, 0x5B,  // ?.(.OV>[
                /* 09E8 */  0xC3, 0x3D, 0x46, 0x1A, 0x8E, 0x1F, 0x02, 0x7C,  // .=F....|
                /* 09F0 */  0x4C, 0x78, 0x1D, 0x3B, 0x8E, 0x73, 0x79, 0x83,  // Lx.;.sy.
                /* 09F8 */  0xF0, 0x88, 0x1E, 0x7D, 0x61, 0x9C, 0x24, 0x7C,  // ...}a.$|
                /* 0A00 */  0x05, 0x60, 0xB3, 0x7B, 0x4E, 0xF0, 0xE8, 0x4C,  // .`.{N..L
                /* 0A08 */  0xE0, 0x51, 0x30, 0x34, 0x7E, 0x4A, 0x60, 0x87,  // .Q04~J`.
                /* 0A10 */  0x05, 0x7E, 0x0A, 0xF0, 0xB1, 0x82, 0x0D, 0xF0,  // .~......
                /* 0A18 */  0x69, 0xFB, 0xBD, 0xD5, 0x13, 0x79, 0x73, 0x78,  // i....ysx
                /* 0A20 */  0x72, 0x65, 0x47, 0x64, 0x47, 0x38, 0xCB, 0x82,  // reGdG8..
                /* 0A28 */  0x0A, 0xE7, 0xA9, 0xDF, 0x10, 0x8F, 0xDC, 0x98,  // ........
                /* 0A30 */  0xE1, 0xC3, 0x41, 0x66, 0xBE, 0x06, 0x45, 0x60,  // ..Af..E`
                /* 0A38 */  0x5E, 0xED, 0x7D, 0x06, 0xF0, 0x35, 0x27, 0xC4,  // ^.}..5'.
                /* 0A40 */  0x79, 0xC6, 0x32, 0xD0, 0x81, 0x44, 0x78, 0xB2,  // y.2..Dx.
                /* 0A48 */  0x78, 0x0D, 0xF0, 0xC1, 0x82, 0x9D, 0xB9, 0xF1,  // x.......
                /* 0A50 */  0xFF, 0xFF, 0x33, 0x37, 0xEE, 0xB6, 0xEF, 0x73,  // ..37...s
                /* 0A58 */  0x76, 0x84, 0x87, 0x0F, 0x0F, 0x24, 0xC2, 0xE3,  // v....$..
                /* 0A60 */  0xB6, 0x11, 0x9E, 0xB4, 0x7D, 0xE6, 0xF6, 0x65,  // ....}..e
                /* 0A68 */  0xDB, 0x60, 0xA1, 0x8C, 0xF9, 0xE4, 0xFD, 0xE0,  // .`......
                /* 0A70 */  0x6D, 0xC4, 0x47, 0x6E, 0xCF, 0x29, 0x46, 0xE8,  // m.Gn.)F.
                /* 0A78 */  0x37, 0x6E, 0x0F, 0xC0, 0x78, 0x87, 0xC2, 0xCE,  // 7n..x...
                /* 0A80 */  0xED, 0xE0, 0x14, 0xF6, 0x48, 0xD6, 0xB1, 0xD2,  // ....H...
                /* 0A88 */  0x91, 0xE0, 0x51, 0x87, 0x29, 0x7E, 0xC4, 0xF0,  // ..Q.)~..
                /* 0A90 */  0x31, 0xDD, 0x47, 0x48, 0x0F, 0xE1, 0x08, 0x9E,  // 1.GH....
                /* 0A98 */  0x2E, 0x9E, 0x0F, 0x3C, 0x06, 0x76, 0x71, 0xF0,  // ...<.vq.
                /* 0AA0 */  0x89, 0xC0, 0x07, 0x06, 0xFC, 0xC1, 0xE4, 0x90,  // ........
                /* 0AA8 */  0x7D, 0x5C, 0x81, 0x75, 0x6C, 0xC1, 0x8F, 0xE8,  // }\.ul...
                /* 0AB0 */  0xB9, 0x04, 0xF6, 0x29, 0x9E, 0x1D, 0x4C, 0x7C,  // ...)..L|
                /* 0AB8 */  0xB0, 0x48, 0x60, 0xF9, 0x83, 0x40, 0x8D, 0xCC,  // .H`..@..
                /* 0AC0 */  0xD0, 0xBE, 0x6C, 0xBC, 0xCC, 0xFB, 0x48, 0xE0,  // ..l...H.
                /* 0AC8 */  0x61, 0xB1, 0xE3, 0x8A, 0x4F, 0xD6, 0xE0, 0x18,  // a...O...
                /* 0AD0 */  0x0F, 0xFC, 0x63, 0xC0, 0x33, 0x89, 0xA7, 0xEF,  // ..c.3...
                /* 0AD8 */  0xF9, 0xFA, 0x4C, 0x8B, 0x3D, 0xB7, 0x80, 0xE5,  // ..L.=...
                /* 0AE0 */  0x12, 0xC1, 0xCE, 0x10, 0xFC, 0xF6, 0xC3, 0x09,  // ........
                /* 0AE8 */  0xFC, 0xFF, 0x3F, 0xB5, 0x00, 0xEE, 0xB4, 0xBF,  // ..?.....
                /* 0AF0 */  0x1D, 0x74, 0x0C, 0xB1, 0x6E, 0x10, 0xD9, 0x38,  // .t..n..8
                /* 0AF8 */  0x44, 0xD1, 0x11, 0x5A, 0xFB, 0x63, 0x59, 0x93,  // D..Z.cY.
                /* 0B00 */  0x85, 0xA7, 0x17, 0x4E, 0xD0, 0x3E, 0x16, 0x58,  // ...N.>.X
                /* 0B08 */  0x29, 0x8C, 0xB4, 0x3E, 0x1F, 0x34, 0x36, 0xC3,  // )..>.46.
                /* 0B10 */  0x5B, 0x1D, 0x8C, 0xE0, 0x0C, 0xE2, 0xD3, 0x94,  // [.......
                /* 0B18 */  0x03, 0x41, 0xE8, 0x68, 0x85, 0x3B, 0x91, 0xF9,  // .A.h.;..
                /* 0B20 */  0xAC, 0x84, 0x49, 0x70, 0x8D, 0xA6, 0x93, 0xF1,  // ..Ip....
                /* 0B28 */  0x3D, 0x81, 0x63, 0xFB, 0xE4, 0x60, 0x60, 0x5F,  // =.c..``_
                /* 0B30 */  0x99, 0xE0, 0xAA, 0x81, 0x43, 0x41, 0xFB, 0x42,  // ....CA.B
                /* 0B38 */  0xC2, 0x4F, 0x4E, 0x60, 0xCB, 0x02, 0x21, 0x27,  // .ON`..!'
                /* 0B40 */  0x27, 0x0A, 0xD4, 0x2C, 0x3C, 0x59, 0xFC, 0xD1,  // '..,<Y..
                /* 0B48 */  0x1E, 0x73, 0x5D, 0xF1, 0x68, 0x3C, 0x38, 0xEC,  // .s].h<8.
                /* 0B50 */  0xFF, 0x7F, 0x70, 0x98, 0x51, 0xC1, 0x1A, 0xB4,  // ..p.Q...
                /* 0B58 */  0x75, 0x8D, 0x0A, 0x34, 0x47, 0x97, 0x67, 0x97,  // u..4G.g.
                /* 0B60 */  0x04, 0x73, 0xCC, 0x0A, 0xAD, 0xE4, 0xAA, 0x43,  // .s.....C
                /* 0B68 */  0xE6, 0xC4, 0x6E, 0x05, 0x51, 0xAB, 0x9F, 0x13,  // ..n.Q...
                /* 0B70 */  0xA8, 0x6F, 0x07, 0x9E, 0x13, 0xD8, 0x4E, 0x08,  // .o....N.
                /* 0B78 */  0x70, 0xEE, 0x0C, 0x98, 0x13, 0x02, 0x78, 0x83,  // p.....x.
                /* 0B80 */  0xD9, 0x39, 0x21, 0xC0, 0x43, 0xF2, 0x09, 0x01,  // .9!.C...
                /* 0B88 */  0x5C, 0x41, 0xCE, 0x3A, 0xE8, 0xE3, 0x14, 0x1B,  // \A.:....
                /* 0B90 */  0xD7, 0xDB, 0x86, 0xCF, 0x1A, 0x3E, 0x72, 0xF8,  // .....>r.
                /* 0B98 */  0x3A, 0xE5, 0xC1, 0x83, 0x75, 0x9C, 0x1E, 0x3C,  // :...u..<
                /* 0BA0 */  0xEC, 0xFF, 0xFF, 0x35, 0x07, 0xAF, 0xEF, 0x1C,  // ...5....
                /* 0BA8 */  0x03, 0x0A, 0x20, 0xDF, 0x5A, 0x7C, 0x4A, 0x79,  // .. .Z|Jy
                /* 0BB0 */  0x72, 0x61, 0x63, 0x78, 0x50, 0x31, 0x9A, 0xD1,  // racxP1..
                /* 0BB8 */  0xF9, 0xED, 0xD0, 0xB7, 0x10, 0x7E, 0xAB, 0xF7,  // .....~..
                /* 0BC0 */  0x0D, 0xC2, 0x20, 0x3E, 0x20, 0x38, 0xCA, 0x64,  // .. > 8.d
                /* 0BC8 */  0xD1, 0x33, 0xF1, 0xA5, 0xC7, 0x33, 0x3A, 0xEC,  // .3...3:.
                /* 0BD0 */  0x20, 0xE7, 0x68, 0x82, 0x97, 0x8B, 0x97, 0x24,  //  .h....$
                /* 0BD8 */  0x58, 0x77, 0x96, 0x90, 0xCF, 0x2B, 0x9E, 0x86,  // Xw...+..
                /* 0BE0 */  0xCF, 0x05, 0xF8, 0x13, 0x08, 0xBF, 0x40, 0xF9,  // ......@.
                /* 0BE8 */  0x8E, 0x04, 0xBE, 0xDB, 0x22, 0x6E, 0xB6, 0x60,  // ...."n.`
                /* 0BF0 */  0x84, 0xC7, 0x44, 0xBE, 0x30, 0xA0, 0x86, 0xC7,  // ..D.0...
                /* 0BF8 */  0x2F, 0x07, 0x9E, 0xCF, 0x33, 0xC2, 0x51, 0x3E,  // /...3.Q>
                /* 0C00 */  0xE0, 0xE0, 0x30, 0x9E, 0x60, 0x3C, 0x44, 0x5F,  // ..0.`<D_
                /* 0C08 */  0xE0, 0x60, 0x4D, 0xE4, 0xA4, 0x7D, 0x5B, 0x38,  // .`M..}[8
                /* 0C10 */  0xD9, 0xA0, 0xEF, 0x99, 0xEC, 0x02, 0x07, 0xAC,  // ........
                /* 0C18 */  0xFE, 0xFF, 0x17, 0x38, 0x30, 0x2A, 0x5D, 0x10,  // ...80*].
                /* 0C20 */  0x8D, 0xB6, 0x28, 0x45, 0x5E, 0x1E, 0x85, 0xF1,  // ..(E^...
                /* 0C28 */  0x85, 0x10, 0x70, 0x74, 0x8C, 0xF0, 0x01, 0x00,  // ..pt....
                /* 0C30 */  0x1C, 0x37, 0xA5, 0x07, 0x00, 0x58, 0xD7, 0x85,  // .7...X..
                /* 0C38 */  0xA3, 0x7E, 0x83, 0xC6, 0x9D, 0x02, 0xE0, 0xDE,  // .~......
                /* 0C40 */  0x05, 0xE1, 0x8F, 0xF5, 0x81, 0x25, 0xFC, 0xAB,  // .....%..
                /* 0C48 */  0x45, 0x8C, 0xF7, 0xBF, 0xE0, 0xCF, 0x36, 0x0F,  // E.....6.
                /* 0C50 */  0x81, 0x41, 0xC2, 0xBC, 0x06, 0x86, 0x7A, 0x17,  // .A....z.
                /* 0C58 */  0xF4, 0xFD, 0xE6, 0x99, 0xD0, 0x28, 0x91, 0xDE,  // .....(..
                /* 0C60 */  0xD7, 0x1E, 0x04, 0x8D, 0x52, 0x1B, 0xA4, 0x46,  // ....R..F
                /* 0C68 */  0x12, 0xDB, 0x20, 0xEF, 0x85, 0x06, 0x8A, 0xF0,  // .. .....
                /* 0C70 */  0xF8, 0x77, 0xFA, 0xBE, 0x0B, 0x82, 0xFB, 0xFF,  // .w......
                /* 0C78 */  0x7F, 0x17, 0x04, 0x38, 0x75, 0x7F, 0x60, 0x77,  // ...8u.`w
                /* 0C80 */  0x41, 0xC0, 0xD2, 0xFF, 0xFF, 0x2E, 0x08, 0x26,  // A......&
                /* 0C88 */  0xB5, 0xD7, 0x3F, 0x7A, 0xFB, 0xF3, 0x5D, 0x10,  // ..?z..].
                /* 0C90 */  0xA7, 0xFB, 0xCD, 0xA0, 0xC9, 0xC2, 0xBB, 0x07,  // ........
                /* 0C98 */  0xFA, 0x2E, 0xC8, 0x55, 0xC2, 0x48, 0x01, 0x8D,  // ...U.H..
                /* 0CA0 */  0x8E, 0x4D, 0x3C, 0xF3, 0xA9, 0x84, 0x82, 0x18,  // .M<.....
                /* 0CA8 */  0xD0, 0x77, 0x41, 0xC0, 0xCF, 0xB5, 0x0B, 0x58,  // .wA....X
                /* 0CB0 */  0x48, 0xDC, 0xAA, 0x26, 0xCC, 0x45, 0xC1, 0x68,  // H..&.E.h
                /* 0CB8 */  0xC2, 0x06, 0xF1, 0x38, 0x3D, 0x61, 0x5F, 0xFF,  // ...8=a_.
                /* 0CC0 */  0x70, 0xA3, 0xF4, 0x21, 0x11, 0xE6, 0xCD, 0x0B,  // p..!....
                /* 0CC8 */  0xEC, 0xC3, 0xF1, 0x95, 0xC3, 0xFF, 0xFF, 0x2B,  // .......+
                /* 0CD0 */  0x20, 0x98, 0x08, 0x86, 0x19, 0x18, 0xFA, 0x62,  //  ......b
                /* 0CD8 */  0xE4, 0x6B, 0x22, 0x8C, 0x61, 0x81, 0xFD, 0xCA,  // .k".a...
                /* 0CE0 */  0xE0, 0x61, 0x81, 0x2F, 0xD4, 0xF5, 0x01, 0x7D,  // .a./...}
                /* 0CE8 */  0x5B, 0xF1, 0x6D, 0x04, 0x17, 0xE2, 0xFC, 0x40,  // [.m....@
                /* 0CF0 */  0x07, 0x05, 0xAE, 0xAB, 0x22, 0x6E, 0x6C, 0xF0,  // ...."nl.
                /* 0CF8 */  0xCE, 0x8A, 0xE0, 0xBB, 0xC9, 0x01, 0x8F, 0xA0,  // ........
                /* 0D00 */  0x37, 0x39, 0xA0, 0xF2, 0xFF, 0xBF, 0xC9, 0xC1,  // 79......
                /* 0D08 */  0xB9, 0x79, 0x01, 0xDF, 0xF8, 0xAF, 0x12, 0x5F,  // .y....._
                /* 0D10 */  0x1B, 0xBD, 0x1E, 0x85, 0x5C, 0x19, 0x85, 0xF1,  // ....\...
                /* 0D18 */  0x25, 0x0E, 0x70, 0x84, 0xFD, 0x52, 0x08, 0xEE,  // %.p..R..
                /* 0D20 */  0xD1, 0x30, 0x18, 0x5F, 0xCD, 0xF8, 0xE5, 0x0D,  // .0._....
                /* 0D28 */  0x2E, 0xE2, 0x7B, 0xDB, 0x73, 0xC7, 0xD3, 0x46,  // ..{.s..F
                /* 0D30 */  0x90, 0x10, 0x6F, 0x56, 0x2F, 0x11, 0x8F, 0x6E,  // ..oV/..n
                /* 0D38 */  0xBE, 0xB6, 0x45, 0x78, 0x7E, 0x33, 0x4A, 0xB8,  // ..Ex~3J.
                /* 0D40 */  0x08, 0x2F, 0x6D, 0x51, 0xDE, 0xD3, 0x9E, 0xDE,  // ./mQ....
                /* 0D48 */  0x7C, 0xEE, 0x88, 0xF2, 0xE6, 0x66, 0xBC, 0x30,  // |....f.0
                /* 0D50 */  0xA1, 0x83, 0x84, 0x8B, 0x14, 0x2D, 0xB8, 0x27,  // .....-.'
                /* 0D58 */  0xED, 0x61, 0x63, 0xFE, 0xFF, 0x97, 0x37, 0x70,  // .ac...7p
                /* 0D60 */  0x49, 0xBB, 0xBC, 0x01, 0x34, 0x39, 0x35, 0xE0,  // I...495.
                /* 0D68 */  0x2E, 0x6F, 0x60, 0xB9, 0xDB, 0x63, 0x6F, 0x0D,  // .o`..co.
                /* 0D70 */  0xF8, 0xDB, 0x1B, 0x70, 0xFB, 0xFF, 0xDF, 0xDE,  // ...p....
                /* 0D78 */  0x80, 0x9F, 0xA0, 0x0B, 0x1B, 0x15, 0x03, 0xA2,  // ........
                /* 0D80 */  0xDB, 0x1B, 0xE7, 0xB0, 0xD4, 0xE7, 0x80, 0x66,  // .......f
                /* 0D88 */  0x0B, 0xFB, 0x30, 0xC1, 0xEE, 0x6F, 0xFC, 0xE4,  // ..0..o..
                /* 0D90 */  0x65, 0x59, 0xF7, 0x37, 0x94, 0x10, 0x18, 0xC1,  // eY.7....
                /* 0D98 */  0x19, 0xC4, 0x80, 0x4E, 0x09, 0x21, 0x1B, 0x87,  // ...N.!..
                /* 0DA0 */  0x05, 0xD4, 0x48, 0x3C, 0x0D, 0x58, 0x57, 0x0B,  // ..H<.XW.
                /* 0DA8 */  0xC3, 0x04, 0x4A, 0x30, 0xCB, 0x29, 0x1C, 0xA4,  // ..J0.)..
                /* 0DB0 */  0x04, 0xBE, 0x07, 0xBC, 0x34, 0xC0, 0x9E, 0xC7,  // ....4...
                /* 0DB8 */  0x53, 0x43, 0xD5, 0x63, 0xD1, 0x61, 0xC2, 0xEA,  // SC.c.a..
                /* 0DC0 */  0x8E, 0x00, 0xE8, 0x59, 0xC1, 0xBF, 0x90, 0x03,  // ...Y....
                /* 0DC8 */  0xDB, 0xFF, 0xFF, 0x85, 0x1C, 0x38, 0x9D, 0xE3,  // .....8..
                /* 0DD0 */  0xC0, 0x71, 0x21, 0x07, 0x5E, 0xC1, 0xCE, 0x5D,  // .q!.^..]
                /* 0DD8 */  0x40, 0xEF, 0xB0, 0x04, 0x7C, 0x82, 0x3C, 0x82,  // @...|.<.
                /* 0DE0 */  0x4C, 0xA0, 0xA8, 0xEB, 0x90, 0x74, 0x18, 0xD4,  // L....t..
                /* 0DE8 */  0x79, 0x0B, 0x78, 0xFE, 0xFF, 0xCF, 0x5B, 0xE0,  // y.x...[.
                /* 0DF0 */  0x0E, 0x72, 0x74, 0x03, 0xE5, 0x00, 0x0C, 0x13,  // .rt.....
                /* 0DF8 */  0x23, 0xCA, 0x21, 0x7B, 0xDC, 0x30, 0x81, 0x9E,  // #.!{.0..
                /* 0E00 */  0x07, 0x7C, 0x92, 0x31, 0x4A, 0xA4, 0xC0, 0xBE,  // .|.1J...
                /* 0E08 */  0x3C, 0xF8, 0x2A, 0xE3, 0xE3, 0x81, 0xA1, 0x3C,  // <.*....<
                /* 0E10 */  0x8D, 0x50, 0x9E, 0x6D, 0x30, 0xDF, 0x12, 0x7C,  // .P.m0..|
                /* 0E18 */  0xFE, 0x82, 0x7D, 0xDD, 0xF2, 0x0D, 0xEB, 0xA4,  // ..}.....
                /* 0E20 */  0xC3, 0x3F, 0x80, 0x19, 0xE3, 0xBD, 0x2B, 0x48,  // .?....+H
                /* 0E28 */  0x6B, 0x77, 0x70, 0x72, 0xFE, 0xF2, 0x6C, 0x4E,  // kwpr..lN
                /* 0E30 */  0xDA, 0x28, 0x07, 0xF3, 0xEA, 0xE5, 0x43, 0x98,  // .(....C.
                /* 0E38 */  0x61, 0x9F, 0xC1, 0x9E, 0x74, 0x0C, 0xF2, 0x24,  // a...t..$
                /* 0E40 */  0x6E, 0x98, 0xF8, 0x21, 0x23, 0x06, 0x79, 0xFE,  // n..!#.y.
                /* 0E48 */  0x02, 0x6F, 0xA0, 0x57, 0x80, 0x4E, 0x30, 0x3E,  // .o.W.N0>
                /* 0E50 */  0x7F, 0x01, 0x3E, 0xFE, 0xFF, 0xE7, 0x2F, 0xC0,  // ..>.../.
                /* 0E58 */  0x87, 0xEC, 0x67, 0x84, 0x8E, 0x4E, 0xFC, 0x88,  // ..g..N..
                /* 0E60 */  0x04, 0x1E, 0x71, 0xD0, 0x3A, 0xA8, 0x5A, 0xD4,  // ..q.:.Z.
                /* 0E68 */  0xF9, 0x02, 0x75, 0xD8, 0xF0, 0xF9, 0x82, 0x5D,  // ..u....]
                /* 0E70 */  0x59, 0xF9, 0x09, 0x05, 0x73, 0xBC, 0x00, 0x7C,  // Y...s..|
                /* 0E78 */  0x9C, 0x67, 0xE1, 0xFD, 0x59, 0x7C, 0x95, 0x02,  // .g..Y|..
                /* 0E80 */  0x6E, 0x67, 0x1C, 0xFF, 0xFF, 0xAF, 0xF9, 0xE0,  // ng......
                /* 0E88 */  0x3E, 0xDA, 0x01, 0x2E, 0x07, 0xC3, 0x15, 0xDA,  // >.......
                /* 0E90 */  0xF4, 0xA9, 0xD1, 0xA8, 0x55, 0x83, 0x32, 0x35,  // ....U.25
                /* 0E98 */  0xCA, 0x34, 0xA8, 0xD5, 0xA7, 0x52, 0x63, 0xC6,  // .4...Rc.
                /* 0EA0 */  0xEC, 0x42, 0x49, 0xDE, 0xBB, 0x40, 0xA7, 0x28,  // .BI..@.(
                /* 0EA8 */  0xF2, 0x92, 0x10, 0x88, 0x85, 0x3D, 0x0B, 0x04,  // .....=..
                /* 0EB0 */  0xE2, 0x68, 0x8F, 0x14, 0x1D, 0x22, 0x1C, 0x88,  // .h..."..
                /* 0EB8 */  0x5E, 0x27, 0x13, 0x62, 0x02, 0x84, 0x45, 0x07,  // ^'.b..E.
                /* 0EC0 */  0xA1, 0xD2, 0x9F, 0x1D, 0x02, 0xB4, 0xF8, 0x67,  // .......g
                /* 0EC8 */  0x9D, 0xC0, 0x08, 0x08, 0xD7, 0x01, 0xC2, 0x22,  // ......."
                /* 0ED0 */  0xBC, 0x06, 0x04, 0xE8, 0x18, 0x4A, 0x80, 0x98,  // .....J..
                /* 0ED8 */  0x88, 0x77, 0xB8, 0x40, 0xAC, 0xC1, 0xCA, 0x21,  // .w.@...!
                /* 0EE0 */  0x5B, 0xE7, 0x10, 0x83, 0x08, 0xC8, 0x29, 0x80,  // [.....).
                /* 0EE8 */  0x68, 0x24, 0x20, 0x2A, 0x46, 0x0B, 0x10, 0x53,  // h$ *F..S
                /* 0EF0 */  0x06, 0x22, 0x20, 0xA7, 0x03, 0xA2, 0x51, 0x81,  // ." ...Q.
                /* 0EF8 */  0xA8, 0x48, 0x2F, 0x40, 0x4C, 0x31, 0x88, 0x80,  // .H/@L1..
                /* 0F00 */  0xAC, 0xEE, 0x4D, 0x20, 0x20, 0x6B, 0x05, 0x11,  // ..M  k..
                /* 0F08 */  0x90, 0x93, 0x9A, 0x19, 0x0E, 0x4B, 0xE9, 0x06,  // .....K..
                /* 0F10 */  0xE2, 0xFF, 0x1F, 0xC8, 0x1A, 0x5F, 0x02, 0x02,  // ....._..
                /* 0F18 */  0xB1, 0x44, 0x3D, 0xA0, 0x4C, 0x2F, 0x88, 0x40,  // .D=.L/.@
                /* 0F20 */  0x09, 0x10, 0x8D, 0x0D, 0x44, 0x43, 0xFA, 0x01,  // ....DC..
                /* 0F28 */  0x62, 0x91, 0x41, 0x34, 0x50, 0xF2, 0x2E, 0x11,  // b.A4P...
                /* 0F30 */  0x90, 0x83, 0x80, 0x08, 0xC8, 0xE1, 0x0D, 0x0D,  // ........
                /* 0F38 */  0x83, 0xC5, 0x76, 0x04, 0xC4, 0x44, 0xBF, 0xAC,  // ..v..D..
                /* 0F40 */  0x04, 0x62, 0xF1, 0x96, 0x40, 0x98, 0x38, 0x4F,  // .b..@.8O
                /* 0F48 */  0x80, 0x4C, 0x96, 0x29, 0x20, 0x16, 0x0A, 0x84,  // .L.) ...
                /* 0F50 */  0xAB, 0x02, 0x61, 0xD2, 0x74, 0x0D, 0x89, 0xFE,  // ..a.t...
                /* 0F58 */  0x9F, 0x83, 0x10, 0xA9, 0xEF, 0x17, 0x0D, 0x85,  // ........
                /* 0F60 */  0xBC, 0x70, 0x83, 0x10, 0xF9, 0x7F, 0x75, 0x81,  // .p....u.
                /* 0F68 */  0x38, 0xD0, 0x17, 0x37, 0x08, 0x89, 0xF8, 0x24,  // 8..7...$
                /* 0F70 */  0xD2, 0x70, 0xC8, 0x13, 0x29, 0x08, 0x91, 0xF4,  // .p..)...
                /* 0F78 */  0x3D, 0x3A, 0x60, 0xF6, 0x16, 0x17, 0x88, 0x65,  // =:`....e
                /* 0F80 */  0x7F, 0x87, 0x04, 0xE2, 0xD0, 0xCF, 0x8E, 0xC3,  // ........
                /* 0F88 */  0x21, 0x22, 0xEC, 0x1D, 0x07, 0x28, 0x08, 0xD5,  // !"...(..
                /* 0F90 */  0xEE, 0x6F, 0x80, 0x14, 0x44, 0x40, 0x56, 0xF1,  // .o..D@V.
                /* 0F98 */  0xA2, 0x13, 0x90, 0x25, 0x81, 0x08, 0xC8, 0x61,  // ...%...a
                /* 0FA0 */  0x80, 0x68, 0x32, 0x20, 0xAA, 0xEE, 0x33, 0x11,  // .h2 ..3.
                /* 0FA8 */  0x88, 0x48, 0x05, 0xD1, 0xA0, 0x09, 0x10, 0x4D,  // .H.....M
                /* 0FB0 */  0x0C, 0x44, 0xD3, 0x29, 0x04, 0x62, 0x59, 0x41,  // .D.).bYA
                /* 0FB8 */  0x04, 0x64, 0xD5, 0xDF, 0x29, 0x0D, 0xC7, 0xDA,  // .d..)...
                /* 0FC0 */  0x35, 0x02, 0xB1, 0xE4, 0x20, 0x34, 0xF2, 0xD3,  // 5... 4..
                /* 0FC8 */  0x43, 0xA0, 0xCE, 0x0F, 0x22, 0x20, 0x07, 0x7E,  // C..." .~
                /* 0FD0 */  0xA5, 0x09, 0xC8, 0xF1, 0x41, 0x34, 0x78, 0xA2,  // ....A4x.
                /* 0FD8 */  0x12, 0x88, 0x45, 0x01, 0xD1, 0x30, 0x89, 0x4B,  // ..E..0.K
                /* 0FE0 */  0x20, 0x26, 0x10, 0x44, 0x40, 0x8E, 0xF7, 0xD8,  //  &.D@...
                /* 0FE8 */  0x38, 0x0C, 0x12, 0xEA, 0x19, 0x12, 0x90, 0xF9,  // 8.......
                /* 0FF0 */  0x3C, 0x50, 0x50, 0xA3, 0xA0, 0x4C, 0x1B, 0x88,  // <PP..L..
                /* 0FF8 */  0x80, 0x2C, 0xEF, 0xE9, 0x11, 0x88, 0x88, 0x05,  // .,......
                /* 1000 */  0x11, 0x90, 0xC3, 0xFD, 0x3D, 0x04, 0xEE, 0xC8,  // ....=...
                /* 1008 */  0x3F, 0x90, 0x40, 0x44, 0xB0, 0x56, 0x88, 0xFF,  // ?.@D.V..
                /* 1010 */  0xFF, 0x43, 0x00, 0x79, 0xA4, 0x04, 0x21, 0xFF,  // .C.y..!.
                /* 1018 */  0x7F                                             // .
            })
        }

        Device (WMI6)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Name (_WDG, Buffer (0x78)
            {
                /* 0000 */  0x9F, 0x1C, 0x86, 0x26, 0xE9, 0x47, 0xC4, 0x44,  // ...&.G.D
                /* 0008 */  0xBD, 0x8B, 0xDF, 0xE7, 0xFA, 0x26, 0x10, 0xFE,  // .....&..
                /* 0010 */  0x44, 0x30, 0x01, 0x06, 0x0A, 0x18, 0xA3, 0x9A,  // D0......
                /* 0018 */  0x50, 0x97, 0xF7, 0x41, 0xB9, 0xF7, 0xD5, 0xD3,  // P..A....
                /* 0020 */  0xB1, 0xBA, 0xC3, 0xCE, 0x44, 0x31, 0x01, 0x06,  // ....D1..
                /* 0028 */  0xA7, 0x39, 0xBC, 0xB2, 0xDD, 0x78, 0x71, 0x4D,  // .9...xqM
                /* 0030 */  0xB0, 0x59, 0xA5, 0x10, 0xDE, 0xC4, 0x48, 0x90,  // .Y....H.
                /* 0038 */  0x44, 0x32, 0x01, 0x06, 0x0D, 0x59, 0xE8, 0x0D,  // D2...Y..
                /* 0040 */  0x10, 0x55, 0x44, 0x40, 0x96, 0x21, 0x77, 0xC2,  // .UD@.!w.
                /* 0048 */  0x27, 0xF5, 0xA7, 0x0D, 0x44, 0x33, 0x01, 0x06,  // '...D3..
                /* 0050 */  0xED, 0x19, 0x91, 0xC5, 0x0D, 0x1C, 0x06, 0x48,  // .......H
                /* 0058 */  0xA8, 0xE9, 0x59, 0xAA, 0x31, 0x81, 0x76, 0xC4,  // ..Y.1.v.
                /* 0060 */  0x44, 0x34, 0x01, 0x06, 0x21, 0x12, 0x90, 0x05,  // D4..!...
                /* 0068 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0070 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x46, 0x01, 0x00   // ..).BF..
            })
            Method (WMD0, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = CARC (Arg2)
                If ((Local0 == Zero))
                {
                    Local0 = 0x02
                    Local0 = WMIS (0x12, Zero)
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (WMD1, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = CARC (Arg2)
                If ((Local0 == Zero))
                {
                    Local0 = 0x02
                    Local0 = WMIS (0x12, One)
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (WMD2, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = CARC (Arg2)
                If ((Local0 == Zero))
                {
                    Local0 = 0x02
                    Local0 = WMIS (0x12, 0x02)
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (WMD3, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = CARC (Arg2)
                If ((Local0 == Zero))
                {
                    Local0 = 0x02
                    Local0 = WMIS (0x12, 0x03)
                }

                Release (\_SB.WMI1.MWMI)
                Return (DerefOf (\_SB.WMI1.RETN [Local0]))
            }

            Method (WMD4, 3, NotSerialized)
            {
                Name (ITEM, Package (0x03)
                {
                    Package (0x02)
                    {
                        Zero, 
                        "Sha1"
                    }, 

                    Package (0x02)
                    {
                        One, 
                        "Sha256"
                    }, 

                    Package (0x02)
                    {
                        0x02, 
                        "Md5"
                    }
                })
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = CARC (Arg2)
                If ((Local0 == Zero))
                {
                    Local1 = \_SB.WMI1.GITM (CBFF, ITEM)
                    If ((Local1 == Ones))
                    {
                        Local0 = 0x02
                    }
                    Else
                    {
                        CBFF = Zero
                        Local0 = WMIS (0x12, 0x04)
                        If ((Local0 == Zero))
                        {
                            If ((Local1 == Zero))
                            {
                                Local2 = GETS (CBFF, Zero, 0x14)
                            }
                            ElseIf ((Local1 == One))
                            {
                                Local2 = GETS (CBFF, 0x14, 0x20)
                            }
                            ElseIf ((Local1 == 0x02))
                            {
                                Local2 = GETS (CBFF, 0x34, 0x10)
                            }
                        }
                    }
                }

                If ((Local0 == Zero))
                {
                    Release (\_SB.WMI1.MWMI)
                    Return (Local2)
                }
                Else
                {
                    Release (\_SB.WMI1.MWMI)
                    Return (DerefOf (\_SB.WMI1.RETN [Local0]))
                }
            }

            Method (CARC, 1, NotSerialized)
            {
                CBFF = Zero
                Local0 = SizeOf (Arg0)
                If ((Local0 == Zero))
                {
                    Return (0x02)
                }

                If ((ObjectType (Arg0) != 0x02))
                {
                    Return (0x02)
                }

                If ((Local0 >= 0x1000))
                {
                    Return (0x02)
                }

                CBFF = Arg0
                Return (Zero)
            }

            Method (GETS, 3, NotSerialized)
            {
                Local0 = Arg1
                Local1 = GETB (Arg0, Local0)
                Local3 = GETC (Local1)
                Local4 = (Local0 + Arg2)
                Local0++
                While ((Local0 < Local4))
                {
                    Local1 = GETB (Arg0, Local0)
                    Local2 = GETC (Local1)
                    Concatenate (Local3, Local2, Local3)
                    Local0++
                }

                Return (Local3)
            }

            Method (GETB, 2, NotSerialized)
            {
                CreateByteField (Arg0, Arg1, TMPB)
                Return (TMPB) /* \_SB_.WMI6.GETB.TMPB */
            }

            Method (GETC, 1, NotSerialized)
            {
                Name (RETB, Buffer (0x08)
                {
                     0x00                                             // .
                })
                Name (RUST, Buffer (0x08)
                {
                     0x00                                             // .
                })
                CreateWordField (RETB, Zero, RTB0)
                CreateWordField (RETB, One, RTB1)
                Name (ASCI, Package (0x10)
                {
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "A", 
                    "B", 
                    "C", 
                    "D", 
                    "E", 
                    "F"
                })
                Name (TMPW, Zero)
                TMPW = Arg0
                RTB0 = DerefOf (ASCI [((TMPW >> 0x04) & 0x0F)]
                    )
                RTB1 = DerefOf (ASCI [(TMPW & 0x0F)])
                ToString (RETB, Ones, RUST) /* \_SB_.WMI6.GETC.RUST */
                Return (RUST) /* \_SB_.WMI6.GETC.RUST */
            }

            Name (WQBF, Buffer (0x05D7)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0xC7, 0x05, 0x00, 0x00, 0x1A, 0x25, 0x00, 0x00,  // .....%..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x98, 0xDB, 0x91, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0D, 0x10, 0x8A, 0x0F, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x60, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .P`...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x18, 0x88, 0x14, 0x40, 0x48, 0x30, 0x84,  // 1...@H0.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0x0A, 0x05, 0x98, 0x14, 0xE0, 0x13, 0x4C, 0x88,  // ......L.
                /* 0078 */  0xB1, 0xCE, 0xE2, 0x24, 0x9A, 0x16, 0xA0, 0x19,  // ...$....
                /* 0080 */  0x42, 0xE3, 0x38, 0x90, 0x30, 0x91, 0x5A, 0x14,  // B.8.0.Z.
                /* 0088 */  0x20, 0x1B, 0x43, 0xB6, 0x91, 0xC9, 0x5C, 0x2C,  //  .C...\,
                /* 0090 */  0x72, 0x20, 0x28, 0x31, 0x03, 0x41, 0xE9, 0x9C,  // r (1.A..
                /* 0098 */  0x87, 0x6C, 0xE2, 0x6A, 0x08, 0x85, 0xA2, 0x68,  // .l.j...h
                /* 00A0 */  0x0C, 0x51, 0x12, 0x9C, 0xC3, 0x81, 0x44, 0x88,  // .Q....D.
                /* 00A8 */  0x5D, 0xAE, 0x00, 0xC9, 0x03, 0xD0, 0x2C, 0x4E,  // ].....,N
                /* 00B0 */  0xA2, 0xF5, 0x39, 0x68, 0x74, 0x6C, 0x04, 0x3C,  // ..9htl.<
                /* 00B8 */  0xE9, 0x82, 0x4D, 0xA0, 0x30, 0x6B, 0x55, 0x4C,  // ..M.0kUL
                /* 00C0 */  0x07, 0x30, 0x18, 0x0F, 0x20, 0x92, 0x33, 0x5E,  // .0.. .3^
                /* 00C8 */  0x14, 0xB0, 0xBD, 0x4E, 0x44, 0x63, 0x3B, 0x58,  // ...NDc;X
                /* 00D0 */  0x26, 0x09, 0x0E, 0x35, 0x54, 0x4B, 0x14, 0x60,  // &..5TK.`
                /* 00D8 */  0x7E, 0x62, 0x9A, 0xC8, 0xA9, 0x1D, 0x9F, 0x21,  // ~b.....!
                /* 00E0 */  0x99, 0xB4, 0xA1, 0xA0, 0xC6, 0xEF, 0x69, 0x9D,  // ......i.
                /* 00E8 */  0x94, 0x67, 0x1B, 0xF1, 0xA0, 0x0C, 0x93, 0xC0,  // .g......
                /* 00F0 */  0xA3, 0x60, 0x68, 0x9C, 0xA0, 0x2C, 0x08, 0xED,  // .`h..,..
                /* 00F8 */  0x88, 0x0E, 0x94, 0x00, 0x9E, 0x84, 0xE7, 0x58,  // .......X
                /* 0100 */  0xBC, 0x00, 0xE1, 0x23, 0x26, 0xE7, 0x81, 0x18,  // ...#&...
                /* 0108 */  0x09, 0x7C, 0x2E, 0xB0, 0xD4, 0x31, 0xA3, 0x47,  // .|...1.G
                /* 0110 */  0x14, 0x2E, 0xE0, 0xF9, 0x1C, 0x43, 0xE4, 0xB8,  // .....C..
                /* 0118 */  0xAF, 0x00, 0x1E, 0x45, 0xE4, 0x04, 0x47, 0x1D,  // ...E..G.
                /* 0120 */  0x2C, 0x4E, 0x41, 0x57, 0x01, 0xF2, 0xFF, 0xBF,  // ,NAW....
                /* 0128 */  0x0A, 0x18, 0xE5, 0x59, 0x00, 0x16, 0x81, 0x45,  // ...Y...E
                /* 0130 */  0x8F, 0x02, 0x25, 0x03, 0x42, 0x1E, 0x05, 0x58,  // ..%.B..X
                /* 0138 */  0xC5, 0xD6, 0x34, 0x12, 0x58, 0x99, 0x00, 0x6D,  // ..4.X..m
                /* 0140 */  0x02, 0xC4, 0x41, 0xC8, 0xD8, 0x00, 0x64, 0x4E,  // ..A...dN
                /* 0148 */  0x80, 0x46, 0x01, 0xB6, 0x26, 0x2A, 0x6F, 0xE3,  // .F..&*o.
                /* 0150 */  0x12, 0x4C, 0x14, 0x23, 0xC4, 0x0A, 0x11, 0xE5,  // .L.#....
                /* 0158 */  0x4C, 0xE2, 0xC6, 0x8C, 0x11, 0x25, 0x48, 0xC8,  // L....%H.
                /* 0160 */  0x78, 0x11, 0x63, 0xBC, 0x14, 0x84, 0x37, 0xF8,  // x.c...7.
                /* 0168 */  0x5B, 0x44, 0x24, 0x13, 0x78, 0xDC, 0xB8, 0x03,  // [D$.x...
                /* 0170 */  0x80, 0x4F, 0x0D, 0xC7, 0x76, 0x48, 0xBE, 0x2B,  // .O..vH.+
                /* 0178 */  0x98, 0xC0, 0xB3, 0x3E, 0xB4, 0xC7, 0x83, 0xC0,  // ...>....
                /* 0180 */  0x87, 0x1B, 0x35, 0xC6, 0x89, 0x84, 0x26, 0x0F,  // ..5...&.
                /* 0188 */  0x09, 0x59, 0x00, 0x51, 0x24, 0x78, 0xD4, 0x81,  // .Y.Q$x..
                /* 0190 */  0xC1, 0x47, 0x03, 0x8F, 0xEC, 0xB8, 0x3D, 0xC3,  // .G....=.
                /* 0198 */  0x13, 0x08, 0x72, 0x08, 0x47, 0xF0, 0xD0, 0xF0,  // ..r.G...
                /* 01A0 */  0x4C, 0xE0, 0x31, 0xB0, 0xCB, 0x82, 0x4F, 0x01,  // L.1...O.
                /* 01A8 */  0x3E, 0x24, 0xE0, 0x5D, 0x03, 0xEA, 0x76, 0xF0,  // >$.]..v.
                /* 01B0 */  0x6C, 0xC0, 0x46, 0x1D, 0x0E, 0x33, 0x5C, 0xCF,  // l.F..3\.
                /* 01B8 */  0x3B, 0xDC, 0x09, 0x3C, 0x1A, 0x3C, 0x68, 0xF0,  // ;..<.<h.
                /* 01C0 */  0x43, 0x87, 0x07, 0x87, 0x1B, 0xEB, 0xC9, 0x1C,  // C.......
                /* 01C8 */  0xD9, 0x0B, 0x41, 0xB3, 0xE7, 0x03, 0x4D, 0xD2,  // ..A...M.
                /* 01D0 */  0xA7, 0x0E, 0x76, 0x06, 0x38, 0x9F, 0x9E, 0x21,  // ..v.8..!
                /* 01D8 */  0x89, 0xFC, 0x41, 0xA0, 0x46, 0x66, 0x68, 0xCF,  // ..A.Ffh.
                /* 01E0 */  0xF8, 0xE5, 0xC3, 0x90, 0x8F, 0x0A, 0x87, 0xC5,  // ........
                /* 01E8 */  0xC4, 0x9E, 0x3E, 0xE8, 0x78, 0xC0, 0x7F, 0x29,  // ..>.x..)
                /* 01F0 */  0x79, 0xD4, 0xF0, 0xF4, 0x3D, 0x5F, 0x0F, 0x83,  // y...=_..
                /* 01F8 */  0x9D, 0x48, 0xE0, 0xFD, 0xFF, 0x4F, 0x24, 0xB0,  // .H...O$.
                /* 0200 */  0x2E, 0x0E, 0xEC, 0x74, 0xF0, 0xF2, 0xE0, 0x29,  // ...t...)
                /* 0208 */  0xBE, 0x37, 0xC0, 0x3B, 0x8F, 0x00, 0x0F, 0x90,  // .7.;....
                /* 0210 */  0x43, 0xC0, 0x9C, 0x0A, 0x3C, 0x04, 0x3E, 0x80,  // C...<.>.
                /* 0218 */  0x67, 0x89, 0x93, 0xB4, 0xD2, 0xA9, 0x21, 0x0F,  // g.....!.
                /* 0220 */  0x2F, 0x30, 0x66, 0x06, 0xF7, 0xF0, 0x82, 0x4F,  // /0f....O
                /* 0228 */  0xFE, 0x10, 0xD0, 0xD9, 0xC3, 0xA9, 0x41, 0x64,  // ......Ad
                /* 0230 */  0xE3, 0x29, 0xE0, 0x53, 0x0E, 0x55, 0x04, 0xA4,  // .).S.U..
                /* 0238 */  0xD9, 0x82, 0x85, 0x60, 0xFA, 0x05, 0x68, 0x04,  // ...`..h.
                /* 0240 */  0x3E, 0x1B, 0x38, 0x37, 0x89, 0x92, 0x8F, 0x8E,  // >.87....
                /* 0248 */  0xC2, 0x39, 0xEB, 0x99, 0x84, 0x82, 0x18, 0xD0,  // .9......
                /* 0250 */  0x41, 0xCE, 0x15, 0xE8, 0xE3, 0x8A, 0xCF, 0x24,  // A......$
                /* 0258 */  0xC7, 0xF0, 0xF0, 0xE3, 0x59, 0x79, 0x14, 0xBE,  // ....Yy..
                /* 0260 */  0xAE, 0xF8, 0x28, 0xE2, 0x53, 0x85, 0x8F, 0x00,  // ..(.S...
                /* 0268 */  0x3E, 0x2F, 0xF0, 0x2F, 0x8D, 0x2F, 0x10, 0x46,  // >/././.F
                /* 0270 */  0xB7, 0x9A, 0x23, 0x0B, 0x0A, 0xCC, 0x27, 0x12,  // ..#...'.
                /* 0278 */  0x4E, 0x50, 0xD7, 0x95, 0x02, 0x64, 0xFA, 0x70,  // NP...d.p
                /* 0280 */  0xD1, 0xFF, 0xFF, 0x33, 0x03, 0x1C, 0x20, 0x5F,  // ...3.. _
                /* 0288 */  0x0F, 0x7C, 0x1C, 0x78, 0x44, 0x60, 0x63, 0x78,  // .|.xD`cx
                /* 0290 */  0x22, 0x30, 0x9A, 0xD1, 0x79, 0xF8, 0xC9, 0xA2,  // "0..y...
                /* 0298 */  0xE2, 0x4E, 0x96, 0x82, 0x78, 0xB2, 0x8E, 0x32,  // .N..x..2
                /* 02A0 */  0x59, 0xF4, 0x4C, 0x7C, 0xC1, 0xF0, 0x8C, 0x5E,  // Y.L|...^
                /* 02A8 */  0x16, 0x82, 0x9C, 0xA3, 0x27, 0xEC, 0x0B, 0x09,  // ....'...
                /* 02B0 */  0xAC, 0xE3, 0x40, 0xC8, 0x37, 0x03, 0x4F, 0xC3,  // ..@.7.O.
                /* 02B8 */  0x70, 0x9E, 0x2C, 0x87, 0xF3, 0x64, 0xF9, 0x58,  // p.,..d.X
                /* 02C0 */  0x7C, 0x1F, 0x01, 0x9F, 0xC0, 0xD9, 0x82, 0x1C,  // |.......
                /* 02C8 */  0x1E, 0x13, 0x6D, 0x54, 0xF4, 0x56, 0xE4, 0xE1,  // ..mT.V..
                /* 02D0 */  0xF1, 0xCB, 0x81, 0xE7, 0xF3, 0x8C, 0x70, 0x94,  // ......p.
                /* 02D8 */  0xAF, 0x12, 0x38, 0x8C, 0x87, 0x13, 0x0F, 0xD1,  // ..8.....
                /* 02E0 */  0x17, 0x24, 0x58, 0x13, 0x39, 0x69, 0xDF, 0x16,  // .$X.9i..
                /* 02E8 */  0x4E, 0x36, 0x68, 0xFC, 0xB0, 0xBE, 0x20, 0x01,  // N6h... .
                /* 02F0 */  0xAF, 0xCC, 0x97, 0x2C, 0x1A, 0x67, 0x21, 0x0A,  // ...,.g!.
                /* 02F8 */  0xBB, 0x24, 0x0A, 0xE3, 0x4B, 0x16, 0xFB, 0xFF,  // .$..K...
                /* 0300 */  0x5F, 0xB2, 0x00, 0x3B, 0xD7, 0x1B, 0xDC, 0xA0,  // _..;....
                /* 0308 */  0xE1, 0x1E, 0x5D, 0xE2, 0x9C, 0xCC, 0xD1, 0xB2,  // ..].....
                /* 0310 */  0x59, 0x83, 0xE3, 0x96, 0x05, 0xF7, 0x1C, 0xF5,  // Y.......
                /* 0318 */  0xC0, 0x10, 0xA1, 0xB3, 0x7B, 0x95, 0x6E, 0x57,  // ....{.nW
                /* 0320 */  0x8F, 0x12, 0x51, 0x1E, 0xAF, 0x22, 0x3D, 0x5D,  // ..Q.."=]
                /* 0328 */  0xB5, 0x06, 0xA3, 0x5B, 0x96, 0xB1, 0x5E, 0xAE,  // ...[..^.
                /* 0330 */  0xE2, 0xBC, 0x65, 0xF9, 0xB2, 0x65, 0x14, 0x63,  // ..e..e.c
                /* 0338 */  0x87, 0x0B, 0x11, 0x38, 0x52, 0xB8, 0x10, 0x0F,  // ...8R...
                /* 0340 */  0x3B, 0x86, 0x79, 0xDA, 0x61, 0xB7, 0x2C, 0xB0,  // ;.y.a.,.
                /* 0348 */  0xCA, 0xBB, 0x65, 0x01, 0xD9, 0xFF, 0xFF, 0x2D,  // ..e....-
                /* 0350 */  0x0B, 0x30, 0x77, 0x8D, 0x04, 0xE3, 0xCD, 0x01,  // .0w.....
                /* 0358 */  0x77, 0x53, 0x02, 0xC3, 0x3D, 0x0B, 0x70, 0x96,  // wS..=.p.
                /* 0360 */  0xFE, 0x9E, 0x45, 0x6F, 0x5A, 0xBE, 0x67, 0xF1,  // ..EoZ.g.
                /* 0368 */  0xC3, 0x88, 0x35, 0x01, 0x69, 0xBE, 0xB0, 0xFE,  // ..5.i...
                /* 0370 */  0xFF, 0xF3, 0x85, 0x75, 0xD1, 0x02, 0x98, 0xFE,  // ...u....
                /* 0378 */  0xFF, 0xBF, 0x68, 0xE1, 0xC3, 0x5D, 0xB4, 0x80,  // ..h..]..
                /* 0380 */  0xDE, 0x25, 0x09, 0x78, 0x25, 0xBE, 0x69, 0xA1,  // .%.x%.i.
                /* 0388 */  0xA2, 0xDE, 0xB4, 0x00, 0xAD, 0xE3, 0x7D, 0xDF,  // ......}.
                /* 0390 */  0x61, 0x60, 0xCF, 0xC7, 0xC0, 0x60, 0x00, 0x2F,  // a`...`./
                /* 0398 */  0xC4, 0x21, 0xC2, 0xFF, 0xFF, 0x9F, 0xAD, 0x1E,  // .!......
                /* 03A0 */  0xB6, 0x7C, 0xC4, 0x32, 0xC4, 0xC3, 0x56, 0xB8,  // .|.2..V.
                /* 03A8 */  0x08, 0x6F, 0x5A, 0xC6, 0x88, 0xF3, 0x8E, 0xF5,  // .oZ.....
                /* 03B0 */  0xA6, 0xE5, 0x23, 0xC5, 0x7B, 0xD6, 0x43, 0xB2,  // ..#.{.C.
                /* 03B8 */  0x21, 0x83, 0x3C, 0x1C, 0x1B, 0xED, 0x08, 0x1F,  // !.<.....
                /* 03C0 */  0x93, 0x8D, 0x10, 0x37, 0xD8, 0x9B, 0x85, 0x6F,  // ...7...o
                /* 03C8 */  0x5A, 0x60, 0x15, 0x77, 0xD3, 0x02, 0x68, 0x32,  // Z`.w..h2
                /* 03D0 */  0xFC, 0x37, 0x2D, 0xF0, 0xDD, 0x1C, 0x30, 0x07,  // .7-...0.
                /* 03D8 */  0x64, 0x70, 0xFC, 0xFF, 0x2F, 0x5A, 0x80, 0xCB,  // dp../Z..
                /* 03E0 */  0xE9, 0x82, 0xE9, 0xA2, 0x05, 0x30, 0xE1, 0xFF,  // .....0..
                /* 03E8 */  0x7F, 0xD1, 0x02, 0x98, 0x77, 0x47, 0x02, 0x9F,  // ....wG..
                /* 03F0 */  0xBE, 0x2F, 0x96, 0x4F, 0xD4, 0x5E, 0x89, 0x24,  // ./.O.^.$
                /* 03F8 */  0x48, 0x80, 0xC1, 0x5C, 0xB4, 0xC0, 0xFE, 0xFF,  // H..\....
                /* 0400 */  0xBF, 0x68, 0x01, 0xCB, 0xB3, 0x83, 0x47, 0x0D,  // .h....G.
                /* 0408 */  0x96, 0x3B, 0xC0, 0xE3, 0x8E, 0x2F, 0x0B, 0x6F,  // .;.../.o
                /* 0410 */  0x6B, 0xEC, 0x86, 0xC2, 0x66, 0x0D, 0x0F, 0x2C,  // k...f..,
                /* 0418 */  0x46, 0xC0, 0x18, 0x47, 0x15, 0x28, 0x66, 0x84,  // F..G.(f.
                /* 0420 */  0xDE, 0x71, 0x84, 0xF9, 0x48, 0xE0, 0xEB, 0x16,  // .q..H...
                /* 0428 */  0xDC, 0x13, 0x16, 0xBB, 0x5F, 0x3D, 0x66, 0x19,  // ...._=f.
                /* 0430 */  0xC6, 0xE7, 0xAC, 0x28, 0xCF, 0x59, 0xEC, 0xBA,  // ...(.Y..
                /* 0438 */  0x65, 0x8C, 0xE7, 0x2C, 0x9F, 0x96, 0xAD, 0xED,  // e..,....
                /* 0440 */  0xE2, 0xA5, 0x13, 0x97, 0xAF, 0x5C, 0x11, 0x0E,  // .....\..
                /* 0448 */  0x28, 0x4C, 0x84, 0x20, 0x2F, 0xCB, 0x51, 0xDF,  // (L. /.Q.
                /* 0450 */  0xBD, 0x0C, 0xEE, 0xEB, 0x16, 0x78, 0x85, 0x5E,  // .....x.^
                /* 0458 */  0xB7, 0x00, 0x19, 0xFF, 0xFF, 0xEB, 0x16, 0x60,  // .......`
                /* 0460 */  0x66, 0xB0, 0xBE, 0x6E, 0x81, 0xEF, 0xFE, 0x80,  // f..n....
                /* 0468 */  0xB9, 0x30, 0xC1, 0x9E, 0x4D, 0xB8, 0xB7, 0x07,  // .0..M...
                /* 0470 */  0x18, 0x97, 0x2E, 0xC0, 0x9A, 0xA6, 0x57, 0x83,  // ......W.
                /* 0478 */  0x4E, 0x22, 0xD6, 0x03, 0xA2, 0x4B, 0x17, 0x3F,  // N"...K.?
                /* 0480 */  0xFB, 0x58, 0xDD, 0xA5, 0x8B, 0x4C, 0x1A, 0xFE,  // .X...L..
                /* 0488 */  0xFF, 0x7F, 0xD2, 0xB0, 0x6F, 0x5E, 0x00, 0xC3,  // ....o^..
                /* 0490 */  0xFF, 0xFF, 0x37, 0x2F, 0x78, 0x41, 0x6F, 0x5E,  // ..7/xAo^
                /* 0498 */  0x40, 0xEF, 0xD2, 0x04, 0xBC, 0x8E, 0x18, 0xBE,  // @.......
                /* 04A0 */  0x34, 0xC1, 0xD1, 0x70, 0xFF, 0xA2, 0x91, 0xD6,  // 4..p....
                /* 04A8 */  0xA3, 0xD0, 0x2B, 0xA3, 0x30, 0xBE, 0x7F, 0x01,  // ..+.0...
                /* 04B0 */  0x8E, 0x04, 0x8F, 0x1D, 0x34, 0x37, 0x38, 0xF8,  // ....478.
                /* 04B8 */  0xF3, 0xF6, 0x1D, 0xE0, 0x71, 0xE2, 0x54, 0x9E,  // ....q.T.
                /* 04C0 */  0x85, 0x82, 0xBF, 0x3D, 0xB0, 0xFF, 0xFF, 0x89,  // ...=....
                /* 04C8 */  0xC2, 0x77, 0x2F, 0xB8, 0x53, 0x78, 0xF4, 0xF2,  // .w/.Sx..
                /* 04D0 */  0x91, 0x2B, 0x42, 0x8C, 0xF3, 0x7A, 0xF7, 0x32,  // .+B..z.2
                /* 04D8 */  0x4A, 0xA8, 0xC7, 0x2F, 0x76, 0x62, 0x36, 0xCA,  // J../vb6.
                /* 04E0 */  0xA3, 0xD7, 0x7B, 0xB3, 0x51, 0xE2, 0x3D, 0x3A,  // ..{.Q.=:
                /* 04E8 */  0x1B, 0xD7, 0x38, 0x11, 0x1E, 0xA3, 0x83, 0x86,  // ..8.....
                /* 04F0 */  0x0A, 0xF1, 0xEC, 0x15, 0xF0, 0xE1, 0xD9, 0x77,  // .......w
                /* 04F8 */  0x2F, 0xF0, 0x4A, 0xBC, 0x7B, 0x01, 0x34, 0x39,  // /.J.{.49
                /* 0500 */  0x21, 0xE0, 0xEE, 0x5E, 0x60, 0x39, 0x83, 0xB0,  // !..^`9..
                /* 0508 */  0xFF, 0xFF, 0xA1, 0x09, 0xE6, 0xD5, 0x01, 0xCE,  // ........
                /* 0510 */  0xC5, 0x0B, 0xB0, 0xA6, 0xE2, 0xE2, 0x45, 0x15,  // ......E.
                /* 0518 */  0x5C, 0xBC, 0x50, 0x67, 0x0A, 0xEB, 0x7A, 0x12,  // \.Pg..z.
                /* 0520 */  0x68, 0xC6, 0xE0, 0xBC, 0x75, 0x01, 0x2E, 0xFF,  // h...u...
                /* 0528 */  0xFF, 0xB7, 0x2E, 0x80, 0x2D, 0x01, 0x6F, 0x5D,  // ....-.o]
                /* 0530 */  0x40, 0xEF, 0xAA, 0x04, 0xFC, 0x14, 0xDA, 0xF4,  // @.......
                /* 0538 */  0xA9, 0xD1, 0xA8, 0x55, 0x83, 0x32, 0x35, 0xCA,  // ...U.25.
                /* 0540 */  0x34, 0xA8, 0xD5, 0xA7, 0x52, 0x63, 0xC6, 0x1C,  // 4...Rc..
                /* 0548 */  0x09, 0xF8, 0xFF, 0x5F, 0x52, 0x74, 0xC7, 0xA0,  // ..._Rt..
                /* 0550 */  0xE2, 0x56, 0xA6, 0xA1, 0x39, 0x1A, 0x08, 0x0D,  // .V..9...
                /* 0558 */  0xF5, 0x1B, 0x92, 0x11, 0x10, 0x25, 0x04, 0x11,  // .....%..
                /* 0560 */  0x90, 0xD3, 0xFC, 0x26, 0x04, 0xE4, 0x6C, 0x20,  // ...&..l 
                /* 0568 */  0x02, 0xB2, 0x9A, 0xA5, 0x09, 0xDC, 0x3A, 0x54,  // ......:T
                /* 0570 */  0x00, 0xB1, 0x14, 0x20, 0xFC, 0x8F, 0x23, 0x50,  // ... ..#P
                /* 0578 */  0x47, 0x02, 0x11, 0x90, 0xE5, 0xDB, 0x00, 0x62,  // G......b
                /* 0580 */  0x61, 0x40, 0x34, 0x64, 0xE2, 0x03, 0x9C, 0x45,  // a@4d...E
                /* 0588 */  0x7F, 0x12, 0x08, 0xC8, 0xC2, 0xE9, 0x04, 0x62,  // .......b
                /* 0590 */  0xD9, 0x4E, 0x40, 0x59, 0x06, 0x10, 0x01, 0x59,  // .N@Y...Y
                /* 0598 */  0xEF, 0xD7, 0x43, 0x40, 0x56, 0x0F, 0x22, 0x20,  // ..C@V." 
                /* 05A0 */  0x27, 0xB6, 0x02, 0xCE, 0x72, 0x7B, 0x01, 0x62,  // '...r{.b
                /* 05A8 */  0xAA, 0x17, 0x2E, 0x10, 0x27, 0xF9, 0x76, 0x08,  // ....'.v.
                /* 05B0 */  0xD4, 0xB1, 0x40, 0x04, 0xE4, 0x08, 0x6E, 0x80,  // ..@...n.
                /* 05B8 */  0x58, 0x20, 0x10, 0x01, 0x59, 0x90, 0x1D, 0x70,  // X ..Y..p
                /* 05C0 */  0x26, 0xC7, 0x0F, 0x10, 0x0B, 0x03, 0x42, 0x43,  // &.....BC
                /* 05C8 */  0x19, 0x1A, 0x28, 0x05, 0xD1, 0x40, 0x89, 0xA2,  // ..(..@..
                /* 05D0 */  0x81, 0x52, 0x10, 0x01, 0xF9, 0xFF, 0x0F         // .R.....
            })
        }

        Device (WMI7)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x24, 0xD8, 0x06, 0x0F, 0x18, 0xF9, 0x8A, 0x43,  // $......C
                /* 0008 */  0xA6, 0x70, 0x84, 0x35, 0x1E, 0x08, 0xDC, 0xC6,  // .p.5....
                /* 0010 */  0x43, 0x30, 0x01, 0x05, 0x21, 0x12, 0x90, 0x05,  // C0..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x43, 0x31, 0x01, 0x00   // ..).C1..
            })
            Name (VSEL, Package (0x02)
            {
                "Disable", 
                "Enable"
            })
            Method (WQC0, 1, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                Local0 = DerefOf (VSEL [SDBM])
                Release (\_SB.WMI1.MWMI)
                Return (Local0)
            }

            Name (WQC1, Buffer (0x027E)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x6E, 0x02, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00,  // n.......
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xD8, 0x82, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x05, 0x10, 0x0A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x4C, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PL...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0xCE, 0x18, 0xA8, 0x4C, 0x08, 0x89, 0x00,  // 1...L...
                /* 0050 */  0xA6, 0x42, 0xE0, 0x08, 0x41, 0xBF, 0x02, 0x10,  // .B..A...
                /* 0058 */  0x3A, 0x44, 0x93, 0x41, 0x01, 0x4E, 0x11, 0x04,  // :D.A.N..
                /* 0060 */  0x69, 0xCB, 0x02, 0x74, 0x0B, 0xF0, 0x2D, 0x40,  // i..t..-@
                /* 0068 */  0x3B, 0x84, 0xD0, 0x22, 0x95, 0x28, 0x40, 0xA1,  // ;..".(@.
                /* 0070 */  0x00, 0x9B, 0x02, 0x2C, 0x0A, 0x90, 0x0D, 0x26,  // ...,...&
                /* 0078 */  0xDB, 0x70, 0x64, 0x18, 0x4C, 0xE4, 0x18, 0x50,  // .pd.L..P
                /* 0080 */  0x62, 0xC6, 0x80, 0xD2, 0x39, 0x05, 0x01, 0x1B,  // b...9...
                /* 0088 */  0xBD, 0x50, 0x14, 0x4D, 0x23, 0x4A, 0x82, 0x83,  // .P.M#J..
                /* 0090 */  0x3A, 0x86, 0x08, 0xC1, 0xCB, 0x15, 0x20, 0x79,  // :..... y
                /* 0098 */  0x02, 0xD2, 0x3C, 0x2F, 0x59, 0x1F, 0x84, 0x86,  // ..</Y...
                /* 00A0 */  0xC0, 0x46, 0xC0, 0x23, 0x4B, 0x00, 0x61, 0xA1,  // .F.#K.a.
                /* 00A8 */  0x96, 0xA9, 0x90, 0x30, 0x28, 0x0F, 0x20, 0x92,  // ...0(. .
                /* 00B0 */  0x33, 0x54, 0x14, 0xB0, 0xBD, 0x4E, 0x44, 0x26,  // 3T...ND&
                /* 00B8 */  0xC7, 0x49, 0x25, 0xC1, 0xA1, 0x46, 0xE9, 0xC1,  // .I%..F..
                /* 00C0 */  0x35, 0x3F, 0x32, 0x4D, 0xE4, 0xD8, 0x9A, 0x1E,  // 5?2M....
                /* 00C8 */  0xB1, 0x20, 0x99, 0xB4, 0xA1, 0xA0, 0x86, 0xEE,  // . ......
                /* 00D0 */  0x69, 0x9D, 0x94, 0x27, 0x1A, 0xF1, 0xA0, 0x0C,  // i..'....
                /* 00D8 */  0x93, 0xC0, 0xA3, 0x60, 0x68, 0x9C, 0xA0, 0x2C,  // ...`h..,
                /* 00E0 */  0x08, 0x39, 0x18, 0x28, 0x0A, 0xF0, 0x24, 0x3C,  // .9.(..$<
                /* 00E8 */  0xC7, 0xE2, 0x05, 0x08, 0x9F, 0x31, 0x39, 0x0A,  // .....19.
                /* 00F0 */  0xC4, 0x48, 0xE0, 0x23, 0x81, 0x05, 0x8F, 0x19,  // .H.#....
                /* 00F8 */  0x3D, 0xA2, 0x70, 0x01, 0xCF, 0xE7, 0x18, 0x22,  // =.p...."
                /* 0100 */  0xC7, 0x3D, 0xD4, 0x18, 0x47, 0x11, 0x39, 0xC1,  // .=..G.9.
                /* 0108 */  0x51, 0x1F, 0xD7, 0x83, 0x81, 0xAF, 0x00, 0x16,  // Q.......
                /* 0110 */  0x84, 0x49, 0xF0, 0x0E, 0x39, 0x5C, 0xAC, 0xD7,  // .I..9\..
                /* 0118 */  0x00, 0xF6, 0xFF, 0x47, 0x8B, 0xF5, 0x2E, 0x70,  // ...G...p
                /* 0120 */  0xEC, 0x0C, 0xE5, 0xA0, 0x82, 0x1C, 0x98, 0x09,  // ........
                /* 0128 */  0x42, 0x1E, 0x08, 0x46, 0x06, 0x84, 0x3C, 0x0A,  // B..F..<.
                /* 0130 */  0xB0, 0x3A, 0x36, 0x0D, 0x20, 0x81, 0xDD, 0xDF,  // .:6. ...
                /* 0138 */  0x19, 0xA4, 0x11, 0x42, 0xDA, 0x80, 0x24, 0x4E,  // ...B..$N
                /* 0140 */  0x80, 0xB2, 0xB1, 0xCA, 0x16, 0x90, 0xCC, 0x09,  // ........
                /* 0148 */  0x30, 0x86, 0x23, 0x94, 0x38, 0x9D, 0x81, 0xE8,  // 0.#.8...
                /* 0150 */  0x48, 0x10, 0x25, 0x44, 0xC4, 0xDE, 0x40, 0x85,  // H.%D..@.
                /* 0158 */  0x12, 0x28, 0x96, 0xAD, 0x21, 0x6A, 0x8E, 0x81,  // .(..!j..
                /* 0160 */  0xE2, 0x04, 0x7F, 0x33, 0x88, 0x10, 0xAF, 0xFD,  // ...3....
                /* 0168 */  0x41, 0x90, 0xB1, 0xE3, 0x0E, 0x01, 0x3E, 0x34,  // A.....>4
                /* 0170 */  0x9C, 0xD1, 0x29, 0x3E, 0x04, 0x3C, 0x30, 0x98,  // ..)>.<0.
                /* 0178 */  0xC0, 0xB3, 0x3A, 0xC3, 0x47, 0x84, 0xE0, 0x87,  // ..:.G...
                /* 0180 */  0x1C, 0x35, 0xC6, 0xA1, 0x24, 0xB0, 0xA0, 0xA5,  // .5..$...
                /* 0188 */  0x4B, 0x03, 0x88, 0x22, 0xC1, 0xA3, 0x0E, 0x0D,  // K.."....
                /* 0190 */  0x3E, 0x1E, 0x78, 0x68, 0xC7, 0xEE, 0x41, 0x9E,  // >.xh..A.
                /* 0198 */  0x40, 0x90, 0x43, 0x38, 0x82, 0x07, 0x87, 0xE7,  // @.C8....
                /* 01A0 */  0x02, 0x8F, 0x81, 0x5D, 0x18, 0x7C, 0x12, 0xF0,  // ...].|..
                /* 01A8 */  0x41, 0x01, 0xEF, 0x1A, 0x50, 0xA3, 0x7E, 0x3E,  // A...P.~>
                /* 01B0 */  0x60, 0x43, 0x0E, 0x87, 0x19, 0xAF, 0x4F, 0x01,  // `C....O.
                /* 01B8 */  0xE1, 0x4E, 0xE0, 0xB0, 0x9F, 0x33, 0xF8, 0x99,  // .N...3..
                /* 01C0 */  0xC3, 0x83, 0xC3, 0x4D, 0xF1, 0x64, 0x8E, 0xAC,  // ...M.d..
                /* 01C8 */  0x54, 0x01, 0x66, 0xCF, 0x08, 0x3A, 0x4F, 0xF8,  // T.f..:O.
                /* 01D0 */  0xD0, 0xC1, 0x2E, 0x04, 0xE7, 0xD3, 0x33, 0x24,  // ......3$
                /* 01D8 */  0x91, 0x3F, 0x08, 0xD4, 0xC8, 0x0C, 0xED, 0x71,  // .?.....q
                /* 01E0 */  0xBF, 0x7B, 0x18, 0xF2, 0x71, 0xE1, 0xB0, 0x98,  // .{..q...
                /* 01E8 */  0xD8, 0xC3, 0x07, 0x1D, 0x0F, 0xF8, 0xEF, 0x24,  // .......$
                /* 01F0 */  0xCF, 0x08, 0x9E, 0xBE, 0xE7, 0x6B, 0x82, 0xD1,  // .....k..
                /* 01F8 */  0x07, 0x8E, 0x1E, 0x88, 0xA1, 0x9F, 0x39, 0x0E,  // ......9.
                /* 0200 */  0xE3, 0x34, 0x8C, 0xF8, 0xFF, 0x3F, 0xA2, 0xE7,  // .4...?..
                /* 0208 */  0x80, 0x20, 0x31, 0x8E, 0xC9, 0x83, 0xE3, 0x01,  // . 1.....
                /* 0210 */  0x47, 0x4E, 0xCF, 0x2A, 0x3E, 0x54, 0xF0, 0x13,  // GN.*>T..
                /* 0218 */  0x86, 0x0F, 0x15, 0xEC, 0x7C, 0x70, 0x1A, 0xCF,  // ....|p..
                /* 0220 */  0x01, 0x1E, 0xCE, 0x59, 0xF9, 0x4C, 0x01, 0x1C,  // ...Y.L..
                /* 0228 */  0x0F, 0x03, 0xE0, 0x1B, 0x96, 0x4F, 0x33, 0xE0,  // .....O3.
                /* 0230 */  0x9B, 0x16, 0x66, 0x58, 0x70, 0x66, 0xC5, 0x47,  // ..fXpf.G
                /* 0238 */  0x85, 0x39, 0xD3, 0x00, 0x8F, 0xE3, 0x82, 0x87,  // .9......
                /* 0240 */  0xC0, 0x4F, 0x15, 0x1E, 0x02, 0x1F, 0xC0, 0xC3,  // .O......
                /* 0248 */  0xC8, 0x79, 0x5A, 0xE9, 0xEC, 0x90, 0x67, 0x1F,  // .yZ...g.
                /* 0250 */  0x30, 0x8D, 0x82, 0x2B, 0xB4, 0xE9, 0x53, 0xA3,  // 0..+..S.
                /* 0258 */  0x51, 0xAB, 0x06, 0x65, 0x6A, 0x94, 0x69, 0x50,  // Q..ej.iP
                /* 0260 */  0xAB, 0x4F, 0xA5, 0xC6, 0x8C, 0xFD, 0x74, 0x2C,  // .O....t,
                /* 0268 */  0xED, 0x75, 0xA0, 0xE3, 0x81, 0xA5, 0xBD, 0x13,  // .u......
                /* 0270 */  0xF4, 0xFF, 0x3F, 0x28, 0x38, 0x18, 0x08, 0x8D,  // ..?(8...
                /* 0278 */  0x44, 0x27, 0x10, 0xFF, 0xFF, 0x01               // D'....
            })
        }

        Device (WMI8)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Name (_WDG, Buffer (0x78)
            {
                /* 0000 */  0x9A, 0x9F, 0x76, 0xB8, 0x91, 0x6D, 0x87, 0x42,  // ..v..m.B
                /* 0008 */  0x94, 0xB1, 0x25, 0xBA, 0x25, 0xF7, 0x69, 0x06,  // ..%.%.i.
                /* 0010 */  0x52, 0x51, 0x01, 0x02, 0x9B, 0x9F, 0x76, 0xB8,  // RQ....v.
                /* 0018 */  0x91, 0x6D, 0x87, 0x42, 0x94, 0xB1, 0x25, 0xBA,  // .m.B..%.
                /* 0020 */  0x25, 0xF7, 0x69, 0x06, 0x52, 0x50, 0x01, 0x02,  // %.i.RP..
                /* 0028 */  0x9C, 0x9F, 0x76, 0xB8, 0x91, 0x6D, 0x87, 0x42,  // ..v..m.B
                /* 0030 */  0x94, 0xB1, 0x25, 0xBA, 0x25, 0xF7, 0x69, 0x06,  // ..%.%.i.
                /* 0038 */  0x4C, 0x51, 0x01, 0x02, 0x9D, 0x9F, 0x76, 0xB8,  // LQ....v.
                /* 0040 */  0x91, 0x6D, 0x87, 0x42, 0x94, 0xB1, 0x25, 0xBA,  // .m.B..%.
                /* 0048 */  0x25, 0xF7, 0x69, 0x06, 0x4C, 0x50, 0x01, 0x02,  // %.i.LP..
                /* 0050 */  0xAF, 0x9F, 0x76, 0xB8, 0x91, 0x6D, 0x87, 0x42,  // ..v..m.B
                /* 0058 */  0x94, 0xB1, 0x25, 0xBA, 0x25, 0xF7, 0x69, 0x06,  // ..%.%.i.
                /* 0060 */  0xD1, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,  // ....!...
                /* 0068 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0070 */  0xC9, 0x06, 0x29, 0x10, 0x43, 0x45, 0x01, 0x00   // ..).CE..
            })
            Method (WMRQ, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                RQBF = Arg2
                WMIS (0x16, Zero)
                Release (\_SB.WMI1.MWMI)
                Return (RQSC) /* \_SB_.RQSC */
            }

            Method (WMRP, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                WMIS (0x16, One)
                Release (\_SB.WMI1.MWMI)
                Return (RPRT) /* \_SB_.RPRT */
            }

            Method (WMLQ, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                EQBF = Arg2
                WMIS (0x16, 0x02)
                Release (\_SB.WMI1.MWMI)
                Return (EQRT) /* \_SB_.EQRT */
            }

            Method (WMLP, 3, NotSerialized)
            {
                Acquire (\_SB.WMI1.MWMI, 0xFFFF)
                CreateByteField (Arg2, Zero, ERQ1)
                CreateByteField (Arg2, One, ERQ2)
                EPIN = ERQ1 /* \_SB_.WMI8.WMLP.ERQ1 */
                EPSN = ERQ2 /* \_SB_.WMI8.WMLP.ERQ2 */
                WMIS (0x16, 0x03)
                Release (\_SB.WMI1.MWMI)
                Return (EPRT) /* \_SB_.EPRT */
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xD0))
                {
                    Return (Arg0)
                }

                Return (Zero)
            }

            Name (WQCE, Buffer (0x0853)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x43, 0x08, 0x00, 0x00, 0xF8, 0x30, 0x00, 0x00,  // C....0..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0x5B, 0x97, 0x00, 0x01, 0x06, 0x18, 0x42,  // .[.....B
                /* 0020 */  0x10, 0x0D, 0x10, 0x8A, 0x0C, 0x21, 0x02, 0x0B,  // .....!..
                /* 0028 */  0x83, 0x50, 0x48, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PH...EA
                /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                /* 0048 */  0x31, 0x0C, 0x88, 0x14, 0x40, 0x48, 0x24, 0x84,  // 1...@H$.
                /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
                /* 0058 */  0x01, 0x08, 0x1D, 0x0A, 0x90, 0x29, 0xC0, 0xA0,  // .....)..
                /* 0060 */  0x00, 0xA7, 0x08, 0x22, 0x88, 0xD2, 0xB2, 0x00,  // ..."....
                /* 0068 */  0xDD, 0x02, 0x7C, 0x0B, 0xD0, 0x0E, 0x21, 0xB4,  // ..|...!.
                /* 0070 */  0x16, 0x61, 0x24, 0x7A, 0x0E, 0xC2, 0x38, 0x88,  // .a$z..8.
                /* 0078 */  0x60, 0x25, 0x03, 0x09, 0xF6, 0x10, 0xB0, 0x62,  // `%.....b
                /* 0080 */  0x86, 0x80, 0xD2, 0x39, 0x03, 0xD9, 0x84, 0xD4,  // ...9....
                /* 0088 */  0x10, 0x0A, 0x45, 0x11, 0x6A, 0x94, 0x04, 0xC7,  // ..E.j...
                /* 0090 */  0x74, 0x08, 0x11, 0x8E, 0xA9, 0x5C, 0x7C, 0x4D,  // t....\|M
                /* 0098 */  0xA0, 0xE6, 0x31, 0xC8, 0xBA, 0x00, 0xD9, 0xE3,  // ..1.....
                /* 00A0 */  0xA2, 0x23, 0xE0, 0x01, 0x4D, 0x80, 0xB0, 0x08,  // .#..M...
                /* 00A8 */  0xAB, 0x94, 0x4C, 0x07, 0x30, 0x98, 0x01, 0x5B,  // ..L.0..[
                /* 00B0 */  0xCE, 0x48, 0x51, 0xC0, 0xF6, 0x3A, 0x11, 0x99,  // .HQ..:..
                /* 00B8 */  0x1C, 0x26, 0x95, 0x04, 0x87, 0x1A, 0xA4, 0x25,  // .&.....%
                /* 00C0 */  0x0A, 0x30, 0x3F, 0x35, 0x4D, 0xA4, 0x6D, 0x01,  // .0?5M.m.
                /* 00C8 */  0xA6, 0x07, 0x27, 0x48, 0x26, 0x6D, 0x28, 0xA8,  // ..'H&m(.
                /* 00D0 */  0x91, 0x7B, 0x5A, 0x27, 0xE5, 0x79, 0x46, 0x3C,  // .{Z'.yF<
                /* 00D8 */  0x28, 0xC3, 0x24, 0xF0, 0x28, 0x22, 0x1B, 0x8D,  // (.$.("..
                /* 00E0 */  0x43, 0x63, 0x87, 0xE1, 0x51, 0x07, 0x3B, 0x88,  // Cc..Q.;.
                /* 00E8 */  0xC3, 0x38, 0xBC, 0xC8, 0x09, 0x3C, 0xA1, 0x13,  // .8...<..
                /* 00F0 */  0x3D, 0xC8, 0x37, 0x82, 0xE2, 0x51, 0x85, 0xD1,  // =.7..Q..
                /* 00F8 */  0x1C, 0x14, 0x99, 0xF9, 0x51, 0x63, 0xC7, 0x14,  // ....Qc..
                /* 0100 */  0xF6, 0x99, 0x20, 0xF6, 0x51, 0x9C, 0x46, 0xE1,  // .. .Q.F.
                /* 0108 */  0x83, 0x15, 0xC6, 0x11, 0x1C, 0x57, 0x82, 0x97,  // .....W..
                /* 0110 */  0x00, 0xBC, 0xA0, 0x53, 0x00, 0xC1, 0xA8, 0x14,  // ...S....
                /* 0118 */  0x47, 0xFF, 0x7F, 0xE3, 0xE3, 0x16, 0xB6, 0x71,  // G......q
                /* 0120 */  0x03, 0x1D, 0x2A, 0x03, 0x89, 0x11, 0x29, 0x50,  // ..*...)P
                /* 0128 */  0xE4, 0xF8, 0x61, 0x13, 0x78, 0x44, 0x87, 0x82,  // ..a.xD..
                /* 0130 */  0x91, 0x01, 0x21, 0x8F, 0x02, 0xAC, 0x82, 0x6A,  // ..!....j
                /* 0138 */  0x2E, 0x09, 0xEC, 0x5E, 0x80, 0x42, 0x01, 0xE2,  // ...^.B..
                /* 0140 */  0x04, 0x78, 0x13, 0xA0, 0x6D, 0x54, 0xD2, 0x08,  // .x..mT..
                /* 0148 */  0xA1, 0x13, 0x41, 0x5B, 0x30, 0x82, 0x8B, 0xD2,  // ..A[0...
                /* 0150 */  0x18, 0x8A, 0xC6, 0x56, 0x19, 0x1E, 0x41, 0x09,  // ...V..A.
                /* 0158 */  0x14, 0x26, 0x6A, 0x28, 0x23, 0xB5, 0x86, 0x22,  // .&j(#.."
                /* 0160 */  0xD0, 0x20, 0x46, 0x8E, 0xCE, 0x26, 0x19, 0xA3,  // . F..&..
                /* 0168 */  0xFD, 0x41, 0x90, 0x90, 0x27, 0x02, 0x49, 0x00,  // .A..'.I.
                /* 0170 */  0x51, 0xA4, 0xD1, 0xA0, 0xCE, 0x0A, 0x3E, 0x15,  // Q.....>.
                /* 0178 */  0x78, 0x34, 0x27, 0x78, 0x6A, 0x9E, 0x22, 0x3F,  // x4'xj."?
                /* 0180 */  0x2F, 0x3C, 0x0E, 0x78, 0xE0, 0xEC, 0x9E, 0xE0,  // /<.x....
                /* 0188 */  0x1F, 0x82, 0xCF, 0x07, 0x78, 0xD7, 0x80, 0xBA,  // ....x...
                /* 0190 */  0x18, 0x3C, 0x16, 0xB0, 0x69, 0x86, 0xC3, 0x0C,  // .<..i...
                /* 0198 */  0xD1, 0x43, 0x0F, 0x77, 0x02, 0x47, 0xCA, 0x00,  // .C.w.G..
                /* 01A0 */  0x7D, 0xD2, 0xF0, 0x89, 0x00, 0x37, 0xF2, 0x93,  // }....7..
                /* 01A8 */  0x39, 0xE6, 0x52, 0x05, 0x98, 0x3D, 0x1A, 0xE8,  // 9.R..=..
                /* 01B0 */  0x18, 0xE1, 0xA3, 0x06, 0xBB, 0x05, 0x9C, 0x4F,  // .......O
                /* 01B8 */  0xCF, 0x90, 0x44, 0xFE, 0x20, 0x50, 0x23, 0x33,  // ..D. P#3
                /* 01C0 */  0xB4, 0x87, 0xF9, 0xC6, 0x61, 0xC8, 0xA7, 0x84,  // ....a...
                /* 01C8 */  0xC3, 0x62, 0x62, 0x8F, 0x1C, 0x74, 0x3C, 0xE0,  // .bb..t<.
                /* 01D0 */  0xBF, 0x89, 0x3C, 0x65, 0xF8, 0xCE, 0xE0, 0xF9,  // ..<e....
                /* 01D8 */  0x7A, 0x18, 0xEC, 0x18, 0x02, 0x0C, 0x2E, 0x0C,  // z.......
                /* 01E0 */  0xFF, 0xFF, 0x17, 0x06, 0x1C, 0x81, 0x8F, 0x22,  // ......."
                /* 01E8 */  0xC0, 0x43, 0xF0, 0x13, 0x44, 0x87, 0x17, 0x8B,  // .C..D...
                /* 01F0 */  0x05, 0x91, 0x8D, 0xF5, 0x7A, 0x1C, 0x34, 0xB2,  // ....z.4.
                /* 01F8 */  0x85, 0x61, 0x81, 0xF1, 0x14, 0xE0, 0x43, 0xC6,  // .a....C.
                /* 0200 */  0x53, 0x40, 0xB0, 0x87, 0x0C, 0x9F, 0x08, 0x3C,  // S@.....<
                /* 0208 */  0x65, 0x13, 0x8C, 0x33, 0x06, 0x8D, 0xC4, 0x07,  // e..3....
                /* 0210 */  0x01, 0x07, 0x81, 0x51, 0xF0, 0x07, 0x83, 0x06,  // ...Q....
                /* 0218 */  0xE7, 0xB1, 0x38, 0x2A, 0x8C, 0xE0, 0x0C, 0x62,  // ..8*...b
                /* 0220 */  0x36, 0x09, 0xC8, 0x0B, 0x21, 0x25, 0x87, 0x08,  // 6...!%..
                /* 0228 */  0xF4, 0x14, 0xCF, 0xE6, 0xB9, 0xE1, 0x14, 0xCE,  // ........
                /* 0230 */  0xE1, 0x95, 0xC0, 0xB3, 0x62, 0xD7, 0x84, 0xD7,  // ....b...
                /* 0238 */  0x0D, 0x13, 0xCC, 0x05, 0xA1, 0x23, 0x85, 0x47,  // .....#.G
                /* 0240 */  0xEC, 0xE3, 0x01, 0x3F, 0xB7, 0xF8, 0xBE, 0xE0,  // ...?....
                /* 0248 */  0x09, 0xF8, 0x7A, 0xF1, 0x3C, 0x02, 0x96, 0x91,  // ..z.<...
                /* 0250 */  0x60, 0x97, 0x7C, 0x26, 0x58, 0x35, 0xB7, 0x0B,  // `.|&X5..
                /* 0258 */  0x3A, 0x0F, 0x7E, 0x0B, 0xE1, 0x04, 0x3F, 0x45,  // :.~...?E
                /* 0260 */  0x3A, 0x34, 0x40, 0x1E, 0xF7, 0x29, 0x79, 0x06,  // :4@..)y.
                /* 0268 */  0x2F, 0x21, 0xAF, 0x1F, 0xEF, 0x38, 0x82, 0x90,  // /!...8..
                /* 0270 */  0x93, 0x79, 0xA2, 0x74, 0x80, 0xC8, 0xE7, 0xA5,  // .y.t....
                /* 0278 */  0x40, 0x08, 0x47, 0xF5, 0x8C, 0x62, 0x82, 0x79,  // @.G..b.y
                /* 0280 */  0x06, 0x09, 0xED, 0xFF, 0x3F, 0x48, 0x3E, 0x03,  // ....?H>.
                /* 0288 */  0x0F, 0x12, 0x1C, 0xB3, 0xC0, 0x0E, 0x10, 0xD6,  // ........
                /* 0290 */  0x71, 0xC0, 0x03, 0x04, 0x8F, 0xB3, 0x23, 0x8B,  // q.....#.
                /* 0298 */  0x08, 0x66, 0x1E, 0x20, 0xFA, 0xF1, 0xE0, 0x13,  // .f. ....
                /* 02A0 */  0x83, 0xEF, 0x29, 0x67, 0x1F, 0xD4, 0xC7, 0x1F,  // ..)g....
                /* 02A8 */  0x36, 0x7E, 0x6C, 0xB2, 0x49, 0x42, 0x57, 0x39,  // 6~l.IBW9
                /* 02B0 */  0x49, 0xD0, 0x0C, 0x05, 0xC6, 0xCD, 0x00, 0x2C,  // I......,
                /* 02B8 */  0xB7, 0x09, 0xCF, 0x14, 0x6C, 0x2A, 0x96, 0x2D,  // ....l*.-
                /* 02C0 */  0x23, 0x67, 0x0E, 0x7A, 0x78, 0xE1, 0x07, 0x07,  // #g.zx...
                /* 02C8 */  0xEC, 0x94, 0xD9, 0xE1, 0xC2, 0xB3, 0x84, 0x27,  // .......'
                /* 02D0 */  0xF0, 0x1C, 0x85, 0x3E, 0x42, 0xB1, 0x5B, 0x49,  // ...>B.[I
                /* 02D8 */  0x88, 0xEA, 0x47, 0xA7, 0xF9, 0x9C, 0xE8, 0x63,  // ..G....c
                /* 02E0 */  0x06, 0xEC, 0x01, 0xE0, 0x46, 0xE2, 0xFF, 0xFF,  // ....F...
                /* 02E8 */  0xAC, 0xE1, 0x81, 0x85, 0x7F, 0x15, 0xF2, 0xDE,  // ........
                /* 02F0 */  0x9E, 0x8D, 0xCE, 0xF0, 0x69, 0xC1, 0xD7, 0x2B,  // ....i..+
                /* 02F8 */  0x36, 0x66, 0x58, 0x48, 0x96, 0x35, 0x66, 0xD0,  // 6fXH.5f.
                /* 0300 */  0x1C, 0x9A, 0x12, 0xD4, 0x77, 0xBF, 0x01, 0x05,  // ....w...
                /* 0308 */  0x90, 0xCF, 0x32, 0x3E, 0x18, 0xBC, 0xCE, 0xB0,  // ..2>....
                /* 0310 */  0x29, 0x84, 0x08, 0x13, 0xCD, 0xE8, 0x3C, 0xCE,  // ).....<.
                /* 0318 */  0x21, 0x40, 0x87, 0x15, 0x1E, 0x00, 0x46, 0xC7,  // !@....F.
                /* 0320 */  0x09, 0x83, 0x78, 0x4E, 0x0E, 0x0B, 0x21, 0x23,  // ..xN..!#
                /* 0328 */  0x97, 0x08, 0xD4, 0x58, 0x0D, 0x7F, 0x92, 0x86,  // ...X....
                /* 0330 */  0x38, 0xA5, 0x93, 0x7D, 0x86, 0xF1, 0x5D, 0xC1,  // 8..}..].
                /* 0338 */  0x04, 0x8E, 0x75, 0x85, 0xA0, 0xE7, 0x27, 0x3C,  // ..u...'<
                /* 0340 */  0x62, 0xD4, 0x37, 0x0D, 0x4F, 0xC4, 0xC3, 0x07,  // b.7.O...
                /* 0348 */  0xCF, 0x48, 0x70, 0xE3, 0x3F, 0x13, 0xCC, 0x38,  // .Hp.?..8
                /* 0350 */  0x3C, 0x7C, 0x3E, 0x04, 0x5F, 0x55, 0xF8, 0x70,  // <|>._U.p
                /* 0358 */  0x3C, 0x7D, 0x70, 0x09, 0x1E, 0x26, 0x94, 0x0B,  // <}p..&..
                /* 0360 */  0x86, 0x27, 0xE3, 0x31, 0xC5, 0xAC, 0xF5, 0xF4,  // .'.1....
                /* 0368 */  0x46, 0xAE, 0x3F, 0x3E, 0xC5, 0xB1, 0x51, 0x7B,  // F.?>..Q{
                /* 0370 */  0x20, 0x70, 0xFF, 0xFF, 0x03, 0xC1, 0x0F, 0x15,  //  p......
                /* 0378 */  0x77, 0x2D, 0x00, 0x23, 0x3C, 0x66, 0x68, 0xBE,  // w-.#<fh.
                /* 0380 */  0x78, 0x78, 0x3C, 0x3E, 0x05, 0xF0, 0xB1, 0x79,  // xx<>...y
                /* 0388 */  0x3A, 0x0F, 0x17, 0x07, 0xFF, 0x88, 0xE5, 0xEB,  // :.......
                /* 0390 */  0x99, 0x67, 0xE3, 0xD3, 0x92, 0x4F, 0x02, 0x0C,  // .g...O..
                /* 0398 */  0xD6, 0x23, 0xE7, 0xB0, 0x3E, 0x67, 0xB0, 0x3B,  // .#..>g.;
                /* 03A0 */  0x1D, 0x0E, 0x3F, 0xAC, 0x47, 0xE9, 0x10, 0x07,  // ..?.G...
                /* 03A8 */  0x44, 0x80, 0x06, 0xC0, 0x51, 0x63, 0xFA, 0x52,  // D...Qc.R
                /* 03B0 */  0xE4, 0x0B, 0x22, 0xBC, 0x03, 0x22, 0xDC, 0xFF,  // ..".."..
                /* 03B8 */  0xFF, 0x01, 0x11, 0x8F, 0xF3, 0x80, 0x08, 0xF0,  // ........
                /* 03C0 */  0xF5, 0xC2, 0x80, 0x3B, 0x20, 0x82, 0xF1, 0xFF,  // ...; ...
                /* 03C8 */  0x7F, 0x40, 0x84, 0x27, 0xEA, 0x80, 0x48, 0x05,  // .@.'..H.
                /* 03D0 */  0x1D, 0x10, 0x51, 0x83, 0x7A, 0xF6, 0xD1, 0x01,  // ..Q.z...
                /* 03D8 */  0x11, 0x44, 0xC3, 0xC2, 0x5D, 0x10, 0xE1, 0x1D,  // .D..]...
                /* 03E0 */  0x5D, 0x74, 0x42, 0xA4, 0x10, 0x96, 0x0A, 0x23,  // ]tB....#
                /* 03E8 */  0xA1, 0x10, 0x3A, 0x25, 0x71, 0x69, 0x70, 0x14,  // ..:%qip.
                /* 03F0 */  0xC4, 0x1E, 0x40, 0x14, 0xFA, 0x84, 0x08, 0xBA,  // ..@.....
                /* 03F8 */  0x70, 0xC7, 0x24, 0x50, 0x0C, 0x1E, 0x7F, 0x44,  // p.$P...D
                /* 0400 */  0x04, 0xEB, 0x41, 0x09, 0xE6, 0xF9, 0x9B, 0x9F,  // ..A.....
                /* 0408 */  0x11, 0xC1, 0x44, 0x30, 0xE6, 0x9D, 0x0F, 0x0D,  // ..D0....
                /* 0410 */  0xED, 0xE3, 0x20, 0x96, 0x60, 0xA8, 0x71, 0x82,  // .. .`.q.
                /* 0418 */  0xE2, 0x90, 0xE4, 0x71, 0xC2, 0xFF, 0xFF, 0x9F,  // ...q....
                /* 0420 */  0x12, 0x61, 0x8C, 0x11, 0xE6, 0x99, 0xC0, 0x63,  // .a.....c
                /* 0428 */  0x04, 0xCF, 0x65, 0x8F, 0x9D, 0x4A, 0x75, 0x4D,  // ..e..JuM
                /* 0430 */  0x04, 0x65, 0xBC, 0x71, 0x82, 0xE2, 0x4C, 0xE1,  // .e.q..L.
                /* 0438 */  0x7B, 0x22, 0xB0, 0x18, 0x2C, 0xCC, 0xE3, 0x8A,  // {"..,...
                /* 0440 */  0x07, 0x0B, 0x3E, 0x21, 0x27, 0x45, 0x50, 0xC4,  // ..>!'EP.
                /* 0448 */  0x3E, 0x29, 0xD2, 0xC3, 0x1C, 0x78, 0x8E, 0x8A,  // >)...x..
                /* 0450 */  0xC0, 0xED, 0xFF, 0x7F, 0x54, 0x84, 0x37, 0x6A,  // ....T.7j
                /* 0458 */  0x78, 0x57, 0x45, 0xF0, 0x1D, 0x09, 0x01, 0x7E,  // xWE....~
                /* 0460 */  0xFE, 0xFF, 0x8F, 0x84, 0xE0, 0xD7, 0xF2, 0xE6,  // ........
                /* 0468 */  0x32, 0x81, 0x02, 0xD1, 0x48, 0x3E, 0x35, 0x85,  // 2...H>5.
                /* 0470 */  0xF1, 0x91, 0x10, 0x70, 0x15, 0xE1, 0x48, 0x08,  // ...p..H.
                /* 0478 */  0xFA, 0x43, 0xE0, 0x69, 0x1B, 0xC7, 0xB7, 0x37,  // .C.i...7
                /* 0480 */  0x9F, 0x01, 0x7C, 0x92, 0x31, 0xF4, 0x33, 0xC9,  // ..|.1.3.
                /* 0488 */  0x93, 0x21, 0xBB, 0xE2, 0x63, 0x2E, 0x86, 0xF0,  // .!..c...
                /* 0490 */  0x4E, 0x86, 0x60, 0x1B, 0xCD, 0x93, 0x21, 0xD8,  // N.`...!.
                /* 0498 */  0xE3, 0x9E, 0x0C, 0x51, 0xFF, 0xFF, 0x93, 0x21,  // ...Q...!
                /* 04A0 */  0xC0, 0x8D, 0x53, 0x01, 0xEE, 0x64, 0x08, 0x5E,  // ..S..d.^
                /* 04A8 */  0x90, 0xF7, 0x06, 0x76, 0x6E, 0xC0, 0x5C, 0x1B,  // ...vn.\.
                /* 04B0 */  0xD8, 0xB1, 0x01, 0x7B, 0x3C, 0x04, 0x26, 0x19,  // ...{<.&.
                /* 04B8 */  0x56, 0xA0, 0x63, 0x89, 0xF5, 0x83, 0xE8, 0x78,  // V.c....x
                /* 04C0 */  0xC8, 0x4F, 0x2C, 0x56, 0x01, 0xA4, 0xB1, 0xC1,  // .O,V....
                /* 04C8 */  0xF9, 0xFF, 0x1F, 0x0F, 0xB1, 0x63, 0x03, 0xC7,  // .....c..
                /* 04D0 */  0x19, 0x11, 0x66, 0xAA, 0x97, 0xA1, 0xC6, 0xE3,  // ..f.....
                /* 04D8 */  0x33, 0x81, 0xF3, 0xC0, 0x28, 0xFD, 0xDB, 0x41,  // 3...(..A
                /* 04E0 */  0x67, 0x44, 0x9E, 0x17, 0x46, 0x70, 0x06, 0xF1,  // gD..Fp..
                /* 04E8 */  0x79, 0xCB, 0x81, 0x0F, 0x40, 0x68, 0x3D, 0xE7,  // y...@h=.
                /* 04F0 */  0x09, 0x48, 0xA3, 0x79, 0x9E, 0x78, 0x2B, 0x78,  // .H.y.x+x
                /* 04F8 */  0x56, 0x61, 0xB9, 0x6E, 0x46, 0xF4, 0xDA, 0x0F,  // Va.nF...
                /* 0500 */  0xEF, 0x8A, 0x08, 0x9E, 0x99, 0xE0, 0x57, 0x7E,  // ......W~
                /* 0508 */  0x28, 0xD8, 0x8B, 0x3E, 0x2C, 0x02, 0x1F, 0x90,  // (..>,...
                /* 0510 */  0xC0, 0x35, 0x50, 0x38, 0x27, 0x84, 0x47, 0x00,  // .5P8'.G.
                /* 0518 */  0x3E, 0x50, 0xE0, 0x36, 0x13, 0xFC, 0x40, 0x61,  // >P.6..@a
                /* 0520 */  0xFF, 0xFF, 0x07, 0xCA, 0x0F, 0x56, 0xE0, 0x4B,  // .....V.K
                /* 0528 */  0x7A, 0x26, 0x45, 0x6B, 0x39, 0xC3, 0xA1, 0xAE,  // z&Ek9...
                /* 0530 */  0x74, 0xD8, 0xAB, 0x25, 0x1F, 0x26, 0xBC, 0xAB,  // t..%.&..
                /* 0538 */  0x1D, 0x18, 0x07, 0x82, 0x1D, 0x24, 0xAC, 0x13,  // .....$..
                /* 0540 */  0x85, 0x75, 0x1D, 0x47, 0x41, 0xA6, 0xE1, 0x7A,  // .u.GA..z
                /* 0548 */  0x88, 0x9E, 0xA7, 0xCF, 0x1A, 0xAF, 0x73, 0x9E,  // ......s.
                /* 0550 */  0xC9, 0xF1, 0xF0, 0x63, 0x02, 0x3B, 0x60, 0x78,  // ...c.;`x
                /* 0558 */  0x8E, 0xF0, 0xD4, 0x1D, 0x0F, 0x41, 0x31, 0x74,  // .....A1t
                /* 0560 */  0x58, 0x97, 0x43, 0xF0, 0x0F, 0x19, 0xD6, 0xE1,  // X.C.....
                /* 0568 */  0x10, 0xFE, 0xFF, 0xFF, 0x98, 0x80, 0xD7, 0x77,  // .......w
                /* 0570 */  0x9C, 0x03, 0x39, 0x3A, 0x0F, 0x74, 0x5D, 0x41,  // ..9:.t]A
                /* 0578 */  0x45, 0xB8, 0xAE, 0x50, 0x10, 0x4F, 0xDF, 0xF7,  // E..P.O..
                /* 0580 */  0x4D, 0x5F, 0x3B, 0x70, 0x9F, 0x01, 0x5F, 0x66,  // M_;p.._f
                /* 0588 */  0xF0, 0xF7, 0x43, 0x1C, 0x81, 0xAF, 0xC8, 0xE0,  // ..C.....
                /* 0590 */  0xB8, 0xB4, 0x82, 0xE7, 0x66, 0x06, 0xE7, 0xEE,  // ....f...
                /* 0598 */  0x88, 0xBD, 0x39, 0x02, 0x13, 0x31, 0xA7, 0x08,  // ..9..1..
                /* 05A0 */  0x8F, 0x15, 0x75, 0xA1, 0xF2, 0x9D, 0xE4, 0x7C,  // ..u....|
                /* 05A8 */  0xDE, 0xE7, 0x02, 0x3E, 0x9A, 0xE0, 0x6F, 0xC4,  // ...>..o.
                /* 05B0 */  0xBE, 0xDB, 0xE2, 0x4E, 0x5C, 0x3C, 0xEA, 0x78,  // ...N\<.x
                /* 05B8 */  0x41, 0x71, 0x80, 0xF0, 0x78, 0xC1, 0x31, 0x1E,  // Aq..x.1.
                /* 05C0 */  0x3E, 0x59, 0xCF, 0x87, 0xFD, 0xFF, 0x6F, 0x2E,  // >Y....o.
                /* 05C8 */  0xB0, 0x70, 0xCE, 0xC9, 0x98, 0xBE, 0xC7, 0x1A,  // .p......
                /* 05D0 */  0xF8, 0xAC, 0xD9, 0xB0, 0x61, 0x1E, 0x13, 0x7C,  // ....a..|
                /* 05D8 */  0x6B, 0x05, 0x9C, 0x1E, 0x41, 0x7C, 0x6B, 0x05,  // k...A|k.
                /* 05E0 */  0xEC, 0xFE, 0xFF, 0x6F, 0xAD, 0xC0, 0x4A, 0x83,  // ...o..J.
                /* 05E8 */  0x0A, 0x50, 0x16, 0x84, 0x46, 0x82, 0xA9, 0x29,  // .P..F..)
                /* 05F0 */  0x8C, 0x6F, 0xAD, 0x80, 0xAB, 0x73, 0x84, 0x6F,  // .o...s.o
                /* 05F8 */  0xAD, 0xC0, 0xEB, 0xC6, 0x0A, 0x1C, 0xB0, 0xDE,  // ........
                /* 0600 */  0x58, 0xC1, 0x1E, 0xF4, 0xC6, 0x4A, 0xFE, 0xFF,  // X....J..
                /* 0608 */  0x37, 0x56, 0x80, 0x21, 0x67, 0x0F, 0xDF, 0x58,  // 7V.!g..X
                /* 0610 */  0x81, 0x17, 0x81, 0xAF, 0xAB, 0xC0, 0x23, 0xC9,  // ......#.
                /* 0618 */  0x3B, 0x44, 0xE7, 0x11, 0xA7, 0x00, 0xD1, 0x75,  // ;D.....u
                /* 0620 */  0x95, 0xA3, 0xBF, 0x98, 0x0B, 0x48, 0x03, 0x83,  // .....H..
                /* 0628 */  0xF9, 0xFF, 0xBF, 0xAE, 0xC2, 0x3E, 0xAB, 0xC2,  // .....>..
                /* 0630 */  0xCB, 0xF8, 0x58, 0xD2, 0x55, 0x95, 0xA7, 0x83,  // ..X.U...
                /* 0638 */  0x91, 0x22, 0x12, 0x1D, 0xD6, 0xB8, 0x06, 0x18,  // ."......
                /* 0640 */  0x9D, 0x58, 0x08, 0x88, 0x8E, 0x0E, 0xBE, 0xAA,  // .X......
                /* 0648 */  0x02, 0xEC, 0xFC, 0xFF, 0x5F, 0x1A, 0x81, 0x67,  // ...._..g
                /* 0650 */  0x94, 0x4B, 0x23, 0x4A, 0xFC, 0xA5, 0x91, 0x82,  // .K#J....
                /* 0658 */  0xF8, 0xFA, 0xE6, 0xD0, 0x67, 0x58, 0xF4, 0x35,  // ....gX.5
                /* 0660 */  0xC6, 0x73, 0x78, 0x3B, 0x78, 0x87, 0x79, 0x9F,  // .sx;x.y.
                /* 0668 */  0xF3, 0xF9, 0xC4, 0x57, 0x4F, 0xEC, 0x9D, 0x11,  // ...WO...
                /* 0670 */  0x1C, 0x27, 0x00, 0xF0, 0x0C, 0x05, 0x7B, 0x8E,  // .'....{.
                /* 0678 */  0xC5, 0x5F, 0xDB, 0x60, 0x5E, 0x37, 0x7C, 0x85,  // ._.`^7|.
                /* 0680 */  0x81, 0x7F, 0x90, 0xC5, 0x42, 0xEA, 0x22, 0x8B,  // ....B.".
                /* 0688 */  0x86, 0xF6, 0x80, 0xB0, 0xF7, 0x4E, 0x36, 0x6A,  // .....N6j
                /* 0690 */  0xDF, 0xF5, 0xC0, 0x73, 0x92, 0x85, 0x77, 0x00,  // ...s..w.
                /* 0698 */  0x80, 0x3B, 0x00, 0xDC, 0xFF, 0xFF, 0x2A, 0x0B,  // .;....*.
                /* 06A0 */  0xCE, 0x51, 0xC3, 0x3B, 0xCB, 0x82, 0xEF, 0xC6,  // .Q.;....
                /* 06A8 */  0x08, 0x78, 0xBA, 0xAD, 0x82, 0xEF, 0xC6, 0x08,  // .x......
                /* 06B0 */  0xB8, 0xFA, 0xFF, 0xDF, 0x18, 0x81, 0x5B, 0x90,  // ......[.
                /* 06B8 */  0xE5, 0x9B, 0x40, 0x01, 0x68, 0x24, 0x1D, 0x06,  // ..@.h$..
                /* 06C0 */  0x75, 0x63, 0x04, 0x5C, 0x8D, 0xD1, 0x37, 0x46,  // uc.\..7F
                /* 06C8 */  0x70, 0xDF, 0x17, 0x71, 0xB7, 0x45, 0x7E, 0x33,  // p..q.E~3
                /* 06D0 */  0x7A, 0x42, 0x33, 0xFA, 0x43, 0xC8, 0xC3, 0x9F,  // zB3.C...
                /* 06D8 */  0x6F, 0x8B, 0xE0, 0x3A, 0x23, 0x84, 0x78, 0x5B,  // o..:#.x[
                /* 06E0 */  0x04, 0x7B, 0xF4, 0xC7, 0x82, 0x0E, 0x04, 0xBE,  // .{......
                /* 06E8 */  0x2D, 0xF2, 0xFF, 0xFF, 0x6D, 0x11, 0xE0, 0x45,  // -...m..E
                /* 06F0 */  0x70, 0x08, 0x39, 0x39, 0xA1, 0xA0, 0xCF, 0x08,  // p.99....
                /* 06F8 */  0x98, 0xA3, 0x18, 0x36, 0xE2, 0xC9, 0x85, 0x8A,  // ...6....
                /* 0700 */  0x3A, 0x77, 0xA0, 0x8E, 0x45, 0x98, 0x1B, 0x10,  // :w..E...
                /* 0708 */  0x3F, 0x76, 0x60, 0xC6, 0x06, 0xFF, 0xBA, 0xE0,  // ?v`.....
                /* 0710 */  0x2B, 0x3E, 0xF8, 0x26, 0x85, 0x3D, 0x57, 0x81,  // +>.&.=W.
                /* 0718 */  0xE9, 0xFF, 0xEF, 0xEC, 0xE8, 0xA0, 0xAB, 0x23,  // .......#
                /* 0720 */  0x3F, 0xC5, 0xC0, 0x3F, 0x3E, 0xC2, 0x19, 0x35,  // ?..?>..5
                /* 0728 */  0xEE, 0x96, 0x81, 0xBB, 0x65, 0x02, 0x8F, 0x31,  // ....e..1
                /* 0730 */  0xE3, 0xCE, 0x13, 0x1E, 0x02, 0x1F, 0xC0, 0x93,  // ........
                /* 0738 */  0xC7, 0x29, 0xFA, 0x94, 0x73, 0x62, 0xB8, 0xD3,  // .)..sb..
                /* 0740 */  0x00, 0x9F, 0x15, 0xE6, 0xB0, 0x83, 0x53, 0x68,  // ......Sh
                /* 0748 */  0xD3, 0xA7, 0x46, 0xA3, 0x56, 0x0D, 0xCA, 0xD4,  // ..F.V...
                /* 0750 */  0x28, 0xD3, 0xA0, 0x56, 0x9F, 0x4A, 0x8D, 0x19,  // (..V.J..
                /* 0758 */  0xF3, 0x77, 0x20, 0xF0, 0xE3, 0x40, 0xA7, 0x03,  // .w ..@..
                /* 0760 */  0x87, 0x00, 0xA1, 0xFA, 0xDF, 0x63, 0x3A, 0x1F,  // .....c:.
                /* 0768 */  0x39, 0x0C, 0x88, 0x80, 0xAC, 0xEF, 0xED, 0x21,  // 9......!
                /* 0770 */  0x20, 0x8B, 0x05, 0x11, 0x90, 0x25, 0x79, 0x00,  //  ....%y.
                /* 0778 */  0x62, 0xFA, 0x40, 0x04, 0xE4, 0x60, 0x20, 0x3A,  // b.@..` :
                /* 0780 */  0x25, 0x58, 0xD8, 0x4A, 0x04, 0x66, 0x95, 0x20,  // %X.J.f. 
                /* 0788 */  0x02, 0xB3, 0x68, 0x13, 0x40, 0x2C, 0x02, 0x88,  // ..h.@,..
                /* 0790 */  0x80, 0x1C, 0x19, 0x84, 0xC6, 0x7C, 0x2C, 0x08,  // .....|,.
                /* 0798 */  0xC4, 0x22, 0x6D, 0x80, 0x50, 0x1F, 0xA0, 0x4C,  // ."m.P..L
                /* 07A0 */  0x32, 0x88, 0x80, 0x2C, 0xE5, 0x3D, 0x20, 0x20,  // 2..,.=  
                /* 07A8 */  0x0B, 0x03, 0x11, 0x90, 0x25, 0xD0, 0x08, 0xC8,  // ....%...
                /* 07B0 */  0x82, 0x28, 0x04, 0xE4, 0x30, 0x20, 0x1A, 0x8C,  // .(..0 ..
                /* 07B8 */  0xC5, 0x3C, 0xFE, 0x04, 0x66, 0x69, 0x20, 0x02,  // .<..fi .
                /* 07C0 */  0x73, 0x70, 0x20, 0x2A, 0xE3, 0x75, 0x21, 0x20,  // sp *.u! 
                /* 07C8 */  0xCB, 0x06, 0xA1, 0xC2, 0xB5, 0x80, 0xB0, 0xD8,  // ........
                /* 07D0 */  0x20, 0x54, 0x89, 0x19, 0x50, 0x26, 0x0B, 0x44,  //  T..P&.D
                /* 07D8 */  0x40, 0xFE, 0xFF, 0x27, 0x07, 0xA2, 0x32, 0xDE,  // @..'..2.
                /* 07E0 */  0x8E, 0x02, 0x72, 0x42, 0x10, 0x01, 0x39, 0x2E,  // ..rB..9.
                /* 07E8 */  0x10, 0x15, 0xEA, 0x66, 0x30, 0x2C, 0x25, 0x88,  // ...f0,%.
                /* 07F0 */  0xC0, 0x1C, 0x19, 0x44, 0x60, 0xD6, 0x62, 0x07,  // ...D`.b.
                /* 07F8 */  0x88, 0x29, 0x03, 0x11, 0x90, 0x75, 0xFD, 0x36,  // .)...u.6
                /* 0800 */  0x35, 0x60, 0x02, 0x22, 0x20, 0x6B, 0xF0, 0x03,  // 5`." k..
                /* 0808 */  0xC4, 0x14, 0x81, 0x08, 0xC8, 0x09, 0x40, 0xA8,  // ......@.
                /* 0810 */  0x76, 0x45, 0xC3, 0xA1, 0x20, 0x34, 0xFE, 0x5B,  // vE.. 4.[
                /* 0818 */  0x49, 0xA0, 0xD6, 0x62, 0x09, 0x88, 0xC5, 0x05,  // I..b....
                /* 0820 */  0x11, 0x90, 0xB3, 0x03, 0x51, 0x41, 0x9E, 0x80,  // ....QA..
                /* 0828 */  0x98, 0x3C, 0x10, 0x01, 0x39, 0x1A, 0x88, 0x06,  // .<..9...
                /* 0830 */  0x65, 0x69, 0x6F, 0x11, 0x81, 0x59, 0x28, 0x88,  // eio..Y(.
                /* 0838 */  0xC0, 0x2C, 0xC3, 0x14, 0x10, 0x13, 0x05, 0xA2,  // .,......
                /* 0840 */  0x43, 0x02, 0x01, 0xA1, 0xB2, 0x1F, 0x57, 0x02,  // C.....W.
                /* 0848 */  0x71, 0x68, 0x10, 0x1A, 0xF6, 0xE1, 0x13, 0x84,  // qh......
                /* 0850 */  0xFC, 0xFF, 0x01                                 // ...
            })
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q7C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                Notify (\_SB.WMI8, 0xD1) // Hardware-Specific
            }
        }
    }

    Scope (\_SB.I2C7)
    {
        Mutex (MCPU, 0x00)
        Method (_Q1F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (One, 0x00020000))
            {
                Local1 = GECB (0x0D, 0x06, 0x02)
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = Local1
                    If ((_T_0 == Zero))
                    {
                        Local0 = 0x00050200
                        WECB (0xE1, 0x02, 0x02, Zero)
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Local0 = 0x00050201
                        WECB (0xE1, 0x02, 0x02, One)
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Local0 = 0x00050202
                        WECB (0xE1, 0x02, 0x02, 0x02)
                    }
                    Else
                    {
                        Local0 = 0x00050200
                        WECB (0xE1, 0x02, 0x02, Zero)
                    }

                    Break
                }

                Local0 |= 0x00200000
                \_SB.I2C7.HKEY.KBCS = Local0
                \_SB.I2C7.HKEY.MHKQ (0x1012)
            }
        }

        Method (_Q16, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (One, 0x40))
            {
                \_SB.I2C7.HKEY.MHKQ (0x1007)
            }
        }

        Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.DHKC)
            {
                \_SB.I2C7.HKEY.MHKQ (0x1004)
            }
            Else
            {
                Notify (\_SB.SLPB, 0x80) // Status Change
            }
        }

        Method (_Q64, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (One, 0x40000000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x131F)
            }
        }

        Method (_Q62, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (0x03, 0x00010000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x1311)
            }
        }

        Method (_Q65, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (0x03, 0x00020000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x1312)
            }
        }

        Method (_Q7A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (One, 0x80000000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x1320)
            }
        }

        Method (_Q79, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (0x03, 0x10000000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x131D)
            }
        }

        Method (_Q3C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If ((GECB (0xC4, Zero, One) == One))
            {
                If (((\_SB.I2C7.ECRD (0xCB) == 0x02) && (\_SB.I2C7.ECRD (0xC8) == Zero)))
                {
                    \_SB.I2C7.HKEY.DYTC (0x001F1001)
                }
            }
            Else
            {
                \_SB.I2C7.HKEY.DYTC (0x000F1001)
            }
        }

        Method (_Q26, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C7.HKEY.MHKQ (0x6040)
            ATMC ()
        }

        Method (_Q27, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C7.HKEY.MHKQ (0x6040)
            ATMC ()
        }

        Method (_Q2A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("LIDO")
            SCMS (0x21)
            \_SB.I2C7.HKEY.MHKQ (0x5002)
        }

        Method (_Q2B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("LIDC")
            \_SB.I2C7.HKEY.MHKQ (0x5001)
        }

        Method (_Q5A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF01, One)
        }

        Method (_Q5B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C6._DSM (\_SB.I2C6.DSME, Zero, \_SB.I2C6.EF02, One)
        }

        Method (_Q5C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Notify (\_SB.TZ40, 0x80) // Thermal Status Change
        }

        Method (_Q5D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            Notify (\_SB.TZ42, 0x80) // Thermal Status Change
        }

        Method (_Q2E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            ADBG ("Convertible Button")
            Local0 = GECB (0xC6, Zero, 0x04)
            If (((Local0 != Zero) && (Local0 <= 0x06)))
            {
                If ((Local0 != PMMD))
                {
                    PMMD = Local0
                    \_SB.I2C7.HKEY.MHKQ (0x60C0)
                }
            }

            If (((Local0 == Zero) || (Local0 >= 0x07)))
            {
                Local1 = One
            }
            ElseIf (((Local0 == 0x02) || (Local0 == 0x03)))
            {
                Local1 = 0x02
            }
            Else
            {
                Local1 = 0x03
            }

            If ((Local1 != LVMD))
            {
                LVMD = Local1
                Sleep (0x0A)
                \_SB.I2C7.HKEY.MHKQ (0x60F0)
            }
        }

        Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.I2C7.HKEY.MHKQ (0x8036)
        }

        Method (_Q7E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKA (0x03))
            {
                \_SB.I2C7.HKEY.MHKQ (0x131C)
            }
        }

        Method (_Q88, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            If (\_SB.I2C7.HKEY.MHKK (0x03, 0x04000000))
            {
                \_SB.I2C7.HKEY.MHKQ (0x131B)
            }
        }

        Method (QEXC, 0, Serialized)
        {
            Local0 = \_SB.I2C7.QEVT ()
            While (One)
            {
                Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                _T_0 = ToInteger (Local0)
                If ((_T_0 == Zero))
                {
                    Break
                }
                ElseIf ((_T_0 == 0x6A))
                {
                    \_SB.I2C7._Q6A ()
                }
                ElseIf ((_T_0 == 0x1F))
                {
                    \_SB.I2C7._Q1F ()
                }
                ElseIf ((_T_0 == 0x16))
                {
                    \_SB.I2C7._Q16 ()
                }
                ElseIf ((_T_0 == 0x13))
                {
                    \_SB.I2C7._Q13 ()
                }
                ElseIf ((_T_0 == 0x64))
                {
                    \_SB.I2C7._Q64 ()
                }
                ElseIf ((_T_0 == 0x62))
                {
                    \_SB.I2C7._Q62 ()
                }
                ElseIf ((_T_0 == 0x65))
                {
                    \_SB.I2C7._Q65 ()
                }
                ElseIf ((_T_0 == 0x79))
                {
                    \_SB.I2C7._Q79 ()
                }
                ElseIf ((_T_0 == 0x7A))
                {
                    \_SB.I2C7._Q7A ()
                }
                ElseIf ((_T_0 == 0x3C))
                {
                    \_SB.I2C7._Q3C ()
                }
                ElseIf ((_T_0 == 0x26))
                {
                    \_SB.I2C7._Q26 ()
                }
                ElseIf ((_T_0 == 0x27))
                {
                    \_SB.I2C7._Q27 ()
                }
                ElseIf ((_T_0 == 0x2A))
                {
                    \_SB.I2C7._Q2A ()
                }
                ElseIf ((_T_0 == 0x2B))
                {
                    \_SB.I2C7._Q2B ()
                }
                ElseIf ((_T_0 == 0x5A))
                {
                    \_SB.I2C7._Q5A ()
                }
                ElseIf ((_T_0 == 0x5B))
                {
                    \_SB.I2C7._Q5B ()
                }
                ElseIf ((_T_0 == 0x5C))
                {
                    \_SB.I2C7._Q5C ()
                }
                ElseIf ((_T_0 == 0x5D))
                {
                    \_SB.I2C7._Q5D ()
                }
                ElseIf ((_T_0 == 0x2E))
                {
                    \_SB.I2C7._Q2E ()
                }
                ElseIf ((_T_0 == 0x40))
                {
                    \_SB.I2C7._Q40 ()
                }
                ElseIf ((_T_0 == 0x70))
                {
                    \_SB.I2C7._Q70 ()
                }
                ElseIf ((_T_0 == 0x72))
                {
                    \_SB.I2C7._Q72 ()
                }
                ElseIf ((_T_0 == 0x73))
                {
                    \_SB.I2C7._Q73 ()
                }
                ElseIf ((_T_0 == 0x74))
                {
                    \_SB.I2C7._Q74 ()
                }
                ElseIf ((_T_0 == 0x88))
                {
                    \_SB.I2C7._Q88 ()
                }
                ElseIf ((_T_0 == 0x63))
                {
                    \_SB.I2C7._Q63 ()
                }
                ElseIf ((_T_0 == 0x20))
                {
                    \_SB.I2C7._Q20 ()
                }
                ElseIf ((_T_0 == 0x7E))
                {
                    \_SB.I2C7._Q7E ()
                }
                ElseIf ((_T_0 == 0x7C))
                {
                    \_SB.I2C7._Q7C ()
                }
                Else
                {
                }

                Break
            }
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q6A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If (((HPDD & 0x08) == 0x08))
                {
                    Noop
                }
                ElseIf (\_SB.I2C7.HKEY.MHKK (One, 0x04000000))
                {
                    \_SB.I2C7.HKEY.MHKQ (0x101B)
                }
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Method (MMTG, 0, NotSerialized)
            {
                Local0 = 0x0101
                If (((HPDD & 0x08) == 0x08))
                {
                    Local0 |= 0x00010000
                }

                Return (Local0)
            }

            Method (MMTS, 1, NotSerialized)
            {
                If (((HPDD & 0x08) == 0x08))
                {
                    Noop
                }
                Else
                {
                    Local0 = \_SB.I2C7.ECRD (0x30)
                    If ((Arg0 == 0x02))
                    {
                        Local0 |= 0x20
                    }
                    ElseIf ((Arg0 == 0x03)){}
                    Else
                    {
                        Local0 &= ~0x20
                    }

                    \_SB.I2C7.ECWR (0x30, Local0)
                }
            }
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q74, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                \_SB.I2C7.HKEY.MHKQ (0x6060)
                Local0 = GECB (0x3B, 0x03, One)
                WECB (0xE1, One, One, Local0)
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
        }

        Scope (\_SB.I2C7)
        {
            Device (AICD)
            {
                Name (_HID, EisaId ("LEN0140"))  // _HID: Hardware ID
                Method (_STA, 0, Serialized)  // _STA: Status
                {
                    Local0 = DerefOf (VEDI [0x67])
                    Local1 = (Local0 & 0x04)
                    If (Local1)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
            }
        }

        Scope (\_SB.I2C7)
        {
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Method (GSMS, 1, NotSerialized)
            {
                Return (AUDC (Zero, Zero))
            }

            Method (SSMS, 1, NotSerialized)
            {
                Return (AUDC (One, (Arg0 & One)))
            }

            Method (SHDA, 1, NotSerialized)
            {
                Local0 = Arg0
                If ((Local0 == One))
                {
                    Local0 = 0x02
                }

                Return (AUDC (0x02, (Local0 & 0x03)))
            }

            Method (AUOC, 5, Serialized)
            {
                Local0 = Zero
                Local1 = \_SB.I2C7.ECRD (0x30)
                Local2 = \_SB.I2C7.ECRD (0x03)
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger (Arg2)
                    If ((_T_0 == Zero))
                    {
                        If ((Local1 & 0x40))
                        {
                            Local0 |= One
                        }

                        Local0 |= 0x0100
                        Return (Local0)
                    }
                    ElseIf ((_T_0 == One))
                    {
                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Arg3)
                            If ((_T_1 == Zero))
                            {
                                Local1 &= ~0x40
                            }
                            ElseIf ((_T_1 == One))
                            {
                                Local1 |= 0x40
                            }
                            Else
                            {
                                Return (0x80000000)
                            }

                            Break
                        }

                        \_SB.I2C7.ECWR (0x30, Local1)
                        Break
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Local2 &= ~0x60
                        While (One)
                        {
                            Name (_T_2, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_2 = ToInteger (Arg3)
                            If ((_T_2 == Zero))
                            {
                                Local2 |= 0x60
                            }
                            ElseIf ((_T_2 == One))
                            {
                                Local2 |= 0x20
                            }
                            ElseIf ((_T_2 == 0x02))
                            {
                                Local2 |= 0x40
                            }
                            Else
                            {
                                Return (0x80000000)
                            }

                            Break
                        }

                        \_SB.I2C7.ECWR (0x03, Local2)
                        Break
                    }
                    Else
                    {
                        Return (0x80000000)
                    }

                    Break
                }

                Return (Local0)
            }
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q70, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (_Q72, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (_Q73, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                FNST ()
            }

            Method (FNST, 0, NotSerialized)
            {
                If (H8DR)
                {
                    Local1 = GECB (Zero, 0x03, One)
                }
                Else
                {
                    Local1 = (RBEC (Zero) & 0x03)
                }

                If (Local1)
                {
                    \_SB.I2C7.HKEY.MHKQ (0x6005)
                }
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Method (GHSL, 1, NotSerialized)
            {
                Return (FNSC (Zero, Zero))
            }

            Method (SHSL, 1, NotSerialized)
            {
                Return (FNSC (One, (Arg0 & 0x00010001)))
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Mutex (BFWM, 0x00)
            Method (MHIF, 1, NotSerialized)
            {
                Name (RETB, Buffer (0x0A)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00                                       // ..
                })
                Name (INID, Buffer (0x10)
                {
                     0x00                                             // .
                })
                Name (ICOP, Buffer (0x06)
                {
                     0x01, 0x17, 0x00                                 // ...
                })
                Name (ICBF, Buffer (0x16)
                {
                     0x00                                             // .
                })
                CreateByteField (ICBF, Zero, RD01)
                CreateByteField (ICBF, One, RD02)
                CreateByteField (ICBF, 0x02, RD03)
                CreateByteField (ICBF, 0x03, RD04)
                CreateByteField (ICBF, 0x04, RD05)
                CreateByteField (ICBF, 0x05, RD06)
                CreateByteField (ICBF, 0x06, RD07)
                CreateByteField (ICBF, 0x07, RD08)
                CreateByteField (ICBF, 0x08, RD09)
                CreateByteField (ICBF, 0x09, RD10)
                CreateByteField (ICBF, 0x0A, RD11)
                CreateByteField (ICBF, 0x0B, RD12)
                CreateByteField (ICBF, 0x0C, RD13)
                CreateByteField (ICBF, 0x0D, RD14)
                CreateByteField (ICBF, 0x0E, RD15)
                CreateByteField (ICBF, 0x0F, RD16)
                CreateByteField (ICBF, 0x10, RD17)
                CreateByteField (ICBF, 0x11, RD18)
                CreateByteField (ICBF, 0x12, RD19)
                CreateByteField (ICBF, 0x13, RD20)
                CreateByteField (ICBF, 0x14, RD21)
                CreateByteField (ICBF, 0x15, RD22)
                Field (WNVS, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x90), 
                    Offset (0x98), 
                    B8_8,   8, 
                    B8_9,   8, 
                    B8_A,   8, 
                    B8_B,   8, 
                    B8_C,   8, 
                    B8_D,   8, 
                    B8_E,   8, 
                    B8_F,   8
                }

                ICOP [0x04] = One
                ICOP [0x05] = 0x09
                ICOP [0x02] = 0x37
                ICBF = \_SB.PMGK.CI2C (ICOP, Zero)
                Debug = "Printing SBIG.0x37.ICBF"
                Debug = ICBF /* \_SB_.I2C7.HKEY.MHIF.ICBF */
                RETB [0x02] = RD02 /* \_SB_.I2C7.HKEY.MHIF.RD02 */
                RETB [0x03] = RD03 /* \_SB_.I2C7.HKEY.MHIF.RD03 */
                RETB [0x04] = RD04 /* \_SB_.I2C7.HKEY.MHIF.RD04 */
                RETB [0x05] = RD05 /* \_SB_.I2C7.HKEY.MHIF.RD05 */
                RETB [0x06] = RD06 /* \_SB_.I2C7.HKEY.MHIF.RD06 */
                RETB [0x07] = RD07 /* \_SB_.I2C7.HKEY.MHIF.RD07 */
                RETB [0x08] = RD08 /* \_SB_.I2C7.HKEY.MHIF.RD08 */
                RETB [0x09] = RD09 /* \_SB_.I2C7.HKEY.MHIF.RD09 */
                Debug = "Print Firmware version INID"
                Debug = INID /* \_SB_.I2C7.HKEY.MHIF.INID */
                ICBF = Zero
                INID = Zero
                Return (RETB) /* \_SB_.I2C7.HKEY.MHIF.RETB */
            }
        }

        Scope (\_SB.I2C7.HKEY)
        {
            Method (GLSI, 0, NotSerialized)
            {
                If ((\_SB.GIO0.LIDR == Zero))
                {
                    Return (0x02)
                }
                Else
                {
                    Return (0x03)
                }
            }
        }

        Scope (\_SB.I2C7)
        {
            Method (_Q63, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
            {
                If (\_SB.I2C7.HKEY.MHKK (One, 0x00080000))
                {
                    \_SB.I2C7.HKEY.MHKQ (0x1014)
                }

                SCMS (0x0B)
            }
        }
    }

    Scope (\_SB.I2C7.HKEY)
    {
        Name (MSCB, Zero)
        Method (DYTC, 1, NotSerialized)
        {
            Local0 = Arg0
            Local1 = Zero
            ADBG (Concatenate ("DYTC STT=", ToHexString (Local0)))
            If ((WNTF && TATC))
            {
                While (One)
                {
                    Name (_T_0, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                    _T_0 = ToInteger ((Local0 & 0x01FF))
                    If ((_T_0 == Zero))
                    {
                        Local1 = (One << 0x08)
                        Local1 |= (0x09 << 0x1C)
                        Local1 |= (Zero << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == One))
                    {
                        Local2 = ((Local0 >> 0x0C) & 0x0F)
                        Local3 = ((Local0 >> 0x10) & 0x0F)
                        Local4 = ((Local0 >> 0x14) & One)
                        ADBG ("DYTC_CMD_SET")
                        ADBG (Concatenate ("ICFunc=", ToHexString (Local2)))
                        ADBG (Concatenate ("ICMode=", ToHexString (Local3)))
                        ADBG (Concatenate ("ValidF=", ToHexString (Local4)))
                        If (((Local0 == 0x800F0001) || ((Local2 == 0x0D) || ((Local2 == 
                            0x07) || ((Local2 == One) || ((Local2 == 0x0B) || ((Local2 == 0x0E) || 
                            ((Local2 == 0x0A) || ((Local2 == 0x0C) || (Local2 == 0x04)))))))))){}
                        Else
                        {
                            Local1 = (0x03 << One)
                            ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                            Return (Local1)
                        }

                        While (One)
                        {
                            Name (_T_1, 0x00)  // _T_x: Emitted by ASL Compiler, x=0-9, A-Z
                            _T_1 = ToInteger (Local2)
                            If ((_T_1 == One))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VCQL = Zero
                                }
                                Else
                                {
                                    VCQL = One
                                }
                            }
                            ElseIf ((_T_1 == 0x04))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VSTP = Zero
                                }
                                Else
                                {
                                    VSTP = One
                                }
                            }
                            ElseIf ((_T_1 == 0x07))
                            {
                                If (((Local3 <= 0x07) && (Local3 >= One)))
                                {
                                    If ((Local4 != One))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                ElseIf ((Local3 == 0x0F))
                                {
                                    If ((Local4 != Zero))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                Else
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VADM = Zero
                                    SADM = Zero
                                }
                                Else
                                {
                                    VADM = One
                                    SADM = Local3
                                }
                            }
                            ElseIf ((_T_1 == 0x0C))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VMSC = Zero
                                }
                                Else
                                {
                                    VMSC = One
                                }
                            }
                            ElseIf ((_T_1 == 0x0D))
                            {
                                If (((Local3 <= 0x08) && (Local3 >= One)))
                                {
                                    If ((Local4 != One))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                ElseIf ((Local3 == 0x0F))
                                {
                                    If ((Local4 != Zero))
                                    {
                                        Local1 = (0x05 << One)
                                        ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                        Return (Local1)
                                    }
                                }
                                Else
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }

                                If ((Local4 == Zero))
                                {
                                    VPSC = Zero
                                    SPSC = Zero
                                }
                                Else
                                {
                                    VPSC = One
                                    SPSC = Local3
                                }
                            }
                            ElseIf ((_T_1 == Zero))
                            {
                                If ((Local3 != 0x0F))
                                {
                                    Local1 = (0x05 << One)
                                    ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                    Return (Local1)
                                }
                            }
                            Else
                            {
                                Local1 = (One << One)
                                ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
                                Return (Local1)
                            }

                            Break
                        }

                        If ((VSTP == One))
                        {
                            CICF = 0x04
                            \_SB.TZ40.TPSV = 0x0C3A
                            \_SB.TZ40.TMTL = 0x14
                            \_SB.TZ40.TTC1 = 0x02
                            \_SB.TZ42.TPSV = 0x0D02
                            \_SB.I2C7.ECWR (0xC8, Zero)
                            If ((\_SB.SDFE == 0x9A))
                            {
                                \_SB.I2C7.ECWR (0xCB, 0x09)
                            }
                            ElseIf ((\_SB.SDFE == 0x88))
                            {
                                \_SB.I2C7.ECWR (0xCB, 0x04)
                            }
                        }
                        ElseIf ((VMSC == One))
                        {
                            CICF = 0x0C
                            \_SB.TZ40.TPSV = 0x0E60
                            \_SB.TZ40.TMTL = 0x14
                            \_SB.TZ40.TTC1 = 0x02
                            \_SB.TZ42.TPSV = 0x0D02
                            \_SB.I2C7.ECWR (0xC8, Zero)
                            If ((\_SB.SDFE == 0x9A))
                            {
                                \_SB.I2C7.ECWR (0xCB, 0x08)
                            }
                            ElseIf ((\_SB.SDFE == 0x88))
                            {
                                \_SB.I2C7.ECWR (0xCB, 0x03)
                            }
                        }
                        ElseIf ((VADM == One))
                        {
                            CICF = 0x07
                            If ((\_SB.SDFE == 0x9A))
                            {
                                \_SB.TZ40.TPSV = 0x0CE4
                            }
                            ElseIf ((\_SB.SDFE == 0x88))
                            {
                                \_SB.TZ40.TPSV = 0x0C9E
                            }

                            \_SB.TZ40.TMTL = 0x14
                            \_SB.TZ40.TTC1 = 0x02
                            \_SB.TZ42.TPSV = 0x0C9E
                        }
                        ElseIf ((VCQL == One))
                        {
                            CICF = One
                            If ((\_SB.SDFE == 0x9A))
                            {
                                \_SB.TZ40.TPSV = 0x0CE4
                            }
                            ElseIf ((\_SB.SDFE == 0x88))
                            {
                                \_SB.TZ40.TPSV = 0x0CEE
                            }

                            \_SB.TZ40.TMTL = 0x14
                            \_SB.TZ40.TTC1 = 0x02
                            \_SB.TZ42.TPSV = 0x0D02
                        }
                        ElseIf ((VPSC == One))
                        {
                            CICF = 0x0D
                            If ((SPSC == 0x04))
                            {
                                \_SB.TZ42.TPSV = 0x0D02
                                \_SB.I2C7.ECWR (0xC8, Zero)
                                If ((\_SB.SDFE == 0x9A))
                                {
                                    \_SB.TZ40.TPSV = 0x0CF8
                                    \_SB.I2C7.ECWR (0xCB, 0x07)
                                }
                                ElseIf ((\_SB.SDFE == 0x88))
                                {
                                    \_SB.I2C7.ECWR (0xCB, 0x02)
                                    \_SB.TZ40.TPSV = 0x0D02
                                }

                                \_SB.TZ40.TMTL = 0x32
                                \_SB.TZ40.TTC1 = 0x02
                            }
                            ElseIf ((SPSC == 0x02))
                            {
                                \_SB.TZ42.TPSV = 0x0D02
                                \_SB.I2C7.ECWR (0xC8, Zero)
                                If ((\_SB.SDFE == 0x9A))
                                {
                                    \_SB.TZ40.TPSV = 0x0C94
                                    \_SB.I2C7.ECWR (0xCB, 0x06)
                                }
                                ElseIf ((\_SB.SDFE == 0x88))
                                {
                                    \_SB.TZ40.TPSV = 0x0C9E
                                    \_SB.I2C7.ECWR (0xCB, One)
                                }

                                \_SB.TZ40.TMTL = 0x05
                                \_SB.TZ40.TTC1 = 0x02
                            }
                            Else
                            {
                                \_SB.TZ42.TPSV = 0x0D02
                                \_SB.I2C7.ECWR (0xC8, Zero)
                                If ((\_SB.SDFE == 0x9A))
                                {
                                    \_SB.TZ40.TPSV = 0x0CC6
                                    \_SB.I2C7.ECWR (0xCB, 0x05)
                                }
                                ElseIf ((\_SB.SDFE == 0x88))
                                {
                                    \_SB.TZ40.TPSV = 0x0CEE
                                    \_SB.I2C7.ECWR (0xCB, Zero)
                                }

                                \_SB.TZ40.TMTL = 0x32
                                \_SB.TZ40.TTC1 = 0x03
                            }
                        }
                        Else
                        {
                            CICF = Zero
                            If ((\_SB.SDFE == 0x9A))
                            {
                                \_SB.TZ40.TPSV = 0x0CC6
                            }
                            ElseIf ((\_SB.SDFE == 0x88))
                            {
                                \_SB.TZ40.TPSV = 0x0CEE
                            }

                            \_SB.TZ40.TMTL = 0x32
                            \_SB.TZ40.TTC1 = 0x03
                            \_SB.TZ42.TPSV = 0x0D02
                        }

                        \_SB.TZ40.THSF = One
                        Notify (\_SB.TZ40, 0x81) // Thermal Trip Point Change
                        \_SB.TZ42.THSF = One
                        Notify (\_SB.TZ42, 0x81) // Thermal Trip Point Change
                        Local5 = One
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        If ((CICF == 0x03))
                        {
                            CICM = SMYH /* \_SB_.SMYH */
                        }
                        ElseIf ((CICF == 0x0B))
                        {
                            CICM = SMMC /* \_SB_.SMMC */
                        }
                        ElseIf ((CICF == 0x0D))
                        {
                            CICM = SPSC /* \_SB_.SPSC */
                        }
                        ElseIf ((CICF == 0x0F))
                        {
                            CICM = SAMT /* \_SB_.SAMT */
                        }
                        ElseIf ((CICF == 0x07))
                        {
                            CICM = SADM /* \_SB_.SADM */
                        }
                        ElseIf ((CICF == 0x08))
                        {
                            CICM = SRPC /* External reference */
                        }
                        Else
                        {
                            CICM = 0x0F
                        }

                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                        If (\_SB.I2C7.HKEY.DHKC)
                        {
                            \_SB.I2C7.HKEY.MHKQ (0x6032)
                        }

                        If ((\_SB.I2C7.HKEY.KBCS == Zero))
                        {
                            \_SB.I2C7.HKEY.SKBS ()
                        }
                    }
                    ElseIf ((_T_0 == 0x07))
                    {
                        Local1 = ((Local0 >> 0x10) & 0xFF)
                        Local2 = ((Local0 >> 0x18) & 0xFF)
                        If ((CICF == 0x0F))
                        {
                            FLPF (Local1)
                            If ((Local2 == One))
                            {
                                \_SB.I2C7.HKEY.MHKQ (0x8034)
                            }
                            Else
                            {
                                \_SB.I2C7.HKEY.MHKQ (0x8035)
                            }
                        }
                        Else
                        {
                            Local1 = Zero
                        }

                        Local1 = (Local1 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x08))
                    {
                        Local1 = (VMMC << 0x08)
                        Local1 |= (SMMC << 0x0C)
                        Local1 |= (Zero << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x02))
                    {
                        Local5 = One
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        If ((CICF == 0x03))
                        {
                            CICM = SMYH /* \_SB_.SMYH */
                        }
                        ElseIf ((CICF == 0x0B))
                        {
                            CICM = SMMC /* \_SB_.SMMC */
                        }
                        ElseIf ((CICF == 0x0D))
                        {
                            CICM = SPSC /* \_SB_.SPSC */
                        }
                        ElseIf ((CICF == 0x0F))
                        {
                            CICM = SAMT /* \_SB_.SAMT */
                        }
                        ElseIf ((CICF == 0x07))
                        {
                            CICM = SADM /* \_SB_.SADM */
                        }
                        Else
                        {
                            CICM = 0x0F
                        }

                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x03))
                    {
                        Local1 = (FCAP << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x04))
                    {
                        Local1 = (MYHC << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x06))
                    {
                        Local2 = ((Local0 >> 0x09) & 0x0F)
                        If ((Local2 != One))
                        {
                            Local1 = (MMCC << 0x10)
                        }
                        Else
                        {
                            Local1 = (Zero << 0x08)
                        }

                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x05))
                    {
                        If ((Zero != One))
                        {
                            Local1 = (0x05 << 0x08)
                            Local1 |= (0x010E << 0x14)
                        }

                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0100))
                    {
                        Local1 = (0x1001 << 0x10)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x09))
                    {
                        MSCB = One
                        Local1 = Zero
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0A))
                    {
                        Local1 = Zero
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x0B))
                    {
                        Local1 = (FADM << 0x08)
                        Local1 |= One
                    }
                    ElseIf ((_T_0 == 0x01FF))
                    {
                        ADBG (" DYTC_CMD_RESET")
                        VCQL = Zero
                        VTIO = Zero
                        VMYH = Zero
                        VSTP = Zero
                        VLCM = Zero
                        VDGM = Zero
                        VADM = Zero
                        VRPC = Zero
                        VTMS = Zero
                        VDLS = Zero
                        VMMC = Zero
                        VMSC = Zero
                        VPSC = Zero
                        VCSC = Zero
                        VAMT = Zero
                        SMYH = Zero
                        SMMC = Zero
                        SPSC = Zero
                        SAMT = Zero
                        SADM = Zero
                        CICF = Zero
                        FLPF (Zero)
                        CICM = 0x0F
                        Local5 = VSTD /* \_SB_.VSTD */
                        Local5 |= (VCQL << One)
                        Local5 |= (VTIO << 0x02)
                        Local5 |= (VMYH << 0x03)
                        Local5 |= (VSTP << 0x04)
                        Local5 |= (VLCM << 0x05)
                        Local5 |= (VDGM << 0x06)
                        Local5 |= (VADM << 0x07)
                        Local5 |= (VRPC << 0x08)
                        Local5 |= (VTMS << 0x09)
                        Local5 |= (VDLS << 0x0A)
                        Local5 |= (VMMC << 0x0B)
                        Local5 |= (VMSC << 0x0C)
                        Local5 |= (VPSC << 0x0D)
                        Local5 |= (VCSC << 0x0E)
                        Local5 |= (VAMT << 0x0F)
                        Local1 = (CICF << 0x08)
                        Local1 |= (CICM << 0x0C)
                        Local1 |= (Local5 << 0x10)
                        Local1 |= One
                    }
                    Else
                    {
                        Local1 = (0x02 << One)
                    }

                    Break
                }
            }
            Else
            {
                Local1 = (0x04 << One)
            }

            ADBG (Concatenate ("DYTC END=", ToHexString (Local1)))
            Return (Local1)
        }
    }

    Scope (\_SB.I2C7)
    {
        Method (ATMC, 0, NotSerialized)
        {
        }
    }

    Scope (\_SB.I2C7)
    {
        Device (ITSD)
        {
            Name (_HID, EisaId ("LEN0100"))  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }
    }

    Scope (\_SI)
    {
        Method (_SST, 1, NotSerialized)  // _SST: System Status
        {
            If ((Arg0 == Zero)){}
            If ((Arg0 == One)){}
            If ((Arg0 == 0x02)){}
            If ((Arg0 == 0x03)){}
            If ((Arg0 == 0x04))
            {
                SGOV (0x35, Zero)
            }
        }
    }

    Scope (\_SB)
    {
        Device (AMW0)
        {
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (WLMP, Zero)
            Name (WMID, Zero)
            Name (B0ED, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            CreateDWordField (B0ED, Zero, WLID)
            Name (B1ED, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (_WDG, Buffer (0x50)
            {
                /* 0000 */  0x81, 0x17, 0xF4, 0xD9, 0x33, 0xF6, 0x00, 0x44,  // ....3..D
                /* 0008 */  0x93, 0x55, 0x60, 0x17, 0x70, 0xBE, 0xC5, 0x10,  // .U`.p...
                /* 0010 */  0x41, 0x41, 0x01, 0x00, 0xED, 0x16, 0x1F, 0x43,  // AA.....C
                /* 0018 */  0x2B, 0x0C, 0x4C, 0x44, 0xB2, 0x67, 0x27, 0xDE,  // +.LD.g'.
                /* 0020 */  0xB1, 0x40, 0xCF, 0x9C, 0x41, 0x43, 0x01, 0x02,  // .@..AC..
                /* 0028 */  0x71, 0xBF, 0xD1, 0x40, 0x2D, 0xA8, 0x59, 0x4E,  // q..@-.YN
                /* 0030 */  0xA1, 0x68, 0x39, 0x85, 0xE0, 0x3B, 0x2E, 0x87,  // .h9..;..
                /* 0038 */  0xB0, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,  // ....!...
                /* 0040 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0048 */  0xC9, 0x06, 0x29, 0x10, 0x44, 0x44, 0x01, 0x00   // ..).DD..
            })
            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xB0))
                {
                    Return (B0ED) /* \_SB_.AMW0.B0ED */
                }
            }

            Method (WQAA, 1, NotSerialized)
            {
                Return (B1ED) /* \_SB_.AMW0.B1ED */
            }

            Method (WSAA, 2, NotSerialized)
            {
                CreateDWordField (Arg1, Zero, DDD0)
                If ((DDD0 == One))
                {
                    DDD0 += 0x02
                    B1ED [Zero] = DDD0 /* \_SB_.AMW0.WSAA.DDD0 */
                }
            }

            Method (WMAB, 3, NotSerialized)
            {
                WLMP = One
                WMID = Zero
                Return (WH15 (Arg1, Arg2))
            }

            Method (WMAC, 3, NotSerialized)
            {
                WLMP = One
                WMID = One
                Return (WH15 (Arg1, Arg2))
            }
        }
    }

    Name (B2ED, Buffer (0x1C)
    {
        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
        /* 0018 */  0x00, 0x00, 0x00, 0x00                           // ....
    })
    Mutex (WSMI, 0x00)
    Method (WH15, 2, Serialized)
    {
        ADBG ("Wistron WMI _WH15 Entry")
        Acquire (WSMI, 0xFFFF)
        CreateDWordField (Arg1, Zero, DEAX)
        CreateDWordField (Arg1, 0x04, DEBX)
        CreateDWordField (Arg1, 0x08, DECX)
        CreateDWordField (Arg1, 0x0C, DEDX)
        CreateDWordField (B2ED, Zero, OEAX)
        CreateDWordField (B2ED, 0x04, OEBX)
        CreateDWordField (B2ED, 0x08, OECX)
        CreateDWordField (B2ED, 0x0C, OEDX)
        CreateDWordField (B2ED, 0x10, OFLG)
        OEAX = DEAX /* \WH15.DEAX */
        OECX = DECX /* \WH15.DECX */
        OEDX = DEDX /* \WH15.DEDX */
        If ((\_SB.AMW0.WMID == One))
        {
            CreateDWordField (Arg1, 0x10, DESI)
            CreateDWordField (Arg1, 0x14, DEDI)
            CreateDWordField (B2ED, 0x14, OESI)
            CreateDWordField (B2ED, 0x18, OEDI)
            OESI = DESI /* \WH15.DESI */
            OEDI = DEDI /* \WH15.DEDI */
        }

        ADBG (Concatenate ("DEAX=", ToHexString (DEAX)))
        ADBG (Concatenate ("DEBX=", ToHexString (DEBX)))
        ADBG (Concatenate ("DECX=", ToHexString (DECX)))
        ADBG (Concatenate ("DEDX=", ToHexString (DEDX)))
        If (((DEAX & 0xFFFF) == 0x9610))
        {
            If (((DEBX & 0xFFFF) == 0x0300))
            {
                OECX = 0x5F57
                OEDX = 0x4851
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }
        }

        If (((DEAX & 0xFFFF) == 0x9611))
        {
            If (((DEBX & 0xFFFF) == 0xB001))
            {
                (DECX & 0xFFFF) = \_SB.I2C7.ECMR /* External reference */
                OEDX
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB002))
            {
                \_SB.I2C7.ECMW ((DECX & 0xFFFF), (DEDX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB003))
            {
                OEDX = \_SB.I2C7.ECRD ((DECX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB004))
            {
                \_SB.I2C7.ECWR ((DECX & 0xFF), (DEDX & 0xFF))
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB005))
            {
                OECX = (\_SB.UCS0.ECC0 & 0x03)
                OEDX = (\_SB.UCS0.ECC1 & 0x03)
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }

            If (((DEBX & 0xFFFF) == 0xB006))
            {
                OECX = \_SB.PWDP
                OEAX &= 0xFFFF00FF
                OFLG = Zero
                Release (WSMI)
                Return (B2ED) /* \B2ED */
            }
        }

        Release (WSMI)
        Return (B2ED) /* \B2ED */
    }

    Scope (\_SB.AMW0)
    {
        Name (WQDD, Buffer (0x0560)
        {
            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
            /* 0008 */  0x50, 0x05, 0x00, 0x00, 0x70, 0x1D, 0x00, 0x00,  // P...p...
            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
            /* 0018 */  0x18, 0xCB, 0x8D, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
            /* 0020 */  0x10, 0x09, 0x10, 0x8A, 0xE7, 0x80, 0x42, 0x04,  // ......B.
            /* 0028 */  0x0A, 0x0D, 0xA1, 0x40, 0x30, 0x28, 0x38, 0x4B,  // ...@0(8K
            /* 0030 */  0x82, 0x90, 0x0B, 0x26, 0x26, 0x40, 0x08, 0x84,  // ...&&@..
            /* 0038 */  0x24, 0x0A, 0x30, 0x2F, 0x40, 0xB7, 0x00, 0xC3,  // $.0/@...
            /* 0040 */  0x02, 0x6C, 0x0B, 0x30, 0x2D, 0xC0, 0x31, 0x90,  // .l.0-.1.
            /* 0048 */  0xFA, 0xF7, 0x87, 0x28, 0x0D, 0x44, 0x22, 0x20,  // ...(.D" 
            /* 0050 */  0xA9, 0x14, 0x08, 0x09, 0x15, 0xA0, 0x5C, 0x80,  // ......\.
            /* 0058 */  0x6F, 0x01, 0xDA, 0x11, 0x25, 0x59, 0x80, 0x65,  // o...%Y.e
            /* 0060 */  0x18, 0x11, 0xD8, 0x2B, 0x32, 0x41, 0xE3, 0x04,  // ...+2A..
            /* 0068 */  0xE5, 0x0C, 0x03, 0x05, 0x6F, 0xC0, 0x36, 0x05,  // ....o.6.
            /* 0070 */  0x98, 0x1C, 0x04, 0x95, 0x3D, 0x08, 0x94, 0x0C,  // ....=...
            /* 0078 */  0x08, 0x79, 0x14, 0x60, 0x15, 0x4E, 0xD3, 0x49,  // .y.`.N.I
            /* 0080 */  0x60, 0xF7, 0x73, 0x91, 0x30, 0x18, 0x19, 0x13,  // `.s.0...
            /* 0088 */  0xA0, 0x50, 0x80, 0x46, 0x01, 0xDE, 0x40, 0x64,  // .P.F..@d
            /* 0090 */  0x4B, 0x80, 0x41, 0x01, 0xE2, 0x04, 0x28, 0x83,  // K.A...(.
            /* 0098 */  0x12, 0x4A, 0xB8, 0x83, 0x69, 0x4D, 0x80, 0x39,  // .J..iM.9
            /* 00A0 */  0x28, 0x82, 0x56, 0x1B, 0x98, 0x50, 0x3A, 0x03,  // (.V..P:.
            /* 00A8 */  0x12, 0x48, 0xAC, 0x16, 0xC1, 0x05, 0x13, 0x3B,  // .H.....;
            /* 00B0 */  0x6A, 0x94, 0x40, 0xD1, 0xDB, 0x1F, 0x04, 0x09,  // j.@.....
            /* 00B8 */  0xA7, 0x00, 0xA2, 0x06, 0x10, 0x45, 0x1A, 0x0D,  // .....E..
            /* 00C0 */  0x6A, 0x44, 0x09, 0x0E, 0xCC, 0xA3, 0x39, 0xD5,  // jD....9.
            /* 00C8 */  0xCE, 0x05, 0x48, 0x9F, 0xAB, 0x40, 0x8E, 0xF5,  // ..H..@..
            /* 00D0 */  0x34, 0xEA, 0x1C, 0x2E, 0x01, 0x49, 0x60, 0xAC,  // 4....I`.
            /* 00D8 */  0x04, 0xB7, 0xEE, 0x21, 0xE2, 0x5D, 0x03, 0x6A,  // ...!.].j
            /* 00E0 */  0xE2, 0x87, 0xC8, 0x04, 0xC1, 0xA1, 0x86, 0xE8,  // ........
            /* 00E8 */  0xF1, 0x86, 0x3B, 0x81, 0xA3, 0x3E, 0x12, 0x06,  // ..;..>..
            /* 00F0 */  0x71, 0x50, 0x47, 0x83, 0x39, 0x07, 0xD8, 0xE1,  // qPG.9...
            /* 00F8 */  0x64, 0x34, 0xE3, 0x52, 0x05, 0x98, 0x1D, 0xBA,  // d4.R....
            /* 0100 */  0x46, 0x96, 0xE0, 0x78, 0x0C, 0x7D, 0xF6, 0xE7,  // F..x.}..
            /* 0108 */  0xD3, 0x33, 0x24, 0x91, 0x3F, 0x08, 0xD4, 0xC8,  // .3$.?...
            /* 0110 */  0x0C, 0xED, 0xA1, 0x9E, 0x56, 0xCC, 0x90, 0x4F,  // ....V..O
            /* 0118 */  0x01, 0x87, 0xC5, 0xC4, 0x42, 0x68, 0x93, 0x1A,  // ....Bh..
            /* 0120 */  0x0F, 0xC4, 0xFF, 0xFF, 0x78, 0xC0, 0xA3, 0xF8,  // ....x...
            /* 0128 */  0x68, 0x20, 0x84, 0x57, 0x82, 0xD8, 0x1E, 0x50,  // h .W...P
            /* 0130 */  0x82, 0x01, 0x21, 0xE4, 0x64, 0x3C, 0xA8, 0x51,  // ..!.d<.Q
            /* 0138 */  0x18, 0x35, 0xDC, 0x61, 0x1C, 0xB5, 0x8F, 0x0F,  // .5.a....
            /* 0140 */  0x3A, 0x3C, 0x50, 0x51, 0xC3, 0xA6, 0x67, 0x06,  // :<PQ..g.
            /* 0148 */  0x7E, 0x5C, 0x60, 0xE7, 0x82, 0x98, 0x8F, 0x00,  // ~\`.....
            /* 0150 */  0x1E, 0xC9, 0x09, 0xF9, 0x38, 0xE1, 0x81, 0xC1,  // ....8...
            /* 0158 */  0x07, 0xC4, 0x7B, 0x9F, 0x32, 0x19, 0xC1, 0x99,  // ..{.2...
            /* 0160 */  0x7A, 0x80, 0xE0, 0xB0, 0x3E, 0x7C, 0x02, 0xFC,  // z...>|..
            /* 0168 */  0xB2, 0xF0, 0xB0, 0x90, 0xC0, 0xF7, 0x07, 0x03,  // ........
            /* 0170 */  0xE3, 0x46, 0x68, 0xBF, 0x02, 0x10, 0x82, 0x97,  // .Fh.....
            /* 0178 */  0x79, 0x02, 0x90, 0x53, 0x04, 0x8D, 0xCD, 0xD0,  // y..S....
            /* 0180 */  0x4F, 0x03, 0x2F, 0x0E, 0xE1, 0x83, 0x47, 0x38,  // O./...G8
            /* 0188 */  0xDF, 0x03, 0x38, 0x85, 0xC7, 0x00, 0x0F, 0xC1,  // ..8.....
            /* 0190 */  0x04, 0x16, 0x39, 0x02, 0x94, 0x98, 0x11, 0xA0,  // ..9.....
            /* 0198 */  0x8E, 0x0D, 0x27, 0x70, 0x3C, 0x61, 0x8F, 0xE0,  // ..'p<a..
            /* 01A0 */  0x78, 0xA2, 0x9C, 0xC4, 0x01, 0xF9, 0xA8, 0x61,  // x......a
            /* 01A8 */  0x84, 0xE0, 0xE5, 0x9E, 0x38, 0x88, 0xE6, 0x71,  // ....8..q
            /* 01B0 */  0x6A, 0x16, 0xEF, 0x00, 0x87, 0xC0, 0xC6, 0x84,  // j.......
            /* 01B8 */  0x3B, 0x40, 0x78, 0x08, 0x7C, 0x00, 0x8F, 0x1A,  // ;@x.|...
            /* 01C0 */  0xE7, 0x67, 0xA5, 0xB3, 0x42, 0x9E, 0x3B, 0xF8,  // .g..B.;.
            /* 01C8 */  0x98, 0xB0, 0x03, 0xE0, 0xD2, 0x0F, 0x27, 0x28,  // ......'(
            /* 01D0 */  0xB1, 0xE7, 0x13, 0x50, 0xFC, 0xFF, 0xCF, 0x27,  // ...P...'
            /* 01D8 */  0xC0, 0x1E, 0xE4, 0x99, 0xE4, 0xED, 0xE4, 0x68,  // .......h
            /* 01E0 */  0x9E, 0x4B, 0x1E, 0x48, 0x9E, 0x48, 0x9E, 0x4F,  // .K.H.H.O
            /* 01E8 */  0x8C, 0xF3, 0x66, 0xF2, 0x64, 0x10, 0xE1, 0xF9,  // ..f.d...
            /* 01F0 */  0xC4, 0xD7, 0x14, 0x23, 0x44, 0x09, 0x19, 0xE8,  // ...#D...
            /* 01F8 */  0xE1, 0x24, 0x42, 0x94, 0x70, 0x81, 0xC2, 0x1A,  // .$B.p...
            /* 0200 */  0x21, 0xC8, 0x63, 0xC1, 0x09, 0x1F, 0x76, 0xAC,  // !.c...v.
            /* 0208 */  0x40, 0x61, 0x9E, 0x4F, 0x98, 0xF0, 0xA7, 0x86,  // @a.O....
            /* 0210 */  0x2C, 0x9C, 0x4F, 0x00, 0xBA, 0xFC, 0xFF, 0xCF,  // ,.O.....
            /* 0218 */  0x27, 0x80, 0x33, 0x81, 0xE7, 0x13, 0x90, 0x0E,  // '.3.....
            /* 0220 */  0x8F, 0x1F, 0x4F, 0x80, 0xC9, 0x08, 0xB8, 0x16,  // ..O.....
            /* 0228 */  0x13, 0x87, 0x2F, 0xD4, 0xE3, 0xC0, 0xA7, 0x11,  // ../.....
            /* 0230 */  0x40, 0xCE, 0x09, 0xE4, 0xFD, 0xE3, 0x38, 0x9F,  // @.....8.
            /* 0238 */  0x44, 0x7C, 0xF7, 0xF2, 0xFF, 0xFF, 0xE6, 0xE5,  // D|......
            /* 0240 */  0x83, 0xC8, 0x1B, 0xC8, 0xC1, 0x3E, 0x8D, 0xB0,  // .....>..
            /* 0248 */  0x51, 0x05, 0x33, 0xCA, 0xE9, 0x47, 0x88, 0xFA,  // Q.3..G..
            /* 0250 */  0x52, 0x62, 0xC4, 0x08, 0xC1, 0x42, 0x05, 0x8A,  // Rb...B..
            /* 0258 */  0x11, 0x35, 0xB2, 0x61, 0x23, 0xC4, 0x79, 0xF8,  // .5.a#.y.
            /* 0260 */  0xA2, 0x0F, 0x06, 0x0D, 0xD5, 0xA7, 0x11, 0x80,  // ........
            /* 0268 */  0x1F, 0xA7, 0x09, 0xDC, 0xE9, 0x02, 0x4C, 0x93,  // ......L.
            /* 0270 */  0x38, 0x80, 0x28, 0x45, 0xC3, 0x68, 0x3A, 0x8F,  // 8.(E.h:.
            /* 0278 */  0x03, 0x01, 0x9F, 0x2F, 0x80, 0x89, 0xE2, 0x97,  // .../....
            /* 0280 */  0x9E, 0xCE, 0x27, 0xFE, 0xFF, 0xAB, 0x05, 0x91,  // ..'.....
            /* 0288 */  0x8D, 0xB5, 0x7A, 0x58, 0x34, 0xF3, 0x03, 0x48,  // ..zX4..H
            /* 0290 */  0xF0, 0xC5, 0x03, 0x6B, 0xD8, 0x27, 0x79, 0x16,  // ...k.'y.
            /* 0298 */  0x27, 0x99, 0x60, 0x56, 0x28, 0xC1, 0x7A, 0xD8,  // '.`V(.z.
            /* 02A0 */  0x4E, 0x09, 0xA3, 0x04, 0x24, 0x1A, 0x8E, 0xA1,  // N...$...
            /* 02A8 */  0xAD, 0x19, 0x46, 0x70, 0x06, 0xF1, 0x79, 0xC8,  // ..Fp..y.
            /* 02B0 */  0x21, 0xCE, 0x31, 0x50, 0x8E, 0x0C, 0x1E, 0xC5,  // !.1P....
            /* 02B8 */  0x59, 0x3D, 0x07, 0x78, 0x8C, 0x8F, 0x0B, 0x6C,  // Y=.x...l
            /* 02C0 */  0x7C, 0x3E, 0x08, 0xF0, 0xC3, 0xA0, 0x6F, 0x06,  // |>....o.
            /* 02C8 */  0x46, 0xB6, 0x9A, 0xD3, 0x0C, 0x0A, 0xCC, 0xC7,  // F.......
            /* 02D0 */  0x0B, 0x4E, 0x50, 0xD7, 0xCD, 0x05, 0x64, 0x43,  // .NP...dC
            /* 02D8 */  0x82, 0x79, 0x10, 0x38, 0x24, 0x30, 0x4F, 0xD5,  // .y.8$0O.
            /* 02E0 */  0x43, 0x02, 0x1E, 0xE0, 0x87, 0x04, 0xE6, 0x2B,  // C......+
            /* 02E8 */  0x81, 0x87, 0x04, 0x2C, 0xFE, 0xFF, 0xA8, 0x07,  // ...,....
            /* 02F0 */  0x71, 0x48, 0x60, 0x46, 0xF2, 0x90, 0xC0, 0xA6,  // qH`F....
            /* 02F8 */  0xEF, 0xC8, 0x01, 0x0A, 0x20, 0xDF, 0x30, 0x7C,  // .... .0|
            /* 0300 */  0xDC, 0x7B, 0xCA, 0x60, 0x63, 0x78, 0xE2, 0x33,  // .{.`cx.3
            /* 0308 */  0x9A, 0xD1, 0xB9, 0xC4, 0xE5, 0xE8, 0x42, 0xC1,  // ......B.
            /* 0310 */  0x45, 0xC1, 0xE8, 0x58, 0x60, 0x10, 0x4F, 0xCB,  // E..X`.O.
            /* 0318 */  0x51, 0xA6, 0x8A, 0x9E, 0x89, 0x7D, 0x9E, 0x42,  // Q....}.B
            /* 0320 */  0xC8, 0x89, 0x82, 0x5F, 0xDD, 0x74, 0x9F, 0x81,  // ..._.t..
            /* 0328 */  0x76, 0xF7, 0x08, 0xEA, 0x8B, 0x0A, 0x83, 0xF3,  // v.......
            /* 0330 */  0x64, 0x39, 0x9C, 0xAF, 0x14, 0xFC, 0xAE, 0xE3,  // d9......
            /* 0338 */  0xCB, 0x15, 0xF8, 0x46, 0x05, 0xF7, 0x50, 0xC1,  // ...F..P.
            /* 0340 */  0x46, 0x05, 0xF6, 0xEB, 0x88, 0x47, 0x05, 0xD6,  // F....G..
            /* 0348 */  0xFF, 0xFF, 0xA8, 0x60, 0x9D, 0x2B, 0xD8, 0xA8,  // ...`.+..
            /* 0350 */  0xC0, 0x7E, 0x26, 0xF0, 0xA8, 0x80, 0xCB, 0xD1,  // .~&.....
            /* 0358 */  0x82, 0x8D, 0x0A, 0xEC, 0x1E, 0x46, 0x05, 0xCA,  // .....F..
            /* 0360 */  0x20, 0xD7, 0x0F, 0x28, 0xD0, 0x8F, 0x96, 0xAF,  //  ..(....
            /* 0368 */  0x40, 0x0F, 0x41, 0x8F, 0x51, 0x1E, 0x14, 0xB8,  // @.A.Q...
            /* 0370 */  0x61, 0x7C, 0xDF, 0x03, 0x4E, 0x17, 0x10, 0x98,  // a|..N...
            /* 0378 */  0xF0, 0x18, 0xC1, 0x47, 0x18, 0xF2, 0xFF, 0x27,  // ...G...'
            /* 0380 */  0x28, 0x6B, 0x5C, 0xA8, 0xFB, 0x8A, 0xAF, 0x72,  // (k\....r
            /* 0388 */  0xEC, 0x3A, 0x85, 0xBB, 0x2A, 0x62, 0x60, 0x3D,  // .:..*b`=
            /* 0390 */  0x52, 0x0E, 0x6B, 0xB4, 0xB0, 0x07, 0xFC, 0xA6,  // R.k.....
            /* 0398 */  0xE5, 0x63, 0x9A, 0x67, 0x66, 0x8C, 0xB0, 0x1E,  // .c.gf...
            /* 03A0 */  0xAD, 0x95, 0x92, 0xD2, 0x2B, 0x9F, 0x23, 0xDD,  // ....+.#.
            /* 03A8 */  0xFA, 0x00, 0x41, 0x73, 0x79, 0x10, 0x78, 0xCE,  // ..Asy.x.
            /* 03B0 */  0x7B, 0x4B, 0x78, 0x73, 0xF7, 0x59, 0xC2, 0xC7,  // {Kxs.Y..
            /* 03B8 */  0xBD, 0xC7, 0x82, 0x97, 0x80, 0x97, 0x81, 0xF7,  // ........
            /* 03C0 */  0x92, 0x57, 0x5A, 0x76, 0xED, 0xF3, 0xAD, 0xCF,  // .WZv....
            /* 03C8 */  0x48, 0x0F, 0x80, 0x46, 0x09, 0x12, 0x23, 0xE6,  // H..F..#.
            /* 03D0 */  0xFB, 0x89, 0x91, 0x1F, 0x6D, 0x7D, 0x69, 0xF0,  // ....m}i.
            /* 03D8 */  0xBD, 0x2F, 0xC6, 0x5B, 0x1F, 0x8B, 0x77, 0xEB,  // ./.[..w.
            /* 03E0 */  0x03, 0x44, 0xFD, 0xFF, 0x6F, 0x7D, 0xC0, 0xFE,  // .D..o}..
            /* 03E8 */  0x72, 0xF1, 0xD6, 0x07, 0x1C, 0x30, 0x23, 0xBE,  // r....0#.
            /* 03F0 */  0xF6, 0x01, 0x93, 0x34, 0x2B, 0xD0, 0x59, 0xC3,  // ...4+.Y.
            /* 03F8 */  0x49, 0x40, 0x74, 0xED, 0xC3, 0xE9, 0x01, 0xD2,  // I@t.....
            /* 0400 */  0xB5, 0x0F, 0xAF, 0x03, 0x96, 0x8E, 0xDB, 0x0A,  // ........
            /* 0408 */  0x60, 0x94, 0xE4, 0x58, 0x85, 0xD2, 0x7E, 0xAC,  // `..X..~.
            /* 0410 */  0xA2, 0x20, 0x3E, 0xCE, 0xF8, 0xDA, 0x07, 0x58,  // . >....X
            /* 0418 */  0xF9, 0xFF, 0x5F, 0xFB, 0x00, 0x26, 0x0E, 0x09,  // .._..&..
            /* 0420 */  0xE6, 0xF5, 0xE2, 0x09, 0xC7, 0x43, 0x02, 0xEB,  // .....C..
            /* 0428 */  0x8D, 0xC6, 0x43, 0x82, 0xFB, 0xFF, 0x1F, 0x34,  // ..C....4
            /* 0430 */  0xD8, 0x86, 0x04, 0xE6, 0x8B, 0x9D, 0xAF, 0x8E,  // ........
            /* 0438 */  0xC0, 0x59, 0xF6, 0x82, 0x75, 0x29, 0xE1, 0x42,  // .Y..u).B
            /* 0440 */  0x61, 0x74, 0xB4, 0x30, 0x88, 0x01, 0x7D, 0x75,  // at.0..}u
            /* 0448 */  0x04, 0x7E, 0x17, 0x3E, 0xE0, 0x73, 0x75, 0x04,  // .~.>.su.
            /* 0450 */  0x0E, 0x17, 0x3E, 0xFC, 0xFF, 0xFF, 0xEA, 0x08,  // ..>.....
            /* 0458 */  0x38, 0xB8, 0xF1, 0x81, 0xF3, 0xEA, 0x08, 0xFC,  // 8.......
            /* 0460 */  0x4C, 0x5C, 0x1D, 0x01, 0x1D, 0x2A, 0x46, 0x0E,  // L\...*F.
            /* 0468 */  0x74, 0x4E, 0x31, 0x8C, 0xE0, 0xFF, 0x7F, 0x54,  // tN1....T
            /* 0470 */  0xE0, 0x06, 0xF6, 0xF1, 0x00, 0xD8, 0x8C, 0x0A,  // ........
            /* 0478 */  0x18, 0x9C, 0x06, 0x7C, 0x09, 0x05, 0xBC, 0x2A,  // ...|...*
            /* 0480 */  0xB4, 0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65,  // ..S.Q..e
            /* 0488 */  0x6A, 0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6,  // j.iP.O..
            /* 0490 */  0x8C, 0x5D, 0x29, 0x13, 0x8C, 0xB1, 0x02, 0x8D,  // .]).....
            /* 0498 */  0xC5, 0x22, 0x96, 0x23, 0x10, 0x87, 0x04, 0xA1,  // .".#....
            /* 04A0 */  0x22, 0x1F, 0x43, 0x02, 0x71, 0x44, 0x10, 0x1A,  // ".C.qD..
            /* 04A8 */  0xE1, 0x4D, 0x23, 0x10, 0xC7, 0x5B, 0x9B, 0x40,  // .M#..[.@
            /* 04B0 */  0x2C, 0xEE, 0xA1, 0x21, 0x10, 0xFF, 0xFF, 0x83,  // ,..!....
            /* 04B8 */  0x3C, 0x23, 0x64, 0x04, 0x44, 0xA9, 0x40, 0x74,  // <#d.D.@t
            /* 04C0 */  0x4B, 0x22, 0x6B, 0x12, 0x90, 0x95, 0x81, 0x08,  // K"k.....
            /* 04C8 */  0xC8, 0x81, 0x80, 0x68, 0x3A, 0x20, 0x2A, 0xEA,  // ...h: *.
            /* 04D0 */  0x21, 0x20, 0x20, 0x2B, 0x04, 0x11, 0x90, 0xD5,  // !  +....
            /* 04D8 */  0xD8, 0x00, 0x62, 0xDA, 0x40, 0x04, 0xE4, 0x5C,  // ..b.@..\
            /* 04E0 */  0x40, 0x34, 0x25, 0x10, 0x55, 0xA8, 0x03, 0x88,  // @4%.U...
            /* 04E8 */  0xE9, 0x05, 0x11, 0x90, 0xB3, 0x02, 0xD1, 0xE4,  // ........
            /* 04F0 */  0x40, 0x54, 0xB3, 0x0F, 0x20, 0x96, 0x00, 0x44,  // @T.. ..D
            /* 04F8 */  0x40, 0x4E, 0x4A, 0x23, 0x10, 0xEB, 0x54, 0x02,  // @NJ#..T.
            /* 0500 */  0xC2, 0x52, 0xBD, 0x1D, 0x04, 0xE8, 0x88, 0x20,  // .R..... 
            /* 0508 */  0x02, 0xB2, 0xB2, 0x2F, 0xAB, 0x80, 0x2C, 0x13,  // .../..,.
            /* 0510 */  0x44, 0x40, 0x4E, 0x07, 0x44, 0xA3, 0x02, 0x51,  // D@N.D..Q
            /* 0518 */  0x85, 0x56, 0x80, 0x98, 0x5C, 0x10, 0x01, 0x39,  // .V..\..9
            /* 0520 */  0x25, 0x10, 0x8D, 0x0C, 0x44, 0x95, 0x6A, 0x01,  // %...D.j.
            /* 0528 */  0x62, 0xB2, 0x41, 0x04, 0x64, 0x89, 0x5E, 0x80,  // b.A.d.^.
            /* 0530 */  0x98, 0x60, 0x10, 0x01, 0x39, 0x2C, 0x10, 0x8D,  // .`..9,..
            /* 0538 */  0x0E, 0x44, 0x65, 0xBF, 0x0A, 0x04, 0xE4, 0x10,  // .De.....
            /* 0540 */  0x20, 0x3A, 0x25, 0x10, 0x33, 0x40, 0x4C, 0x0E,  //  :%.3@L.
            /* 0548 */  0x88, 0x0E, 0x00, 0x04, 0x88, 0xC6, 0x02, 0xA2,  // ........
            /* 0550 */  0x92, 0xFE, 0x5B, 0x02, 0xB2, 0x40, 0x10, 0x01,  // ..[..@..
            /* 0558 */  0x39, 0x1C, 0x10, 0x8D, 0x0A, 0x44, 0xFF, 0xFF   // 9....D..
        })
    }
}

